medium pred: SELECT * FROM 电子书
medium gold: select T2.书名,T1.电子书售价 from 电子书 AS T1 JOIN 图书 AS T2 ON T2.图书id = T1.书名id

eval_err_num:1
hard pred: SELECT MAX(书名id) AS 书名, MAX(电子书售价) AS 价格 FROM 图书
hard gold: select T2.书名 from 电子书 AS T1 JOIN 图书 AS T2 ON T2.图书id = T1.书名id order by T1.电子书售价 desc limit 1

eval_err_num:2
hard pred: SELECT MIN(书名id) AS 书名, MIN(电子书售价) AS 价格 FROM 图书
hard gold: select T2.书名 from 电子书 AS T1 JOIN 图书 AS T2 ON T2.图书id = T1.书名id order by T1.电子书售价 limit 1

eval_err_num:3
medium pred: SELECT * FROM 图书 WHERE 平台id = '平台1' AND 电子书售价 >= (SELECT 电子书售价 FROM 图书 WHERE 平台id = '平台1' AND 书名 = '书1') AND 电子书售价 <= (SELECT 电子书售价 FROM 图书 WHERE 平台id = '平台1' AND 书名 = '书2')
medium gold: select T2.书名,T1.会员价格 from 电子书 AS T1 JOIN 图书 AS T2 ON T2.图书id = T1.书名id

eval_err_num:4
hard pred: SELECT * FROM 图书 WHERE 平台id = '平台1' AND 电子书售价 <= (SELECT 电子书售价 FROM 图书 WHERE 平台id = '平台1' AND 书名 = '书1')
hard gold: select T2.书名,T1.会员价格 from 电子书 AS T1 JOIN 图书 AS T2 ON T2.图书id = T1.书名id order by T1.会员价格 limit 1

eval_err_num:5
easy pred: SELECT 平台名 FROM 图书 WHERE 图书id IN ( SELECT 图书id FROM 平台 WHERE 平台id = ( SELECT 平台id FROM 图书 WHERE 书名 in ( SELECT 书名 FROM 图书 WHERE 类型 = '书籍' ) ) )
easy gold: select 平台名 from 平台

eval_err_num:6
easy pred: SELECT 平台名 FROM 平台 WHERE 平台id = ( SELECT 平台id FROM 图书 WHERE 是否自营 = '自营' )
easy gold: select 平台名 from 平台 where 是否自营 = "是"

eval_err_num:7
medium pred: SELECT 平台名, 是否自营, 会员费 FROM 平台 WHERE 平台id = ( SELECT 平台id FROM 图书 WHERE 是否自营 = '自营' AND 图书id IN ( SELECT 图书id FROM 平台 WHERE 平台id = ( SELECT 平台id FROM 图书 WHERE 书名 in ( SELECT 书名 FROM 图书 WHERE 类型 = '书籍' ) ) ) )
medium gold: select 平台名,会员费 from 平台 where 是否自营 = "是"

eval_err_num:8
hard pred: SELECT 平台名, 价格 FROM 图书 WHERE 书籍id IN ( SELECT 书籍id FROM 平台 WHERE 平台id = ( SELECT 平台id FROM 图书 WHERE 是否自营 = '自营' AND 书名 in ( SELECT 书名 FROM 图书 WHERE 类型 = '书籍' ) ) )
hard gold: select 平台名,会员费 from 平台 where 是否自营 = "是" order by 会员费 desc limit 1

eval_err_num:9
hard pred: SELECT 平台名, 价格 FROM 图书 WHERE 书籍id IN ( SELECT 书籍id FROM 平台 WHERE 平台id = ( SELECT 平台id FROM 图书 WHERE 是否自营 = '自营' AND 书名 in ( SELECT 书名 FROM 图书 WHERE 类型 = '书籍' ) ) )
hard gold: select 平台名,会员费 from 平台 where 是否自营 = "是" order by 会员费 limit 1

eval_err_num:10
medium pred: SELECT 平台.name AS 平台名, 平台.成立时间 AS 成立时间, COUNT(*) AS 成立时间_Count FROM 平台 GROUP BY 平台.name, 平台.成立时间 ORDER BY 成立时间_Count DESC LIMIT 1
medium gold: select 平台名 from 平台 order by 成立时间 limit 1

eval_err_num:11
medium pred: SELECT 平台.name AS 平台名, 平台.成立时间 AS 成立时间, SUM(平台.年营业额) AS 年营业额 FROM 平台 GROUP BY 平台.name, 平台.成立时间 ORDER BY 成立时间_Count DESC LIMIT 1
medium gold: select 年营业额 from 平台 order by 成立时间 limit 1

eval_err_num:12
medium pred: SELECT 平台.name AS 平台名, 平台.成立时间 AS 成立时间, COUNT(*) AS 年营业额 FROM 平台 GROUP BY 平台.name, 平台.成立时间 HAVING COUNT(*) > 0
medium gold: select 平台名,年营业额 from 平台

eval_err_num:13
medium pred: SELECT MAX(平台.年营业额) AS 最高年营业额, COUNT(*) AS 最高年营业额_Count FROM 平台 GROUP BY 平台.name HAVING MAX(平台.年营业额) > 0 LIMIT 1
medium gold: select 平台名,年营业额 from 平台 order by 年营业额 desc limit 1

eval_err_num:14
hard pred: SELECT 平台名 FROM 图书与平台 WHERE 书名 = '大众心理研究学'
hard gold: select T3.平台名 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id where T1.书名 = "大众心理研究学"

eval_err_num:15
hard pred: SELECT 售价 FROM 图书与平台 WHERE 书名 in (SELECT 书名id FROM 图书 WHERE 图书id = '大众心理研究学')
hard gold: select T3.平台名,T2.售价 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id where T1.书名 = "大众心理研究学"

eval_err_num:16
extra pred: SELECT 平台名 FROM 图书与平台 WHERE 售价 < (SELECT 售价 FROM 图书 WHERE 图书id = '大众心理研究学')
extra gold: select T3.平台名,T2.售价 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id where T1.书名 = "大众心理研究学" order by T2.售价 limit 1

eval_err_num:17
medium pred: SELECT 书名,评分 FROM 图书 WHERE 图书id IN (SELECT 书名id FROM 图书与平台 WHERE 图书.书名 = 书名) AND 平台id IN (SELECT 平台id FROM 图书与平台 WHERE 图书.平台id = 平台id) GROUP BY 书名,评分 HAVING COUNT(*) > 1
medium gold: select T1.书名,T2.评分 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id

eval_err_num:18
hard pred: SELECT 书名 FROM 图书 WHERE 评分 = (SELECT MAX(评分) FROM 图书 WHERE 图书id IN (SELECT 图书id FROM 图书与平台 WHERE 图书.书名 = 书名)) GROUP BY 书名
hard gold: select T1.书名,T2.评分 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id ORDER BY T2.评分 DESC LIMIT 1

eval_err_num:19
hard pred: SELECT COUNT(*) as num FROM 图书与平台 WHERE 图书.书名 = 书名 AND 平台.name = '购物车' AND 书籍.平台id = 平台id AND 书籍.书名 = 书名
hard gold: select T1.书名,T2.加入购物车人数 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id ORDER BY T2.评分 DESC LIMIT 1

eval_err_num:20
hard pred: SELECT COUNT(*) as num FROM 图书与平台 WHERE 图书.书名 = 书名 AND 平台.name = '购物车' AND 书籍.平台id = 平台id AND 书籍.书名 = 书名
hard gold: select T1.书名,T2.收藏人数 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id ORDER BY T2.评分 DESC LIMIT 1

eval_err_num:21
hard pred: SELECT COUNT(*) as num FROM 图书与平台 WHERE 图书.书名 = 书名 AND 平台.name = '购物车' AND 书籍.平台id = 平台id AND 书籍.书名 = 书名 AND 购买日期 >= 日期 AND 购买日期 < 日期 + 1
hard gold: select T1.书名,T2.购买人数 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id ORDER BY T2.评分 DESC LIMIT 1

eval_err_num:22
medium pred: SELECT书名, 平台id FROM 图书与平台 WHERE 缺货 = 1
medium gold: select distinct T2.书名 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id WHERE T1.缺货 = "是"

medium pred: SELECT 书名, 作者 FROM 图书 WHERE 作者 = '作者名'
medium gold: select distinct T2.书名,T2.作者 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id WHERE T1.缺货 = "是"

medium pred: SELECT 类型 FROM 图书 GROUP BY 类型 HAVING COUNT(DISTINCT 书名) > 1
medium gold: select distinct T2.书名,T2.类型 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id WHERE T1.缺货 = "是"

eval_err_num:23
hard pred: SELECT * FROM 图书与平台 WHERE 收藏人数 = (SELECT COUNT(*) FROM 图书与平台 WHERE 书名 = '书名' AND 平台id = '平台id')
hard gold: select T1.书名 FROM 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id ORDER BY 收藏人数 DESC LIMIT 1

eval_err_num:24
hard pred: SELECT 售价 FROM 图书与平台 WHERE 书名 = '书名' AND 平台id = '平台id'
hard gold: select T2.售价 FROM 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id ORDER BY 收藏人数 DESC LIMIT 1

eval_err_num:25
extra pred: SELECT 电子书售价 FROM 电子书 WHERE 书名 = '书名' AND 平台id = '平台id'
extra gold: select T3.电子书售价 FROM 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 电子书 AS T3 ON T3.书名id = T2.书名id ORDER BY 收藏人数 DESC LIMIT 1

eval_err_num:26
medium pred: SELECT 评分 FROM 图书_and_平台上 WHERE 书名 = '平凡的世界'
medium gold: select T2.评分 FROM 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id WHERE T1.书名 = "平凡的世界"

eval_err_num:27
medium pred: SELECT AVG(评分) AS平均得分 FROM 图书_and_平台上 WHERE 书名 = '平凡的世界'
medium gold: select AVG(T2.评分) FROM 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id WHERE T1.书名 = "平凡的世界"

eval_err_num:28
medium pred: SELECT COUNT(DISTINCT 评分人数) FROM 图书_and_平台上 WHERE 书名 = '平凡的世界'
medium gold: select sum(T2.评分人数) FROM 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id WHERE T1.书名 = "平凡的世界"

eval_err_num:29
hard pred: SELECT 平台名 FROM 平台_selection WHERE 平台id = (SELECT 平台id FROM 图书_and_平台上 WHERE 书名 = '平凡的世界')
hard gold: select T3.平台名 FROM 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id WHERE T1.书名 = "平凡的世界" AND T2.缺货 = "否"

easy pred: SELECT 节日 FROM 民俗节日 WHERE 民族id = ( SELECT 民族id FROM 民族 WHERE 名称 = '中国' )
easy gold: select 节日 from 民俗节日

medium pred: SELECT 纪念 FROM 民俗节日 WHERE 民族id = ( SELECT 民族id FROM 民族 WHERE 名称 = '中国' )
medium gold: select 节日, 纪念 from 民俗节日

medium pred: SELECT 时间 FROM 民俗节日 WHERE 民族id = ( SELECT 民族id FROM 民族 WHERE 名称 = '中国' )
medium gold: select 节日, 时间 from 民俗节日

eval_err_num:30
easy pred: SELECT COUNT(*) FROM "民族"
easy gold: select COUNT(名称) from 民族

eval_err_num:31
easy pred: SELECT 民族id, "名称", "人口", "语言", "宗教信仰" FROM "民族"
easy gold: select 名称 from 民族

eval_err_num:32
medium pred: SELECT 词条id, COUNT(*) as人口 FROM "民俗节日"; SELECT 词条id, COUNT(*) as人口 FROM "民族城市"
medium gold: select 名称,人口 from 民族

eval_err_num:33
medium pred: SELECT COUNT(*) as人口, '民族' as名称 from "民族"; SELECT COUNT(*) as人口, '民族城市' as名称 from "民族城市"
medium gold: select 名称,人口 from 民族 order by 人口 desc

eval_err_num:34
medium pred: SELECT 宗教信仰 FROM "民族" WHERE 民族id IN (SELECT 民族id FROM "民族节日" WHERE 时间 = '2022-02-14')
medium gold: select 名称,宗教信仰 from 民族

eval_err_num:35
medium pred: SELECT 语言 FROM "民族" WHERE 民族id IN (SELECT 民族id FROM "民族节日" WHERE 时间 = '2022-02-14')
medium gold: select 名称,宗教信仰,语言 from 民族

eval_err_num:36
medium pred: SELECT 城市名称 FROM "民族城市" WHERE 民族id IN (SELECT 民族id FROM "民族" WHERE 民族id IN (SELECT 民族id FROM "民族节日" WHERE 时间 = '2022-02-14'))
medium gold: select T1.名称,T2.城市名称 FROM 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id

eval_err_num:37
medium pred: SELECT 人口 FROM "民族" WHERE 民族id IN (SELECT 民族id FROM "民族节日" WHERE 时间 = '2022-02-14') SELECT 人口 FROM "民族城市" WHERE 城市名称 IN (SELECT 城市名称 FROM "民族城市" WHERE 民族id IN (SELECT 民族id FROM "民族" WHERE 民族id IN (SELECT 民族id FROM "民族节日" WHERE 时间 = '2022-02-14')))
medium gold: select T1.名称,T2.人口 FROM 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id

eval_err_num:38
medium pred: SELECT column1, column2, COUNT(*) as total_count FROM table_name GROUP BY column1, column2 ORDER BY total_count DESC LIMIT 10
medium gold: select T1.名称,T2.人口 FROM 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id order by T2.人口 desc

eval_err_num:39
medium pred: SELECT 民族, COUNT(*) as num, DECIMAL(10,2) AS比例 FROM "民族城市" GROUP BY 民族 ORDER BY num DESC,比例 DESC
medium gold: select T1.名称,T2.城市名称,T2.比例 FROM 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id

eval_err_num:40
hard pred: SELECT 民族, COUNT(*) as num, DECIMAL(10,2) AS比例 FROM "民族城市" GROUP BY 民族 ORDER BY num DESC,比例 DESC, COUNT(*) DESC, DECIMAL(10,2) DESC
hard gold: select T1.名称,T2.城市名称,T2.比例 FROM 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id order by 比例 desc limit 1

eval_err_num:41
hard pred: SELECT 民族, COUNT(*) as num, DECIMAL(10,2) AS比例 FROM "民族城市" GROUP BY 民族 ORDER BY num DESC,比例 DESC, COUNT(*) DESC, DECIMAL(10,2) DESC, COUNT(*) DESC, DECIMAL(10,2) DESC
hard gold: select T1.名称,T2.城市名称,T2.比例 FROM 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id order by 比例 limit 1

eval_err_num:42
hard pred: SELECT 民族, SUM(人口) AS total_人口 FROM "民族城市" GROUP BY 民族 ORDER BY total_人口 DESC
hard gold: select T1.名称,T2.人口 FROM 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id order by 比例 limit 1

eval_err_num:43
easy pred: SELECT * FROM "旅行社" WHERE 旅行社id NOT IN (SELECT 旅行社id FROM "出境游所含国家" WHERE 路线id = '出境游路线1')
easy gold: select 名称 from 旅行社

eval_err_num:44
medium pred: SELECT 旅行社.名称, 旅行社.级别 FROM "旅行社" 旅行社 JOIN "出境游所含国家" 国家 ON 国家.路线id = 旅行社.出境游路线id JOIN "国内游路线" 路线 ON 路线.路线名称 = 旅行社.国内游路线名称 JOIN "邮轮路线" 邮轮 ON 邮轮.路线名称 = 旅行社.邮轮路线名称 WHERE 旅行社.名称 NOT IN (SELECT 旅行社.名称 FROM "出境游所含国家" WHERE 路线id = '出境游路线1')
medium gold: select 名称,级别 from 旅行社

eval_err_num:45
easy pred: SELECT COUNT(*) as NUM_旅行社 FROM "旅行社" 旅行社 WHERE 旅行社.名称 = '5A旅行' AND 旅行社.级别 = '高级'
easy gold: select 名称 from 旅行社 where 级别 = " 5A"

eval_err_num:46
medium pred: SELECT 旅行社.名称, COUNT(*) as 出境游路线数量 FROM "旅行社" 旅行社 JOIN "出境游所含国家" 国家 ON 国家.路线id = 旅行社.出境游路线id JOIN "国内游路线" 路线 ON 路线.路线名称 = 旅行社.国内游路线名称 JOIN "邮轮路线" 邮轮 ON 邮轮.路线名称 = 旅行社.邮轮路线名称 WHERE 旅行社.名称 = '5A旅行' AND 旅行社.级别 = '高级' GROUP BY 旅行社.名称 ORDER BY 出境游路线数量 DESC LIMIT 10
medium gold: select 名称,出境游路线数量 from 旅行社 where 级别 = " 5A"

eval_err_num:47
easy pred: SELECT 公司名称, 所属国家, COUNT(*) as 排名 FROM "公司" GROUP BY 公司名称, 所属国家 HAVING COUNT(*) > 0 SELECT 公司名称, COUNT(*) as 销售数量, COUNT(*)/100 as 销售量增长 FROM "产品销售" GROUP BY 公司名称 HAVING COUNT(*) > 0
easy gold: select 名称 from 公司

eval_err_num:48
medium pred: SELECT 公司名称, 产品名称 FROM "音箱产品" GROUP BY 公司名称, 产品名称 HAVING COUNT(*) > 0
medium gold: select T2.名称,T1.名称 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id

eval_err_num:49
medium pred: SELECT 产品名称, MAX(售价) as 售价 FROM "音箱产品" GROUP BY 产品名称 HAVING COUNT(*) > 0
medium gold: select T2.名称,T1.名称,T1.售价 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id

eval_err_num:50
hard pred: SELECT 产品名称, MAX(售价) as 售价 FROM "音箱产品" GROUP BY 产品名称 HAVING COUNT(*) > 0 ORDER BY MAX(售价) DESC LIMIT 1
hard gold: select T2.名称,T1.名称,T1.售价 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id order by T1.售价 desc limit 1

eval_err_num:51
easy pred: SELECT 公司名称, COUNT(*) as 排名 FROM "公司" WHERE 公司名称 IN (SELECT 公司名称 FROM "音箱产品" WHERE 音箱id IN (SELECT 音箱id FROM "产品销售")) GROUP BY 公司名称 ORDER BY COUNT(*) DESC LIMIT 1
easy gold: select 名称 from 公司 where 排名 = "1"

eval_err_num:52
medium pred: SELECT 公司名称, COUNT(*) as 数量 FROM "音箱产品" WHERE 音箱id IN (SELECT 音箱id FROM "产品销售") GROUP BY 公司名称 HAVING COUNT(*) > 0 ORDER BY 数量 DESC LIMIT 10
medium gold: select T1.名称 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id WHERE T2.名称 = "百度"

eval_err_num:53
medium pred: SELECT 产品名称, COUNT(*) as 排名 FROM "音箱产品" WHERE 音箱id IN (SELECT 音箱id FROM "产品销售") GROUP BY 产品名称 HAVING COUNT(*) > 0 ORDER BY 排名 DESC LIMIT 10
medium gold: select T1.名称,T1.排名 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id WHERE T2.名称 = "百度"

eval_err_num:54
extra pred: SELECT 产品名称, COUNT(*) as 排名 FROM "音箱产品" WHERE 音箱id IN (SELECT 音箱id FROM "产品销售") GROUP BY 产品名称 HAVING COUNT(*) > (SELECT COUNT(*) FROM (SELECT 产品名称, COUNT(*) as 排名 FROM "音箱产品" WHERE 音箱id IN (SELECT 音箱id FROM "产品销售") GROUP BY 产品名称 HAVING COUNT(*) > 0) AS subquery) ORDER BY 排名 DESC LIMIT 1
extra gold: select T1.名称,T1.排名 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id WHERE T2.名称 = "百度" order by T1.排名 asc limit 1

eval_err_num:55
extra pred: SELECT 产品名称, COUNT(*) as 排名 FROM "音箱产品" WHERE 音箱id IN (SELECT 音箱id FROM "产品销售") GROUP BY 产品名称 HAVING COUNT(*) > (SELECT COUNT(*) FROM (SELECT 产品名称, COUNT(*) as 排名 FROM "音箱产品" WHERE 音箱id IN (SELECT 音箱id FROM "产品销售") GROUP BY 产品名称 HAVING COUNT(*) > 0) AS subquery) ORDER BY 排名 DESC LIMIT 1
extra gold: select T1.名称,T1.上升名次 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id WHERE T2.名称 = "百度" order by T1.排名 asc limit 1

eval_err_num:56
medium pred: SELECT t1.id, t1.name, t1.所属国家, t1.排名, t2.销售量, t2.销售量增长 FROM "公司" t1 INNER JOIN "音箱产品" t2 ON t1.id = t2.所属公司id WHERE t2.季度 = '4'
medium gold: select T1.销售量 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where T2.名称 = "小度音箱" and 季度 = "4"

eval_err_num:57
medium pred: SELECT t1.id, t1.name, t1.所属国家, t1.排名, t2.销售量, t2.销售量增长 FROM "公司" t1 INNER JOIN "音箱产品" t2 ON t1.id = t2.所属公司id WHERE t2.季度 = '4' GROUP BY t1.id, t1.name, t1.所属国家, t1.排名, t2.销售量, t2.销售量增长 HAVING COUNT(DISTINCT t2.上升名次) > 1
medium gold: select T1.销售量增长 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where T2.名称 = "小度音箱" and 季度 = "4"

eval_err_num:58
medium pred: SELECT t1.id, t1.name, t1.所属国家, t1.排名, COUNT(DISTINCT t2.上升名次) FROM "公司" t1 INNER JOIN "音箱产品" t2 ON t1.id = t2.所属公司id WHERE t2.季度 = '4' GROUP BY t1.id, t1.name, t1.所属国家, t1.排名 HAVING COUNT(DISTINCT t2.上升名次) > 1
medium gold: select T2.排名 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where T2.名称 = "小度音箱" and 季度 = "4"

eval_err_num:59
easy pred: SELECT * FROM "国内游路线" WHERE 旅行社id = ( SELECT 旅行社id FROM "旅行社" WHERE 名称 = '中国' AND 级别 = '旅游' AND 出境游国家数量 > 0 AND 国内游城市数量 > 0 AND 出境游路线数量 > 0 AND 国内游路线数量 > 0 )
easy gold: select 路线名称 from 国内游路线

eval_err_num:60
medium pred: SELECT 路线名称, 出发城市 FROM "国内游路线" WHERE 旅行社id = ( SELECT 旅行社id FROM "旅行社" WHERE 名称 = '中国' AND 级别 = '旅游' AND 出境游国家数量 > 0 AND 国内游城市数量 > 0 AND 出境游路线数量 > 0 AND 国内游路线数量 > 0 )
medium gold: select 路线名称,出发城市 from 国内游路线

eval_err_num:61
medium pred: SELECT 天数, COUNT(*) FROM "国内游路线" GROUP BY 天数 HAVING COUNT(*) > 0 FROM "旅行社" WHERE 名称 = '中国' AND 级别 = '旅游' AND 出境游国家数量 > 0 AND 国内游城市数量 > 0 AND 出境游路线数量 > 0 AND 国内游路线数量 > 0 )
medium gold: select 路线名称,天数 from 国内游路线

eval_err_num:62
hard pred: SELECT 天数最长的路线名称 FROM "国内游路线" WHERE 天数 > ( SELECT 天数 FROM "国内游路线" ORDER BY 天数 DESC LIMIT 1 )
hard gold: select 路线名称 from 国内游路线 where 天数 = (select max(天数) from 国内游路线)

eval_err_num:63
medium pred: 查询语句如下: ```sql SELECT 路线名称, 预售价 FROM 国内游路线 WHERE 旅行社id = ( SELECT 旅行社id FROM 旅行社 WHERE 名称 = '旅行社' LIMIT 1 )
medium gold: select 路线名称,预售价格 from 国内游路线

eval_err_num:64
extra pred: SELECT 路线名称, MAX(预售价) as 最高预售价 FROM 国内游路线 WHERE 旅行社id = ( SELECT 旅行社id FROM 旅行社 WHERE 名称 = '旅行社' LIMIT 1 ) GROUP BY 路线名称
extra gold: select 路线名称,预售价格 from 国内游路线 where 预售价格 = (select max(预售价格) from 国内游路线 )

eval_err_num:65
extra pred: SELECT 路线名称, 预售价, 天数 FROM 国内游路线 WHERE 旅行社id = ( SELECT 旅行社id FROM 旅行社 WHERE 名称 = '旅行社' LIMIT 1 ) GROUP BY 路线名称, 天数
extra gold: select 路线名称,天数 from 国内游路线 where 预售价格 = (select max(预售价格) from 国内游路线 )

eval_err_num:66
extra pred: SELECT 旅行社名称, 旅行社id, COUNT(旅行社名称) as 旅行社数量 FROM 旅行社 GROUP BY 旅行社名称, 旅行社id HAVING COUNT(旅行社名称) > 0
extra gold: select T1.路线名称,T2.名称 from 国内游路线 AS T1 JOIN 旅行社 AS T2 ON T1.旅行社id = T2.旅行社id where T1.预售价格 = (select max(预售价格) from 国内游路线 )

eval_err_num:67
easy pred: SELECT 邮轮路线.路线名称, 邮轮路线.旅行社id, 邮轮路线.出发城市, 邮轮路线.天数, 邮轮路线.内舱房价格, 邮轮路线.海景房价格, 邮轮路线.阳台房价格, 邮轮路线.航行区域, 邮轮公司.邮轮公司 FROM 邮轮路线 JOIN 旅行社 ON 邮轮路线.旅行社id = 旅行社.旅行社id JOIN 出境游所含国家 ON 邮轮路线.出境游路线id = 出境游所含国家.路线id JOIN 国内游路线 ON 邮轮路线.国内游路线id = 国内游路线.路线id JOIN 旅行社 ON 出境游所含国家.旅行社id = 旅行社.旅行社id JOIN 国内游路线 ON 国内游路线.旅行社id = 旅行社.旅行社id WHERE 旅行社.名称 = '中国旅行社'
easy gold: select 路线名称 from 邮轮路线

eval_err_num:68
easy pred: SELECT 邮轮路线.路线名称, 邮轮路线.旅行社id, 邮轮路线.出发城市, 邮轮路线.天数, 邮轮路线.内舱房价格, 邮轮路线.海景房价格, 邮轮路线.阳台房价格, 邮轮路线.航行区域, 邮轮公司.邮轮公司 FROM 邮轮路线 JOIN 旅行社 ON 邮轮路线.旅行社id = 旅行社.旅行社id JOIN 出境游所含国家 ON 邮轮路线.出境游路线id = 出境游所含国家.路线id JOIN 国内游路线 ON 邮轮路线.国内游路线id = 国内游路线.路线id JOIN 旅行社 ON 出境游所含国家.旅行社id = 旅行社.旅行社id JOIN 国内游路线 ON 国内游路线.旅行社id = 旅行社.旅行社id WHERE 旅行社.名称 = '中国旅行社' and 邮轮路线.出发城市 = '上海'
easy gold: select 路线名称 from 邮轮路线 where 出发城市 = "上海"

eval_err_num:69
easy pred: SELECT 邮轮路线.天数, 邮轮路线.路线名称, 邮轮路线.旅行社id, 邮轮路线.出发城市, 邮轮路线.内舱房价格, 邮轮路线.海景房价格, 邮轮路线.阳台房价格, 邮轮路线.航行区域, 邮轮公司.邮轮公司 FROM 邮轮路线 JOIN 旅行社 ON 邮轮路线.旅行社id = 旅行社.旅行社id JOIN 出境游所含国家 ON 邮轮路线.出境游路线id = 出境游所含国家.路线id JOIN 国内游路线 ON 邮轮路线.国内游路线id = 国内游路线.路线id JOIN 旅行社 ON 出境游所含国家.旅行社id = 旅行社.旅行社id JOIN 国内游路线 ON 国内游路线.旅行社id = 旅行社.旅行社id WHERE 旅行社.名称 = '中国旅行社' and 邮轮路线.出发城市 = '上海'
easy gold: select 天数 from 邮轮路线 where 出发城市 = "上海"

eval_err_num:70
medium pred: SELECT 邮轮路线.天数, 邮轮路线.路线名称, 邮轮路线.旅行社id, 邮轮路线.出发城市, 邮轮路线.内舱房价格, 邮轮路线.海景房价格, 邮轮路线.阳台房价格, 邮轮路线.航行区域, 邮轮公司.邮轮公司 FROM 邮轮路线 JOIN 旅行社 ON 邮轮路线.旅行社id = 旅行社.旅行社id JOIN 出境游所含国家 ON 邮轮路线.出境游路线id = 出境游所含国家.路线id JOIN 国内游路线 ON 邮轮路线.国内游路线id = 国内游路线.路线id JOIN 旅行社 ON 出境游所含国家.旅行社id = 旅行社.旅行社id JOIN 国内游路线 ON 国内游路线.旅行社id = 旅行社.旅行社id WHERE 旅行社.名称 = '中国旅行社' and 邮轮路线.出发城市 = '上海' GROUP BY 邮轮路线.天数, 邮轮路线.路线名称, 邮轮路线.旅行社id, 邮轮路线.出发城市, 邮轮路线.内舱房价格, 邮轮路线.海景房价格, 邮轮路线.阳台房价格, 邮轮公司.邮轮公司 ORDER BY 邮轮路线.天数, 邮轮路线.路线名称, 邮轮路线.旅行社id, 邮轮路线.出发城市, 邮轮路线.内舱房价格, 邮轮路线.海景房价格, 邮轮路线.阳台房价格
medium gold: select 内舱房价格,海景房价格, 阳台房价格 from 邮轮路线 where 出发城市 = "上海"

eval_err_num:71
easy pred: SELECT * FROM出境游所含国家 WHERE 旅行天数 = (SELECT MAX(旅行天数) FROM出境游所含国家)
easy gold: select 路线名称 from 出境游路线

eval_err_num:72
medium pred: SELECT 路线名称 FROM 出境游所含国家 WHERE 出发城市 = (SELECT 出发城市 FROM 出境游所含国家 WHERE 旅行天数 > 0)
medium gold: select 路线名称,出发城市 from 出境游路线

eval_err_num:73
medium pred: SELECT 路线名称, 价格 FROM 出境游所含国家 WHERE 出发城市 = (SELECT 出发城市 FROM 出境游所含国家 WHERE 旅行天数 > 0) AND 价格 = (SELECT MAX(价格) FROM 出境游所含国家)
medium gold: select 路线名称,成人价格 from 出境游路线

eval_err_num:74
extra pred: SELECT 路线名称, 价格 FROM 出境游所含国家 WHERE 出发城市 = (SELECT 出发城市 FROM 出境游所含国家 WHERE 旅行天数 > 0) AND 价格 < (SELECT MIN(价格) FROM 出境游所含国家)
extra gold: select 路线名称,成人价格 from 出境游路线 where 成人价格 in (select max(成人价格) from 出境游路线)

eval_err_num:75
extra pred: SELECT 路线名称, 价格 FROM 出境游所含国家 WHERE 出发城市 = (SELECT 出发城市 FROM 出境游所含国家 WHERE 旅行天数 > 0) AND 价格 = (SELECT MAX(价格) FROM 出境游所含国家) AND 年龄 > 18 AND 性别 = '男'
extra gold: select 路线名称,儿童价格 from 出境游路线 where 成人价格 in (select max(成人价格) from 出境游路线)

eval_err_num:76
easy pred: SELECT sum(case when '德法瑞意深度纵览一价无忧' = '路线名称' then 1 else 0 end) as 景点数 FROM 出境游所含国家 GROUP BY 路线名称
easy gold: select 景点数 from 出境游路线 where 路线名称 = "德法瑞意深度纵览一价无忧"

eval_err_num:77
easy pred: SELECT sum(门票总价格) as total_price FROM 出境游路线 GROUP BY 路线名称
easy gold: select 门票总价格 from 出境游路线 where 路线名称 = "德法瑞意深度纵览一价无忧"

eval_err_num:78
easy pred: SELECT 价格 FROM 出境游路线 WHERE 路线名称 = '德法瑞意深度纵览一价无忧'
easy gold: select 成人价格 from 出境游路线 where 路线名称 = "德法瑞意深度纵览一价无忧"

eval_err_num:79
easy pred: SELECT '儿童价' as child_price FROM 出境游路线 WHERE 路线名称 = '德法瑞意深度纵览一价无忧'
easy gold: select 儿童价格 from 出境游路线 where 路线名称 = "德法瑞意深度纵览一价无忧"

eval_err_num:80
easy pred: SELECT start_city FROM 出境游路线 WHERE 路线名称 = '德法瑞意深度纵览一价无忧'
easy gold: select 出发城市 from 出境游路线 where 路线名称 = "德法瑞意深度纵览一价无忧"

eval_err_num:81
easy pred: SELECT * FROM "旅行社" WHERE 旅行社id IN ( SELECT 旅行社id FROM "旅行社" GROUP BY 旅行社id ORDER BY 旅行社id DESC LIMIT 1 )
easy gold: select 名称 from 旅行社 where 级别 = " 5A"

eval_err_num:82
medium pred: SELECT * FROM "旅行社" WHERE 旅行社id IN ( SELECT 旅行社id FROM "出境游所含国家" WHERE 路线id = ( SELECT 路线id FROM "出境游路线" WHERE 旅行社id = "旅行社" ) GROUP BY 旅行社id HAVING COUNT(*) > 0 )
medium gold: select 名称,亚洲排名 from 旅行社 where 级别 = " 5A"

eval_err_num:83
extra pred: SELECT * FROM "旅行社" WHERE 旅行社id IN ( SELECT 旅行社id FROM "出境游所含国家" WHERE 路线id = ( SELECT 路线id FROM "出境游路线" WHERE 旅行社id = "旅行社" ) GROUP BY 旅行社id ORDER BY COUNT(*) DESC LIMIT 1 )
extra gold: select 名称,亚洲排名 from 旅行社 where 级别 = " 5A" and 亚洲排名 = (select min(亚洲排名) from 旅行社)

eval_err_num:84
extra pred: SELECT 出境游国家数量, 国内游城市数量 FROM "出境游所含国家" WHERE 路线id = ( SELECT 路线id FROM "出境游路线" WHERE 旅行社id = "旅行社" )
extra gold: select 名称,出境游国家数量, 国内游城市数量 from 旅行社 where 级别 = " 5A" and 亚洲排名 = (select min(亚洲排名) from 旅行社)

eval_err_num:85
hard pred: SELECT 书名, COUNT(*) AS 购买人数 FROM 图书 WHERE 图书id IN ( SELECT 图书id FROM 平台 GROUP BY 平台名 ORDER BY COUNT(*) DESC LIMIT 1 ) GROUP BY 书名 ORDER BY COUNT(*) DESC
hard gold: select 书名 from 电子书 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id order by 购买人数 desc limit 1

eval_err_num:86
hard pred: SELECT 平台id FROM 图书_平台 WHERE 图书id IN ( SELECT 图书id FROM 图书 GROUP BY 图书id HAVING COUNT(*) > 0 )
hard gold: select 平台名 from 电子书 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id order by 购买人数 desc limit 1

eval_err_num:87
extra pred: SELECT评分人数,评分 AS 评分 FROM 图书_平台 WHERE 图书id IN ( SELECT 图书id FROM 图书 GROUP BY 图书id HAVING COUNT(*) > 0 ) ORDER BY 评分 DESC LIMIT 1
extra gold: select 评分 from 电子书 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id JOIN 图书与平台 AS T3 ON T2.平台id = T3.平台id order by T1.购买人数 desc limit 1

eval_err_num:88
easy pred: SELECT * FROM 电视剧 WHERE 首播平台id = ( SELECT 首播平台id FROM 电视剧收视 WHERE 电视剧id = 1 )
easy gold: select 剧名 from 电视剧

eval_err_num:89
medium pred: SELECT * FROM 电视剧 WHERE 首播时间 >= '2023-02-18 21:00:00' AND 首播时间 <= '2023-02-18 22:00:00'
medium gold: select T2.剧名 from 电视剧收视 AS T1 JOIN 电视剧 AS T2 ON T1.电视剧id = T2.电视剧编号 where T1.时间段 = "21:00~22:00"

eval_err_num:90
medium pred: SELECT 收视率 FROM 电视剧 WHERE 首播平台id = ( SELECT 首播平台id FROM 电视剧收视 WHERE 电视剧id = 1 )
medium gold: select T1.收视率 from 电视剧收视 AS T1 JOIN 电视剧 AS T2 ON T1.电视剧id = T2.电视剧编号 where T1.时间段 = "21:00~22:00"

eval_err_num:91
medium pred: SELECT 商店名 FROM "应用商店" GROUP BY 商店名 ORDER BY 应用软件数 DESC LIMIT 1
medium gold: select 商店名 from 应用商店 order by 应用软件数 desc limit 1

eval_err_num:92
hard pred: SELECT 是否为binary FROM "应用商店支持国家" WHERE 用户是否可以购买应用程序 = '否' AND 开发人员是否可以出售应用程序 = '是'
hard gold: select t1.开发人员是否可以出售应用程序 from 应用商店支持国家 as t1 join 应用商店 as t2 on t1.应用商店id = t2.商店id order by t2.应用软件数 desc limit 1

eval_err_num:93
hard pred: SELECT 用户是否可以购买 FROM "应用商店支持国家" WHERE 用户是否可以购买应用程序 = '是' AND 开发人员是否可以出售应用程序 = '否'
hard gold: select t1.用户是否可以购买应用程序 from 应用商店支持国家 as t1 join 应用商店 as t2 on t1.应用商店id = t2.商店id order by t2.应用软件数 desc limit 1

eval_err_num:94
medium pred: SELECT max(下载量) FROM "软件下载"
medium gold: select 下载量 from 软件下载 order by 下载量 desc limit 1

eval_err_num:95
hard pred: SELECT 名称 FROM "软件"
hard gold: select 名称 from 软件 where 软件id = (select 软件id from 软件下载 order by 下载量 desc limit 1)

eval_err_num:96
hard pred: SELECT 用途 FROM "软件"
hard gold: select 用途 from 软件 where 软件id = (select 软件id from 软件下载 order by 下载量 desc limit 1)

eval_err_num:97
extra pred: SELECT * FROM "软件" WHERE 用途 > '其他类似用途'
extra gold: select 名称 from 软件 where 用途 = (select 用途 from 软件 where 软件id = (select 软件id from 软件下载 order by 下载量 desc limit 1)) except select 名称 from 软件 where 软件id = (select 软件id from 软件下载 order by 下载量 desc limit 1)

eval_err_num:98
easy pred: SELECT * FROM "输入法软件" WHERE "应用商店支持国家"."商店id" = "应用商店"."商店id" AND "应用商店支持国家"."用户是否可以购买应用程序" = 0 AND "应用商店支持国家"."开发人员是否可以出售应用程序" = 0
easy gold: select 名称 from 软件 where 用途 = "输入法"

eval_err_num:99
easy pred: SELECT * FROM "地图软件" WHERE "应用商店支持国家"."商店id" = "应用商店"."商店id" AND "应用商店支持国家"."用户是否可以购买应用程序" = 0 AND "应用商店支持国家"."开发人员是否可以出售应用程序" = 0
easy gold: select 名称 from 软件 where 用途 = "地图"

eval_err_num:100
hard pred: SELECT * FROM "软件" WHERE "名称" = '它' AND "用途" = '下载'
hard gold: select t1.商店名 from 应用商店 as t1 join 软件下载 as t2 on t1.商店id = t2.应用商店id join 软件 as t3 on t2.软件id = t3.软件id where t3.用途 = "地图"

eval_err_num:101
hard pred: SELECT COUNT(*) FROM "应用商店" WHERE "商店名" = '应用商店'
hard gold: select t1.应用软件数 from 应用商店 as t1 join 软件下载 as t2 on t1.商店id = t2.应用商店id join 软件 as t3 on t2.软件id = t3.软件id where t3.用途 = "地图"

eval_err_num:102
easy pred: SELECT t2.累计下载次数 FROM "应用商店" t1 INNER JOIN "应用商店支持国家" t2 ON t1.商店id = t2.商店id INNER JOIN "软件" t3 ON t1.应用商店id = t3.应用商店id AND t3.名称 = '酷安商店' GROUP BY t2.商店id ORDER BY 累计下载次数 DESC
easy gold: select 累计下载次数 from 应用商店 where 商店名 = "酷安"

eval_err_num:103
medium pred: SELECT t1.国家 FROM "应用商店支持国家" t1 INNER JOIN "软件" t2 ON t1.应用商店id = t2.应用商店id WHERE t2.名称 = '应用商店' GROUP BY t1.国家 HAVING COUNT(*) > 0
medium gold: select T1.国家 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id where T2.商店名 = "酷安"

eval_err_num:104
extra pred: SELECT t1.应用商店 FROM "应用商店" t1 INNER JOIN "应用商店支持国家" t2 ON t1.商店id = t2.商店id WHERE t2.国家 = '中国' AND t1.商店id NOT IN (SELECT 商店id FROM "应用商店") GROUP BY t1.应用商店 HAVING COUNT(*) > 0
extra gold: select distinct t3.商店名 from 应用商店 as t3 join 应用商店支持国家 as t4 on t3.商店id = t4.应用商店id where t4.国家 in(select T1.国家 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id where T2.商店名 = "酷安")

eval_err_num:105
extra pred: SELECT * FROM "应用商店" WHERE 商店id NOT IN (SELECT 商店id FROM "应用商店")
extra gold: select * from 应用商店 as t3 join 应用商店支持国家 as t4 on t3.商店id = t4.应用商店id where t4.国家 in(select T1.国家 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id where T2.商店名 = "酷安")

eval_err_num:106
hard pred: SELECT软件名称, COUNT(*) as 好评数 FROM "软件下载" GROUP BY软件名称 ORDER BY 好评数 DESC LIMIT 1
hard gold: select t1.名称 from 软件 as t1 join 软件下载 as t2 on t1.软件id = t2.软件id order by t2.好评数 desc limit 1

eval_err_num:107
hard pred: SELECT软件名称, SUM(下载量) as 下载量 FROM "软件下载" GROUP BY软件名称 ORDER BY 下载量 DESC LIMIT 1
hard gold: select t1.名称 from 软件 as t1 join 软件下载 as t2 on t1.软件id = t2.软件id order by t2.下载量 desc limit 1

eval_err_num:108
extra pred: CREATE TABLE "应用商店" ( "商店id" text, "商店名" text, "应用软件数" number, "累计下载次数" number, PRIMARY KEY ("商店id") ) CREATE TABLE "应用商店支持国家" ( "应用商店id" text, "国家" text, "用户是否可以购买应用程序" binary, "开发人员是否可以出售应用程序" binary, FOREIGN KEY ("应用商店id") REFERENCES "应用商店" ("商店id") ON DELETE NO ACTION ON UPDATE NO ACTION ) CREATE TABLE "软件" ( "软件id" text, "名称" text, "用途" text, PRIMARY KEY ("软件id") ) CREATE TABLE "软件下载" ( "软件id" text, "应用商店id" text, "下载量" number, "评价人数" number, "好评数" number, FOREIGN KEY ("软件id") REFERENCES "软件" ("软件id") ON DELETE NO ACTION ON UPDATE NO ACTION, FOREIGN KEY ("应用商店id") REFERENCES "应用商店" ("商店id") ON DELETE NOACTION ON UPDATE NOACTION )
extra gold: select 名称,用途 from 软件 where 名称 = (select t1.名称 from 软件 as t1 join 软件下载 as t2 on t1.软件id = t2.软件id order by t2.下载量 desc limit 1) or 名称 = (select t3.名称 from 软件 as t3 join 软件下载 as t4 on t3.软件id = t4.软件id order by t4.好评数 desc limit 1)

eval_err_num:109
easy pred: SELECT COUNT(*) FROM "应用商店" WHERE "商店名" = '小米应用商店'
easy gold: select 应用软件数 from 应用商店 where 商店名 = "小米应用商店"

eval_err_num:110
easy pred: SELECT SUM(CASE WHEN "应用软件数" = 1 THEN 1 ELSE 0 END) AS 累计下载次数 FROM "应用商店" WHERE "商店名" = '小米应用商店'
easy gold: select 累计下载次数 from 应用商店 where 商店名 = "小米应用商店"

eval_err_num:111
hard pred: SELECT 商店名, COUNT(*) AS 下载次数 FROM "应用商店" WHERE "应用商店"."累计下载次数" > (SELECT COUNT(*) FROM "应用商店" WHERE "商店名" = '苹果应用商店')
hard gold: select 商店名 from 应用商店 where 累计下载次数 > (select 累计下载次数 from 应用商店 where 商店名 = "小米应用商店")

eval_err_num:112
easy pred: SELECT * FROM "应用商店" WHERE "商店名" = '打车软件'
easy gold: select 名称 from 软件 where 用途 = "打车"

eval_err_num:113
medium pred: SELECT "软件下载".好评数, "应用商店".好评数, "应用商店支持国家".好评数 FROM "软件下载" INNER JOIN "应用商店" ON "软件下载"."应用商店id" = "应用商店"."商店id" INNER JOIN "应用商店支持国家" ON "软件下载"."应用商店id" = "应用商店支持国家"."应用商店id" WHERE "软件下载"."好评数" > 0
medium gold: select t1.名称,t2.好评数 from 软件 as t1 join 软件下载 as t2 on t1.软件id = t2.软件id where t1.用途 = "打车"

eval_err_num:114
hard pred: SELECT "应用商店".商店名, "应用商店支持国家".商店名 FROM "应用商店" INNER JOIN "应用商店支持国家" ON "应用商店"."商店id" = "应用商店支持国家"."商店id" WHERE "应用商店支持国家"."商店名" = '打车软件'
hard gold: select t1.名称,t2.好评数,t3.商店名 from 软件 as t1 join 软件下载 as t2 on t1.软件id = t2.软件id join 应用商店 as t3 on t2.应用商店id = t3.商店id where t1.用途 = "打车"

eval_err_num:115
hard pred: SELECT "应用商店".商店名, "应用商店支持国家".国家 FROM "应用商店" INNER JOIN "应用商店支持国家" ON "应用商店"."商店id" = "应用商店支持国家"."商店id" WHERE "应用商店支持国家"."国家" in ('中国', '美国', '日本', '韩国', '欧洲', '香港', '台湾')
hard gold: select t3.国家 from 软件 as t1 join 软件下载 as t2 on t1.软件id = t2.软件id join 应用商店支持国家 as t3 on t2.应用商店id = t3.应用商店id where t1.用途 = "打车"

eval_err_num:116
easy pred: SELECT 公司名, 总部城市id, 所属集团, 上市股市, 经营范围, 经营年数, (SELECT COUNT(*) FROM "餐饮公司城市消费" WHERE 公司id = "餐饮公司"."公司id") AS 城市消费总额, (SELECT COUNT(*) FROM "餐饮公司城市连锁" WHERE 公司id = "餐饮公司"."公司id") AS 城市连锁总额 FROM "城市" WHERE 城市id IN (SELECT 城市id FROM "餐饮公司城市消费" WHERE 消费总额 > 0 AND 人气 > 0)
easy gold: select 公司名 from 餐饮公司

eval_err_num:117
medium pred: SELECT 公司名, 所属集团 FROM "餐饮公司" WHERE 公司名 IN (SELECT 公司名 FROM "城市" WHERE 城市id = "餐饮公司"."城市id")
medium gold: select 公司名,所属集团 from 餐饮公司

eval_err_num:118
medium pred: SELECT 公司id, 主营餐饮类型 FROM "餐饮公司" WHERE 公司id IN (SELECT 公司id FROM "城市" WHERE 城市id = "餐饮公司"."城市id")
medium gold: select 公司名,经营范围 from 餐饮公司

eval_err_num:119
hard pred: SELECT 公司名 FROM "餐饮公司" WHERE 公司id IN (SELECT 公司id FROM "城市" WHERE 城市id = "中国餐饮公司"."城市id")
hard gold: select 公司名 from 餐饮公司 where 经营年数 = (select max(经营年数) from 餐饮公司)

eval_err_num:120
hard pred: SELECT t1.城市id FROM "城市" t1 INNER JOIN "餐饮公司" t2 ON t1.城市id = t2.城市id INNER JOIN "餐饮公司城市连锁" t3 ON t2.公司id = t3.公司id AND t1.城市id = t3.城市id WHERE t2.公司名称 = '必胜客' AND t3.分店数量 = ( SELECT COUNT(*) FROM "餐饮公司城市消费" t4 WHERE t4.城市id = t2.城市id )
hard gold: select T2.名称 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where T3.公司名 = "必胜客"

eval_err_num:121
hard pred: SELECT COUNT(*) AS 分店数量 FROM "餐饮公司城市连锁" WHERE 城市id IN ( SELECT 城市id FROM "城市" GROUP BY 城市id HAVING COUNT(*) > 0 )
hard gold: select T2.名称,T1.分店数量 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where T3.公司名 = "必胜客"

eval_err_num:122
hard pred: SELECT t1.员工数量 FROM "餐饮公司城市连锁" t1 INNER JOIN "城市" t2 ON t1.城市id = t2.城市id INNER JOIN "餐饮公司" t3 ON t2.公司id = t3.公司id AND t1.城市id = t3.城市id WHERE t3.员工数量 IN ( SELECT员工数量 FROM "餐饮公司城市消费" t4 WHERE t4.城市id = t2.城市id )
hard gold: select T2.名称,T1.员工数量 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where T3.公司名 = "必胜客"

eval_err_num:123
hard pred: SELECT t1.餐位数量 FROM "餐饮公司城市连锁" t1 INNER JOIN "城市" t2 ON t1.城市id = t2.城市id INNER JOIN "餐饮公司" t3 ON t2.公司id = t3.公司id AND t1.城市id = t3.城市id WHERE t3.餐位数量 = ( SELECT COUNT(*) FROM "餐饮公司城市消费" t4 WHERE t4.城市id = t2.城市id )
hard gold: select T2.名称,T1.餐位数量 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where T3.公司名 = "必胜客"

eval_err_num:124
hard pred: SELECT SUM(t1.总面积) AS 总面积 FROM "餐饮公司城市消费" t1 INNER JOIN "城市" t2 ON t1.城市id = t2.城市id INNER JOIN "餐饮公司" t3 ON t2.公司id = t3.公司id AND t1.城市id = t3.城市id GROUP BY t1.城市id HAVING SUM(t1.总面积) > 0
hard gold: select T2.名称,T1.占地面积 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where T3.公司名 = "必胜客"

eval_err_num:125
hard pred: SELECT 城市 id FROM "城市" ORDER BY 餐饮收入 DESC LIMIT 1
hard gold: select 名称 from 城市 where 餐饮收入 = (select max(餐饮收入) from 城市)

eval_err_num:126
hard pred: SELECT * FROM "餐饮公司城市消费" ORDER BY 餐饮收入 DESC LIMIT 10
hard gold: select distinct 餐饮收入 from 城市 where 餐饮收入 = (select max(餐饮收入) from 城市)

eval_err_num:127
extra pred: SELECT t1.同比增长 FROM ( SELECT number + 0.01 * (SELECT COUNT(*) FROM "城市" WHERE 城市id = r.城市id) AS同比增长 FROM "城市" r GROUP BY r.城市id ) t1 JOIN "餐饮公司城市消费" t2 ON t1.同比增长 = t2.餐饮收入 ORDER BY t2.餐饮收入 DESC LIMIT 10
extra gold: select 名称,同比增长 from 城市 where 餐饮收入 = (select max(餐饮收入) from 城市)

eval_err_num:128
extra pred: SELECT t1.同比增长, t1.城市所属省份 FROM ( SELECT number + 0.01 * (SELECT COUNT(*) FROM "城市" WHERE 城市id = r.城市id) AS同比增长, r.城市id, r.城市所属省份 FROM "城市" r GROUP BY r.城市id, r.城市所属省份 ) t1 JOIN "餐饮公司城市消费" t2 ON t1.同比增长 = t2.餐饮收入 and t1.城市id = t2.城市id ORDER BY t2.餐饮收入 DESC LIMIT 1
extra gold: select 所属省份 from 城市 where 餐饮收入 = (select max(餐饮收入) from 城市) order by 同比增长 desc limit 1

eval_err_num:129
extra pred: SELECT t1.公司名称 FROM "餐饮公司城市连锁" t1 JOIN "城市" t2 ON t1.城市id = t2.城市id AND t2.名称 = '公司名称' GROUP BY t1.公司名称 ORDER BY t1.公司名称 DESC LIMIT 1
extra gold: select T1.公司名 from 餐饮公司 AS T1 JOIN 城市 AS T2 ON T1.总部城市id = T2.城市id where T2.餐饮收入 = (select max(餐饮收入) from 城市) order by T2.同比增长 desc limit 1

eval_err_num:130
hard pred: SELECT t1.公司名称, t1.总部城市id FROM "餐饮公司" t1 INNER JOIN "餐饮公司城市连锁" t2 ON t1.公司id = t2.公司id WHERE t2.城市id = ( SELECT t3.城市id FROM "城市" t3 WHERE t3.名称 = '杭州' )
hard gold: select T2.公司名 from 餐饮公司城市消费 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id JOIN 城市 AS T3 ON T1.城市id = T3.城市id where T3.名称 = "杭州"

eval_err_num:131
hard pred: SELECT t1.公司名称, t1.总部城市id, COUNT(*) as 总消费额, COUNT(*) as 人均消费额, COUNT(*) as 人气, SUM(CASE WHEN t2.同比增长 = 1 THEN 1 else 0 END) as 排名 FROM "餐饮公司城市消费" t1 INNER JOIN "餐饮公司城市连锁" t2 ON t1.公司id = t2.公司id WHERE t2.城市id = ( SELECT t3.城市id FROM "城市" t3 WHERE t3.名称 = '这个城市' ) GROUP BY t1.公司名称, t1.总部城市id, t1.总消费额, t1.人均消费额, t1.人气 ORDER BY COUNT(*) DESC
hard gold: select T1.排名 from 餐饮公司城市消费 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id JOIN 城市 AS T3 ON T1.城市id = T3.城市id where T3.名称 = "杭州"

eval_err_num:132
hard pred: SELECT COUNT(*) as 喜欢人数 FROM "喜欢它的人" t WHERE t.喜欢 = '它'
hard gold: select T1.人气 from 餐饮公司城市消费 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id JOIN 城市 AS T3 ON T1.城市id = T3.城市id where T3.名称 = "杭州"

eval_err_num:133
hard pred: SELECT t.人均消费额 FROM "顾客" t WHERE t.消费 = '它的消费额'
hard gold: select T1.人均消费额 from 餐饮公司城市消费 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id JOIN 城市 AS T3 ON T1.城市id = T3.城市id where T3.名称 = "杭州"

eval_err_num:134
medium pred: SELECT 平台id, COUNT(*) FROM 图书 GROUP BY 平台id
medium gold: select T2.平台名, count(*) from 图书与平台 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id group by T2.平台名

eval_err_num:135
hard pred: SELECT COUNT(*) as num, 书名id FROM 图书 GROUP BY 书名id order by num DESC
hard gold: select T2.平台名, count(*) from 图书与平台 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id group by T2.平台名 order by count(*) desc

eval_err_num:136
hard pred: SELECT * FROM 天猫_图书_与_平台 WHERE 平台id IN (SELECT 平台id FROM 天猫_平台) AND 图书id IN (SELECT 书名id FROM 天猫_图书_与_平台) order by 书名id
hard gold: select T2.书名 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T3.平台名 = "天猫"

eval_err_num:137
medium pred: SELECT 平台名 FROM 图书 JOIN 平台 ON 图书.平台id = 平台.平台id WHERE 平台.成立时间 = (SELECT 成立时间 FROM 平台 WHERE 平台名 = '平台1' LIMIT 1)
medium gold: select 平台名 from 平台 order by 成立时间 asc limit 1

medium pred: SELECT 是否自营 FROM 平台 WHERE 成立时间 = (SELECT 成立时间 FROM 平台 WHERE 平台名 = '平台1' LIMIT 1)
medium gold: select 是否自营 from 平台 order by 成立时间 asc limit 1

eval_err_num:138
extra pred: SELECT 书名, 电子书售价 FROM 图书与平台 WHERE 图书与平台.书名id = 平台.平台id AND 图书与平台.书名id NOT IN (SELECT 书名id FROM 电子书 WHERE 电子书售价 > 0) AND 平台.成立时间 = (SELECT 成立时间 FROM 平台 WHERE 平台名 = '平台1' LIMIT 1)
extra gold: select T2.书名 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T3.平台名 = (select T4.平台名 from 平台 AS T4 order by T4.成立时间 asc limit 1) UNION select T7.书名 from 电子书 AS T5 JOIN 平台 AS T6 ON T5.平台id = T6.平台id JOIN 图书 AS T7 ON T5.书名id = T7.图书id where T6.平台名 = (select T8.平台名 from 平台 AS T8 order by T8.成立时间 asc limit 1)

eval_err_num:139
extra pred: SELECT 书名, SUM(购买人数) AS 销量 FROM 图书与平台 WHERE 图书.书名 = 'The Lord of the Rings' GROUP BY 书名 ORDER BY 销量 DESC LIMIT 1
extra gold: select T2.书名 from 电子书 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T3.平台名 = "京东" order by T1.购买人数 desc limit 1

eval_err_num:140
extra pred: SELECT 类型 AS 类型, 作者 AS 作者 FROM 图书 WHERE 图书id = 1
extra gold: select T2.类型, T2.作者 from 电子书 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T3.平台名 = "京东" order by T1.购买人数 desc limit 1

eval_err_num:141
extra pred: SELECT 平台id, 电子书售价, 会员价格 FROM 图书与平台 WHERE 图书.书名 = 'The Shortest Life' AND 平台.平台id = '京东' ORDER BY 电子书售价 DESC LIMIT 1
extra gold: select T3.平台名, T1.电子书售价 from 电子书 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T2.书名 = (select T2.书名 from 电子书 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T3.平台名 = "京东" order by T1.购买人数 desc limit 1)

eval_err_num:142
hard pred: SELECT书名,作者,类型 FROM 图书 WHERE 图书id IN (SELECT 图书id FROM 平台 WHERE 平台id = '天猫') AND 图书id NOT IN (SELECT 图书id FROM 平台 WHERE 平台id = '京东') AND 类型 = '书籍'
hard gold: select T2.书名 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T3.平台名 = "天猫"

eval_err_num:143
hard pred: SELECT 书名,作者,类型 FROM 图书 WHERE 图书id IN (SELECT 图书id FROM 平台 WHERE 平台id = '天猫') AND 状态 = '已发货'
hard gold: select T2.书名 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T3.平台名 = "天猫" AND T1.缺货 = "否"

eval_err_num:144
hard pred: SELECT 书名,作者,类型 FROM 图书 WHERE 图书id IN (SELECT 图书id FROM 平台 WHERE 平台id = '京东') AND 状态 = '未发货'
hard gold: select T2.书名 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T3.平台名 = "京东" AND T1.缺货 = "否"

eval_err_num:145
hard pred: SELECT 评分 FROM 图书 WHERE 书名 = '哈利·波特与死亡圣器' AND 图书id = 1234
hard gold: select T1.评分 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T3.平台名 = "京东" AND T1.缺货 = "否"

easy pred: SELECT * FROM 平台 WHERE 是否自营 = '1'
easy gold: select 平台名 from 平台 where 是否自营 = "是"

medium pred: SELECT 平台id, 年营业额 FROM 平台 ORDER BY 年营业额 DESC LIMIT 10
medium gold: select 平台名, 年营业额 from 平台 where 是否自营 = "是" order by 年营业额 desc

easy pred: SELECT 平台id, 会员费 FROM 平台 WHERE 是否自营 = '1' GROUP BY 平台id ORDER BY 会员费 DESC LIMIT 10
easy gold: select 会员费 from 平台 where 平台名 = "拼多多"

eval_err_num:146
extra pred: SELECT 书名id, 平台id, COUNT(*) as 售卖数量 FROM 图书与平台 WHERE 书名id IN (SELECT 书名id FROM 平台) GROUP BY 书名id, 平台id HAVING 售卖数量 > 0
extra gold: select T2.书名 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T3.平台名 = "拼多多" UNION select T6.书名 from 电子书 AS T4 JOIN 平台 AS T5 ON T4.平台id = T5.平台id JOIN 图书 AS T6 ON T4.书名id = T6.图书id where T5.平台名 = "拼多多"

eval_err_num:147
extra pred: SELECT 书名id, 书名, 类型 FROM 图书 GROUP BY 书名id, 书名 ORDER BY 售卖数量 DESC, 书名id LIMIT 10
extra gold: select T2.书名, T2.作者, T2.类型 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T3.平台名 = "拼多多" UNION select T6.书名, T6.作者, T6.类型 from 电子书 AS T4 JOIN 平台 AS T5 ON T4.平台id = T5.平台id JOIN 图书 AS T6 ON T4.书名id = T6.图书id where T5.平台名 = "拼多多"

eval_err_num:148
hard pred: SELECT 平台名 FROM 书籍与平台 WHERE 书名 = '巴菲特的估值逻辑' ORDER BY 购买人数 DESC
hard gold: select T3.平台名 from 电子书 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T2.书名 = "巴菲特的估值逻辑"

eval_err_num:149
medium pred: SELECT 电子书售价, 会员价格 FROM 电子书 WHERE 书名 = '巴菲特的估值逻辑' ORDER BY 电子书售价 DESC, 会员价格 ASC
medium gold: select T1.电子书售价, T1.会员价格 from 电子书 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id where T2.书名 = "巴菲特的估值逻辑"

eval_err_num:150
medium pred: SELECT 电子书售价 - 会员价格 FROM 电子书 WHERE 书名 = '巴菲特的估值逻辑' ORDER BY 电子书售价 DESC, 会员价格 ASC
medium gold: select T1.电子书售价 - T1.会员价格 from 电子书 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id where T2.书名 = "巴菲特的估值逻辑"

eval_err_num:151
hard pred: SELECT 平台名, (SELECT 会员价格 FROM 书籍与平台 WHERE 书籍名 = '巴菲特的估值逻辑' ORDER BY 书籍售价 DESC, 会员价格 ASC) AS 会员价格 FROM 书籍与平台 WHERE 书籍名 = '巴菲特的估值逻辑' ORDER BY 会员价格 ASC
hard gold: select T3.平台名, T3.会员费 from 电子书 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T2.书名 = "巴菲特的估值逻辑"

eval_err_num:152
medium pred: SELECT 电视台.name, AVG(电视剧收视.收视率) AS平均收视率 FROM 电视台 JOIN 电视剧 ON 电视台.电视台id = 电视剧.电视剧编号 JOIN 电视剧收视 ON 电视剧.电视剧id = 电视剧收视.电视剧id GROUP BY 电视台.name
medium gold: select T2.名称, avg(收视率) from 电视剧收视 AS T1 JOIN 电视台 AS T2 ON T2.电视台id = T1.平台id group by T2.名称

eval_err_num:153
extra pred: SELECT 电视台.name, 电视剧收视.时间段, 电视剧收视.收视率 FROM 电视台 JOIN 电视剧收视 ON 电视台.电视台id = 电视剧收视.平台id JOIN 电视剧 ON 电视剧.电视剧id = 电视剧收视.电视剧id WHERE 电视台.name = '北京' AND 电视剧收视.收视率 > 0 AND 电视剧收视.时间段 = '2022-01-01' GROUP BY 电视台.name, 电视剧收视.时间段, 电视剧收视.收视率
extra gold: select T1.时间段, T2.剧名 from 电视剧收视 AS T1 JOIN 电视剧 AS T2 ON T1.电视剧id = T2.电视剧编号 JOIN 电视台 AS T3 ON T1.平台id = T3.电视台id where T3.名称 like "北京%"

eval_err_num:154
extra pred: SELECT 电视剧.剧名 FROM 电视剧 JOIN 电视剧收视 ON 电视剧.电视剧id = 电视剧收视.电视剧id WHERE 电视剧.剧名 = '某个剧名' AND 电视剧收视.收视率 > 0 GROUP BY 电视剧.电视剧id HAVING COUNT(DISTINCT 电视台.name) > 1
extra gold: select T6.名称 from 电视剧收视 AS T4 JOIN 电视剧 AS T5 ON T4.电视剧id = T5.电视剧编号 JOIN 电视台 AS T6 ON T4.平台id = T6.电视台id where T6.名称 not like "北京%" AND T5.剧名 = (select T2.剧名 from 电视剧收视 AS T1 JOIN 电视剧 AS T2 ON T1.电视剧id = T2.电视剧编号 JOIN 电视台 AS T3 ON T1.平台id = T3.电视台id where T3.名称 like "北京%")

medium pred: SELECT 首播平台id FROM 电视剧 WHERE 剧名 = '破冰行动'
medium gold: select T2.名称 from 电视剧 AS T1 JOIN 电视台 AS T2 ON T1.首播平台id = T2.电视台id where T1.剧名 = "破冰行动"

hard pred: SELECT 电视台id FROM 电视台 WHERE 开播时间 = '2021-01-01' AND 上线时间 = '2021-02-01'
hard gold: select distinct T6.名称 from 电视剧收视 AS T4 JOIN 电视剧 AS T5 ON T4.电视剧id = T5.电视剧编号 JOIN 电视台 AS T6 ON T4.平台id = T6.电视台id where T5.剧名 = "破冰行动"

hard pred: SELECT 时间段 FROM 电视剧收视 WHERE 电视剧id = '破冰行动'
hard gold: select T6.名称, T4.时间段 from 电视剧收视 AS T4 JOIN 电视剧 AS T5 ON T4.电视剧id = T5.电视剧编号 JOIN 电视台 AS T6 ON T4.平台id = T6.电视台id where T5.剧名 = "破冰行动"

eval_err_num:155
extra pred: SELECT case when 时间段 = '2021-01-01' then 收视率 else -1 end as higher_收视率, SUM(收视率) over (ORDER BY 时间段) as total_收视率 FROM 电视剧收视 WHERE 电视剧id = '破冰行动'
extra gold: select T6.名称, T4.时间段 from 电视剧收视 AS T4 JOIN 电视剧 AS T5 ON T4.电视剧id = T5.电视剧编号 JOIN 电视台 AS T6 ON T4.平台id = T6.电视台id where T5.剧名 = "破冰行动" order by T4.收视率 desc limit 1

extra pred: SELECT 电视台id FROM 电视台 WHERE 开播时间 = '2021-01-01' AND 上线时间 = '2021-02-01'; --筛选首播平台id为浙江台的电视剧 SELECT 电视台id FROM 电视剧 WHERE 首播平台id = '浙江台'
extra gold: select T5.剧名 from 电视剧收视 AS T4 JOIN 电视剧 AS T5 ON T4.电视剧id = T5.电视剧编号 JOIN 电视台 AS T6 ON T4.平台id = T6.电视台id where T5.剧名 != "破冰行动" AND T6.名称 like "浙江%"

hard pred: SELECT 出品公司, 发行公司 FROM 电视剧 GROUP BY 出品公司, 发行公司 HAVING COUNT(DISTINCT 出品公司) = 2
hard gold: select 出品公司 from 电视剧 INTERSECT select 发行公司 from 电视剧

eval_err_num:156
easy pred: SELECT 电视剧.剧名 FROM 电视剧 INNER JOIN 电视剧收视 ON 电视剧.电视剧编号 = 电视剧收视.电视剧编号 INNER JOIN 电视台 ON 电视剧收视.平台id = 电视台.电视台id WHERE 电视台.名称 = '中国中央电视台' GROUP BY 电视剧.剧名 HAVING COUNT(DISTINCT 电视剧.出品公司) = 1
easy gold: select 剧名 from 电视剧 where 出品公司 = 发行公司

eval_err_num:157
medium pred: SELECT 电视剧.剧名, 电视剧收视.时间段, 电视剧收视.收视率 FROM 电视剧 INNER JOIN 电视剧收视 ON 电视剧.电视剧编号 = 电视剧收视.电视剧编号 INNER JOIN 电视台 ON 电视剧收视.平台id = 电视台.电视台id WHERE 电视台.名称 = '中国中央电视台' GROUP BY 电视剧.剧名, 电视剧收视.时间段, 电视剧收视.收视率 HAVING COUNT(DISTINCT 电视剧.出品时间) = 3
medium gold: select 剧名, 出品时间 from 电视剧 where 出品公司 = 发行公司

medium pred: SELECT 首播平台id FROM 电视剧 WHERE 电视剧.首播平台id = '首播平台'
medium gold: select T1.剧名, T2.名称 from 电视剧 AS T1 JOIN 电视台 AS T2 ON T1.首播平台id = T2.电视台id where T1.出品公司 = T1.发行公司

easy pred: SELECT 出品公司 FROM 电视剧 WHERE 出品公司 != '电视台'
easy gold: select distinct 出品公司 from 电视剧

eval_err_num:158
medium pred: SELECT 电视剧.出品公司, 电视剧.剧名, 电视剧.首播平台id, COUNT(*) AS 出品数量 FROM 电视剧 JOIN 电视剧收视 ON 电视剧.剧名 = 电视剧收视.剧名 AND 电视剧.出品公司 = 电视剧收视.出品公司 GROUP BY 电视剧.出品公司, 电视剧.剧名, 电视剧.首播平台id
medium gold: select 出品公司, count(*) from 电视剧 group by 出品公司

eval_err_num:159
medium pred: SELECT AVG(收视率) AS 平均收视率 FROM 电视剧收视 GROUP BY 平台id
medium gold: select T2.出品公司, avg(T1.收视率) from 电视剧收视 AS T1 JOIN 电视剧 AS T2 ON T1.电视剧id = T2.电视剧编号 group by T2.出品公司

eval_err_num:160
easy pred: SELECT * FROM "球队" WHERE 球队id = (SELECT 球队id FROM "篮球运动员" WHERE 中文名 = 'NBA总冠军' AND 参加选秀年 = '2021' AND 是否状元 = 'Y')
easy gold: select 中文队名 from 球队

eval_err_num:161
medium pred: SELECT 赛区, 篮球运动员 FROM "球队" JOIN "篮球运动员" ON "球队"."球队id" = "篮球运动员"."球员id" GROUP BY 赛区 ORDER BY 赛区 ASC
medium gold: select 中文队名,赛区 from 球队

eval_err_num:162
medium pred: SELECT 联盟名称, 联盟id FROM "联盟" WHERE 联盟id = (SELECT 联盟id FROM "球队" WHERE 球队id IN (SELECT 球队id FROM "篮球运动员" WHERE 中文名 = 'NBA总冠军' AND 参加选秀年 = '2021' AND 是否状元 = 'Y')))
medium gold: select 中文队名,所属联盟 from 球队

eval_err_num:163
medium pred: SELECT 篮球运动员.球员id, 篮球运动员.中文名, 篮球运动员.参加选秀年, 'NBA总冠军' as 总冠军次数 FROM "篮球运动员" 篮球运动员 JOIN "NBA总冠军" NBA总冠军 ON 篮球运动员.球员id = NBA总冠军."球员id" JOIN "球队" 球队 ON NBA总冠军."球队id" = 球队."球队id" WHERE 球队."所属联盟" = 'NBA总冠军' ORDER BY 总冠军次数 DESC, 篮球运动员.中文名 ASC
medium gold: select 中文队名,夺冠次数 from 球队

eval_err_num:164
easy pred: SELECT * FROM "篮球运动员" WHERE "参加选秀年" = '1984'
easy gold: select 参加选秀年 from 篮球运动员 where 中文名 = "詹姆斯"

eval_err_num:165
easy pred: SELECT * FROM "篮球运动员" WHERE "毕业院校" = 'MIT'
easy gold: select 毕业院校 from 篮球运动员 where 中文名 = "詹姆斯"

eval_err_num:166
easy pred: SELECT * FROM "篮球运动员" WHERE "是否状元" = 'Y'
easy gold: select 是否状元 from 篮球运动员 where 中文名 = "詹姆斯"

eval_err_num:167
easy pred: SELECT * FROM "NBA总冠军" WHERE "球队id" = 'NBA总冠军:2016_活塞队'
easy gold: select 获得球队 from 篮球运动员 where 中文名 = "詹姆斯"

eval_err_num:168
easy pred: SELECT * FROM "MVP记录" WHERE "球员id" IN (SELECT "篮球运动员"."球员id" FROM "篮球运动员" WHERE "球员id" NOT IN (SELECT "篮球运动员"."球员id" FROM "MVP记录") AND "所属球队" = "球队")
easy gold: select T2.中文名 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id

eval_err_num:169
medium pred: SELECT * FROM "球队" WHERE "球队id" IN (SELECT "球队id" FROM "球队")
medium gold: select T2.中文名,T3.中文队名 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id JOIN 球队 AS T3 ON T1.所属球队 = T3.球队id

eval_err_num:170
easy pred: SELECT "总教练" FROM "NBA总冠军" WHERE "赛季" = '2022' AND "球队id" = '1001'
easy gold: select 总教练 from NBA总冠军

eval_err_num:171
easy pred: SELECT * FROM "NBA总冠军" WHERE "总教练" = 'NBA总冠军'
easy gold: select T2.中文队名 from NBA总冠军 AS T1 JOIN 球队 AS T2 ON T1.球队id = T2.球队id

eval_err_num:172
medium pred: SELECT * FROM "MVP记录" WHERE "赛季" = ( SELECT "赛季" FROM "NBA总冠军" WHERE "总教练" = 'NBA总冠军' ORDER BY "赛季" DESC LIMIT 1 )
medium gold: select T2.中文队名,T1.赛季 from NBA总冠军 AS T1 JOIN 球队 AS T2 ON T1.球队id = T2.球队id

eval_err_num:173
medium pred: SELECT "总教练" FROM "NBA总冠军" WHERE "球队id" = 'NBA总冠军'
medium gold: select T2.中文队名,T1.总教练 from NBA总冠军 AS T1 JOIN 球队 AS T2 ON T1.球队id = T2.球队id

eval_err_num:174
extra pred: SELECT * FROM "出版图书" INNER JOIN "网络小说" ON "出版图书"."出版图书id" = "网络小说"."网络图书id" WHERE "吱吱"."姓名" = "作者"."姓名"
extra gold: select T1.书名 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.姓名 = "吱吱" UNION select T3.书名 from 网络小说 AS T3 JOIN 作者 AS T4 ON T3.作者id = T4.作者id where T4.姓名 = "吱吱"

eval_err_num:175
easy pred: SELECT * FROM "作者" WHERE "作者"."年龄" = ( SELECT MAX("作者"."年龄") FROM "作者" )
easy gold: select 年龄 from 作者 where 姓名 = "吱吱"

eval_err_num:176
extra pred: SELECT "网络小说"."书名" as 书名, "网络小说"."评分" as 评分, COUNT(*) as 评价人数, SUM(CASE WHEN "网络小说"."类型" = '类型' THEN 1 else 0 END) as 评价人数_类型, SUM(CASE WHEN "网络小说"."状态" = '状态' THEN 1 else 0 END) as 评价人数_状态, COUNT(*) as 周排名, SUM(CASE WHEN "网络小说"."类型" = '类型' THEN 1 else 0 END) as 周排名_类型, SUM(CASE WHEN "网络小说"."状态" = '状态' THEN 1 else 0 END) as 周排名_状态, COUNT(*) as 月排名, SUM(CASE WHEN "网络小说"."类型" = '类型' THEN 1 else 0 END) as 月排名_类型, SUM(CASE WHEN "网络小说"."状态" = '状态' THEN 1 else 0 END) as 月排名_状态, COUNT(*) as 总排名 FROM "网络小说" WHERE "网络小说"."网络小说id" = ( SELECT "畅销榜"."网络小说id" as 网络小说id, "畅销榜"."周排名" as 周排名, "畅销榜"."月排名" as 月排名, "畅销榜"."总排名" as 总排名 FROM "畅销榜" WHERE "网络小说"."网络小说id" in ( SELECT "网络小说"."网络小说id" FROM "网络小说" WHERE "作者"."年龄" > ( SELECT MAX("作者"."年龄") FROM "作者" ) ) )
extra gold: select T3.书名 from 网络小说 AS T3 JOIN 作者 AS T4 ON T3.作者id = T4.作者id where T4.姓名 = "吱吱" order by T3.评分 desc limit 1

eval_err_num:177
extra pred: SELECT "畅销榜"."总排名" as 总排名 FROM "畅销榜" WHERE "畅销榜"."网络小说id" = ( SELECT "网络小说"."网络小说id" as 网络小说id, "网络小说"."周排名" as 周排名, "网络小说"."月排名" as 月排名, "网络小说"."总排名" as 总排名 FROM "网络小说" WHERE "作者"."年龄" > ( SELECT MAX("作者"."年龄") FROM "作者" ) )
extra gold: select T5.总排名 from 网络小说 AS T3 JOIN 作者 AS T4 ON T3.作者id = T4.作者id JOIN 畅销榜 AS T5 ON T5.网络小说id = T3.网络图书id where T4.姓名 = "吱吱" order by T3.评分 desc limit 1

eval_err_num:178
extra pred: SELECT "书籍"."书名" as 书名, "书籍"."价格" as 价格 FROM "书籍" WHERE "书籍"."出版图书id" = ( SELECT "网络小说"."网络图书id" as 网络图书id, "网络小说"."价格" as 价格 FROM "网络小说" WHERE "书籍"."作者id" = "作者"."作者id" )
extra gold: select T3.价格 from 网络小说 AS T3 JOIN 作者 AS T4 ON T3.作者id = T4.作者id where T4.姓名 = "吱吱" order by T3.评分 desc limit 1

eval_err_num:179
easy pred: SELECT * FROM "网络小说" WHERE "网络小说"."价格" > 0 AND "网络小说"."状态" = '完结'
easy gold: select 书名 from 网络小说 where 状态 = "完结"

eval_err_num:180
medium pred: SELECT "作者"."姓名" FROM "作者" WHERE "作者"."年龄" > 18; SELECT * FROM "网络小说" WHERE "网络小说"."价格" > 0 AND "网络小说"."状态" = '完结' AND "作者"."id" = (SELECT "作者"."id" FROM "作者" WHERE "作者"."年龄" > 18)
medium gold: select T1.书名, T2.姓名 from 网络小说 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T1.状态 = "完结"

eval_err_num:181
medium pred: SELECT * FROM "畅销榜" WHERE 日期 = ( SELECT 日期 FROM ( SELECT 日期, COUNT(*) as count FROM "畅销榜" WHERE "网络小说"."id" = "网络小说"."网络图书id" GROUP BY 日期 ) t )
medium gold: select T2.书名, T1.周排名 from 畅销榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id where T2.状态 = "完结"

eval_err_num:182
medium pred: SELECT * FROM "收藏榜" WHERE "收藏榜"."周排名" > 100 AND "收藏榜"."月排名" > 20
medium gold: select T2.书名, T1.周排名 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id where T2.状态 = "完结"

eval_err_num:183
easy pred: SELECT price FROM "网络小说" WHERE "网络小说"."状态" = '完结' AND "网络小说"."书名" = '三生三世十里桃花'
easy gold: select 价格 from 网络小说 where 书名 = "三生三世十里桃花"

eval_err_num:184
easy pred: SELECT * FROM "人类简史" WHERE "人类简史"."书名" = '人类简史'
easy gold: select 类型 from 出版图书 where 书名 = "人类简史"

eval_err_num:185
easy pred: SELECT COUNT(*) FROM "出版图书" WHERE "出版图书"."书名" = '人类简史' AND "出版图书"."类型" = '小说'
easy gold: select 点击数 from 出版图书 where 书名 = "人类简史"

eval_err_num:186
medium pred: SELECT 姓名 FROM "作者" WHERE 年龄 = (SELECT MAX(年龄) FROM "作者")
medium gold: select T2.姓名 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T1.书名 = "人类简史"

eval_err_num:187
easy pred: SELECT * FROM "作者" WHERE 年龄 = (SELECT MAX(年龄) FROM "作者") AND 姓名 = (SELECT 姓名 FROM "作者")
easy gold: select 姓名 from 作者

eval_err_num:188
hard pred: SELECT 姓名 FROM "作者" WHERE 年龄 = (SELECT MIN(年龄) FROM "作者")
hard gold: select 姓名 from 作者 where 年龄 = (select min(年龄) from 作者)

eval_err_num:189
extra pred: SELECT 书名, 评分, 类型, 状态, 价格 FROM "网络小说"
extra gold: select T1.书名 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.年龄 = (select min(年龄) from 作者)

eval_err_num:190
extra pred: SELECT 类型 FROM "出版图书"
extra gold: select T1.类型 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.年龄 = (select min(年龄) from 作者)

eval_err_num:191
medium pred: SELECT * FROM "畅销榜" WHERE "周排名" = (SELECT "周排名" FROM "网络小说" WHERE "网络图书id" = (SELECT "网络图书id" FROM "畅销榜" ORDER BY "周排名" DESC LIMIT 1)) AND "价格" = 1
medium gold: select T1.书名 from 网络小说 AS T1 JOIN 畅销榜 AS T2 ON T1.网络图书id = T2.网络小说id where T2.周排名 = "1"

eval_err_num:192
medium pred: SELECT * FROM "畅销榜" WHERE "月排名" = (SELECT "月排名" FROM "网络小说" WHERE "网络图书id" = (SELECT "网络图书id" FROM "畅销榜" ORDER BY "月排名" DESC LIMIT 1)) AND "价格" = 1
medium gold: select T1.书名 from 网络小说 AS T1 JOIN 畅销榜 AS T2 ON T1.网络图书id = T2.网络小说id where T2.月排名 = "1"

eval_err_num:193
medium pred: SELECT * FROM "畅销榜" WHERE "总排名" = (SELECT "总排名" FROM "网络小说" WHERE "网络图书id" = (SELECT "网络图书id" FROM "畅销榜" ORDER BY "总排名" DESC LIMIT 1)) AND "价格" = 1
medium gold: select T1.书名 from 网络小说 AS T1 JOIN 畅销榜 AS T2 ON T1.网络图书id = T2.网络小说id where T2.总排名 = "1"

eval_err_num:194
hard pred: SELECT * FROM "作者" WHERE "作者id" = 1
hard gold: select T3.姓名 from 网络小说 AS T1 JOIN 畅销榜 AS T2 ON T1.网络图书id = T2.网络小说id JOIN 作者 AS T3 ON T3.作者id = T1.作者id where T2.总排名 = "1"

eval_err_num:195
medium pred: SELECT 网络小说id FROM "收藏榜" WHERE "收藏榜"."周排名" = (SELECT "周排名" FROM "畅销榜" WHERE "畅销榜"."网络小说id" = "网络小说id") AND "收藏榜"."月排名" > "畅销榜"."月排名" AND "收藏榜"."总排名" > "畅销榜"."总排名" ORDER BY "收藏榜"."周排名" DESC LIMIT 1
medium gold: select T2.书名 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id where T1.周排名 = "1"

eval_err_num:196
medium pred: SELECT 网络小说id FROM "收藏榜" WHERE "收藏榜"."月排名" = (SELECT "月排名" FROM "畅销榜" WHERE "畅销榜"."网络小说id" = "网络小说id") AND "收藏榜"."总排名" > "畅销榜"."总排名" ORDER BY "收藏榜"."月排名" DESC LIMIT 1
medium gold: select T2.书名 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id where T1.月排名 = "1"

eval_err_num:197
medium pred: SELECT 网络小说id FROM "收藏榜" WHERE "收藏榜"."总排名" = (SELECT "总排名" FROM "畅销榜" WHERE "畅销榜"."网络小说id" = "网络小说id") AND "收藏榜"."月排名" > "畅销榜"."月排名" AND "收藏榜"."总排名" > "畅销榜"."总排名" ORDER BY "收藏榜"."总排名" DESC LIMIT 1
medium gold: select T2.书名 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id where T1.总排名 = "1"

eval_err_num:198
hard pred: SELECT 书名,作者id FROM "出版图书" WHERE 出版图书id = (SELECT id FROM "作者" WHERE name = "作者id") ORDER BY 书名 DESC LIMIT 1
hard gold: select T3.姓名 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id JOIN 作者 AS T3 ON T2.作者id = T3.作者id where T1.总排名 = "1"

eval_err_num:199
hard pred: SELECT age FROM "作者" WHERE name = '作者id' ORDER BY age DESC LIMIT 1
hard gold: select T3.年龄 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id JOIN 作者 AS T3 ON T2.作者id = T3.作者id where T1.总排名 = "1"

eval_err_num:200
easy pred: SELECT * FROM "网络小说" WHERE 价格 > 0
easy gold: select 书名 from 网络小说

eval_err_num:201
medium pred: SELECT * FROM "作者" WHERE id > 1
medium gold: select T1.书名,T2.姓名 from 网络小说 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id

eval_err_num:202
hard pred: SELECT 书名,评分 FROM "出版图书" WHERE评分 > (SELECT评分 FROM "出版图书" WHERE 出版图书id = (SELECT 出版图书id FROM "作者" WHERE作者id > 1))
hard gold: select 书名 from 网络小说 where 评分 = (select max(评分) from 网络小说)

eval_err_num:203
hard pred: SELECT评分 FROM "出版图书" WHERE 出版图书id = (SELECT 出版图书id FROM "作者" WHERE作者id > 1)
hard gold: select 评分 from 网络小说 where 评分 = (select max(评分) from 网络小说)

eval_err_num:204
hard pred: SELECT * FROM "网络小说" WHERE状态 = '连载中'
hard gold: select 状态 from 网络小说 where 评分 = (select max(评分) from 网络小说)

eval_err_num:205
hard pred: SELECT * FROM "出版图书" ORDER BY "点击数" DESC LIMIT 1
hard gold: select 书名 from 出版图书 where 点击数 = (select max(点击数) from 出版图书)

eval_err_num:206
hard pred: SELECT * FROM "出版图书" ORDER BY 点击数 DESC LIMIT 1
hard gold: select 点击数 from 出版图书 where 点击数 = (select max(点击数) from 出版图书)

eval_err_num:207
hard pred: SELECT "类型" AS 类型 FROM "出版图书" WHERE 点击数 > 1
hard gold: select 类型 from 出版图书 where 点击数 = (select max(点击数) from 出版图书)

eval_err_num:208
easy pred: SELECT * FROM "网络小说" WHERE "网络小说"."价格" = ( SELECT "网络小说"."价格" FROM "畅销榜" WHERE "畅销榜"."周排名" > 1 AND "畅销榜"."月排名" > 1 AND "畅销榜"."总排名" > 1 )
easy gold: select 书名 from 网络小说 where 状态 = "完结"

eval_err_num:209
hard pred: SELECT price FROM "网络小说" WHERE price < ( SELECT price FROM "畅销榜" WHERE "网络小说"."id" = "畅销榜"."网络小说id" AND "畅销榜"."周排名" > 1 AND "畅销榜"."月排名" > 1 AND "畅销榜"."总排名" > 1 )
hard gold: select 书名 from 网络小说 where 状态 = "完结" order by 价格 limit 1

eval_err_num:210
hard pred: SELECT SUM(price) AS total_price FROM "网络小说" WHERE "网络小说"."价格" > ( SELECT SUM(price) AS total_price FROM "畅销榜" WHERE "畅销榜"."id" = "畅销榜"."网络小说id" AND "畅销榜"."周排名" > 1 AND "畅销榜"."月排名" > 1 AND "畅销榜"."总排名" > 1 )
hard gold: select 价格 from 网络小说 where 状态 = "完结" order by 价格 limit 1

eval_err_num:211
extra pred: SELECT t1.name AS author FROM "作者" t1 WHERE t1.age > 18; SELECT name FROM "出版图书" t2 WHERE t2."作者id" = t1."作者id"
extra gold: select T2.姓名 from 网络小说 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T1.状态 = "完结" order by 价格 limit 1

eval_err_num:212
hard pred: SELECT t1.的风评, t2.的评价 AS 好书_评价, t3.的评分 FROM "书籍" t1, "出版图书" t2, "网络小说" t3 WHERE t1."书名" = t2."书名" AND t2."出版图书id" = t3."网络图书id" AND t3."状态" = "已更新"
hard gold: select 评分 from 网络小说 where 状态 = "完结" order by 价格 limit 1

eval_err_num:213
hard pred: SELECT * FROM "出版图书" WHERE评分 > (SELECT评分 FROM "网络小说" WHERE 网络小说id = (SELECT 网络小说id FROM "畅销榜" WHERE 周排名 > 10))
hard gold: select 书名 from 出版图书 where 评分 = (select max(评分) from 出版图书)

eval_err_num:214
extra pred: SELECT作者id FROM "作者" WHERE name = '作者名'
extra gold: select T2.姓名 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T1.评分 = (select max(评分) from 出版图书)

eval_err_num:215
extra pred: SELECT年龄 FROM "作者" WHERE name = '作者名'
extra gold: select T2.年龄 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T1.评分 = (select max(评分) from 出版图书)

eval_err_num:216
medium pred: SELECT 台风id, sum(经济损失) as 经济损失 FROM 台风影响的中国省份, 台风影响的国家 GROUP BY 台风id ORDER BY 经济损失 DESC LIMIT 1
medium gold: select 名称 from 台风 order by 经济损失 desc limit 1

eval_err_num:217
medium pred: SELECT 台风id, sum(经济损失) as 经济损失, 登陆地点 as 登陆地 FROM 台风影响的国家, ("台风影响的国家"."经济损失") c GROUP BY 台风id, 登陆地点 ORDER BY 经济损失 DESC, 登陆地点 DESC LIMIT 1
medium gold: select 经济损失,登陆地点 from 台风 order by 经济损失 desc limit 1

eval_err_num:218
hard pred: SELECT 台风id, 省份 FROM 台风影响的中国省份 WHERE 省份 in ( SELECT 省份 FROM 台风影响的国家 WHERE 台风id = ( SELECT 台风id FROM 台风 WHERE 发布日期 >= 当前日期 ) )
hard gold: select 省份 from 台风影响的中国省份 where 台风id = (select 台风id from 台风 order by 经济损失 desc limit 1)

eval_err_num:219
hard pred: SELECT 台风id, 是否影响国家 AS 影响国家 FROM 台风影响的中国省份 GROUP BY 台风id HAVING 影响国家 = 1
hard gold: select 国家 from 台风影响的国家 where 台风id = (select 台风id from 台风 order by 经济损失 desc limit 1)

eval_err_num:220
extra pred: SELECT 台风id, sum(经济损失) as 经济损失 FROM 台风影响的中国省份 GROUP BY 台风id ORDER BY 经济损失 DESC LIMIT 1
extra gold: select 国家,经济损失 from 台风影响的国家 where 台风id = (select 台风id from 台风 order by 经济损失 desc limit 1)

eval_err_num:221
easy pred: SELECT * FROM "台风" ORDER BY "登陆时间" ASC
easy gold: select 名称 from 台风 order by 登陆时间 asc

eval_err_num:222
medium pred: SELECT * FROM "台风" WHERE "登陆时间" IN (SELECT "登陆时间" FROM "台风")
medium gold: select 名称,登陆时间 from 台风 order by 登陆时间 asc

eval_err_num:223
hard pred: SELECT t1.国家 FROM "台风影响的国家" t1 JOIN "台风" t2 ON t1.台风id = t2.台风id WHERE t2."登陆时间" >= 我们现在所在的时间
hard gold: select 国家 from 台风影响的国家 where 台风id = (select 台风id from 台风 order by 登陆时间 desc limit 1)

eval_err_num:224
hard pred: SELECT t1.国家 FROM "台风影响的国家" t1 JOIN "台风" t2 ON t1.台风id = t2.台风id WHERE t2."登陆时间" < "现在的时间"
hard gold: select 国家 from 台风影响的国家 where 台风id = (select 台风id from 台风 order by 登陆时间 asc limit 1)

eval_err_num:225
extra pred: SELECT t1.国家, t1.经济损失 FROM "台风影响的国家" t1 INNER JOIN "台风影响的国家" t2 ON t1.国家 = t2.国家 AND t1.经济损失 = ( SELECT MAX(经济损失) FROM "台风影响的国家" ) GROUP BY t1.国家 ORDER BY 经济损失 DESC LIMIT 1
extra gold: select t2.名称 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where t1.经济损失 = (select max(经济损失) from 台风影响的国家)

eval_err_num:226
extra pred: SELECT t1.省份, t1.登陆地点 FROM "台风影响的中国省份" t1 INNER JOIN "台风影响的国家" t2 ON t1.省份 = t2.国家 AND t1.登陆地点 = t2.登陆地点 GROUP BY t1.省份 ORDER BY t1.省份 ASC LIMIT 1
extra gold: select t2.名称,t2.登陆地点 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where t1.经济损失 = (select max(经济损失) from 台风影响的国家)

eval_err_num:227
extra pred: SELECT t1.死亡人数 FROM "台风影响的中国省份" t1 INNER JOIN "台风影响的国家" t2 ON t1.省份 = t2.国家 AND t1.死亡人数 = ( SELECT COUNT(*) FROM "台风影响的国家" ) GROUP BY t1.省份 ORDER BY t1.死亡人数 ASC LIMIT 1
extra gold: select sum(死亡人数) from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where t1.经济损失 = (select max(经济损失) from 台风影响的国家)

eval_err_num:228
medium pred: SELECT 商店名, 应用软件数, 累计下载次数 FROM "应用商店" GROUP BY 商店名 ORDER BY 应用软件数 DESC LIMIT 1
medium gold: select 商店名 from 应用商店 order by 应用软件数 desc limit 1

eval_err_num:229
extra pred: SELECT 应用商店支持国家 FROM "应用商店" GROUP BY 应用商店支持国家 HAVING COUNT(DISTINCT 国家) > 0
extra gold: select T1.国家 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id where T2.商店名 = (select T3.商店名 from 应用商店 AS T3 order by T3.应用软件数 desc limit 1)

eval_err_num:230
extra pred: SELECT 应用商店支持国家, COUNT(DISTINCT 用户是否可以购买应用程序) AS 允许购买应用程序 FROM "应用商店" GROUP BY 应用商店支持国家 HAVING COUNT(DISTINCT 用户是否可以购买应用程序) > 0
extra gold: select T1.国家 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id where T2.商店名 = (select T3.商店名 from 应用商店 AS T3 order by T3.应用软件数 desc limit 1) AND T1.用户是否可以购买应用程序 = "是"

eval_err_num:231
extra pred: SELECT 软件下载.好评数 FROM "软件下载" JOIN "应用商店" ON 软件下载.应用商店id = "应用商店".商店id JOIN "应用商店支持国家" ON "应用商店".商店id = "应用商店支持国家".商店id WHERE "应用商店支持国家"."国家" = ( SELECT 国家 FROM "应用商店支持国家" GROUP BY 国家 HAVING COUNT(DISTINCT "应用商店支持国家"."用户是否可以购买应用程序") > 0 ) AND "软件下载".下载量 > 0
extra gold: select T1.好评数 from 软件下载 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id JOIN 软件 AS T3 ON T1.软件id = T3.软件id where T2.商店名 = (select T4.商店名 from 应用商店 AS T4 order by T4.应用软件数 desc limit 1) AND T3.名称 = "滴滴打车"

eval_err_num:232
easy pred: SELECT * FROM "应用商店" WHERE "商店名" = '打车软件'; SELECT * FROM "应用商店支持国家" WHERE "商店id" IN (SELECT "商店id" FROM "应用商店" WHERE "商店名" = '打车软件'); SELECT * FROM "软件" WHERE "软件id" IN (SELECT "软件id" FROM "应用商店" WHERE "商店名" = '打车软件')
easy gold: select 名称 from 软件 where 用途 = "打车"

eval_err_num:233
extra pred: SELECT AVG(下载量) FROM "应用商店" WHERE "商店名" = '打车软件'; SELECT AVG(下载量) FROM "应用商店支持国家" WHERE "商店id" IN (SELECT "商店id" FROM "应用商店" WHERE "商店名" = '打车软件'); SELECT AVG(下载量) FROM "软件" WHERE "软件id" IN (SELECT "软件id" FROM "应用商店" WHERE "商店名" = '打车软件')
extra gold: select avg(下载量) from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id where T2.名称 = (select T3.名称 from 软件 AS T3 where T3.用途 = "打车")

eval_err_num:234
extra pred: SELECT "商店名" FROM "应用商店" WHERE "应用商店id" = ( SELECT "商店id" FROM "应用商店支持国家" WHERE "应用商店name" = '软件下载' LIMIT 1 )
extra gold: select T3.商店名 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id JOIN 应用商店 AS T3 ON T1.应用商店id = T3.商店id where T2.名称 = (select T4.名称 from 软件 AS T4 where T4.用途 = "打车")

eval_err_num:235
easy pred: SELECT sum(死亡人数) as total_死亡 FROM "台风影响的中国省份"
easy gold: select sum(死亡人数) from 台风

eval_err_num:236
easy pred: SELECT sum(经济损失) as total_经济损失 FROM "台风影响的国家"
easy gold: select sum(经济损失) from 台风

eval_err_num:237
medium pred: SELECT COUNT(1) as count, 台风id from "台风影响的国家" group by 台风id order by count DESC limit 1
medium gold: select 名称 from 台风 order by 经济损失 desc limit 1

eval_err_num:238
hard pred: SELECT 省份 from "台风影响的中国省份" WHERE 台风id = '987.8'
hard gold: select 省份 from 台风影响的中国省份 where 台风id = (select 台风id from 台风 order by 经济损失 desc limit 1)

eval_err_num:239
easy pred: SELECT t1.time FROM "台风" t1 WHERE t1.name = '利奇马' AND t1.登陆地点 = '厦门'
easy gold: select 登陆时间 from 台风 where 名称 = "利奇马台风"

eval_err_num:240
medium pred: SELECT t1.name, t2.登陆强度和地点 FROM "台风" t1 JOIN "台风影响的国家" t2 ON t1.台风id = t2.台风id
medium gold: select 登陆强度,登陆地点 from 台风 where 名称 = "利奇马台风"

eval_err_num:241
medium pred: SELECT t1.省份 FROM "台风影响的中国省份" t1 JOIN "台风" t2 ON t1.省份 = t2.台风id WHERE t2.name = '利奇马'
medium gold: select t2.省份 from 台风 as t1 join 台风影响的中国省份 as t2 on t1.台风id = t2.台风id where t1.名称 = "利奇马台风"

eval_err_num:242
medium pred: SELECT t3.国家 FROM "台风影响的国家" t3 JOIN "台风" t4 ON t3.国家 = t4.台风id WHERE t4.name = '美国'
medium gold: select t2.国家 from 台风 as t1 join 台风影响的国家 as t2 on t1.台风id = t2.台风id where t1.名称 = "利奇马台风"

eval_err_num:243
medium pred: SELECT t2.经济损失 FROM "台风影响的国家" t3 JOIN "台风" t4 ON t3.国家 = t4.台风id JOIN "台风影响的中国省份" t5 ON t4.台风id = t5.省份 AND t3.经济损失 = t5.登陆强度 AND t3.省份 = '北京'
medium gold: select t2.国家,t2.经济损失 from 台风 as t1 join 台风影响的国家 as t2 on t1.台风id = t2.台风id where t1.名称 = "利奇马台风"

eval_err_num:244
medium pred: SELECT * FROM "台风影响的中国省份" WHERE "台风id" = ( SELECT "台风id" FROM "台风" WHERE "名称" = '浙江' )
medium gold: select 名称 from 台风 where 登陆地点 like "%浙江%"

eval_err_num:245
medium pred: SELECT AVG( "死亡人数" ) AS "平均死亡人数" FROM "台风影响的中国省份" WHERE "省份" = '中国' GROUP BY "台风id"
medium gold: select avg(死亡人数) from 台风 where 登陆地点 like "%浙江%"

eval_err_num:246
hard pred: SELECT "台风id" AS "台风影响省份" FROM "台风影响的中国省份" WHERE "省份" = '中国' GROUP BY "台风id"
hard gold: select t1.名称,t2.省份 from 台风 as t1 join 台风影响的中国省份 as t2 on t1.台风id = t2.台风id where t1.登陆地点 like "%浙江%"

eval_err_num:247
extra pred: SELECT "台风id" AS "台风影响省份", "台风id" AS "台风影响国家" FROM "台风影响的中国省份" WHERE "省份" = '中国' GROUP BY "台风id" HAVING COUNT(DISTINCT "国家") = ( SELECT COUNT(DISTINCT "国家") FROM "台风影响的国家" WHERE "台风id" = '台风id' )
extra gold: select t1.名称,t2.省份,t3.国家 from 台风 as t1 join 台风影响的中国省份 as t2 on t1.台风id = t2.台风id join 台风影响的国家 as t3 on t3.台风id = t2.台风id where t1.登陆地点 like "%浙江%"

eval_err_num:248
easy pred: SELECT * FROM "作者" WHERE "作者id" IN (SELECT "作者id" FROM "网络小说")
easy gold: select distinct T2.姓名 from 网络小说 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id

eval_err_num:249
easy pred: SELECT * FROM "出版图书" WHERE "出版图书id" IN (SELECT "出版图书id" FROM "网络小说")
easy gold: select distinct T2.姓名 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id

eval_err_num:250
medium pred: SELECT * FROM "作者" JOIN "网络小说" ON "网络小说id" = "作者id" JOIN "畅销榜" ON "网络小说id" = "网络图书id"
medium gold: select distinct T2.姓名 from 网络小说 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id JOIN 出版图书 AS T3 ON T2.作者id = T3.作者id

eval_err_num:251
hard pred: SELECT SUM(num) FROM "作者" JOIN "网络小说" ON "网络小说id" = "作者id" JOIN "畅销榜" ON "网络小说id" = "网络图书id" GROUP BY "作者id"
hard gold: select count(*) from 出版图书 where 作者id in (select distinct T2.作者id from 网络小说 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id JOIN 出版图书 AS T3 ON T2.作者id = T3.作者id)

eval_err_num:252
hard pred: SELECT * FROM "网络小说" WHERE "网络小说id" IN (SELECT "网络图书id" FROM "畅销榜")
hard gold: select count(*) from 网络小说 where 作者id in (select distinct T2.作者id from 网络小说 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id JOIN 出版图书 AS T3 ON T2.作者id = T3.作者id)

eval_err_num:253
hard pred: SELECT t1.书名, t1.作者id, COUNT(*) as 收藏量 FROM "小说" t1 INNER JOIN "网络小说" t2 ON t1.书名 = t2.书名 and t1.作者id = t2.作者id GROUP BY t1.书名, t1.作者id ORDER BY COUNT(*) DESC LIMIT 1
hard gold: select T2.书名 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id order by T1.总排名 desc limit 1

eval_err_num:254
extra pred: SELECT t1.书名, t1.作者id FROM "出版图书" t1 INNER JOIN "网络小说" t2 ON t1.出版图书id = t2.网络图书id WHERE t2.书名 = '小说名称' GROUP BY t1.书名, t1.作者id HAVING COUNT(*) > 0 ORDER BY COUNT(*) DESC LIMIT 1
extra gold: select T3.姓名 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id JOIN 作者 AS T3 ON T2.作者id = T3.作者id order by T1.总排名 desc limit 1

eval_err_num:255
medium pred: SELECT书名, COUNT(*) as 收藏量, SUM(CASE WHEN 收藏量 > 0 THEN 1 END) as 总排名 FROM "小说" t1 INNER JOIN "网络小说" t2 ON t1.书名 = t2.书名 and t1.作者id = t2.作者id GROUP BY t1.书名, t1.作者id HAVING COUNT(*) = (SELECT COUNT(*) FROM "小说" WHERE 书名 = '小说名称') AND SUM(CASE WHEN 收藏量 > 0 THEN 1 END) > 0 ORDER BY 收藏量 DESC, 总排名 DESC LIMIT 10
medium gold: select T2.书名 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id where T1.总排名 <= 10

eval_err_num:256
hard pred: SELECT column1, column2, column3, ..., columnN FROM table1 ORDER BY CONCAT_WS(' ', column1, ' ', column2, ' ', column3, ' ', ..., ' ', columnN) DESC
hard gold: select T2.书名 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id where T1.总排名 <= 10 order by T2.书名

eval_err_num:257
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select count(T2.书名) from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id where T1.总排名 <= 10 and T2.状态 = "完结" order by T2.书名

eval_err_num:258
medium pred: SELECT COUNT(DISTINCT 网络小说id) AS 网络小说本数 FROM "网络小说" WHERE 书名 = '唐七公子'
medium gold: select count(T1.书名) from 网络小说 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.姓名 = "唐七公子"

eval_err_num:259
medium pred: SELECT COUNT(DISTINCT "出版图书id") AS 印刷图书数 FROM "出版图书" WHERE 书名 = '唐七公子' AND 评分 > 0
medium gold: select count(T1.书名) from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.姓名 = "唐七公子"

eval_err_num:260
medium pred: SELECT 书名 FROM "出版图书"
medium gold: select T1.书名 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.姓名 = "唐七公子"

eval_err_num:261
medium pred: SELECT 评分 FROM "出版图书"
medium gold: select T1.评分 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.姓名 = "唐七公子"

eval_err_num:262
hard pred: SELECT 书名 FROM "出版图书" WHERE 评分 > (SELECT 评分 FROM "出版图书" WHERE 书名 = '唐七公子')
hard gold: select 书名 from 出版图书 where 评分 > (select T1.评分 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.姓名 = "唐七公子")

eval_err_num:263
medium pred: SELECT 书名 FROM "出版图书" WHERE 出版图书id IN ( SELECT 出版图书id FROM "畅销榜" WHERE 畅销榜id IN ( SELECT 畅销榜id FROM "畅销榜" ORDER BY 畅销榜id DESC LIMIT 5 ) )
medium gold: select T2.书名 from 畅销榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id where T1.周排名 <= 5 and T1.月排名 <= 5 and T1.总排名 <= 5

eval_err_num:264
medium pred: SELECT 网络小说id, "收藏数" FROM "收藏榜" WHERE "收藏数" > 0 GROUP BY "网络小说id" ORDER BY "收藏数" DESC LIMIT 3
medium gold: select T2.书名 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id where T1.周排名 <= 5 and T1.月排名 <= 5 and T1.总排名 <= 5

eval_err_num:265
hard pred: SELECT column1 AS name, column2 AS age, COUNT(*) AS num FROM "作者" WHERE "作者id" = 'xxx' GROUP BY "作者id" ORDER BY COUNT(*) DESC, "name" ASC
hard gold: select T2.书名 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id where T1.周排名 <= 5 and T1.月排名 <= 5 and T1.总排名 <= 5 order by T2.书名

eval_err_num:266
medium pred: SELECT作者id FROM "网络小说" WHERE 状态 = '完结'
medium gold: select distinct T2.姓名 from 网络小说 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T1.状态 = "完结"

eval_err_num:267
hard pred: SELECT name, age FROM "作者" WHERE name = '张三' ORDER BY age DESC LIMIT 10
hard gold: select distinct T2.姓名 from 网络小说 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T1.状态 = "完结" order by T2.姓名

eval_err_num:268
hard pred: SELECT书名 FROM "出版图书" WHERE作者id = '张三' AND 评分 >= 4.9
hard gold: select distinct T1.书名 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id JOIN 网络小说 AS T3 ON T2.作者id = T3.作者id where T3.状态 = "完结"

eval_err_num:269
easy pred: SELECT t1.经济损失 FROM "台风影响的国家" t1 INNER JOIN "台风" t2 ON t1.台风id = t2.台风id WHERE t2.名称 = '日本' GROUP BY t1.国家 ORDER BY 经济损失 DESC LIMIT 1
easy gold: select 经济损失 from 台风影响的国家 where 国家 = "日本"

eval_err_num:270
medium pred: SELECT t1.名称, t2.登陆地点, t2.登陆强度, t2.死亡人数, t2.经济损失 FROM "台风影响的国家" t1 INNER JOIN "台风" t2 ON t1.台风id = t2.台风id INNER JOIN "台风影响的中国省份" t3 ON t2.名称 = t3.省份 and t2.台风id = t3.台风id AND t3.省份 = '中国' WHERE t2.名称 = '台风1997sy' GROUP BY t1.名称, t2.登陆地点, t2.登陆强度, t2.死亡人数, t2.经济损失 ORDER BY 经济损失 DESC LIMIT 1
medium gold: select T2.名称 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T1.国家 = "日本"

eval_err_num:271
medium pred: SELECT t1.登陆地点 FROM "台风影响的国家" t1 INNER JOIN "台风" t2 ON t1.台风id = t2.台风id WHERE t2.名称 = '台风1997sy' GROUP BY t1.登陆地点 ORDER BY 登陆地点 DESC LIMIT 1
medium gold: select T2.登陆地点 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T1.国家 = "日本"

eval_err_num:272
easy pred: SELECT t1.省份, t1.登陆强度, t1.死亡人数, t1.失踪人数 FROM "台风影响的中国省份" t1 JOIN "台风影响的国家" t2 ON t1.台风id = t2.台风id WHERE t2.国家 = '海南' GROUP BY t1.省份, t1.登陆强度, t1.死亡人数, t1.失踪人数 HAVING COUNT(DISTINCT t2.台风id) > 1
easy gold: select 名称 from 台风 where 登陆地点 = "海南琼海"

eval_err_num:273
easy pred: SELECT t1.省份, t1.登陆强度, t1.死亡人数, t1.失踪人数 FROM "台风影响的中国省份" t1 JOIN "台风影响的国家" t2 ON t1.台风id = t2.台风id WHERE t2.国家 = '海南' GROUP BY t1.省份, t1.登陆强度, t1.死亡人数, t1.失踪人数 HAVING t1.登陆强度 = (SELECT MAX(t1.登陆强度) FROM "台风影响的国家" WHERE t2.国家 = '海南')
easy gold: select 登陆强度 from 台风 where 登陆地点 = "海南琼海"

eval_err_num:274
easy pred: SELECT t1.省份, t1.登陆强度, t1.死亡人数, t1.失踪人数 FROM "台风影响的中国省份" t1 JOIN "台风影响的国家" t2 ON t1.台风id = t2.台风id WHERE t2.国家 = '海南' GROUP BY t1.省份, t1.登陆强度, t1.死亡人数, t1.失踪人数 HAVING COUNT(DISTINCT t2.台风id) > 1
easy gold: select 死亡人数 from 台风 where 登陆地点 = "海南琼海"

eval_err_num:275
medium pred: SELECT t1.省份, t1.登陆强度, t1.死亡人数, t1.失踪人数 FROM "台风影响的中国省份" t1 JOIN "台风影响的国家" t2 ON t1.台风id = t2.台风id WHERE t2.国家 = '海南' AND (SELECT COUNT(*) FROM "台风影响的国家" t3 WHERE t3.台风id = t2.台风id AND t3.死亡人数 > t1.死亡人数)
medium gold: select T1.省份,T1.死亡人数 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T2.登陆地点 = "海南琼海"

eval_err_num:276
medium pred: SELECT t1.省份, t1.登陆强度, t1.死亡人数, t1.失踪人数 FROM "台风影响的中国省份" t1 JOIN "台风影响的国家" t2 ON t1.台风id = t2.台风id WHERE t2.国家 = '海南' AND (SELECT COUNT(*) FROM "台风影响的国家" t3 WHERE t3.经济损失 = '亿' AND t3.台风id = t2.台风id)
medium gold: select T1.国家,T1.经济损失 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T2.登陆地点 = "海南琼海"

eval_err_num:277
easy pred: SELECT t1.国家 FROM "台风影响的国家" t1 INNER JOIN "台风" t2 ON t1.台风id = t2.台风id WHERE t2.name = '台风'
easy gold: select 国家 from 台风影响的国家

eval_err_num:278
hard pred: SELECT t1.国家, MAX(t1.经济损失) AS 经济损失 FROM "台风影响的国家" t1 INNER JOIN "台风" t2 ON t1.台风id = t2.台风id WHERE t2.name = '台风'
hard gold: select 国家 from 台风影响的国家 where 经济损失 = (select max(经济损失) from 台风影响的国家)

eval_err_num:279
extra pred: SELECT t1.登陆地点, t2.登陆时间, t2.风速 FROM "台风影响的国家" t1 INNER JOIN "台风" t2 ON t1.台风id = t2.台风id WHERE t2.name = '台风' GROUP BY t1.登陆地点, t2.登陆时间 HAVING COUNT(DISTINCT t2.风速) = 2
extra gold: select T2.登陆地点,T2.经济损失 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T1.经济损失 = (select max(经济损失) from 台风影响的国家)

eval_err_num:280
extra pred: SELECT t1.省份 FROM "台风影响的中国省份" t1 INNER JOIN "台风" t2 ON t1.台风id = t2.台风id WHERE t2.name = '台风' GROUP BY t1.省份 HAVING COUNT(DISTINCT t1.死亡人数) = (SELECT COUNT(DISTINCT t1.死亡人数) FROM "台风影响的国家" t3 WHERE t3.国家 = '中国')
extra gold: select T1.省份,T1.死亡人数 from 台风影响的中国省份 AS T1 JOIN 台风影响的国家 AS T2 ON T1.台风id = T2.台风id where T2.经济损失 = (select max(经济损失) from 台风影响的国家)

eval_err_num:281
medium pred: SELECT COUNT(*) AS 次数 FROM 奥运会成绩 WHERE 运动队id = (SELECT id FROM 篮球运动队 WHERE 队名 = '美国队') AND 名次 = 奥运会成绩.名次
medium gold: select count(*) from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where T2.所属国家 = "美国" AND T1.名次 = 1

eval_err_num:282
medium pred: SELECT 奥运会名称, 奥运会日期 FROM 奥运会成绩 WHERE 运动队id = (SELECT id FROM 篮球运动队 WHERE 队名 = '美国队') AND 名次 = 奥运会成绩.名次
medium gold: select T1.奥运会名称 from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where T2.所属国家 = "美国" AND T1.名次 = 1

eval_err_num:283
extra pred: SELECT 奥运会交手记录.对手id, 奥运会交手记录.比赛类型, 奥运会交手记录.年份, 篮球运动队.现在世界排名 FROM 奥运会交手记录 INNER JOIN 奥运会成绩 ON 奥运会交手记录.对手id = 奥运会成绩.对手id INNER JOIN 篮球运动队 ON 奥运会交手记录.球队id = 篮球运动队.id WHERE 奥运会交手记录.比赛日期 = (SELECT MAX(比赛日期) FROM 奥运会交手记录 WHERE 对手id = 篮球运动队.id AND 比赛类型 = '决赛') GROUP BY 奥运会交手记录.对手id, 奥运会交手记录.比赛类型, 奥运会交手记录.年份 HAVING COUNT(*) = (SELECT COUNT(*) FROM 篮球运动队 WHERE id = 篮球运动队.id AND 队名 = '美国队')
extra gold: select T3.奥运会名称, T4.队名 from 奥运会成绩 AS T3 JOIN 篮球运动队 AS T4 ON T3.运动队id = T4.id where T3.奥运会名称 in (select T1.奥运会名称 from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where T2.所属国家 = "美国" AND T1.名次 = 1) AND T3.名次 = 2

eval_err_num:284
hard pred: SELECT 奥运会交手记录.对手id, 奥运会交手记录.比赛类型, 奥运会交手记录.年份, 篮球运动队.现在世界排名, (SELECT COUNT(*) FROM 奥运会交手记录 WHERE 对手id = 篮球运动队.id AND 比赛类型 = '美国-西班牙') AS 美国-西班牙比分 FROM 奥运会交手记录 INNER JOIN 奥运会成绩 ON 奥运会交手记录.对手id = 奥运会成绩.对手id INNER JOIN 篮球运动队 ON 奥运会交手记录.球队id = 篮球运动队.id WHERE 奥运会交手记录.比赛日期 = (SELECT MAX(比赛日期) FROM 奥运会交手记录 WHERE 对手id = 篮球运动队.id AND 比赛类型 = '美国-西班牙') GROUP BY 奥运会交手记录.对手id, 奥运会交手记录.比赛类型, 奥运会交手记录.年份 HAVING COUNT(*) = (SELECT COUNT(*) FROM 篮球运动队 WHERE id = 篮球运动队.id AND 队名 = '美国队')
hard gold: select T1.奥运会, T1.比分 from 奥运会交手记录 AS T1 JOIN 篮球运动队 AS T2 ON T1.对手id = T2.id JOIN 篮球运动队 AS T3 ON T3.id = T1.球队id where T1.赛事类型 = "决赛" AND T2.所属国家 = "西班牙" AND T3.所属国家 = "美国"

hard pred: SELECT 主教练 FROM 奥运会成绩 WHERE 运动队id = (SELECT id FROM 篮球运动队 WHERE 队名 = '美国队') AND 名次 = '伦敦奥运会'
hard gold: select T1.主教练 from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where T2.所属国家 = "西班牙" AND T1.奥运会名称 like "%伦敦奥运会"

medium pred: SELECT 队名 FROM 篮球运动队 ORDER BY 成立时间 DESC
medium gold: select 队名 from 篮球运动队 order by 成立时间 asc limit 1

eval_err_num:285
extra pred: SELECT t1.名次, t1.奥运会名称, t1.运动队id, t1.主教练 FROM 奥运会成绩 t1 INNER JOIN 奥运会交手记录 t2 ON t1.名次 = t2.名次 AND t1.运动队id = t2.运动队id WHERE t2.比赛日期 = (SELECT MAX(比赛日期) FROM 奥运会交手记录)
extra gold: select min(T1.名次) from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where T2.队名 = (select T3.队名 from 篮球运动队 AS T3 order by T3.成立时间 asc limit 1)

eval_err_num:286
extra pred: SELECT 奥运会名称, 年份 FROM 奥运会成绩 WHERE 年份 = (SELECT 年份 FROM 奥运会交手记录 WHERE 对手id = t1.运动队id)
extra gold: select T1.年份 from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where T2.队名 = (select T3.队名 from 篮球运动队 AS T3 order by T3.成立时间 asc limit 1) AND T1.名次 = (select min(T4.名次) from 奥运会成绩 AS T4 JOIN 篮球运动队 AS T5 ON T4.运动队id = T5.id where T5.队名 = (select T6.队名 from 篮球运动队 AS T6 order by T6.成立时间 asc limit 1))

eval_err_num:287
easy pred: SELECT现任主教练 FROM 篮球运动队
easy gold: select 现任主教练 from 篮球运动队 where 所属国家 = "西班牙"

eval_err_num:288
extra pred: SELECT 主教练, COUNT(*) as 次数 FROM 奥运会交手记录 GROUP BY 主教练
extra gold: select count(*) from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where T1.主教练 = (select T3.现任主教练 from 篮球运动队 AS T3 where T3.所属国家 = "西班牙") AND T2.所属国家 = "西班牙"

eval_err_num:289
extra pred: SELECT 主教练, MAX(名次) as 最好名次 FROM 奥运会成绩 GROUP BY 主教练
extra gold: select min(T1.名次) from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where T1.主教练 = (select T3.现任主教练 from 篮球运动队 AS T3 where T3.所属国家 = "西班牙") AND T2.所属国家 = "西班牙"

medium pred: SELECT * FROM 商家 WHERE 商家id = ( SELECT 商家id FROM 商家平台活动 WHERE 配送费 = 0 )
medium gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 配送费 = "0"

eval_err_num:290
medium pred: SELECT 平台名 FROM 平台 WHERE 市场占比大于0
medium gold: select T1.平台名 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id where T2.配送费 = "0"

eval_err_num:291
medium pred: SELECT * FROM 商家 WHERE 类型 = '餐厅' AND 优惠活动 not in ( SELECT 优惠活动 FROM 商家平台活动 WHERE 商家id = ( SELECT 商家id FROM 商家 WHERE 类型 = '餐厅' ) )
medium gold: select T2.优惠活动 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id where T2.配送费 = "0"

eval_err_num:292
medium pred: SELECT 平台的起送价格 FROM 平台 WHERE 市场占比大于0
medium gold: select T2.起送价格 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id where T2.配送费 = "0"

eval_err_num:293
medium pred: SELECT COUNT(*) as num_购买了 FROM 购买记录 WHERE 商家id = ( SELECT 商家id FROM 商家平台活动 WHERE 配送费 = 0 ) AND 评价 = '好'
medium gold: select T2.评分,T2.月售单数 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id where T2.配送费 = "0"

eval_err_num:294
easy pred: SELECT * FROM 商家 "商家平台活动" WHERE 商家id IN (SELECT 商家id FROM 商家 WHERE 类型 = '中式快餐') AND 平台id IN (SELECT 平台id FROM 平台 WHERE 市场占比 = 1.0)
easy gold: select 商家 from 商家 where 类型 = "中式快餐"

eval_err_num:295
hard pred: SELECT * FROM 应用 "应用" WHERE 应用id IN (SELECT 应用id FROM 应用 WHERE 名称 = '美团') AND 平台id IN (SELECT 平台id FROM 平台 WHERE 市场占比 = 1.0)
hard gold: select T1.平台名 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T2.商家id = T3.商家id where T3.类型 = "中式快餐"

eval_err_num:296
hard pred: SELECT (SELECT '元' AS '价格', '元' AS '活动价', '元' AS '优惠后价' FROM 优惠活动) AS 当前价格, SELECT (SELECT COUNT(*) FROM 优惠活动) AS 活动数量, SELECT ('元' AS '活动价', '元' AS '优惠后价', '元' AS '价格') AS 活动信息 FROM 平台 "平台" LEFT JOIN 商家 "商家平台活动" ON 商家id = 平台id AND 优惠活动 = '元' WHERE 平台名 = '美团' AND 市场占比 > 0.8
hard gold: select T1.平台名,T2.优惠活动 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T2.商家id = T3.商家id where T3.类型 = "中式快餐"

eval_err_num:297
hard pred: SELECT 配送费, 起送价格 FROM 优惠活动 WHERE 配送费 = ( SELECT MAX(配送费) FROM 优惠活动 GROUP BY 平台id, 商家id ) AND 起送价格 = ( SELECT MAX(起送价格) FROM 优惠活动 GROUP BY 平台id, 商家id )
hard gold: select T1.平台名,T2.配送费,T2.起送价格 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T2.商家id = T3.商家id where T3.类型 = "中式快餐"

eval_err_num:298
extra pred: SELECT * FROM "商家平台活动" WHERE 商家id = ( SELECT 商家id FROM "商家" WHERE 类型 = '商家' ORDER BY配送费 DESC LIMIT 1 )
extra gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T1.起送价格 = (select min(起送价格) from 商家平台活动)

eval_err_num:299
extra pred: SELECT * FROM "商家平台活动" WHERE 商家id = ( SELECT 商家id FROM "商家" WHERE 类型 = '商家' ORDER BY评分 DESC LIMIT 1 )
extra gold: select T2.类型 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T1.起送价格 = (select min(起送价格) from 商家平台活动)

eval_err_num:300
extra pred: SELECT评分 FROM "商家平台活动" WHERE 商家id = ( SELECT 商家id FROM "商家" WHERE 类型 = '商家' ORDER BY评分 DESC LIMIT 1 )
extra gold: select T1.评分 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T1.起送价格 = (select min(起送价格) from 商家平台活动)

eval_err_num:301
extra pred: SELECT 平台id FROM "平台" WHERE 市场占比 = 1.0
extra gold: select T1.平台名 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T2.商家id = T3.商家id where T2.起送价格 = (select min(起送价格) from 商家平台活动)

eval_err_num:302
extra pred: SELECT 商家id,评分 FROM "商家平台活动" WHERE评分 = ( SELECT MAX(评分) FROM "商家平台活动" ) AND 平台id = ( SELECT 平台id FROM "平台" )
extra gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T1.评分 = (select max(评分) from 商家平台活动)

eval_err_num:303
hard pred: SELECT 商家id,评分 FROM "商家平台活动" WHERE评分 = ( SELECT MAX(评分) FROM "商家平台活动" ) AND 商家id = ( SELECT 商家id FROM "商家" )
hard gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id order by T1.评分 DESC limit 2

eval_err_num:304
hard pred: SELECT 平台id FROM "平台" WHERE 平台名 = '必胜客'
hard gold: select T1.平台名 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T2.商家id = T3.商家id where T3.商家 = "必胜客"

eval_err_num:305
hard pred: SELECT * FROM "商家平台活动" WHERE "商家平台活动"."优惠活动" = '赠送10元优惠券'
hard gold: select T2.优惠活动 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T2.商家id = T3.商家id where T3.商家 = "必胜客"

eval_err_num:306
extra pred: SELECT t1.商家id, COUNT(*) as 月售单数 FROM "商家平台活动" t1 JOIN "商家" t2 ON t1.商家id = t2.商家id GROUP BY t1.商家id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T1.月售单数 = (select max(月售单数) from 商家平台活动)

eval_err_num:307
extra pred: SELECT s.食物名称, s.评分 FROM "食物" s JOIN "食物成分" c ON s.食物名称 = c.食物名称 JOIN "餐厅" p ON c.餐厅名称 = p.餐厅名称 JOIN "餐厅订单" r ON p.餐厅名称 = r.餐厅名称 WHERE r.餐厅订单日期 = ( SELECT MAX(r2.餐厅订单日期) FROM "餐厅订单" r2 WHERE r2.餐厅名称 = p.餐厅名称 )
extra gold: select T1.评分 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T1.月售单数 = (select max(月售单数) from 商家平台活动)

eval_err_num:308
extra pred: SELECT 平台.平台名 FROM 平台 JOIN 商家平台活动 ON 平台.平台id = 商家平台活动.平台id JOIN 商家 ON 商家.商家id = 商家平台活动.商家id WHERE 商家平台活动.优惠活动 = '满减' GROUP BY 平台.平台名 HAVING COUNT(DISTINCT 商家.商家text) = ( SELECT COUNT(DISTINCT 商家.商家text) FROM 商家 GROUP BY 商家.商家text )
extra gold: select T1.平台名 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T2.商家id = T3.商家id where T2.月售单数 = (select max(月售单数) from 商家平台活动)

eval_err_num:309
extra pred: SELECT 起送价格 FROM "商家平台活动" WHERE 优惠活动 = '满减' GROUP BY 起送价格 HAVING COUNT(DISTINCT 商家.商家text) = ( SELECT COUNT(DISTINCT 商家.商家text) FROM 商家 GROUP BY 商家.商家text )
extra gold: select T2.起送价格 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T2.商家id = T3.商家id where T2.月售单数 = (select max(月售单数) from 商家平台活动)

eval_err_num:310
easy pred: SELECT * FROM "应用商店" WHERE "商店name" = '女朋友的化妆品商店' AND "应用软件数" > 0 AND "累计下载次数" > 0 AND "商店id" = ( SELECT "商店id" FROM "应用商店支持国家" WHERE "国家" = '中国' AND "用户是否可以购买应用程序" = '是' AND "开发人员是否可以出售应用程序" = '是' )
easy gold: select 名称 from 软件 where 用途 = "美妆"

eval_err_num:311
hard pred: SELECT "软件下载"."应用商店id" FROM "软件下载" WHERE "软件下载"."应用商店id" = ( SELECT "应用商店支持国家"."商店id" FROM "应用商店支持国家" WHERE "应用商店支持国家"."国家" = '中国' AND "应用商店支持国家"."用户是否可以购买应用程序" = '是' AND "应用商店支持国家"."开发人员是否可以出售应用程序" = '是' )
hard gold: select T2.商店名 from 软件下载 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id JOIN 软件 AS T3 ON T1.软件id = T3.软件id where T3.用途 = "美妆"

eval_err_num:312
extra pred: SELECT * FROM "应用商店" ORDER BY "累计下载次数" DESC LIMIT 1
extra gold: select T2.商店名 from 软件下载 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id JOIN 软件 AS T3 ON T1.软件id = T3.软件id where T3.用途 = "美妆" order by T2.累计下载次数 desc

eval_err_num:313
hard pred: SELECT "软件下载"."好评数" FROM "软件下载" WHERE "软件下载"."应用商店id" = ( SELECT "应用商店支持国家"."好评数" FROM "应用商店支持国家" WHERE "应用商店支持国家"."国家" = '中国' AND "应用商店支持国家"."用户是否可以购买应用程序" = '是' AND "应用商店支持国家"."开发人员是否可以出售应用程序" = '是' )
hard gold: select T1.好评数 from 软件下载 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id JOIN 软件 AS T3 ON T1.软件id = T3.软件id where T3.用途 = "美妆"

eval_err_num:314
hard pred: SELECT * FROM "应用商店" WHERE "应用商店"."商店name" = '女朋友的化妆品商店' AND "应用商店"."应用软件数" > 0 AND "应用商店"."累计下载次数" > 0 AND "应用商店"."应用商店id" = ( SELECT "应用商店支持国家"."下载量" FROM "应用商店支持国家" WHERE "应用商店支持国家"."国家" = '中国' AND "应用商店支持国家"."用户是否可以购买应用程序" = '是' AND "应用商店支持国家"."开发人员是否可以出售应用程序" = '是' )
hard gold: select T1.下载量 from 软件下载 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id JOIN 软件 AS T3 ON T1.软件id = T3.软件id where T3.用途 = "美妆"

eval_err_num:315
hard pred: SELECT 应用商店.商店名 FROM 应用商店 JOIN 应用商店支持国家 ON 应用商店.商店名 = 支持国家.商店名 JOIN "软件" ON 应用商店.商店名 = "软件"."商店名" JOIN "软件下载" ON 应用商店.商店名 = "软件下载"."商店名" WHERE "软件下载"."软件id" = ( SELECT "软件"."软件id" FROM "软件" WHERE "软件"."名称" = "导航软件" AND "软件"."用途" = "导航软件" )
hard gold: select T2.商店名 from 软件下载 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id JOIN 软件 AS T3 ON T1.软件id = T3.软件id where T3.用途 = "地图"

eval_err_num:316
extra pred: SELECT 国家 FROM "应用商店支持国家" WHERE 国家 = ( SELECT 国家 FROM "应用商店" WHERE "应用商店"."商店名" = "应用商店支持国家"."商店名" )
extra gold: select T4.国家 from 应用商店支持国家 AS T4 JOIN 应用商店 AS T5 ON T4.应用商店id = T5.商店id where T5.商店名 = (select T2.商店名 from 软件下载 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id JOIN 软件 AS T3 ON T1.软件id = T3.软件id where T3.用途 = "地图") and 用户是否可以购买应用程序 = "是"

eval_err_num:317
extra pred: SELECT binary FROM "应用商店支持国家" WHERE binary = ( SELECT binary FROM "应用商店" WHERE "应用商店"."商店名" = "应用商店支持国家"."商店名" )
extra gold: select T4.开发人员是否可以出售应用程序 from 应用商店支持国家 AS T4 JOIN 应用商店 AS T5 ON T4.应用商店id = T5.商店id where T5.商店名 = (select T2.商店名 from 软件下载 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id JOIN 软件 AS T3 ON T1.软件id = T3.软件id where T3.用途 = "地图") and 用户是否可以购买应用程序 = "是"

eval_err_num:318
hard pred: SELECT软件id, COUNT(*) as评价人数 FROM "软件下载" GROUP BY软件id HAVING COUNT(*) = (SELECT COUNT(*) FROM "软件" WHERE软件id = "软件id") AND好评数为1
hard gold: select T2.名称 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id order by T1.评价人数 desc limit 1

eval_err_num:319
hard pred: SELECT软件id, 下载量 FROM "软件下载" WHERE软件id NOT IN (SELECT软件id FROM "软件") AND 下载量大于0
hard gold: select * from (select T2.名称 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id order by 下载量 desc limit 1) except select * from (select T4.名称 from 软件下载 AS T3 JOIN 软件 AS T4 ON T3.软件id = T4.软件id order by T3.评价人数 desc limit 1)

eval_err_num:320
hard pred: SELECT软件id, 软件名称 FROM "软件" WHERE 软件名称 like '%应用%'
hard gold: select 用途 from 软件 where 名称 = (select * from (select T2.名称 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id order by 下载量 desc limit 1) except select * from (select T4.名称 from 软件下载 AS T3 JOIN 软件 AS T4 ON T3.软件id = T4.软件id order by T3.评价人数 desc limit 1) )

eval_err_num:321
medium pred: SELECT好评数, COUNT(*) as total_好评数 FROM "软件下载" WHERE好评数大于0 GROUP BY好评数 HAVING COUNT(*) = total_好评数
medium gold: select T2.名称 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id order by T1.好评数 desc

eval_err_num:322
easy pred: SELECT 城市.名称, 城市.所属省份, 城市.地区生产总值, 城市.生产总值增长率, 城市.第一产业总值, 城市.第二产业总值, 城市.第三产业总值 FROM 城市 INNER JOIN 城市第一产业 ON 城市.城市id = 城市第一产业.城市id INNER JOIN 城市贸易产业 ON 城市.城市id = 城市贸易产业.城市id INNER JOIN 城市金融产业 ON 城市.城市id = 城市金融产业.城市id WHERE 城市.名称 = '杭州'
easy gold: select 地区生产总值 from 城市 where 名称 = "杭州"

eval_err_num:323
easy pred: SELECT 城市.名称, 城市.所属省份, 城市.地区生产总值, 城市.生产总值增长率, 城市.第一产业总值, 城市.第二产业总值, 城市.第三产业总值 FROM 城市 INNER JOIN 城市第一产业 ON 城市.城市id = 城市第一产业.城市id INNER JOIN 城市贸易产业 ON 城市.城市id = 城市贸易产业.城市id INNER JOIN 城市金融产业 ON 城市.城市id = 城市金融产业.城市id WHERE 城市.名称 = '杭州' GROUP BY 城市.名称, 城市.所属省份, 城市.地区生产总值, 城市.生产总值增长率 HAVING COUNT(*) > (SELECT COUNT(*) FROM 城市 WHERE 城市.名称 = '杭州' and 城市.生产总值增长率 > 0)
easy gold: select 生产总值增长率 from 城市 where 名称 = "杭州"

eval_err_num:324
medium pred: SELECT 城市.名称, 城市.所属省份, 城市.地区生产总值, 城市.第一产业总值, 城市.第二产业总值, 城市.第三产业总值 FROM 城市 INNER JOIN 城市第一产业 ON 城市.城市id = 城市第一产业.城市id INNER JOIN 城市贸易产业 ON 城市.城市id = 城市贸易产业.城市id INNER JOIN 城市金融产业 ON 城市.城市id = 城市金融产业.城市id WHERE 城市.名称 = '杭州' GROUP BY 城市.名称, 城市.所属省份, 城市.地区生产总值, 城市.第一产业总值, 城市.第二产业总值 HAVING COUNT(*) >= (SELECT COUNT(*) FROM 城市 WHERE 城市.名称 = '杭州' and 城市.生产总值增长率 < 1%)
medium gold: select 第一产业总值,第二产业总值,第三产业总值 from 城市 where 名称 = "杭州"

medium pred: SELECT 金融业增加值 FROM 城市金融产业 WHERE 金融业增加值 > (SELECT 金融业增加值 FROM 城市金融产业 WHERE 城市.名称 = '杭州')
medium gold: select T1.金融业增加值 from 城市金融产业 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.名称 = "杭州"

eval_err_num:325
hard pred: SELECT MAX(生产总值增长率) AS max_生产总值_增长率 FROM 城市 WHERE 经济普遍低迷
hard gold: select 生产总值增长率 from 城市 where 生产总值增长率 = (select max(生产总值增长率) from 城市)

eval_err_num:326
hard pred: SELECT 城市id FROM 城市 WHERE 经济普遍低迷
hard gold: select 名称 from 城市 where 生产总值增长率 = (select max(生产总值增长率) from 城市)

extra pred: SELECT 产业类型 FROM 城市第一产业 GROUP BY 产业类型 ORDER BY 产量 DESC
extra gold: select T1.产业类型 from 城市第一产业 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.生产总值增长率 = (select max(生产总值增长率) from 城市)

eval_err_num:327
extra pred: SELECT 生产总值增长率 FROM 城市 WHERE 经济普遍低迷
extra gold: select T1.产业类型,T1.收入增长率 from 城市第一产业 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.生产总值增长率 = (select max(生产总值增长率) from 城市)

medium pred: SELECT 金融业增加值, 增长率 FROM 城市金融产业 WHERE 城市id = ( SELECT 城市id FROM 城市 WHERE 名称 = '长沙' ORDER BY 地区生产总值 DESC LIMIT 1 )
medium gold: select T1.金融业增加值,T1.增长率 from 城市金融产业 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.名称 = "长沙"

medium pred: SELECT COUNT(DISTINCT 金融机构数量) FROM 城市金融产业 WHERE 城市id = ( SELECT 城市id FROM 城市 WHERE 名称 = '长沙' ORDER BY 地区生产总值 DESC LIMIT 1 )
medium gold: select T1.金融机构数量 from 城市金融产业 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.名称 = "长沙"

eval_err_num:328
medium pred: SELECT 贷款余额, 同比增长率 FROM 城市金融产业 WHERE 城市id = ( SELECT 城市id FROM 城市 WHERE 名称 = '长沙' ORDER BY 地区生产总值 DESC LIMIT 1 )
medium gold: select T1.贷款余额,T1.贷款余额增长率 from 城市金融产业 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.名称 = "长沙"

eval_err_num:329
extra pred: SELECT 城市id AS 城市名 FROM 城市 GROUP BY 城市id ORDER BY 进口额 DESC LIMIT 1
extra gold: select T2.名称 from 城市贸易产业 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T1.进口额 = (select max(进口额) from 城市贸易产业)

eval_err_num:330
hard pred: SELECT 行业, 收入 AS 收入额 FROM 城市贸易产业 WHERE 进口额 >= ( SELECT MAX(进口额) FROM 城市贸易产业 ) ORDER BY 收入额 DESC LIMIT 1
hard gold: select 行业 from 城市贸易产业 where 进口额 = (select max(进口额) from 城市贸易产业)

eval_err_num:331
extra pred: SELECT 城市id AS 城市名, 出口额 AS 出口额额 FROM 城市贸易产业 GROUP BY 城市id ORDER BY 出口额额 DESC LIMIT 1
extra gold: select T2.名称 from 城市贸易产业 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T1.出口额 = (select max(出口额) from 城市贸易产业)

eval_err_num:332
hard pred: SELECT 行业, 生产总值 FROM 城市 GROUP BY 行业 ORDER BY 生产总值 DESC LIMIT 1
hard gold: select 行业 from 城市贸易产业 where 出口额 = (select max(出口额) from 城市贸易产业)

medium pred: SELECT 产业类型 FROM 城市第一产业
medium gold: select T1.名称,T2.产业类型 from 城市 AS T1 JOIN 城市第一产业 AS T2 ON T1.城市id = T2.城市id

eval_err_num:333
medium pred: SELECT 收入, 增长率 FROM 城市 WHERE 城市id = ( SELECT 城市id FROM 城市 )
medium gold: select T1.名称,T2.收入,T2.收入增长率 from 城市 AS T1 JOIN 城市第一产业 AS T2 ON T1.城市id = T2.城市id

eval_err_num:334
medium pred: SELECT 产量, 增长率 FROM 城市 WHERE 城市id = ( SELECT 城市id FROM 城市 )
medium gold: select T1.名称,T2.产量,T2.产量增长率 from 城市 AS T1 JOIN 城市第一产业 AS T2 ON T1.城市id = T2.城市id

easy pred: SELECT * FROM 比赛 WHERE 举办单位 = '清华大学' AND 奖金数 > 0
easy gold: select 名称 from 比赛 where 举办单位 = "清华大学"

easy pred: SELECT 方向 FROM 比赛 WHERE 举办单位 = '清华大学' AND 奖金数 > 0
easy gold: select 方向 from 比赛 where 举办单位 = "清华大学"

easy pred: SELECT 奖金数 FROM 比赛 WHERE 举办单位 = '清华大学' AND 奖金数 > 0
easy gold: select 奖金数 from 比赛 where 举办单位 = "清华大学"

eval_err_num:335
hard pred: SELECT 队伍ID FROM 比赛 WHERE 比赛ID IN (SELECT 比赛ID FROM 比赛 WHERE 举办单位 = '清华大学' AND 奖金数 > 0)
hard gold: select T3.队名 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id where T2.举办单位 = "清华大学"

eval_err_num:336
hard pred: SELECT 奖项名称 FROM 比赛 WHERE 比赛ID IN (SELECT 比赛ID FROM 比赛 WHERE 举办单位 = '清华大学' AND 奖金数 > 0)
hard gold: select T1.成绩 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id where T2.举办单位 = "清华大学"

easy pred: SELECT * FROM 比赛 WHERE 举办单位 = '企业'
easy gold: select 名称 from 比赛 where 单位性质 = "企业"

medium pred: SELECT 奖金数 FROM 比赛 WHERE 举办单位 = '企业'
medium gold: select 名称,奖金数 from 比赛 where 单位性质 = "企业"

eval_err_num:337
hard pred: SELECT 参赛队伍.队名, 参赛学生.姓名, 参赛学生.年龄, 比赛平台.名称 FROM 参赛队伍, 参赛学生, 比赛平台 WHERE 参赛队伍.加入队伍日期 = 参赛学生.加入队伍日期 AND 参赛队伍.加入队伍id = 比赛平台.参加比赛id AND 比赛平台.名称 = '比赛' AND 参赛学生.学生id = 比赛平台.参加比赛id GROUP BY 参赛队伍.队名, 参赛学生.姓名, 比赛平台.名称 HAVING COUNT(DISTINCT 比赛平台.参加比赛id) = (SELECT COUNT(DISTINCT 参加比赛id) FROM 比赛 WHERE 举办单位 = '企业')
hard gold: select T2.名称,T3.队名,T1.成绩 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id where T2.单位性质 = "企业"

eval_err_num:338
medium pred: SELECT 学生.姓名, 学生.年龄, 学生.学历, 学校.名称 FROM 参赛学生 学生 INNER JOIN 学生参赛记录 记录 ON 学生.学生id = 记录.学生id INNER JOIN 学校 学校 ON 记录.加入队伍id = 学校.学校id WHERE 记录.加入队伍日期 = ( SELECT MAX(加入队伍日期) FROM 队伍参赛成绩 WHERE 加入队伍id = ( SELECT 加入队伍id FROM 参赛队伍 WHERE 比赛.名称 = '某个比赛' ) )
medium gold: select 姓名,学校 from 参赛学生

eval_err_num:339
extra pred: SELECT 比赛.名称, 比赛.方向, 比赛.举办单位, 比赛.单位性质, 比赛.奖金数, 比赛.录取队伍数量, 参赛队伍.队名, 参赛队伍.加入队伍日期, 学生.姓名, 学生.年龄, 学生.学历, 学生.学校 FROM 比赛 比赛 INNER JOIN 参赛队伍 参赛队伍 ON 比赛.比赛id = 参赛队伍.比赛id INNER JOIN 学生 学生 ON 参赛队伍.学生id = 学生.学生id WHERE 学生.姓名 = '清华大学的张鲁一'
extra gold: select t1.名称 from 比赛 as t1 join 队伍参赛成绩 as t2 on t1.比赛id = t2.参加比赛id join 学生参赛记录 as t3 on t2.加入队伍id = t3.队伍id join 参赛学生 as t4 on t3.学生id = t4.学生id where t4.姓名 = "张鲁一" and t4.学校 = "清华大学"

eval_err_num:340
hard pred: SELECT 获奖与否 FROM 参赛队伍, 学生, 比赛 WHERE 学生.学生id = 学生.学生id AND 学生.姓名 = '清华大学的张鲁一' AND 比赛.名称 = '某个比赛' AND 比赛.奖金数 > 0 AND 比赛.录取队伍数量 = 0
hard gold: select t1.成绩 from 队伍参赛成绩 as t1 join 学生参赛记录 as t2 on t1.加入队伍id = t2.队伍id join 参赛学生 as t3 on t2.学生id = t3.学生id where t3.姓名 = "张鲁一" and t3.学校 = "清华大学"

eval_err_num:341
hard pred: SELECT 比赛.name, 比赛.方向, 比赛.举办单位, 比赛.单位性质, 比赛.奖金数 FROM 比赛 JOIN 参赛队伍 ON 比赛.比赛id = 参赛队伍.比赛id JOIN 参赛学生 ON 比赛.参赛id = 参赛学生.参赛id JOIN 学生参赛记录 ON 参赛队伍.加入队伍id = 学生参赛记录.加入队伍id JOIN 比赛 ON 学生参赛记录.参加比赛id = 比赛.参加比赛id GROUP BY 比赛.name, 比赛.方向, 比赛.举办单位, 比赛.单位性质, 比赛.奖金数 ORDER BY 奖金数 DESC LIMIT 1
hard gold: select 名称 from 比赛 where 奖金数 = (select max(奖金数) from 比赛)

eval_err_num:342
extra pred: SELECT 比赛.name, 举办单位.name, 单位性质.name FROM 比赛 JOIN 参赛队伍 ON 比赛.比赛id = 参赛队伍.比赛id JOIN 参赛学生 ON 比赛.参赛id = 参赛学生.参赛id JOIN 学生参赛记录 ON 参赛队伍.加入队伍id = 学生参赛记录.加入队伍id JOIN 单位 ON 参赛学生.学校id = 单位.学校id WHERE 比赛.比赛id = ? LIMIT 1
extra gold: select 名称,举办单位 from 比赛 where 奖金数 = (select max(奖金数) from 比赛)

eval_err_num:343
extra pred: SELECT * FROM 表名 WHERE 字段名 IN ( SELECT 字段名 FROM 表名2 WHERE 表名2.字段名 = ?" LIMIT 1 )
extra gold: select 名称,方向 from 比赛 where 奖金数 = (select max(奖金数) from 比赛) and 方向 = "模式识别"

eval_err_num:344
extra pred: SELECT 队伍.name FROM 比赛 JOIN 参赛队伍 ON 比赛.比赛id = 参赛队伍.比赛id JOIN 学生参赛记录 ON 参赛队伍.加入队伍id = 学生参赛记录.加入队伍id JOIN 比赛 ON 学生参赛记录.参加比赛id = 比赛.参加比赛id WHERE 比赛.比赛id = ? LIMIT 1
extra gold: select t2.队名 from 队伍参赛成绩 AS T1 JOIN 参赛队伍 AS T2 ON T1.加入队伍id = T2.队伍id JOIN 比赛 AS T3 ON T1.参加比赛id = T3.比赛id where t3.奖金数 = (select max(奖金数) from 比赛) and t3.方向 = "模式识别"

eval_err_num:345
medium pred: SELECT t1.队名 FROM 参赛队伍 t1 INNER JOIN 学生参赛记录 t2 ON t1.队名 = t2.加入队伍日期 INNER JOIN 比赛 t3 ON t2.加入队伍日期 = t3.比赛id WHERE t3.比赛id = '20220121' AND t2.学生id = 1
medium gold: select t2.队名 from 队伍参赛成绩 AS T1 JOIN 参赛队伍 AS T2 ON T1.加入队伍id = T2.队伍id where t1.成绩 = "冠军"

eval_err_num:346
hard pred: SELECT s.姓名, s.年龄, s.学历, s.学校 FROM 参赛学生 s WHERE s.学生id = 1
hard gold: select * from 参赛学生 as t1 join 学生参赛记录 as t2 on t1.学生id = t2.学生id join 队伍参赛成绩 as t3 on t2.队伍id = t3.加入队伍id where t3.成绩 = "冠军"

eval_err_num:347
medium pred: SELECT t3.比赛名称 FROM 比赛 t1 INNER JOIN 学生参赛记录 t2 ON t1.比赛id = t2.参加比赛id INNER JOIN 比赛 t3 ON t2.参加比赛id = t3.比赛id WHERE t3.比赛id = '20220121' AND t2.学生id = 1
medium gold: select t2.名称 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id where t1.成绩 = "冠军"

eval_err_num:348
medium pred: SELECT t1.举办单位性质 FROM 比赛 t1 INNER JOIN 学生参赛记录 t2 ON t1.比赛id = t2.参加比赛id INNER JOIN 比赛 t3 ON t2.参加比赛id = t3.比赛id WHERE t3.比赛id = '20220121' AND t2.学生id = 1
medium gold: select t2.单位性质 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id where t1.成绩 = "冠军"

eval_err_num:349
hard pred: SELECT t3.比赛名称 FROM 比赛 t1 INNER JOIN 学生参赛记录 t2 ON t1.比赛id = t2.参加比赛id INNER JOIN 比赛 t3 ON t2.参加比赛id = t3.比赛id WHERE t3.比赛id = '20220121' AND t1.举办单位性质 = '单位性质'
hard gold: select 名称 from 比赛 where 单位性质 = (select t2.单位性质 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id where t1.成绩 = "冠军")

eval_err_num:350
easy pred: SELECT COUNT(DISTINCT 比赛id) AS num_of_matches_使用了阿里天池这个平台 FROM 比赛 WHERE 比赛平台 = '阿里天池'
easy gold: select count(*) from 比赛 where 比赛平台 = "阿里天池"

easy pred: SELECT * FROM 参赛队伍 WHERE 队伍id = '579'
easy gold: select 名称 from 比赛 where 比赛平台 = "阿里天池"

eval_err_num:351
hard pred: SELECT 参赛队伍.队名 FROM 比赛 参赛队伍 JOIN 参赛学生 ON 参赛队伍.加入队伍id = 参赛学生.加入队伍id JOIN 学生参赛记录 ON 参赛学生.学生id = 学生参赛记录.学生id JOIN 比赛 ON 学生参赛记录.参加比赛id = 比赛.比赛id WHERE 比赛.比赛平台 = '阿里天池' AND 比赛.比赛方向 = '方向'
hard gold: select t2.名称,t3.队名 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id where t2.比赛平台 = "阿里天池"

eval_err_num:352
hard pred: SELECT 队伍参赛成绩.成绩 FROM 队伍参赛成绩 JOIN 比赛 ON 队伍参赛成绩.参加比赛id = 比赛.比赛id WHERE 比赛.比赛平台 = '阿里天池' AND 比赛.比赛方向 = '方向'
hard gold: select t2.名称,t3.队名,t1.成绩 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id where t2.比赛平台 = "阿里天池"

easy pred: SELECT * FROM 比赛 WHERE 名称 = '模式识别' AND 方向 = '学术'
easy gold: select 名称 from 比赛 where 方向 = "模式识别"

medium pred: SELECT 举办单位, 比赛平台 FROM 比赛 WHERE 比赛id = '2022-10-15' AND 单位性质 = '学术'
medium gold: select 举办单位, 比赛平台 from 比赛 where 方向 = "模式识别"

eval_err_num:353
extra pred: SELECT * FROM 参赛队伍 WHERE 加入队伍id IS NULL
extra gold: select T3.队名 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id JOIN 学生参赛记录 AS T4 ON T3.队伍id = T4.队伍id where T2.方向 = "模式识别" group by T3.队名 HAVING count(distinct T4.学生id) < 2

eval_err_num:354
extra pred: SELECT * FROM 参赛队伍 WHERE 加入队伍id IS NULL
extra gold: select T5.姓名 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id JOIN 学生参赛记录 AS T4 ON T3.队伍id = T4.队伍id JOIN 参赛学生 AS T5 ON T5.学生id = T4.学生id where T2.方向 = "模式识别" group by T3.队名 HAVING count(distinct T4.学生id) < 2

extra pred: SELECT 学生id FROM 参赛学生 WHERE 姓名 = '小明' AND 学校 = '清华大学'
extra gold: select T5.学校 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id JOIN 学生参赛记录 AS T4 ON T3.队伍id = T4.队伍id JOIN 参赛学生 AS T5 ON T5.学生id = T4.学生id where T2.方向 = "模式识别" group by T3.队名 HAVING count(distinct T4.学生id) < 2

eval_err_num:355
easy pred: SELECT 公司名, 上市股市 FROM "餐饮公司" WHERE 公司名 IN ('ABC餐饮', 'DEF餐饮', 'GHI餐饮')
easy gold: select 公司名 from 餐饮公司 where 上市股市 = "港股"

eval_err_num:356
hard pred: SELECT COUNT(*) FROM "餐饮公司城市连锁" WHERE 城市id IN (SELECT 城市id FROM "城市" WHERE 所属省份 = '省份名称' ORDER BY 城市id DESC LIMIT 10)
hard gold: select T2.公司名, sum(T1.分店数量) from 餐饮公司城市连锁 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id where T2.上市股市 = "港股" group by T2.公司名

eval_err_num:357
hard pred: SELECT 员工数量 FROM "餐饮公司城市连锁" WHERE 公司id IN (SELECT 公司id FROM "餐饮公司" WHERE 公司名 = '某餐饮公司' ORDER BY 公司id DESC LIMIT 1)
hard gold: select T2.公司名, sum(T1.员工数量) from 餐饮公司城市连锁 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id where T2.上市股市 = "港股" group by T2.公司名

eval_err_num:358
hard pred: SELECT 人均消费额 FROM "餐饮公司城市连锁" WHERE 公司id IN (SELECT 公司id FROM "餐饮公司" WHERE 公司名 = '某餐饮公司' ORDER BY 公司id DESC LIMIT 1)
hard gold: select T2.公司名, avg(T1.人均消费额) from 餐饮公司城市消费 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id where T2.上市股市 = "港股" group by T2.公司名

eval_err_num:359
extra pred: 以下是查询语句: SELECT t1.name AS 餐厅名, t1.所属省份, t1.餐饮收入, t1.同比增长, COUNT(*) AS 餐厅人气 FROM "城市" t1 INNER JOIN "餐饮公司城市消费" t2 ON t1.城市id = t2.城市id INNER JOIN "餐饮公司" t3 ON t2.公司id = t3.公司id WHERE t3.总部城市id = '成都' GROUP BY t1.name, t1.所属省份, t1.餐饮收入, t1.同比增长 ORDER BY COUNT(*) DESC LIMIT 1; 其中,“城市”表包含了“城市id”为外键的关联关系,“餐饮公司城市消费”表包含了“公司id”为外键的关联关系,“餐饮公司”表包含了“总部城市id”为外键的关联关系,“餐饮公司城市连锁”表包含了“公司id”为外键的关联关系。查询语句使用了GROUP BY和ORDER BY语句对结果进行排序和筛选,最后输出了人气最高的餐厅名称。
extra gold: select T3.公司名 from 餐饮公司城市消费 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T2.城市id = T3.总部城市id where T2.名称 = "成都" order by 人气 desc limit 1

eval_err_num:360
extra pred: 以下是查询语句: SELECT t1.食品类型 FROM "餐饮公司城市连锁" t1 INNER JOIN "餐饮公司城市消费" t2 ON t1.城市id = t2.城市id INNER JOIN "城市" t3 ON t2.公司id = t3.公司id AND t3.城市id = '北京' WHERE t3.总部城市id = '北京' GROUP BY t1.食品类型 HAVING COUNT(*) = 2; 其中,“餐饮公司城市连锁”表包含了“城市id”为外键的关联关系,“餐饮公司城市消费”表包含了“公司id”为外键的关联关系,“城市”表包含了“城市id”为外键的关联关系。查询语句使用了GROUP BY和HAVING语句对结果进行筛选和聚合,最后输出了火锅和快餐两种不同的食品类型。
extra gold: select T3.经营范围 from 餐饮公司城市消费 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T2.城市id = T3.总部城市id where T2.名称 = "成都" order by 人气 desc limit 1

eval_err_num:361
extra pred: 以下是查询语句: SELECT s.经营年数 FROM "餐饮公司城市消费" s INNER JOIN "城市" t ON s.城市id = t.城市id WHERE t.总部城市id = '成都' GROUP BY s.经营年数 ORDER BY s.经营年数 DESC LIMIT 1; 其中,“餐饮公司城市消费”表包含了“经营年数”列,“城市”表包含了“城市id”为外键的关联关系,“城市”表也包含了“城市id”为外键的关联关系。查询语句使用了GROUP BY和ORDER BY语句对结果进行排序和筛选,最后输出了成都火锅的经营年数。
extra gold: select T3.经营年数 from 餐饮公司城市消费 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T2.城市id = T3.总部城市id where T2.名称 = "成都" order by 人气 desc limit 1

eval_err_num:362
extra pred: 以下是查询语句: SELECT s.人均消费额 FROM "餐饮公司城市消费" s INNER JOIN "城市" t ON s.城市id = t.城市id WHERE t.总部城市id = '成都' GROUP BY s.人均消费额 HAVING COUNT(*) = (SELECT COUNT(*) FROM "餐饮公司城市连锁" c WHERE c.城市id = t.城市id AND c.公司id = t.公司id) ORDER BY s.人均消费额 DESC LIMIT 1; 其中,“餐饮公司城市消费”表包含了“人均消费额”列,“城市”表包含了“城市id”为外键的关联关系,“城市”表也包含了“城市id”为外键的关联关系。查询语句使用了GROUP BY和HAVING语句对结果进行筛选和聚合,最后输出了成都火锅的人均消费。
extra gold: select T1.人均消费额 from 餐饮公司城市消费 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T2.城市id = T3.总部城市id where T2.名称 = "成都" order by 人气 desc limit 1

eval_err_num:363
extra pred: SELECT t1.餐厅名, t1.分店数量 FROM "餐饮公司城市连锁" t1 INNER JOIN "餐饮公司城市消费" t2 ON t1.公司id = t2.公司id INNER JOIN "城市" t3 ON t1.城市id = t3.城市id WHERE t2.人气 = ( SELECT COUNT(*) FROM "餐饮公司城市消费" t4 WHERE t4.城市id = t3.城市id AND t4.人气 > t3.人气 ) GROUP BY t1.餐厅名, t1.分店数量 ORDER BY COUNT(*) DESC LIMIT 1
extra gold: select T3.公司名, T1.分店数量 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T2.城市id = T3.总部城市id where T2.名称 = "成都" order by 分店数量 desc limit 1

eval_err_num:364
extra pred: SELECT type, SUM(case when type = '城市' then 1 else 0 end) AS 城市类型, SUM(case when type = '餐饮公司' then 1 else 0 end) AS 餐饮公司类型, SUM(case when type = '餐饮公司城市消费' then 1 else 0 end) AS 餐饮公司城市消费类型, SUM(case when type = '餐饮公司城市连锁' then 1 else 0 end) AS 餐饮公司城市连锁类型 FROM "城市" c GROUP BY type
extra gold: select T3.经营范围 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T2.城市id = T3.总部城市id where T2.名称 = "成都" order by 分店数量 desc limit 1

eval_err_num:365
extra pred: SELECT t1.经营年份 FROM "餐饮公司城市连锁" t1 INNER JOIN "餐饮公司城市消费" t2 ON t1.公司id = t2.公司id INNER JOIN "城市" t3 ON t1.城市id = t3.城市id WHERE t2.经营年份 = ( SELECT 经营年份 FROM "餐饮公司城市消费" t4 WHERE t4.公司id = t2.公司id AND t4.经营年份 > t2.经营年份 ) GROUP BY t1.经营年份 ORDER BY COUNT(*) DESC LIMIT 1
extra gold: select T3.经营年数 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T2.城市id = T3.总部城市id where T2.名称 = "成都" order by 分店数量 desc limit 1

eval_err_num:366
extra pred: SELECT 股市的type, "餐饮公司城市连锁"."公司id" AS 公司在股市, "餐饮公司城市连锁"."城市id" AS 股市名称, "餐饮公司城市消费"."总消费额" AS 消费额, "餐饮公司城市消费"."人均消费额" AS 人均消费额, "餐饮公司城市消费"."人气" AS 人气, "餐饮公司城市消费"."排名" AS 排名, "城市"."name" AS 城市名称 FROM "餐饮公司城市连锁" t1 INNER JOIN "餐饮公司城市消费" t2 ON t1.公司id = t2.公司id INNER JOIN "股市" t3 ON t1."股市名称" = t3."type" WHERE t2."股市名称" = '股市名称' GROUP BY t3."type", t1."股市名称", t1."公司在股市", t1."城市id", t1."消费额", t1."人均消费额", t1."排名", t2."股市名称", t2."城市id", t2."消费额", t2."人均消费额", t2."人气", t3."name"
extra gold: select T3.上市股市 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T2.城市id = T3.总部城市id where T2.名称 = "成都" order by 分店数量 desc limit 1

eval_err_num:367
medium pred: SELECT t1.公司名称, t1.总部城市id, t1.所属集团, t1.上市股市, t1.经营范围, t1.经营年数, COUNT(DISTINCT t2.公司名称) AS 分店数量, COUNT(DISTINCT t2.总部城市id) AS 占地面积, COUNT(DISTINCT t2.餐位数量) AS 餐位数量, COUNT(DISTINCT t2.员工数量) AS 员工数量 FROM "餐饮公司" t1 INNER JOIN "城市" t2 ON t1.总部城市id = t2.城市id GROUP BY t1.公司名称, t1.总部城市id, t1.所属集团, t1.上市股市, t1.经营范围, t1.经营年数 HAVING COUNT(DISTINCT t2.公司名称) = (SELECT COUNT(DISTINCT 公司名称) FROM "城市" WHERE 城市id = t1.总部城市id) ORDER BY COUNT(DISTINCT 公司名称) DESC
medium gold: select 公司名 from 餐饮公司 order by 经营年数 desc limit 1

eval_err_num:368
medium pred: SELECT t1.公司名称, t1.经营范围, t1.经营内容 FROM "餐饮公司" t1 INNER JOIN "餐饮公司城市消费" t2 ON t1.公司id = t2.公司id AND t1.城市id = t2.城市id WHERE t2.公司名称 IN (SELECT 公司名称 FROM "餐饮公司城市连锁" WHERE 城市id = t1.城市id) GROUP BY t1.公司名称, t1.经营范围, t1.经营内容 HAVING COUNT(DISTINCT t2.公司名称) = (SELECT COUNT(DISTINCT 公司名称) FROM "餐饮公司城市连锁" WHERE 城市id = t1.城市id) ORDER BY COUNT(DISTINCT 公司名称) DESC
medium gold: select 经营范围 from 餐饮公司 order by 经营年数 desc limit 1

eval_err_num:369
extra pred: SELECT COUNT(DISTINCT t3.分店数量) AS 分店数量 FROM "餐饮公司城市连锁" t3 WHERE t3.城市id = (SELECT t4.城市id FROM "城市" t4 WHERE t4.名称 = '它') GROUP BY t3.分店数量 HAVING COUNT(DISTINCT t4.城市id) = (SELECT COUNT(DISTINCT 城市id) FROM "城市" t4 WHERE t4.名称 = '它') ORDER BY COUNT(DISTINCT 分店数量) DESC
extra gold: select sum(T1.分店数量) from 餐饮公司城市连锁 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id where T2.公司名 = (select T3.公司名 from 餐饮公司 AS T3 order by T3.经营年数 desc limit 1)

eval_err_num:370
extra pred: SELECT t1.总消费额, t1.人均消费额 FROM "餐饮公司城市消费" t1 INNER JOIN "餐饮公司城市连锁" t2 ON t1.城市id = t2.城市id GROUP BY t1.总消费额, t1.人均消费额 HAVING t1.人均消费额 >= (SELECT MAX(人均消费额) FROM "餐饮公司城市消费" WHERE 城市id = t2.城市id) ORDER BY t1.总消费额 DESC, t1.人均消费额 DESC
extra gold: select avg(T1.人均消费额) from 餐饮公司城市消费 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id where T2.公司名 = (select T3.公司名 from 餐饮公司 AS T3 order by T3.经营年数 desc limit 1)

eval_err_num:371
hard pred: SELECT * FROM "商家平台活动" WHERE "商家id" = ( SELECT "商家id" FROM "商家" WHERE "类型" = "外卖" ORDER BY "月售单数" DESC LIMIT 1 )
hard gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 优惠活动 like ("%新客%")

eval_err_num:372
hard pred: SELECT * FROM "商品" WHERE "商品name" = '咖啡' AND "价格" >= ?"起送价格"
hard gold: select T1.起送价格 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 优惠活动 like ("%新客%")

eval_err_num:373
hard pred: SELECT * FROM "商品" WHERE "商品name" = '咖啡' AND "价格" >= ?"配送费"
hard gold: select T1.配送费 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 优惠活动 like ("%新客%")

eval_err_num:374
hard pred: SELECT MAX( "价格" ) AS最小价格 FROM "商品" WHERE "商品name" = '咖啡'
hard gold: select T1.配送费 + T1.起送价格 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 优惠活动 like ("%新客%")

eval_err_num:375
medium pred: SELECT 商家.商家 text, 商家.商家 text, 平台.平台名 text FROM 商家 INNER JOIN 平台 ON 商家.商家id = 平台.平台id WHERE 商家.商家text = '商家' AND 平台.平台名 = '平台名' GROUP BY 商家.商家, 商家.商家 HAVING COUNT(DISTINCT 平台.平台名) = 1
medium gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T1.配送费 = "0"

eval_err_num:376
easy pred: SELECT 商家.商家 text, 商家.商家 text, 平台.平台名 text, s.评分 FROM 商家 INNER JOIN 平台 ON 商家.商家id = 平台.平台id INNER JOIN 评分 s ON 商家.商家id = s.商家id AND 平台.平台名 = s.平台名 WHERE 商家.商家text = '商家' AND 平台.平台名 = '平台名' GROUP BY 商家.商家, 商家.商家, 平台.平台名, s.评分 HAVING COUNT(DISTINCT 商家.商家, 商家.商家, 平台.平台名, s.评分) = (SELECT COUNT(DISTINCT 商家.商家, 商家.商家, 平台.平台名, s.评分) FROM 商家 INNER JOIN 平台 ON 商家.商家id = 平台.平台id INNER JOIN 评分 s ON 商家.商家id = s.商家id AND 平台.平台名 = s.平台名 WHERE 商家.商家text = '商家' AND 平台.平台名 = '平台名') + 1
easy gold: select 评分 from 商家平台活动 where 配送费 = "0"

medium pred: SELECT 平台.平台名 FROM 平台 WHERE 平台.市场占比 = 1
medium gold: select T2.平台名 from 商家平台活动 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id where T1.配送费 = "0"

medium pred: SELECT 平台.市场占比 FROM 平台 WHERE 平台.市场占比 = 1
medium gold: select T2.市场占比 from 商家平台活动 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id where T1.配送费 = "0"

eval_err_num:377
hard pred: SELECT 平台名, 平台市场占比, MAX(配送费) + MIN(配送费) AS 最低配送费用 FROM "商家平台活动" GROUP BY 平台名, 平台市场占比 ORDER BY 最低配送费用 DESC LIMIT 1
hard gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id order by T1.起送价格 + T1.配送费 limit 1

eval_err_num:378
medium pred: SELECT评分 FROM "商家平台活动" WHERE 商家id = ( SELECT 商家id FROM "商家" WHERE 类型 = '外卖' ORDER BY评分 DESC LIMIT 1 )
medium gold: select 评分 from 商家平台活动 order by 起送价格 + 配送费 limit 1

eval_err_num:379
hard pred: SELECT 食物 FROM "订单" WHERE 订单日期 >= '2022-01-01' AND 订单日期 <= '2022-02-18' LIMIT 1
hard gold: select T2.类型 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id order by T1.起送价格 + T1.配送费 limit 1

eval_err_num:380
medium pred: SELECT * FROM 奥运会交手记录 WHERE 运动队id = (SELECT id FROM 篮球运动队 WHERE 队名 = '美国男篮国家队') AND 比赛类型 = '奥运会'
medium gold: select T1.奥运会名称,T1.名次 from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where 队名 = "美国男篮国家队"

medium pred: SELECT 主教练 FROM 奥运会成绩 WHERE 年份 = '2022'
medium gold: select T1.奥运会名称,T1.主教练 from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where 队名 = "美国男篮国家队"

medium pred: SELECT 主教练 FROM 奥运会成绩 WHERE 年份 = '2022'
medium gold: select T2.现任主教练 from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where 队名 = "美国男篮国家队"

hard pred: SELECT * FROM 奥运会交手记录 WHERE 对手id = '13865'
hard gold: select T3.队名 from 奥运会交手记录 AS T1 JOIN 篮球运动队 AS T2 ON T1.球队id = T2.id JOIN 篮球运动队 AS T3 ON T1.对手id = T3.id where T2.队名 = "美国男篮国家队" and T1.奥运会 = "2016年里约奥运会" and T1.赛事类型 = "八分之一决赛"

eval_err_num:381
extra pred: SELECT 是否胜利 = 'Y', 比分 = '1:0' FROM 奥运会交手记录
extra gold: select T1.是否胜利,T1.比分 from 奥运会交手记录 AS T1 JOIN 篮球运动队 AS T2 ON T1.球队id = T2.id where T2.队名 = "美国男篮国家队" and T1.奥运会 = "2016年里约奥运会" and T1.赛事类型 = "八分之一决赛"

eval_err_num:382
hard pred: SELECT 篮球运动队.id as 运动队id, 篮球运动队.队名 as 队名, 篮球运动队.所属国家 as 所属国家, 篮球运动队.成立时间 as 成立时间, 现任主教练.text as 现任主教练 text, 现在世界排名.number as 现在世界排名 number, 奥运会成绩.运动队id as 比赛成绩, 奥运会成绩.年份 as 年份, 奥运会成绩.奥运会名称 as 奥运会名称, 奥运会成绩.名次 as 名次, 奥运会交手记录.对手id as 对手id, 奥运会交手记录.比分 as 比分, 奥运会交手记录.是否胜利 as 是否胜利, 奥运会交手记录.赛事类型 as 赛事类型, 奥运会交手记录.年份 as 年份, 奥运会交手记录.奥运会 as 奥运会, 奥运会交手记录.比赛日期 as 比赛日期, 奥运会交手记录.对手id as 对手id FROM 篮球运动队, 奥运会成绩, 奥运会交手记录 WHERE 运动队id in (SELECT id FROM 奥运会交手记录 WHERE 比赛日期=2012-08-16 AND 对手id=运动队.id AND 是否胜利=0)
hard gold: select T2.队名,T3.队名 from 奥运会交手记录 AS T1 JOIN 篮球运动队 AS T2 ON T1.对手id = T2.id JOIN 篮球运动队 AS T3 ON T1.球队id = T3.id where T1.奥运会 = "2012年伦敦奥运会" and T1.赛事类型 = "半决赛"

eval_err_num:383
hard pred: SELECT 篮球运动队.id as 运动队id, 篮球运动队.队名 as 队名, 篮球运动队.所属国家 as 所属国家, 篮球运动队.成立时间 as 成立时间, 现任主教练.text as 现任主教练 text, 现在世界排名.number as 现在世界排名 number, 奥运会成绩.运动队id as 比赛成绩, 奥运会成绩.年份 as 年份, 奥运会成绩.奥运会名称 as 奥运会名称, 奥运会成绩.名次 as 名次, 奥运会交手记录.对手id as 对手id, 奥运会交手记录.比分 as 比分, 奥运会交手记录.是否胜利 as 是否胜利, 奥运会交手记录.赛事类型 as 赛事类型, 奥运会交手记录.年份 as 年份, 奥运会交手记录.奥运会 as 奥运会, 奥运会交手记录.比赛日期 as 比赛日期, 奥运会交手记录.对手id as 对手id FROM 篮球运动队, 奥运会成绩, 奥运会交手记录 WHERE 运动队id in (SELECT id FROM 奥运会交手记录 WHERE 比赛日期=2012-08-16 AND 对手id=运动队.id AND 是否胜利=1)
hard gold: select T2.队名,T3.队名 from 奥运会交手记录 AS T1 JOIN 篮球运动队 AS T2 ON T1.对手id = T2.id JOIN 篮球运动队 AS T3 ON T1.球队id = T3.id where T1.奥运会 = "2012年伦敦奥运会" and T1.赛事类型 = "决赛"

eval_err_num:384
medium pred: SELECT DATEADD(day, -1, GETDATE()) AS决赛日期 FROM 奥运会成绩 WHERE 运动队id in (SELECT id FROM 奥运会交手记录 WHERE 比赛日期=2012-08-16 AND 对手id=运动队.id AND 是否胜利=1)
medium gold: select T1.比赛日期 from 奥运会交手记录 AS T1 JOIN 篮球运动队 AS T2 ON T1.对手id = T2.id where T1.奥运会 = "2012年伦敦奥运会" and T1.赛事类型 = "决赛"

eval_err_num:385
medium pred: SELECT 主教练 FROM 奥运会交手记录 WHERE 年份 = 2016 AND 对手id = 123456
medium gold: select T1.主教练 from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where T1.奥运会名称 = "2016年巴西奥运会" and T2.队名 = "阿根廷男篮国家队"

eval_err_num:386
easy pred: SELECT 主教练 FROM 奥运会交手记录 WHERE 年份 = 2016 AND 对手id = 123456 AND 主教练不等于 '其他人'
easy gold: select 现任主教练 from 篮球运动队 where 队名 = "阿根廷男篮国家队"

easy pred: SELECT 现在世界排名 FROM 篮球运动队 WHERE id = '123456'
easy gold: select 现在世界排名 from 篮球运动队 where 队名 = "阿根廷男篮国家队"

hard pred: SELECT 队名, 成立时间 FROM 篮球运动队 WHERE 成立时间 = (SELECT 成立时间 FROM 篮球运动队 WHERE id = 1)
hard gold: select 队名 from 篮球运动队 where 成立时间 = (select min(成立时间) from 篮球运动队)

eval_err_num:387
extra pred: SELECT 所属国家 FROM 篮球运动队 WHERE 世界排名 = (SELECT 世界排名 FROM 篮球运动队 WHERE id = 1)
extra gold: select 所属国家,现在世界排名 from 篮球运动队 where 成立时间 = (select min(成立时间) from 篮球运动队)

eval_err_num:388
hard pred: SELECT现任主教练 FROM 篮球运动队 WHERE id = (SELECT id FROM 篮球运动队 WHERE id = 1)
hard gold: select 现任主教练 from 篮球运动队 where 成立时间 = (select min(成立时间) from 篮球运动队)

eval_err_num:389
extra pred: SELECT 是否参加过奥运会 FROM 奥运会交手记录 WHERE 比赛日期 = (SELECT 比赛日期 FROM 奥运会交手记录 WHERE 对手id = (SELECT对手id FROM 篮球运动队 WHERE id = (SELECT id FROM 篮球运动队 WHERE id = 1)))
extra gold: select T1.奥运会名称 from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where T2.成立时间 = (select min(成立时间) from 篮球运动队)

eval_err_num:390
easy pred: SELECT * FROM "音箱产品" WHERE "音箱id" IN ( SELECT "音箱id" FROM "产品销售" WHERE "产品销售.季度" = "2022" GROUP BY "音箱id" HAVING COUNT(*) > 0 )
easy gold: select 名称 from 音箱产品

eval_err_num:391
medium pred: SELECT * FROM "音箱产品" WHERE "音箱产品.名称" = '智能音箱' AND "公司.id" = '所属公司id'
medium gold: select T1.名称 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id where T2.所属国家 = "中国"

eval_err_num:392
extra pred: SELECT * FROM "音箱产品" ORDER BY "音箱产品.排名" DESC LIMIT 10
extra gold: select T1.名称 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id where T2.所属国家 = "中国" order by T1.排名 limit 1

eval_err_num:393
extra pred: SELECT 产品名称 FROM "音箱产品" WHERE 售价 >= (SELECT 平均售价 FROM "产品销售" WHERE 季度 = '2022' AND 销售量 >= 10000)
extra gold: select T2.名称 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where T1.销售量 = (select max(销售量) from 产品销售)

eval_err_num:394
extra pred: SELECT 产品名称 FROM "音箱产品" WHERE 上升名次 >= (SELECT MAX(上升名次) FROM "产品销售" WHERE 产品id = '产品名称' AND 季度 = '2022' AND 销售量 >= 10000)
extra gold: select T2.名称 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where T1.销售量 = (select max(销售量) from 产品销售) order by T1.销售量增长 desc limit 1

eval_err_num:395
extra pred: SELECT (SELECT COUNT(*) FROM "产品销售" WHERE 产品id = '产品名称' AND 季度 = '2022' AND 销售量 >= 10000) AS 销售量增长, 产品名称 FROM "音箱产品" WHERE 上升名次 >= (SELECT MAX(上升名次) FROM "产品销售" WHERE 产品id = '产品名称' AND 季度 = '2022' AND 销售量 >= 10000)
extra gold: select T1.销售量增长 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where T1.销售量 = (select max(销售量) from 产品销售) order by T1.销售量增长 desc limit 1

eval_err_num:396
extra pred: SELECT (SELECT COUNT(*) FROM "产品销售" WHERE 产品id = '产品名称' AND 季度 = '2022' AND 销售量 >= 10000) AS 销售量增长, 产品名称, (SELECT MAX(上升名次) FROM "音箱产品" WHERE 上升名次 >= (SELECT MAX(上升名次) FROM "产品销售" WHERE 产品id = '产品名称' AND 季度 = '2022' AND 销售量 >= 10000)) AS 当前上升名次 FROM "音箱产品" WHERE 上升名次 >= (SELECT MAX(上升名次) FROM "产品销售" WHERE 产品id = '产品名称' AND 季度 = '2022' AND 销售量 >= 10000)
extra gold: select T2.排名 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where T1.销售量 = (select max(销售量) from 产品销售) order by T1.销售量增长 desc limit 1

eval_err_num:397
extra pred: SELECT 公司.id AS 公司名称, 公司.name AS 公司名称, 音箱产品.产品名称, 音箱产品.上升名次 FROM "公司" AS 公司 INNER JOIN "音箱产品" AS 音箱产品 ON 公司.id = 音箱产品.所属公司id WHERE 音箱产品.上升名次 >= (SELECT MAX(上升名次) FROM "产品销售" WHERE 产品id = '产品名称' AND 季度 = '2022' AND 销售量 >= 10000)
extra gold: select T3.名称 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id JOIN 公司 AS T3 ON T2.所属公司id = T3.id where T1.销售量 = (select max(销售量) from 产品销售) order by T1.销售量增长 desc limit 1

hard pred: SELECT 音箱id FROM 音箱产品 WHERE 售价 < 1000
hard gold: select 名称 from 音箱产品 where 售价 = (select min(售价) from 音箱产品)

eval_err_num:398
extra pred: SELECT COUNT(DISTINCT 购买者id) FROM 产品销售 WHERE 产品名称 = '音箱'
extra gold: select T1.销售量 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where T2.售价 = (select min(售价) from 音箱产品)

eval_err_num:399
hard pred: SELECT COUNT(DISTINCT 购买者id) as 排名 FROM 产品销售 WHERE 产品名称 = '音箱'
hard gold: select 排名 from 音箱产品 where 售价 = (select min(售价) from 音箱产品)

eval_err_num:400
extra pred: SELECT 公司名称 FROM 公司 WHERE 公司名称 = '音箱产品'
extra gold: select T2.名称 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id where T1.售价 = (select min(售价) from 音箱产品)

eval_err_num:401
medium pred: SELECT * FROM "餐厅" WHERE "餐厅"."餐厅名称" = '快餐餐厅'
medium gold: select 商家 from 商家 where 类型 like ("%快餐%")

eval_err_num:402
extra pred: SELECT评分, '好评' as优先_class FROM "商家平台活动" ORDER BY评分 DESC
extra gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T2.类型 like ("%快餐%") order by T1.评分 desc

eval_err_num:403
extra pred: SELECT "商家平台活动"."月售单数" as销量, "商家平台活动"."评分" as 最高评分 FROM "商家平台活动" WHERE "商家平台活动"."平台id" = '平台1' ORDER BY "商家平台活动"."月售单数" DESC, "商家平台活动"."评分" DESC
extra gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T2.类型 like ("%快餐%") order by T1.月售单数 desc limit 1

eval_err_num:404
easy pred: SELECT * FROM "MVP记录" WHERE "球员id" IN ( SELECT "球员id" FROM "篮球运动员" WHERE "获得球队" = 'NBA总冠军' AND "毕业院校" = '清华大学' )
easy gold: select distinct T2.中文名 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id

eval_err_num:405
medium pred: SELECT 球员id, COUNT(*) as 次数 FROM "MVP记录" GROUP BY "球员id" ORDER BY 次数 DESC LIMIT 10
medium gold: select T2.中文名, count(*) from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id group by T2.中文名

eval_err_num:406
hard pred: SELECT 赛季, "球队id" FROM "NBA总冠军" WHERE 赛季 = '2016-2017' AND "球队id" IN ( SELECT "球队id" FROM "球队" WHERE "中文队名" = 'NBA西部联盟勇士队' AND "夺冠次数" = 1 )
hard gold: select T1.赛季, T3.中文队名 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id JOIN 球队 AS T3 ON T1.所属球队 = T3.球队id where T2.中文名 = "库里"

eval_err_num:407
extra pred: SELECT 赛季, COUNT(*) as 次数 FROM "NBA总冠军" WHERE 赛季 = '2016-2017' AND "球队id" IN ( SELECT "球队id" FROM "球队" WHERE "中文队名" = 'NBA西部联盟勇士队' AND "夺冠次数" = 1 ) GROUP BY 赛季 ORDER BY 次数 DESC LIMIT 1
extra gold: select count(*) from NBA总冠军 AS T3 where T3.赛季 in (select T1.赛季 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id where T2.中文名 = "库里") AND T3.球队id in (select T4.所属球队 from MVP记录 AS T4 JOIN 篮球运动员 AS T5 ON T4.球员id = T5.球员id where T5.中文名 = "库里")

eval_err_num:408
extra pred: SELECT "总教练" FROM "NBA总冠军" WHERE "球队id" = '2016-2017' AND "总教练" IN ( SELECT "总教练" FROM "球队" WHERE "中文队名" = 'NBA西部联盟勇士队' AND "夺冠次数" = 1 )
extra gold: select T3.总教练 from NBA总冠军 AS T3 where T3.赛季 in (select T1.赛季 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id where T2.中文名 = "库里") AND T3.球队id in (select T4.所属球队 from MVP记录 AS T4 JOIN 篮球运动员 AS T5 ON T4.球员id = T5.球员id where T5.中文名 = "库里")

eval_err_num:409
extra pred: SELECT t1.球队id FROM "球队" t1 INNER JOIN "篮球运动员" t2 ON t1.球队id = t2.球队id INNER JOIN "NBA总冠军" t3 ON t1.球队id = t3.球队id WHERE t2.球员id IN (SELECT 球员id FROM "MVP记录" WHERE 赛季 = (SELECT 赛季 FROM "NBA总冠军" WHERE 球队id = (SELECT 球队id FROM "球队" WHERE 中文队名 = 'NBA China' ORDER BY 夺冠次数 DESC LIMIT 1)) AND 所属球队 = (SELECT 球队id FROM "MVP记录" WHERE 赛季 = (SELECT 赛季 FROM "NBA总冠军" WHERE 球队id = (SELECT 球队id FROM "球队" WHERE 中文队名 = 'NBA China' ORDER BY 夺冠次数 DESC LIMIT 1)) AND 所属球队 = (SELECT 球队id FROM "球队" WHERE 中文队名 = 'NBA China' ORDER BY 夺冠次数 DESC LIMIT 1)) AND 国籍 = '中国') GROUP BY t1.球队id ORDER BY count(DISTINCT t2.球员id) DESC
extra gold: select T2.毕业院校 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id group by T2.毕业院校 order by count(distinct T2.球员id) desc limit 1

eval_err_num:410
extra pred: SELECT t1.球队id FROM "球队" t1 INNER JOIN "篮球运动员" t2 ON t1.球队id = t2.球队id INNER JOIN "NBA总冠军" t3 ON t1.球队id = t3.球队id WHERE t2.球员id IN (SELECT 球员id FROM "MVP记录" WHERE 赛季 = (SELECT 赛季 FROM "NBA总冠军" WHERE 球队id = (SELECT 球队id FROM "球队" WHERE 中文队名 = 'NBA China' ORDER BY 夺冠次数 DESC LIMIT 1)) AND 所属球队 = (SELECT 球队id FROM "MVP记录" WHERE 赛季 = (SELECT 赛季 FROM "NBA总冠军" WHERE 球队id = (SELECT 球队id FROM "球队" WHERE 中文队名 = 'NBA China' ORDER BY 夺冠次数 DESC LIMIT 1)) AND 所属球队 = (SELECT 球队id FROM "球队" WHERE 中文队名 = 'NBA China' ORDER BY 夺冠次数 DESC LIMIT 1)) AND 国籍 = '中国') GROUP BY t1.球队id ORDER BY count(DISTINCT t2.球员id) DESC
extra gold: select 毕业院校 from 篮球运动员 where 是否状元 = "是" group by 毕业院校 order by count(*) desc limit 1

eval_err_num:411
medium pred: SELECT t1.球队id FROM "球队" t1 INNER JOIN "篮球运动员" t2 ON t1.球队id = t2.球队id INNER JOIN "NBA总冠军" t3 ON t1.球队id = t3.球队id WHERE t2.球员id IN (SELECT 球员id FROM "篮球运动员" WHERE 姓名 = 'X' AND 毕业院校 = '肯塔基大学' AND 球衣号码 = '12' AND 参加选秀年份 = 2019 AND 是否状元 = 'Y') AND 所属球队 = (SELECT 球队id FROM "NBA总冠军" WHERE 赛季 = (SELECT 赛季 FROM "球队" WHERE 中文队名 = 'NBA China' ORDER BY 夺冠次数 DESC LIMIT 1)) AND 国籍 = '美国' GROUP BY t1.球队id ORDER BY count(DISTINCT t2.球员id) DESC
medium gold: select count(*) from 篮球运动员 where 是否状元 = "是" AND 毕业院校 like "杜克%"

eval_err_num:412
hard pred: SELECT * FROM 外卖软件 WHERE 商家ID = '商家' AND 平台ID = '平台' AND 商品名称 = '吉野家的关东煮'
hard gold: select T2.平台名 from 商家平台活动 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T1.商家id = T3.商家id where T3.商家 = "吉野家"

eval_err_num:413
hard pred: SELECT评分,月售单数 FROM "商家平台活动" WHERE 商家ID = '商家' AND 平台ID = '平台' AND 优惠活动 = '优惠活动' AND 配送费 = '配送费' AND 起送价格 = '起送价格'
hard gold: select T2.平台名, T1.评分, T1.月售单数 from 商家平台活动 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T1.商家id = T3.商家id where T3.商家 = "吉野家"

eval_err_num:414
hard pred: SELECT评分,月售单数,配送费 FROM "商家平台活动" WHERE 商家ID = '商家' AND 平台ID = '平台' AND 优惠活动 = '优惠活动' AND 配送费 = '配送费' AND 起送价格 = '起送价格'
hard gold: select T2.平台名, T1.配送费 from 商家平台活动 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T1.商家id = T3.商家id where T3.商家 = "吉野家"

eval_err_num:415
medium pred: SELECT * FROM "商家平台活动" WHERE "商家id" = ( SELECT "商家id" FROM "商家" WHERE "类型" = '商家' ORDER BY "评分" DESC LIMIT 1 )
medium gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T1.起送价格 < 20

eval_err_num:416
hard pred: SELECT COUNT(*) FROM "平台" WHERE "市场占比" > 0.01 GROUP BY "平台"
hard gold: select count(T2.商家) from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T1.起送价格 < 20 and T2.类型 like ("%快餐%")

eval_err_num:417
extra pred: SELECT * FROM "商家平台活动" ORDER BY "评分" DESC LIMIT 1
extra gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T1.起送价格 < 20 and T2.类型 like ("%快餐%") order by T1.评分

eval_err_num:418
extra pred: SELECT "配送费", "起送价格" FROM "商家平台活动" ORDER BY "配送费" DESC, "起送价格" DESC LIMIT 1
extra gold: select T2.商家, T1.配送费 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T1.起送价格 < 20 and T2.类型 like ("%快餐%") order by T1.评分

eval_err_num:419
medium pred: SELECT t1.平台名, t1.市场占比 FROM 平台 t1 INNER JOIN "商家平台活动" t2 ON t1.平台id = t2.平台id AND t1.市场占比 >= t2.市场占比 GROUP BY t1.平台名 ORDER BY t1.市场占比 DESC LIMIT 1
medium gold: select 平台名 from 平台 order by 市场占比 desc limit 1

eval_err_num:420
medium pred: SELECT t1.平台名, t1.市场占比 FROM 平台 t1 INNER JOIN "商家平台活动" t2 ON t1.平台id = t2.平台id AND t1.市场占比 <= t2.市场占比 GROUP BY t1.平台名 ORDER BY t1.市场占比 DESC LIMIT 1
medium gold: select 平台名 from 平台 order by 市场占比 limit 1

eval_err_num:421
extra pred: SELECT t1.主食, t2.菜品 FROM 平台 t1 INNER JOIN 商家平台活动 t2 ON t1.平台id = t2.平台id AND t1.优惠活动 = '满减' INNER JOIN 商家 t3 ON t2.商家id = t3.商家id AND t2.平台id = t3.平台id WHERE t1.平台id = '平台1' AND t2.平台id = '平台2'
extra gold: select T3.商家 from 商家平台活动 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T1.商家id = T3.商家id where T2.平台名 = (select 平台名 from 平台 order by 市场占比 desc limit 1) or T2.平台名 = (select 平台名 from 平台 order by 市场占比 limit 1)

eval_err_num:422
extra pred: SELECT 优惠活动, 配送费 FROM "商家平台活动" WHERE 配送费 = ( SELECT MAX(配送费) FROM "商家平台活动" WHERE 商家id = '商家1' AND 平台id = '平台1' ) OR 配送费 = ( SELECT MAX(配送费) FROM "商家平台活动" WHERE 商家id = '商家2' AND 平台id = '平台2' )
extra gold: select T3.商家, T1.优惠活动 from 商家平台活动 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T1.商家id = T3.商家id where T2.平台名 = (select 平台名 from 平台 order by 市场占比 desc limit 1) or T2.平台名 = (select 平台名 from 平台 order by 市场占比 limit 1)

eval_err_num:423
medium pred: SELECT A.Name, A.登陆地点, A.登陆时间, A.登陆强度, A.死亡人数, A.经济损失 FROM "台风影响的中国省份" A INNER JOIN "台风影响的国家" B ON A.台风id = B.台风id WHERE B.经济损失 = ( SELECT MAX(经济损失) FROM "台风影响的国家" C WHERE C.台风id = B.台风id )
medium gold: select 名称 from 台风 order by 经济损失 desc limit 1

eval_err_num:424
medium pred: SELECT A.Name, A.登陆地点, A.登陆时间, A.登陆强度, A.死亡人数, A.经济损失 FROM "台风影响的中国省份" A INNER JOIN "台风影响的国家" B ON A.台风id = B.台风id WHERE B.死亡人数 > 0
medium gold: select 死亡人数 from 台风 order by 经济损失 desc limit 1

eval_err_num:425
extra pred: SELECT a.国家 FROM "台风影响的国家" a INNER JOIN "台风影响的中国省份" b ON a.台风id = b.台风id WHERE b.省份 = '中国'
extra gold: select T1.国家 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T2.名称 = (select T3.名称 from 台风 AS T3 order by T3.经济损失 desc limit 1)

eval_err_num:426
extra pred: SELECT a.经济损失 FROM "台风影响的国家" a INNER JOIN "台风影响的国家" b ON a.台风id = b.台风id WHERE b.经济损失 > a.经济损失
extra gold: select T1.国家, T1.经济损失 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T2.名称 = (select T3.名称 from 台风 AS T3 order by T3.经济损失 desc limit 1)

eval_err_num:427
extra pred: SELECT a.省份, b.登陆强度, b.登陆时间, b.登陆地点, c.死亡人数, d.经济损失 FROM "台风影响的中国省份" a INNER JOIN "台风影响的国家" b ON a.台风id = b.台风id INNER JOIN "台风" c ON b.台风id = c.台风id INNER JOIN "台风影响的国家" d ON c.台风id = d.台风id WHERE d.经济损失 > 0 AND a.省份 = '中国' AND b.死亡人数 > 0 AND b.经济损失 > 0
extra gold: select T1.省份, T1.死亡人数 + T1.失踪人数 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T2.名称 = (select T3.名称 from 台风 AS T3 order by T3.经济损失 desc limit 1)

eval_err_num:428
medium pred: SELECT COUNT(DISTINCT "台风id") AS "广东省台风次数" FROM "台风影响的中国省份"
medium gold: select count(*) from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T1.省份 = "广东" AND T2.登陆时间 > 1949

eval_err_num:429
medium pred: SELECT SUM(CASE WHEN "死亡人数" > 0 THEN "死亡人数" ELSE 0 END) AS "人员伤亡", SUM(CASE WHEN "失踪人数" > 0 THEN "失踪人数" ELSE 0 END) AS "人员伤亡" FROM "台风影响的中国省份"
medium gold: select sum(T1.死亡人数 + T1.失踪人数) from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T1.省份 = "广东" AND T2.登陆时间 > 1949

eval_err_num:430
extra pred: SELECT SELECT COUNT(*) FROM "台风影响的国家" WHERE "台风id" IN ( SELECT "台风id" FROM "台风影响的中国省份" GROUP BY "台风id" HAVING COUNT(*) > 1 ) AS "哪一次台风造成最多" FROM "台风影响的国家"
extra gold: select T2.名称 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T1.省份 = "广东" AND T2.登陆时间 > 1949 order by T1.死亡人数 + T1.失踪人数 desc limit 1

eval_err_num:431
medium pred: SELECT SELECT COUNT(*) FROM "台风影响的国家" WHERE "台风id" IN ( SELECT "台风id" FROM "台风影响的中国省份" GROUP BY "台风id" HAVING COUNT(*) > 1 ) AS "玛琪当时在全球范围内造成的经济损失" FROM "台风影响的国家"
medium gold: select 经济损失 from 台风 where 名称 like "玛琪%"

eval_err_num:432
hard pred: SELECT "国家" AS "影响国家", COUNT(*) FROM "台风影响的国家" WHERE "台风id" IN ( SELECT "台风id" FROM "台风影响的中国省份" GROUP BY "台风id" HAVING COUNT(*) > 1 ) GROUP BY "国家" HAVING COUNT(*) > 0
hard gold: select T1.国家 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T2.名称 like "玛琪%" AND T1.国家 != "中国"

eval_err_num:433
hard pred: SELECT COUNT(*) FROM "台风影响的国家" WHERE "台风id" IN ( SELECT "台风id" FROM "台风影响的中国省份" GROUP BY "台风id" HAVING COUNT(*) > 1 ) GROUP BY "影响国家" HAVING COUNT(*) > 0
hard gold: select sum(T1.经济损失) from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T2.名称 like "玛琪%" AND T1.国家 != "中国"

eval_err_num:434
extra pred: SELECT 音箱产品.名称, SUM(销售数量) AS 平均销售量 FROM "产品销售" AS 产品销售 INNER JOIN "音箱产品" AS 音箱产品 ON 产品销售.音箱id = 音箱产品.音箱id GROUP BY 音箱产品.名称 ORDER BY 平均销售量 DESC LIMIT 1
extra gold: select T2.名称 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id group by T2.名称 order by avg(T1.销售量) desc limit 1

eval_err_num:435
extra pred: SELECT 公司.名称 FROM "公司" AS 公司 WHERE 公司.id = ( SELECT id FROM "音箱产品" AS 音箱产品 WHERE 音箱产品.名称 = '音箱' ORDER BY 排名 DESC LIMIT 1 )
extra gold: select T3.名称 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id JOIN 公司 AS T3 ON T2.所属公司id = T3.id group by T2.名称 order by avg(T1.销售量) desc limit 1

eval_err_num:436
extra pred: SELECT 音箱产品.售价 FROM "音箱产品" AS 音箱产品 INNER JOIN "产品销售" AS 产品销售 ON 产品销售.音箱id = 音箱产品.音箱id WHERE 产品名称 = '苹果' GROUP BY 音箱产品.售价 HAVING COUNT(DISTINCT 产品销售.产品id) = 1
extra gold: select T2.售价 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id group by T2.名称 order by avg(T1.销售量) desc limit 1

eval_err_num:437
hard pred: SELECT 音箱产品.名称 FROM "音箱产品" AS 音箱产品 INNER JOIN "产品销售" AS 产品销售 ON 产品销售.音箱id = 音箱产品.音箱id WHERE 产品名称 != '苹果' ORDER BY 音箱产品.售价 LIMIT 1
hard gold: select T4.名称 from 音箱产品 AS T4 where T4.售价 < (select T2.售价 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id group by T2.名称 order by avg(T1.销售量) desc limit 1)

eval_err_num:438
hard pred: SELECT COUNT(*) AS num_of_智能音箱 from "音箱产品"
hard gold: select T1.名称 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id where T2.名称 like "百度"

eval_err_num:439
extra pred: SELECT (SELECT COUNT(*) FROM "产品销售" WHERE "产品id" IN (SELECT "音箱id" FROM "音箱产品")) AS sales, (SELECT SUM(销售量) FROM "产品销售" WHERE "产品id" IN (SELECT "音箱id" FROM "音箱产品")) AS growth FROM "公司" WHERE "id" = 1
extra gold: select T1.名称, T3.销售量 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id JOIN 产品销售 AS T3 ON T1.音箱id = T3.产品id where T2.名称 like "百度" AND T3.季度 = 1

eval_err_num:440
extra pred: SELECT (SELECT COUNT(*) FROM "产品销售" WHERE "产品id" IN (SELECT "音箱id" FROM "音箱产品")) - (SELECT COUNT(*) FROM "产品销售" WHERE "产品id" IN (SELECT "音箱id" FROM "音箱产品")) / (SELECT COUNT(*) FROM "产品销售" WHERE "产品id" IN (SELECT "音箱id" FROM "音箱产品")) × 100 AS增长率 FROM "公司"
extra gold: select T1.名称, T3.销售量增长 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id JOIN 产品销售 AS T3 ON T1.音箱id = T3.产品id where T2.名称 like "百度" AND T3.季度 = 1

eval_err_num:441
extra pred: SELECT 价 FROM "音箱产品" WHERE (SELECT COUNT(*) FROM "产品销售" WHERE "产品id" IN (SELECT "音箱id" FROM "音箱产品")) = (SELECT COUNT(*) FROM "产品销售" WHERE "产品id" IN (SELECT "音箱id" FROM "音箱产品"))
extra gold: select T1.名称 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id where T2.名称 like "百度" order by T1.售价 asc limit 1

eval_err_num:442
easy pred: SELECT SUM(price) AS均价 FROM "音箱产品" WHERE name = '智能音箱'
easy gold: select avg(售价) from 音箱产品

eval_err_num:443
easy pred: SELECT * FROM "音箱产品" WHERE price < 200
easy gold: select 名称 from 音箱产品 where 售价 < 200

eval_err_num:444
medium pred: SELECT name, price FROM "音箱产品"
medium gold: select 名称, 售价 from 音箱产品 where 售价 < 200

eval_err_num:445
extra pred: SELECT (SELECT COUNT(*) FROM "产品销售" WHERE季度 = 1) AS 前三季度销售量, (SELECT COUNT(*) FROM "产品销售" WHERE季度 = 2) AS 前三季度销售量, (SELECT COUNT(*) FROM "产品销售" WHERE季度 = 3) AS 前三季度销售量
extra gold: select T2.名称, sum(T1.销售量) from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where T2.名称 in (select T4.名称 from 音箱产品 AS T4 where T4.售价 < 200) AND T1.季度 <= 3 GROUP BY T2.名称

easy pred: SELECT 型号 FROM 电视机型号 WHERE 型号 = 'LED32G_W61'
easy gold: select 型号 from 电视机型号 where 产品定位 = "小户型优选"

medium pred: SELECT 屏幕尺寸, 屏幕比例, 分辨率 FROM 电视机型号 WHERE 型号 = 'LED32G_W61'
medium gold: select 屏幕尺寸, 屏幕比例,分辨率 from 电视机型号 where 产品定位 = "小户型优选"

eval_err_num:446
easy pred: SELECT 价格 FROM 电视机平台售卖 WHERE 售卖量 > 0 and 售价 >= 'XXXXX'
easy gold: select 定价 from 电视机型号 where 产品定位 = "小户型优选"

eval_err_num:447
hard pred: SELECT 型号, MAX(定价) AS 最高价格 FROM 电视机平台售卖 GROUP BY 型号 ORDER BY MAX(定价) DESC
hard gold: select 型号 from 电视机型号 where 定价 = (select max(定价) from 电视机型号)

eval_err_num:448
hard pred: SELECT 定价 AS 当前价格 FROM 电视机平台售卖 WHERE 型号 IN ( SELECT 型号 FROM 电视机型号 ORDER BY 定价 DESC LIMIT 1 )
hard gold: select 定价 from 电视机型号 where 定价 = (select max(定价) from 电视机型号)

eval_err_num:449
extra pred: SELECT 型号, SIZE, WIDTH, HEIGHT, DEPTH, BRIGHTNESS, Contrast, COLOR FROM 电视机平台售卖 WHERE 定价 IN ( SELECT 定价 FROM 电视机平台售卖 ORDER BY 定价 DESC LIMIT 1 )
extra gold: select 屏幕尺寸,屏幕比例,分辨率 from 电视机型号 where 定价 = (select max(定价) from 电视机型号)

eval_err_num:450
medium pred: SELECT date(FROM_UNIXTIME(看电视的时间)) AS 每天时间, 电视销量 * 观看电视日平均用时 / 电视机售卖量 AS 看电视时长 FROM 电视机平台售卖 WHERE 型号id IN (SELECT 型号id FROM 电视机型号) AND 平台 = '电视'
medium gold: select 省份,观看电视日平均用时 from 各城市电视机销量

eval_err_num:451
easy pred: SELECT 省份, 电视机售卖量, 观看电视日平均用时, (观看电视日平均用时 / 电视机售卖量) AS 售卖量比例 FROM 各城市电视机销量 WHERE 城市 = '陕西'
easy gold: select 电视机售卖量 from 各城市电视机销量 where 省份 = "陕西"

easy pred: SELECT 品牌名, 公司, 国家, 市场份额 FROM 电视机品牌 WHERE 品牌id IN (SELECT 品牌id FROM 电视机品牌) AND 品牌名 NOT IN (SELECT 品牌名 FROM 电视机品牌 WHERE 公司 = '中国')
easy gold: select 品牌名 from 电视机品牌

eval_err_num:452
medium pred: SELECT 国家, 品牌名 FROM 电视机品牌 WHERE 品牌id IN (SELECT 品牌id FROM 电视机品牌) AND 国家 NOT IN (SELECT 国家 FROM 国家和地区)
medium gold: select 品牌名,国家 from 电视机品牌

eval_err_num:453
medium pred: SELECT 型号 FROM 电视机平台售卖 WHERE 平台 = '拼多多' AND 当前售价 >= ?
medium gold: select T2.型号 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where 平台 = "拼多多"

eval_err_num:454
medium pred: SELECT 型号, MAX(当前售价) AS 活动价 FROM 电视机平台售卖 GROUP BY 型号
medium gold: select T1.当前售价 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where 平台 = "拼多多"

eval_err_num:455
medium pred: SELECT * FROM 电视机平台售卖 WHERE 当前售价 = ( SELECT MIN(当前售价) FROM 电视机平台售卖 WHERE 平台 = '拼多多' AND 型号 = ? )
medium gold: select T1.当前售价,T1.最低价格 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where 平台 = "拼多多"

eval_err_num:456
easy pred: SELECT 型号 FROM 电视机平台售卖 WHERE 平台 = '看电视' AND 售卖量 >= 100
easy gold: select 型号 from 电视机型号 where 产品定位 = "3D超强体验"

medium pred: SELECT 屏幕尺寸, 分辨率 FROM 电视机型号 WHERE 品牌id = '中国' GROUP BY 屏幕尺寸, 分辨率 HAVING COUNT(DISTINCT 品牌id) > 1
medium gold: select 屏幕尺寸,分辨率 from 电视机型号 where 产品定位 = "3D超强体验"

eval_err_num:457
easy pred: SELECT 型号, SUM(成本) FROM 电视机平台售卖 GROUP BY 型号 HAVING SUM(成本) > 10000
easy gold: select 定价 from 电视机型号 where 产品定位 = "3D超强体验"

medium pred: SELECT 平台, MAX( 当前售价) FROM 电视机平台售卖 WHERE 售卖量 > 0 GROUP BY 平台 HAVING MAX( 当前售价) > (SELECT MAX( 当前售价) FROM 电视机平台售卖 WHERE 售卖量 > 0)
medium gold: select T1.平台,T1.当前售价 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where T2.产品定位 = "3D超强体验"

eval_err_num:458
medium pred: SELECT 型号, COUNT(DISTINCT购买者) FROM 电视机平台售卖 WHERE 平台 = '看电视' AND 当前售价 < (SELECT MAX(当前售价) FROM 电视机平台售卖 WHERE 售卖量 > 0) GROUP BY 型号 HAVING COUNT(DISTINCT购买者) > 0 ORDER BY COUNT(DISTINCT购买者) DESC
medium gold: select T1.售卖量,T1.用户评分 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where T2.产品定位 = "3D超强体验"

eval_err_num:459
hard pred: SELECT 型号, 屏幕尺寸 FROM 电视机型号 WHERE 屏幕尺寸 = ( SELECT 最大值 (屏幕尺寸) FROM 电视机品牌 WHERE 品牌id = 电视机型号.品牌id )
hard gold: select 型号 from 电视机型号 where 屏幕尺寸 = (select max(屏幕尺寸) from 电视机型号)

eval_err_num:460
extra pred: SELECT 型号, 屏幕尺寸, SUM(市场份额) AS 屏幕总份额 FROM 电视机型号 GROUP BY 型号, 屏幕尺寸 HAVING SUM(市场份额) > 1
extra gold: select 屏幕尺寸,屏幕比例 from 电视机型号 where 屏幕尺寸 = (select max(屏幕尺寸) from 电视机型号)

eval_err_num:461
extra pred: SELECT 品牌名 FROM 电视机品牌 WHERE 品牌名 IN ( SELECT 品牌名 FROM 电视机平台售卖 GROUP BY 平台 HAVING COUNT(*) > 0 )
extra gold: select T2.品牌名 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id where T1.屏幕尺寸 = (select max(屏幕尺寸) from 电视机型号)

eval_err_num:462
extra pred: SELECT 品牌名 FROM 电视机品牌 WHERE 品牌名 NOT IN ( SELECT 品牌名 FROM 电视机平台售卖 GROUP BY 平台 HAVING COUNT(*) > 0 )
extra gold: select T2.国家 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id where T1.屏幕尺寸 = (select max(屏幕尺寸) from 电视机型号)

eval_err_num:463
extra pred: SELECT 市场占有份额 FROM 电视机平台售卖 WHERE 型号id = ( SELECT 最大值 (型号id) FROM 电视机品牌 WHERE 品牌id = 电视机平台售卖.品牌id )
extra gold: select T2.市场份额 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id where T1.屏幕尺寸 = (select max(屏幕尺寸) from 电视机型号)

easy pred: SELECT 品牌名, 公司, 国家, 市场份额 FROM 电视机品牌 WHERE 国家 = '中国'
easy gold: select 品牌名 from 电视机品牌 where 国家 = "中国"

hard pred: SELECT 品牌名, 公司, 国家, 市场份额 FROM 电视机品牌 WHERE 市场份额 = ( SELECT 市场份额 FROM 电视机品牌 WHERE 国家 = '中国' ORDER BY 市场份额 DESC LIMIT 1 )
hard gold: select 品牌名 from 电视机品牌 where 国家 = "中国" order by 市场份额 desc limit 1

eval_err_num:464
extra pred: SELECT 型号 FROM 电视机平台售卖 WHERE 平台 = '淘宝' AND 售卖量 > 0 ORDER BY 售卖量 DESC LIMIT 10
extra gold: select T1.型号 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id where T2.国家 = "中国" order by T2.市场份额 desc limit 1

eval_err_num:465
extra pred: SELECT 定价 FROM 电视机平台售卖 WHERE 平台 = '淘宝' AND 售卖量 > 0 ORDER BY 定价 DESC LIMIT 1
extra gold: select T1.定价 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id where T2.国家 = "中国" order by T2.市场份额 desc limit 1

eval_err_num:466
easy pred: 以下是查询语句: SELECT 型号 FROM 电视机平台售卖 WHERE 型号 = 'XXXXXXXXX'; 其中,'XXXXXXXXX'是你想要查询的电视机型号。这个语句会将整个电视机平台售卖表中的型号信息全部匹配出来,并输出一个结果集。你可以根据实际情况调整型号的值,以达到你想要的结果。
easy gold: select 型号 from 电视机型号 where 产品定位 = "超薄超轻"

eval_err_num:467
easy pred: 以下是查询语句: SELECT 定价 FROM 电视机平台售卖 WHERE 型号 = 'XXXXXXXXX'; 其中,'XXXXXXXXX'是你想要查询的电视机型号。这个语句会将整个电视机平台售卖表中的定价信息全部匹配出来,并输出一个结果集。你可以根据实际情况调整型号的值,以达到你想要的结果。
easy gold: select 定价 from 电视机型号 where 产品定位 = "超薄超轻"

eval_err_num:468
medium pred: 以下是查询语句: SELECT 平台 FROM 电视机平台售卖 WHERE 型号 = 'XXXXXXXXX'; 其中,'XXXXXXXXX'是你想要查询的电视机型号。这个语句会将整个电视机平台售卖表中的平台信息全部匹配出来,并输出一个结果集。你可以根据实际情况调整型号的值,以达到你想要的结果。
medium gold: select T1.平台 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where T2.产品定位 = "超薄超轻"

eval_err_num:469
medium pred: SELECT 品牌名, 市场份额 FROM 电视机品牌 WHERE 市场份额 = (SELECT 市场份额 FROM 电视机平台售卖 WHERE 型号 = 'X' AND 平台 = 'X') ORDER BY 市场份额 DESC LIMIT 1
medium gold: select 品牌名 from 电视机品牌 order by 市场份额 desc limit 1

eval_err_num:470
hard pred: SELECT 型号 FROM 电视机型号 WHERE 品牌 = 'X'
hard gold: select 型号 from 电视机型号 where 品牌id = (select 品牌id from 电视机品牌 order by 市场份额 desc limit 1)

eval_err_num:471
extra pred: SELECT 型号, 定价 FROM 电视机型号 WHERE 定价 = (SELECT 定价 FROM 电视机平台售卖 WHERE 型号 = 'X' AND 平台 = 'X') ORDER BY 定价 DESC LIMIT 1
extra gold: select 型号 from 电视机型号 where 品牌id = (select 品牌id from 电视机品牌 order by 市场份额 desc limit 1) order by 定价 asc limit 1

eval_err_num:472
medium pred: SELECT 品牌名, 公司名, 国家 from 电视机品牌
medium gold: select t1.型号,t2.公司 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id

medium pred: SELECT 品牌名 from 电视机品牌
medium gold: select t1.型号,t2.品牌名 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id

eval_err_num:473
medium pred: SELECT a.品牌名, AVG(a.定价) as平均售价 from 电视机品牌 as a join 定价表 as b on a.品牌id = b.品牌id group by a.品牌名
medium gold: select avg(t1.定价),t2.品牌名 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id group by t2.品牌名

eval_err_num:474
hard pred: SELECT 商店名 FROM "应用商店" WHERE 商店名 = '滴滴打车'
hard gold: select T2.商店名 from 软件下载 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id JOIN 软件 AS T3 ON T1.软件id = T3.软件id where T3.名称 = "滴滴打车"

eval_err_num:475
medium pred: SELECT 国家 FROM "应用商店支持国家" WHERE 国家 = '阿根廷'
medium gold: select T1.用户是否可以购买应用程序 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id where T2.商店名 = "Google play"

eval_err_num:476
medium pred: SELECT 是否支持出售应用程序 FROM "应用商店支持国家" WHERE 国家 = '中国'
medium gold: select T1.开发人员是否可以出售应用程序 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id where T2.商店名 = "Google play"

eval_err_num:477
hard pred: SELECT 商店名, 应用软件数 FROM "应用商店" GROUP BY 商店名 ORDER BY 应用软件数 DESC LIMIT 1
hard gold: select 商店名 from 应用商店 where 应用软件数 = (select max(应用软件数) from 应用商店)

eval_err_num:478
hard pred: SELECT COUNT(*) as 用户量大, AVG(应用软件数) as 用户下载次数 FROM "应用商店" GROUP BY 商店名
hard gold: select 累计下载次数 from 应用商店 where 应用软件数 = (select max(应用软件数) from 应用商店)

eval_err_num:479
extra pred: SELECT 软件名称 FROM "软件" WHERE 应用商店ID in ( SELECT 应用商店ID FROM "应用商店支持国家" WHERE 国家 = '中国' )
extra gold: select T3.名称 from 软件下载 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id JOIN 软件 AS T3 ON T1.软件id = T3.软件id where T2.应用软件数 = (select max(应用软件数) from 应用商店)

eval_err_num:480
extra pred: SELECT 软件名称, SUM(下载量) as 下载量 FROM "软件" WHERE 应用商店ID in ( SELECT 应用商店ID FROM "应用商店支持国家" WHERE 国家 = '中国' ) GROUP BY 软件名称
extra gold: select T1.下载量 from 软件下载 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id JOIN 软件 AS T3 ON T1.软件id = T3.软件id where T2.应用软件数 = (select max(应用软件数) from 应用商店)

eval_err_num:481
easy pred: SELECT COUNT(*) FROM "应用商店" WHERE "商店名" = '酷安'
easy gold: select 应用软件数 from 应用商店 where 商店名 = "酷安"

eval_err_num:482
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 累计下载次数 from 应用商店 where 商店名 = "酷安"

eval_err_num:483
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 国家 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id where T2.商店名 = "酷安" and 用户是否可以购买应用程序 = "是"

eval_err_num:484
medium pred: SELECT t1.国家 FROM "应用商店支持国家" t1 join "应用商店" t2 on t1.国家 = t2.国家 WHERE t2.商店名 = '开发者商店'
medium gold: select 国家 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id where T2.商店名 = "酷安" and 开发人员是否可以出售应用程序 = "是"

eval_err_num:485
easy pred: SELECT name FROM "应用商店" WHERE "应用商店"."商店名" = '美妆' AND "应用商店"."应用软件数" > 1
easy gold: select 名称 from 软件 where 用途 = "美妆"

eval_err_num:486
hard pred: SELECT 应用商店.name FROM "应用商店" JOIN "应用商店支持国家" ON "应用商店"."商店名" = '应用商店支持国家' AND "应用商店支持国家"."用户是否可以购买应用程序" = '允许' AND "应用商店支持国家"."开发人员是否可以出售应用程序" = '允许'
hard gold: select T3.商店名 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id JOIN 应用商店 AS T3 ON T1.应用商店id = T3.商店id where T2.用途 = "美妆"

eval_err_num:487
medium pred: SELECT count(DISTINCT "软件下载"."下载量") AS total_下载量 FROM "软件" WHERE "软件"."名称" = '这个app' AND "软件"."用途" = '应用程序'
medium gold: select T1.下载量 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id where T2.用途 = "美妆"

eval_err_num:488
medium pred: SELECT好评数,总评价数 FROM "软件下载" WHERE评价人数 = (SELECT COUNT(*) FROM "用户" WHERE "用户"."评价人数" = '100') AND 好评数 > 0
medium gold: select T1.好评数 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id where T2.用途 = "美妆"

eval_err_num:489
extra pred: SELECT 应用商店.name, 应用商店.应用软件数, 软件下载.好评数 FROM "应用商店" JOIN "应用商店支持国家" ON "应用商店支持国家"."商店名" = '应用商店' AND "应用商店支持国家"."用户是否可以购买应用程序" = '允许' AND "应用商店支持国家"."开发人员是否可以出售应用程序" = '允许' AND "应用商店支持国家"."应用软件数" > 0
extra gold: select T3.商店名 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id JOIN 应用商店 AS T3 ON T1.应用商店id = T3.商店id where T2.用途 = "美妆" order by T3.累计下载次数 desc limit 1

eval_err_num:490
extra pred: SELECT 软件id, SUM(下载量) AS total_下载量 FROM "软件下载" GROUP BY 软件id ORDER BY total_下载量 DESC LIMIT 1
extra gold: select T2.名称 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id where 下载量 = (select max(下载量) from 软件下载)

eval_err_num:491
extra pred: SELECT 应用商店id FROM "应用商店支持国家" WHERE 国家 = '中国'
extra gold: select T3.商店名 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id JOIN 应用商店 AS T3 ON T1.应用商店id = T3.商店id where T1.下载量 = (select max(下载量) from 软件下载)

eval_err_num:492
extra pred: SELECT 软件id FROM "软件" WHERE 名称 = '软件下载'
extra gold: select T2.用途 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id where T1.下载量 = (select max(下载量) from 软件下载)

eval_err_num:493
easy pred: SELECT 商店名, COUNT(*) as 应用软件数 FROM "应用商店" GROUP BY 商店名 HAVING COUNT(*) > 0
easy gold: select 商店名 from 应用商店

eval_err_num:494
medium pred: SELECT (SELECT COUNT(*) FROM "应用商店支持国家" WHERE 国家 = '中国') as 下载量, (SELECT COUNT(*) FROM "应用商店支持国家" WHERE 国家 = '美国') as 下载量, (SELECT COUNT(*) FROM "应用商店支持国家" WHERE 国家 = '中国') as 下载量, (SELECT COUNT(*) FROM "软件" WHERE 软件id = '某个软件id') as 下载量 FROM "软件下载" GROUP BY 下载量 HAVING COUNT(*) > 0
medium gold: select 商店名,应用软件数 from 应用商店

eval_err_num:495
medium pred: SELECT 商店名, COUNT(*) as 应用软件数 FROM "应用商店" GROUP BY 商店名 ORDER BY 应用软件数 DESC LIMIT 1
medium gold: select 商店名 from 应用商店 order by 应用软件数 desc limit 1

eval_err_num:496
medium pred: SELECT SUM(顾客数量) as 用户量, COUNT(*) as 下载次数, SUM(顾客数量) over () as 总下载次数 FROM "应用商店" WHERE 商店名 = '某个商店名' GROUP BY 商店名 HAVING 用户量 > 0 and 下载次数 > 0
medium gold: select 累计下载次数 from 应用商店 order by 应用软件数 desc limit 1

eval_err_num:497
easy pred: 以下是查询语句: SELECT * FROM 中国地铁 WHERE 年份 = (SELECT 年份 FROM 城市 WHERE 城市名称 = '北京')
easy gold: select * from 中国地铁

eval_err_num:498
medium pred: 以下是查询语句: SELECT 省份, 城市 FROM 中国地铁 WHERE 年份 = (SELECT 年份 FROM 城市 WHERE 城市名称 = '上海') AND 开通城市数量 = 1
medium gold: select 城市名称,所属省份 from 城市

eval_err_num:499
extra pred: 以下是查询语句: SELECT 城市, 地铁运营里程 FROM 中国地铁 WHERE 年份 = (SELECT 年份 FROM 城市 WHERE 城市名称 = '上海') AND 地铁运营里程 = (SELECT MAX(地铁运营里程) FROM 中国地铁)
extra gold: select T2.城市名称 from 城市地铁里程 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T1.地铁运营里程 = (select max(地铁运营里程) from 城市地铁里程)

eval_err_num:500
extra pred: 以下是查询语句: SELECT 城市, COUNT(*) as 线路数 FROM 城市地铁里程 WHERE 城市名称 = (SELECT 城市名称 FROM 城市 WHERE 城市id = (SELECT 城市id FROM 中国地铁 WHERE 年份 = (SELECT 年份 FROM 城市 WHERE 城市名称 = '北京')) AND 地铁运营里程 > 0) GROUP BY 城市
extra gold: select T2.城市名称 from 城市地铁里程 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T1.已运营线路数 = (select max(已运营线路数) from 城市地铁里程)

eval_err_num:501
medium pred: SELECT * FROM 城市地铁里程 WHERE 城市id = ( SELECT 城市id FROM 城市 WHERE 年份 = ( SELECT 年份 FROM 中国地铁 WHERE 年份 = '2021' ) )
medium gold: select T1.已运营线路数 from 城市地铁里程 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.城市名称 = "广州"

eval_err_num:502
medium pred: SELECT SUM(地铁运营里程) as 总计里程 FROM 城市地铁里程 WHERE 城市id = ( SELECT 城市id FROM 城市 WHERE 年份 = ( SELECT 年份 FROM 中国地铁 WHERE 年份 = '2021' ) )
medium gold: select T1.在建里程 + T1.规划里程 from 城市地铁里程 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.城市名称 = "广州"

eval_err_num:503
medium pred: SELECT每日每公里客运量, COUNT(*) as 总客运量 FROM 城市地铁日均客运量 WHERE 日期 = ( SELECT 日期 FROM ( SELECT 日期 as 日期, COUNT(*) as 总客运量 FROM 城市地铁日均客运量 WHERE 城市id = ( SELECT 城市id FROM 城市 WHERE 日期 >= '2021-01-01' AND 日期 <= '2021-02-18' ) GROUP BY 日期 )日子 )
medium gold: select T1.日均客运量 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.城市名称 = "广州"

eval_err_num:504
medium pred: SELECT 城市id FROM 城市 JOIN 城市地铁票价 ON 城市id = 城市地铁票价.城市id JOIN 城市地铁里程 ON 城市id = 城市地铁里程.城市id JOIN 城市地铁日均客运量 ON 城市id = 城市地铁日均客运量.城市id WHERE 城市地铁日均客运量.每日每公里客运量 > (SELECT 运营成本 FROM 城市地铁运营成本 WHERE 城市id = 城市地铁日均客运量.城市id)
medium gold: select T2.城市名称 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T1.每公里运营收入 > T1.每公里运营成本

eval_err_num:505
medium pred: SELECT 城市id, 成本(每公里运营成本) AS 成本, 收入(每公里运营收入) AS 收入 FROM 城市地铁日均客运量 JOIN 城市地铁票价 ON 城市id = 城市地铁票价.城市id JOIN 城市地铁里程 ON 城市id = 城市地铁里程.城市id GROUP BY 城市id ORDER BY 成本 DESC, 收入 DESC LIMIT 10
medium gold: select T2.城市名称,T1.每公里运营成本,T1.每公里运营收入 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id

eval_err_num:506
medium pred: SELECT 城市地铁里程.成本 AS 成本, 城市地铁里程.收入 AS 收入, (SELECT COUNT(*) FROM 城市地铁运营成本 WHERE 城市id = 城市地铁里程.城市id) AS 总运营收入, (SELECT COUNT(*) FROM 城市地铁运营成本 WHERE 城市id = 城市地铁里程.城市id) AS 总运营成本 FROM 城市地铁日均客运量 JOIN 城市地铁里程 ON 城市地铁日均客运量.每日每公里客运量 = 城市地铁里程.地铁运营里程 GROUP BY 城市地铁里程.城市id HAVING 总运营收入 > 总运营成本 ORDER BY 总运营收入 DESC, 总运营成本 DESC
medium gold: select T2.城市名称, T1.每日每公里客运量 * T1.每公里运营成本, T1.每日每公里客运量 * T1.每公里运营收入 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id

eval_err_num:507
medium pred: SELECT 城市name, 2 * 城市地铁票价 - 1 AS 2元可乘坐里程 FROM 城市 WHERE 城市地铁票价 > 0
medium gold: select T2.城市名称 from 城市地铁票价 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T1.列_2元可乘坐里程 > "0"

eval_err_num:508
medium pred: SELECT 路程, COUNT(*) as 数量 FROM 地铁线路 WHERE 票价 = ( SELECT 票价 FROM 地铁票价 WHERE 线路 = ( SELECT 线路 FROM 城市 WHERE 城市id = 城市.城市id ) ) GROUP BY 路程 ORDER BY 数量 DESC LIMIT 1
medium gold: select T1.列_2元可乘坐里程 from 城市地铁票价 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T1.列_2元可乘坐里程 > "0"

eval_err_num:509
extra pred: SELECT 城市name, 票价 * 里程 AS 总里程 FROM 城市地铁票价 WHERE 票价 = ( SELECT 票价 FROM 地铁票价 WHERE 城市id = 城市.城市id ) GROUP BY 城市name ORDER BY 总里程 DESC LIMIT 1
extra gold: select T2.城市名称 from 城市地铁票价 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T1.列_5元可乘坐里程 = (select min(列_5元可乘坐里程) from 城市地铁票价)

eval_err_num:510
medium pred: SELECT 城市name, 运营成本 * 票价 as 总成本 FROM 城市地铁票价 WHERE 城市id = ( SELECT 城市id FROM 城市 WHERE 城市name = '武汉' ) GROUP BY 城市name ORDER BY 总成本 DESC LIMIT 1
medium gold: select T1.每公里运营成本 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.城市名称 = "武汉"

eval_err_num:511
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select T1.每公里运营成本 * T1.每日每公里客运量 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.城市名称 = "武汉"

eval_err_num:512
medium pred: SELECT 节日 FROM "民俗节日" WHERE 时间 >= '2022-01-01' AND 时间 < '2022-02-18'
medium gold: select 节日 from 民俗节日 where 时间 like '农历%'

eval_err_num:513
medium pred: SELECT 节日, 纪念 FROM "民俗节日" WHERE 时间 >= '2022-01-01' AND 时间 < '2022-02-18'
medium gold: select 节日 ,纪念 from 民俗节日 where 时间 like '农历%'

eval_err_num:514
hard pred: SELECT 民族id FROM "民族城市" WHERE 城市名称 = '汉族城市'
hard gold: select T1.节日 ,T1.时间 ,T2.名称 from 民俗节日 AS T1 JOIN 民族 AS T2 ON T1.民族id = T2.民族id where 时间 like '农历%'

eval_err_num:515
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 名称 from 民族 where 语言 = '汉语'

eval_err_num:516
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 名称 ,人口 from 民族 where 语言 = '汉语'

eval_err_num:517
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select T2.名称 ,T1.城市名称 ,比例 from 民族城市 AS T1 JOIN 民族 AS T2 ON T1.民族id = T2.民族id where 语言 = '汉语'

eval_err_num:518
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select T2.名称 ,T1.节日 from 民俗节日 AS T1 JOIN 民族 AS T2 ON T1.民族id = T2.民族id where 语言 = '汉语'

eval_err_num:519
medium pred: SELECT 动物.学名, 动物朋友.朋友id, 天敌.天敌id FROM 动物 INNER JOIN 动物朋友 ON 动物.动物id = 动物朋友.动物id INNER JOIN 天敌 ON 动物.动物id = 天敌.动物id WHERE 食物 = '草'
medium gold: select 学名 ,食性 from 动物 where 食性 = '食草'

eval_err_num:520
medium pred: SELECT 动物.学名, 动物朋友.朋友id, 天敌.天敌id FROM 动物 INNER JOIN 动物朋友 ON 动物.动物id = 动物朋友.动物id INNER JOIN 天敌 ON 动物.动物id = 天敌.动物id WHERE 是否是人类朋友 = 'Y'
medium gold: select 学名 ,是否是人类朋友 from 动物 where 食性 = '食草'

eval_err_num:521
medium pred: SELECT 动物.学名, 动物朋友.朋友id, 天敌.天敌id FROM 动物 INNER JOIN 动物朋友 ON 动物.动物id = 动物朋友.动物id INNER JOIN 天敌 ON 动物.动物id = 天敌.动物id WHERE 理由 = '有天敌'
medium gold: select 学名 ,是否是人类朋友 ,理由 from 动物 where 食性 = '食草'

eval_err_num:522
easy pred: SELECT * FROM "羽毛球球员" JOIN "重要赛事" ON "羽毛球球员"."球员id" = "重要赛事"."球员id" JOIN "奥运会冠亚军" ON "奥运会冠亚军"."奥运会名称" = "羽毛球球员"."球员姓名" JOIN "冠军国家" ON "冠军国家"."国家名称" = "奥运会冠亚军"."奥运会名称" JOIN "球员夺冠次数" ON "冠军国家"."赛事id" = "球员夺冠次数"."球员id" WHERE "羽毛球球员"."身高" = ( SELECT MAX("球员身高") FROM "羽毛球球员" GROUP BY "球员姓名" )
easy gold: select 赛事名称 from 重要赛事

eval_err_num:523
medium pred: SELECT * FROM "羽毛球球员" JOIN "重要赛事" ON "羽毛球球员"."球员id" = "重要赛事"."球员id" JOIN "奥运会冠亚军" ON "奥运会冠亚军"."奥运会名称" = "羽毛球球员"."球员姓名" JOIN "冠军国家" ON "冠军国家"."国家名称" = "奥运会冠亚军"."奥运会名称" JOIN "球员夺冠次数" ON "冠军国家"."赛事id" = "球员夺冠次数"."球员id" WHERE "羽毛球球员"."身高" = ( SELECT MAX("球员身高") FROM "羽毛球球员" GROUP BY "球员姓名" )
medium gold: select 赛事名称 ,成立时间 from 重要赛事

eval_err_num:524
medium pred: SELECT DATE_FORMAT( CREATETIME( "重要赛事"."成立时间", "年" ), '%Y-%m-%d' ) AS 赛事间隔年, DATE_FORMAT( CREATETIME( "奥运会冠亚军"."成立时间", "年" ), '%Y-%m-%d' ) AS 比赛间隔年, DATE_FORMAT( CREATETIME( "冠军国家"."成立时间", "年" ), '%Y-%m-%d' ) AS 冠军间隔年 FROM "羽毛球球员" JOIN "重要赛事" ON "羽毛球球员"."球员id" = "重要赛事"."球员id" JOIN "奥运会冠亚军" ON "奥运会冠亚军"."奥运会名称" = "羽毛球球员"."球员姓名" JOIN "冠军国家" ON "冠军国家"."国家名称" = "奥运会冠亚军"."奥运会名称" JOIN "球员夺冠次数" ON "冠军国家"."赛事id" = "球员夺冠次数"."球员id" WHERE "羽毛球球员"."身高" = ( SELECT MAX("球员身高") FROM "羽毛球球员" GROUP BY "球员姓名" )
medium gold: select 赛事名称 ,比赛间隔年 from 重要赛事

eval_err_num:525
medium pred: SELECT * FROM "羽毛球球员" JOIN "重要赛事" ON "羽毛球球员"."球员id" = "重要赛事"."球员id" JOIN "奥运会冠亚军" ON "奥运会冠亚军"."奥运会名称" = "羽毛球球员"."球员姓名" JOIN "冠军国家" ON "冠军国家"."国家名称" = "奥运会冠亚军"."奥运会名称" JOIN "球员夺冠次数" ON "冠军国家"."赛事id" = "球员夺冠次数"."球员id" WHERE "羽毛球球员"."身高" = ( SELECT MAX("球员身高") FROM "羽毛球球员" GROUP BY "球员姓名" )
medium gold: select 赛事名称 ,人群 from 重要赛事

eval_err_num:526
hard pred: SELECT 排名最高的医院名, COUNT(*) as 排名 FROM "医院排名" GROUP BY 医院名 ORDER BY COUNT(*) DESC LIMIT 1
hard gold: select T2.医院名 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id order by T1.排名 asc limit 1

eval_err_num:527
hard pred: SELECT 院士数量 as 院士数 FROM "医院" WHERE 医院名 = '这家医院'
hard gold: select T2.院士数量 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id order by T1.排名 asc limit 1

eval_err_num:528
hard pred: SELECT 科室数量 FROM "医院" GROUP BY 科室数量 ORDER BY 科室数量 DESC LIMIT 1
hard gold: select T2.科室数量 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id order by T1.排名 asc limit 1

eval_err_num:529
extra pred: SELECT 科室 FROM "医院" WHERE 医院名 = '这家医院' FOREIGN KEY (科室) REFERENCES "特色科室" (科室) ON DELETE NO ACTION ON UPDATE NO ACTION
extra gold: select T1.科室 from 特色科室 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id JOIN 医院排名 AS T3 ON T2.医院id = T3.医院id order by T3.排名 asc limit 1

eval_err_num:530
medium pred: SELECT * FROM "羽毛球球员" ORDER BY "球员姓名" DESC, "出生日期" DESC
medium gold: select 球员姓名 ,出生日期 from 羽毛球球员 order by 出生日期

eval_err_num:531
medium pred: SELECT t1.国家名称 FROM "冠军国家" t1 INNER JOIN "重要赛事" t2 ON t1.赛事id = t2.赛事id WHERE t2.冠军数量 = 1
medium gold: select 球员姓名 ,国籍 from 羽毛球球员

eval_err_num:532
hard pred: SELECT p1.球员姓名, p2.运动员姓名, p3.比赛项目名称 FROM "羽毛球球员夺冠次数" p1 INNER JOIN "奥运会冠亚军" p2 ON p1.球员id = p2.金牌获得者id INNER JOIN "重要赛事" p3 ON p2.运动员id = p3.赛事id WHERE p3.冠军数量 = 1 AND p3.赛事名称 = '奥运会'
hard gold: select T2.球员姓名 ,T3.赛事名称 ,T1.冠军次数 from 球员夺冠次数 AS T1 JOIN 羽毛球球员 AS T2 ON T1.球员id = T2.球员id JOIN 重要赛事 AS T3 ON T1.赛事id = T3.赛事id where 冠军次数>1

eval_err_num:533
medium pred: SELECT p1.球员姓名, p2.运动员姓名, p3.比赛项目名称, p4.身高 FROM "羽毛球球员夺冠次数" p1 INNER JOIN "奥运会冠亚军" p2 ON p1.球员id = p2.金牌获得者id INNER JOIN "重要赛事" p3 ON p2.运动员id = p3.赛事id INNER JOIN "身高" p4 ON p3.身高 = p4.身高 WHERE p3.冠军数量 = 1 AND p3.赛事名称 = '奥运会'
medium gold: select T2.球员姓名 ,T2.身高 from 球员夺冠次数 AS T1 JOIN 羽毛球球员 AS T2 ON T1.球员id = T2.球员id where 冠军次数>1

eval_err_num:534
medium pred: SELECT COUNT(DISTINCT t1.冠军数量) AS 冠军数量 FROM "冠军国家" t1 JOIN "重要赛事" t2 ON t1.赛事id = t2.赛事id WHERE t2.人群 = '中国'
medium gold: select 国家名称 ,冠军数量 from 冠军国家 where 国家名称 = '中国'

eval_err_num:535
easy pred: SELECT 球员id FROM "羽毛球球员" WHERE 球员姓名 = '张三' OR 球员姓名 = '李四' OR 球员姓名 = '王五'
easy gold: select 球员姓名 from 羽毛球球员 where 国籍 = '中国'

eval_err_num:536
hard pred: SELECT 项目, COUNT(*) FROM "奥运会冠亚军" GROUP BY 项目 HAVING COUNT(*) > 0
hard gold: select T3.球员姓名 ,T2.赛事名称 ,T1.冠军次数 from 球员夺冠次数 AS T1 JOIN 重要赛事 AS T2 ON T1.赛事id = T2.赛事id JOIN 羽毛球球员 AS T3 ON T1.球员id = T3.球员id where 国籍 = '中国'

eval_err_num:537
medium pred: SELECT * FROM "医院" WHERE "医院id" = ( SELECT "医院id" FROM "医院排名" WHERE "医院排名.年份" = 2022 AND "医院排名.医院id" = "医院"."医院id" )
medium gold: select 医院名 , 医院等级 from 医院 where 医院等级 = "三级甲等"

eval_err_num:538
medium pred: SELECT COUNT(*) AS "科室数量", COUNT(1) AS "重点专科数量" FROM "医院" WHERE "医院id" IN ( SELECT "医院id" FROM "医院排名" WHERE "医院排名.年份" = 2022 AND "医院排名.医院id" = "医院"."医院id" )
medium gold: select 医院名 ,科室数量 ,重点专科数量 from 医院 where 医院等级 = "三级甲等"

eval_err_num:539
medium pred: SELECT (SELECT COUNT(*) FROM "医院" WHERE "医院.name" = '城市' AND "医院.所属城市id" = '词条id') AS "接待病患数量", (SELECT COUNT(1) AS "手术数量" FROM "医院" WHERE "医院.name" = '城市' AND "医院.所属城市id" = '词条id') AS "手术数量" FROM "医院" WHERE "医院.name" = '城市' AND "医院.所属城市id" = '词条id'
medium gold: select T2.医院名 ,T1.接待病患数量 ,T1.手术数量 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where 医院等级 = "三级甲等"

eval_err_num:540
medium pred: SELECT "特色科室."科室 AS "特色科室名称", "特色科室."是否重点 AS "是否重点", "特色科室."是否研究中心 AS "是否研究中心" FROM "特色科室" WHERE "特色科室."医院id" = ( SELECT "医院"."医院id" FROM "医院" WHERE "医院"."name" = '城市' AND "医院"."所属城市id" = '词条id' )
medium gold: select T2.医院名 ,T1.科室 ,T1.是否研究中心 from 特色科室 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where 医院等级 = "三级甲等"

eval_err_num:541
medium pred: SELECT * FROM "医院" WHERE "院士数量" > 0
medium gold: select 医院名 ,院士数量 from 医院 where 院士数量 > 0

eval_err_num:542
medium pred: SELECT * FROM "医院" ORDER BY "职工数量" DESC
medium gold: select 医院名 ,职工数量 from 医院 order by 职工数量 desc

eval_err_num:543
medium pred: SELECT * FROM "城市" WHERE "所属省份" = "哈尔滨"
medium gold: select T2.医院名 ,T1.名称 from 城市 AS T1 JOIN 医院 AS T2 ON T1.城市id = T2.所属城市id where 名称 = '哈尔滨'

eval_err_num:544
extra pred: SELECT SUM(CASE WHEN "人口数量" >= 10000 THEN 1 else 0 END) AS 城市人口, SUM(CASE WHEN "老年人口占比" = 1% THEN 1 else 0 END) AS 老年人口, "人口数量" AS 总人数, "老年人口占比" AS 老年人口比例 FROM "城市" WHERE "所属省份" = "这座城市的省份名"
extra gold: select 名称 ,人口数量 ,老年人口占比 from 城市 where 名称 = (select T1.名称 from 城市 AS T1 JOIN 医院 AS T2 ON T1.城市id = T2.所属城市id where 名称 = '哈尔滨')

eval_err_num:545
medium pred: 以下是查询语句: SELECT * FROM "医院" WHERE 所属城市id = (SELECT 词条id FROM "城市") AND 医院等级 = 1; 解释:该语句首先从 "医院" 表中选择具有 "词条id" 且医院等级为 1 的医院,然后使用子查询从 "城市" 表中选择与这些医院具有相同所属城市ID 的城市。最后,使用JOIN将这两个城市的数据合并在一起,并返回所有符合条件的医院信息。
medium gold: select T1.医院名 from 医院 AS T1 JOIN 城市 AS T2 ON T1.所属城市id = T2.城市id where 名称 = '洛阳'

eval_err_num:546
extra pred: 以下是查询语句: SELECT * FROM "医院" WHERE 医院等级 = (SELECT MAX(医院等级) FROM "医院") AND 所属城市id = (SELECT 词条id FROM "城市") AND 城市名 = '洛阳'; 解释:该语句首先从 "医院" 表中选择具有 "词条id" 且医院等级为 MAX(医院等级) 的医院,然后使用子查询从 "城市" 表中选择与这些医院具有相同所属城市ID 的城市。最后,使用JOIN将这两个城市的数据合并在一起,并返回所有符合条件的医院信息。
extra gold: select 医院名 ,医院等级 from 医院 where 医院名 in (select T1.医院名 from 医院 AS T1 JOIN 城市 AS T2 ON T1.所属城市id = T2.城市id where 名称 = '洛阳')

eval_err_num:547
extra pred: 以下是查询语句: SELECT * FROM "特色科室" WHERE 科室 = '检查'; 解释:该语句选择 "特色科室" 中包含 "检查" 的科室,并使用 IN 子句检查是否包含该科室。该语句使用了子查询和 JOIN,并使用了共同的 REFERENCES 字段来保证查询的完整性和正确性。
extra gold: select T1.医院名 ,T2.科室 from 医院 AS T1 JOIN 特色科室 AS T2 ON T1.医院id = T2.医院id where 医院名 in (select 医院名 from 医院 AS T1 JOIN 城市 AS T3 ON T1.所属城市id = T3.城市id where 名称 = '洛阳')

eval_err_num:548
extra pred: 以下是查询语句: SELECT * FROM "特色科室" WHERE 科室 = '检查' AND 是否重点 = '是'; 解释:该语句选择 "特色科室" 中包含 "检查" 且 "是否重点" 为 "是"的科室,并使用 IN 子句检查是否包含该科室。该语句使用了子查询和 JOIN,并使用了共同的 REFERENCES 字段来保证查询的完整性和正确性。
extra gold: select 科室 ,是否重点 from 医院 AS T1 JOIN 特色科室 AS T2 ON T1.医院id = T2.医院id where 医院名 in (select 医院名 from 医院 AS T1 JOIN 城市 AS T3 ON T1.所属城市id = T3.城市id where 名称 = '洛阳')

eval_err_num:549
medium pred: SELECT 城市名, COUNT(*) AS 人口数量 FROM "城市" GROUP BY 城市名 ORDER BY COUNT(*) DESC LIMIT 1
medium gold: select 名称 ,人口数量 from 城市 order by 人口数量 desc

eval_err_num:550
medium pred: SELECT * FROM "城市" WHERE "老年人口占比" > 1.0
medium gold: select 名称 ,老年人口占比 from 城市

eval_err_num:551
medium pred: SELECT * FROM "医院" WHERE 医院等级 = '二甲'
medium gold: select T2.名称 ,T1.医院名 from 医院 AS T1 JOIN 城市 AS T2 ON T1.所属城市id = T2.城市id where 医院等级 = '二级甲等'

eval_err_num:552
extra pred: SELECT t1.年度, t1.每天, t2.接待病患数量 FROM "医院" t1 JOIN "医院排名" t2 ON t1.医院id = t2.医院id WHERE t2.年份 = '2022' AND t2.每天 = ( SELECT MAX(每天) FROM "医院" WHERE 医院等级 = '二甲' )
extra gold: select T2.年份 ,T1.医院名 ,T2.接待病患数量 from 医院 AS T1 JOIN 医院排名 AS T2 ON T1.医院id = T2.医院id where 医院名 in (select T1.医院名 from 医院 AS T1 JOIN 城市 AS T3 ON T1.所属城市id = T3.城市id where 医院等级 = '二级甲等' )

eval_err_num:553
medium pred: SELECT t1.日均客运量, (SELECT COUNT(*) FROM 城市地铁里程 t2 WHERE 城市id = t1.城市id AND 地铁运营里程 = t2.地铁运营里程) AS 每日地铁乘坐量 FROM 城市 t1 WHERE 城市id = '成都'
medium gold: select 城市名称 ,日均客运量 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 城市名称 = '成都'

eval_err_num:554
medium pred: SELECT t1.日均客运量, t1.每公里运营成本, t1.每公里运营收入, (SELECT COUNT(*) FROM 城市地铁收入 t3 WHERE 城市id = t1.城市id AND 地铁运营收入 = t3.地铁运营收入) AS 每公里收入 FROM 城市 t1 WHERE 城市id = '北京'
medium gold: select 城市名称 ,每公里运营收入 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 城市名称 = '成都'

eval_err_num:555
medium pred: SELECT t1.日均客运量, t1.每公里运营成本, t1.每公里运营收入, (SELECT COUNT(*) FROM 城市地铁成本 t4 WHERE 城市id = t1.城市id AND 地铁成本 = t4.地铁成本) AS 每公里运营成本 FROM 城市 t1 WHERE 城市id = '北京'
medium gold: select 城市名称 ,每公里运营成本 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 城市名称 = '成都'

eval_err_num:556
easy pred: SELECT * FROM "医院" WHERE "医院等级" = '三级甲等'
easy gold: select 医院名 from 医院 where 医院等级 = "三级甲等"

eval_err_num:557
medium pred: SELECT "医院排名"."年份", "医院排名"."医院id" AS "排名", "医院排名"."接待病患数量", "医院排名"."手术数量" FROM "医院排名" WHERE "医院id" IN ( SELECT "医院id" FROM "医院" WHERE "医院等级" = '三级甲等' ) ORDER BY "排名" DESC
medium gold: select 医院名,排名 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where 医院等级 = "三级甲等"

eval_err_num:558
extra pred: SELECT * FROM "医院排名" WHERE "排名" <= 20 AND "医院id" IN ( SELECT "医院id" FROM "医院" WHERE "医院等级" = '三级甲等' )
extra gold: select 医院名,排名 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where 医院等级 = "三级甲等" and 排名<20

eval_err_num:559
easy pred: SELECT * FROM "羽毛球球员" JOIN "重要赛事" ON "羽毛球球员"."赛事id" = "重要赛事"."赛事id" JOIN "奥运会冠亚军" ON "奥运会冠亚军"."金牌获得者id" = "羽毛球球员"."球员id" JOIN "冠军国家" ON "冠军国家"."国家名称" = "奥运会冠亚军"."冠军名称" JOIN "球员夺冠次数" ON "球员夺冠次数"."球员id" = "羽毛球球员"."球员id" JOIN "重要赛事" ON "重要赛事"."赛事id" = "球员夺冠次数"."赛事id" WHERE "球员id" >= 1
easy gold: select 球员姓名 from 羽毛球球员 where 国籍 = "中国"

eval_err_num:560
medium pred: SELECT * FROM "国宝级运动员" WHERE 林丹 HAVING COUNT(*) > 1
medium gold: select T1.奥运会名称 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id where T2.球员姓名 = "林丹"

eval_err_num:561
hard pred: SELECT * FROM "运动员夺冠次数" JOIN "重要赛事" ON "运动员夺冠次数"."赛事id" = "重要赛事"."赛事id" JOIN "奥运会冠亚军" ON "奥运会冠亚军"."金牌获得者id" = "运动员夺冠次数"."冠军次数" JOIN "羽毛球球员" ON "羽毛球球员"."球员id" = "运动员夺冠次数"."球员id" WHERE "运动员id" = ( SELECT 球员id FROM "运动员夺冠次数" WHERE 赛事名称 = '鲍春来比赛' )
hard gold: select T3.赛事名称 from 球员夺冠次数 AS T1 JOIN 羽毛球球员 AS T2 ON T1.球员id = T2.球员id JOIN 重要赛事 AS T3 ON T1.赛事id = T3.赛事id where T2.球员姓名 = "鲍春来"

eval_err_num:562
hard pred: SELECT 奥运会冠亚军.金牌获得者id, 运动员夺冠次数.冠军次数, ( SELECT COUNT(*) FROM 羽毛球球员 WHERE 球员id = 奥运会冠亚军.金牌获得者id ) as 冠军数量 FROM "奥运会冠亚军" JOIN "重要赛事" ON "奥运会冠亚军"."赛事id" = "重要赛事"."赛事id" JOIN "冠军国家" ON "冠军国家"."赛事id" = "重要赛事"."赛事id" JOIN "运动员夺冠次数" ON "运动员夺冠次数"."赛事id" = "冠军国家"."赛事id" JOIN "羽毛球球员" ON "羽毛球球员"."球员id" = "运动员夺冠次数"."球员id" WHERE "奥运会冠亚军"."冠军名称" = '2016年羽毛球男单世界杯' GROUP BY 奥运会冠亚军.金牌获得者id, 运动员夺冠次数.冠军次数 ORDER BY 冠军数量 DESC
hard gold: select sum(T1.冠军次数) from 球员夺冠次数 AS T1 JOIN 羽毛球球员 AS T2 ON T1.球员id = T2.球员id JOIN 重要赛事 AS T3 ON T1.赛事id = T3.赛事id where T2.球员姓名 = "鲍春来"

eval_err_num:563
hard pred: SELECT 奥运会冠亚军.金牌获得者id, 运动员夺冠次数.冠军次数, 运动员夺冠次数.亚军次数, 运动员夺冠次数.季军次数 FROM "奥运会冠亚军" JOIN "重要赛事" ON "奥运会冠亚军"."赛事id" = "重要赛事"."赛事id" JOIN "冠军国家" ON "冠军国家"."赛事id" = "重要赛事"."赛事id" JOIN "运动员夺冠次数" ON "运动员夺冠次数"."赛事id" = "冠军国家"."赛事id" JOIN "羽毛球球员" ON "羽毛球球员"."球员id" = "运动员夺冠次数"."球员id" WHERE "奥运会冠亚军"."冠军名称" = '2016年羽毛球男单世界杯' GROUP BY 奥运会冠亚军.金牌获得者id, 运动员夺冠次数.冠军次数, 运动员夺冠次数.亚军次数, 运动员夺冠次数.季军次数 ORDER BY 亚军次数, 季军次数 DESC
hard gold: select sum(T1.亚军次数),sum(T1.季军次数) from 球员夺冠次数 AS T1 JOIN 羽毛球球员 AS T2 ON T1.球员id = T2.球员id JOIN 重要赛事 AS T3 ON T1.赛事id = T3.赛事id where T2.球员姓名 = "鲍春来"

eval_err_num:564
medium pred: SELECT t1.name, t2.name FROM 奥运会冠亚军 t1 INNER JOIN 冠军国家 t2 ON t1.title = t2.title AND t1. country = t2. country INNER JOIN 羽毛球球员 t3 ON t1.获得者id = t3.球员id WHERE t2.name = '羽毛球' AND t3.id = ( SELECT id FROM 奥运会冠亚军 t4 WHERE t4.name = '2008北京奥运会' AND t4.赛事id = '1' )
medium gold: select T2.球员姓名 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id where T1.奥运会名称 = "2008年北京奥运会"

eval_err_num:565
medium pred: SELECT t1.name FROM 奥运会冠亚军 t1 INNER JOIN 冠军国家 t2 ON t1.title = t2.title AND t1. country = t2. country WHERE t2.name = '中国' GROUP BY t1.name HAVING COUNT(DISTINCT t1.name) = ( SELECT COUNT(DISTINCT t3.name) FROM 羽毛球球员 t3 WHERE t3.球员id = '1' )
medium gold: select T2.国籍 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id where T1.奥运会名称 = "2008年北京奥运会"

eval_err_num:566
medium pred: SELECT t1.name, t2.name FROM 奥运会冠亚军 t1 INNER JOIN 冠军国家 t2 ON t1.title = t2.title AND t1. country = t2. country INNER JOIN 羽毛球球员 t3 ON t1.获得者id = t3.球员id WHERE t2.name = '中国' GROUP BY t1.name HAVING COUNT(DISTINCT t1.name) = ( SELECT COUNT(DISTINCT t4.name) FROM 奥运会冠亚军 t4 WHERE t4.name = '2008北京奥运会' AND t4.赛事id = '1' AND t3.球员id = '1' ) + ( SELECT COUNT(DISTINCT t5.name) FROM 羽毛球球员 t5 WHERE t5.球员id = '1' )
medium gold: select T2.球员姓名,T2.国籍 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.银牌获得者id = T2.球员id where T1.奥运会名称 = "2008年北京奥运会"

eval_err_num:567
medium pred: SELECT t1.name, t2.name FROM 奥运会冠亚军 t1 INNER JOIN 冠军国家 t2 ON t1.title = t2.title AND t1. country = t2. country INNER JOIN 羽毛球球员 t3 ON t1.获得者id = t3.球员id WHERE t2.name = '中国' GROUP BY t1.name HAVING COUNT(DISTINCT t1.name) = ( SELECT COUNT(DISTINCT t4.name) FROM 奥运会冠亚军 t4 WHERE t4.name = '2008北京奥运会' AND t4.赛事id = '1' AND t3.球员id = '1' ) + ( SELECT COUNT(DISTINCT t5.name) FROM 羽毛球球员 t5 WHERE t5.球员id = '1' )
medium gold: select T2.球员姓名,T2.国籍 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.铜牌获得者id = T2.球员id where T1.奥运会名称 = "2008年北京奥运会"

eval_err_num:568
extra pred: SELECT t1.国家名称, t2.赛事id, COUNT(*) as 冠军数量 FROM "冠军国家" t1 INNER JOIN "重要赛事" t2 ON t1.赛事id = t2.赛事id GROUP BY t1.国家名称, t2.赛事id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: select T1.国家名称,T2.赛事名称 from 冠军国家 AS T1 JOIN 重要赛事 AS T2 ON T1.赛事id = T2.赛事id where T1.冠军数量 = (select max(冠军数量) from 冠军国家)

eval_err_num:569
easy pred: SELECT SUM(冠军数量) as 总冠军数量 FROM "冠军国家" INNER JOIN "重要赛事" ON t1.赛事id = t2.赛事id GROUP BY t1.国家名称, t2.赛事id ORDER BY 总冠军数量 DESC LIMIT 1
easy gold: select max(冠军数量) from 冠军国家

eval_err_num:570
extra pred: SELECT t1.人群 FROM "重要赛事" t1 INNER JOIN "羽毛球球员" t2 ON t1.赛事id = t2.赛事id WHERE t2.球员id = ( SELECT球员id FROM "羽毛球球员" WHERE 赛事id = <赛事ID> )
extra gold: select T2.人群 from 冠军国家 AS T1 JOIN 重要赛事 AS T2 ON T1.赛事id = T2.赛事id where T1.冠军数量 = (select max(冠军数量) from 冠军国家)

eval_err_num:571
extra pred: SELECT 赛事id, COUNT(*) as 项数 FROM "重要赛事" WHERE 成立时间 >= '1990-01-01' GROUP BY 赛事id ORDER BY 项数 DESC LIMIT 10
extra gold: select T2.比赛间隔年,T2.比赛项目数量 from 冠军国家 AS T1 JOIN 重要赛事 AS T2 ON T1.赛事id = T2.赛事id where T1.冠军数量 = (select max(冠军数量) from 冠军国家)

eval_err_num:572
easy pred: SELECT 医院名 FROM "医院"
easy gold: select 医院名 from 医院

eval_err_num:573
medium pred: SELECT 城市名, 所属城市id FROM "城市" WHERE 所属城市id IN (SELECT 城市id FROM "医院" WHERE 医院名 = '医院1')
medium gold: select 医院名,T2.名称 from 医院 AS T1 join 城市 AS T2 on T1.所属城市id = T2.城市id

eval_err_num:574
medium pred: SELECT 医院名 FROM "医院" WHERE 医院名 NOT IN (SELECT 城市名 FROM "城市" WHERE 所属城市id = '哈尔滨')
medium gold: select 医院名,T2.名称 from 医院 AS T1 join 城市 AS T2 on T1.所属城市id = T2.城市id where 名称 != "哈尔滨"

eval_err_num:575
medium pred: SELECT 医院名, COUNT(*) FROM "医院" WHERE 院士数量 = 1 GROUP BY 医院名 HAVING COUNT(*) > 0
medium gold: select 医院名,T1.院士数量 from 医院 AS T1 join 城市 AS T2 on T1.所属城市id = T2.城市id where 名称 != "哈尔滨"

eval_err_num:576
hard pred: SELECT 医院名, COUNT(*) FROM "医院" WHERE 院士数量 = 1 GROUP BY 医院名 HAVING COUNT(*) > 0 ORDER BY COUNT(*) DESC
hard gold: select 医院名,T1.院士数量 from 医院 AS T1 join 城市 AS T2 on T1.所属城市id = T2.城市id where 名称 != "哈尔滨" order by T1.院士数量

eval_err_num:577
easy pred: SELECT * FROM 重要赛事 WHERE 赛事名称 = '奥运会冠亚军' AND 性别 = '男性'
easy gold: select 赛事名称 from 重要赛事 where 人群 = "男子"

eval_err_num:578
medium pred: SELECT 赛事名称, 赛事间隔年 FROM 重要赛事 WHERE 成立时间 >= '2022-01-01' AND 成立时间 <= '2023-12-31'
medium gold: select 成立时间,比赛间隔年 from 重要赛事 where 人群 = "男子"

eval_err_num:579
easy pred: SELECT COUNT(*) FROM 羽毛球球员 WHERE 球员id NOT IN ( SELECT 球员id FROM 重要赛事 WHERE 赛事id NOT IN ( SELECT 赛事id FROM 奥运会冠亚军 ) )
easy gold: select 比赛项目数量 from 重要赛事 where 人群 = "男子"

eval_err_num:580
hard pred: SELECT 运动员id, 冠军次数 FROM "运动员夺冠次数" WHERE 冠军国家 = '国家名称' AND 赛事id = '赛事名称' AND 冠军数量 > 0
hard gold: select T2.球员姓名 from 球员夺冠次数 AS T1 JOIN 羽毛球球员 AS T2 ON T1.球员id = T2.球员id JOIN 重要赛事 AS T3 ON T1.赛事id = T3.赛事id where T3.人群 = "男子"

eval_err_num:581
hard pred: SELECT 运动员id, 冠军次数, 亚军次数, 季军次数 FROM "运动员夺冠次数" WHERE 冠军国家 = '国家名称' AND 赛事id = '赛事名称' AND 冠军数量 > 0
hard gold: select T2.球员姓名,T1.冠军次数,T1.亚军次数,T1.季军次数 from 球员夺冠次数 AS T1 JOIN 羽毛球球员 AS T2 ON T1.球员id = T2.球员id JOIN 重要赛事 AS T3 ON T1.赛事id = T3.赛事id where T3.人群 = "男子"

eval_err_num:582
medium pred: SELECT 地铁运营里程 FROM 城市 WHERE 城市名称 = '广东'
medium gold: select 所属省份 ,城市名称 ,地铁运营里程 from 城市地铁里程 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 所属省份 = '广东'

eval_err_num:583
medium pred: SELECT 地铁规划里程 FROM 城市 WHERE 城市名称 = '上海'
medium gold: select 城市名称 ,规划里程 from 城市地铁里程 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 所属省份 = '广东'

eval_err_num:584
medium pred: SELECT 城市地铁里程, 地铁运营里程, 在建里程, 规划里程, 已运营线路数, 每公里运营成本, 每公里运营收入 FROM 城市地铁里程表 WHERE 年份 = '2022'
medium gold: select 城市名称 ,在建里程 ,已运营线路数 from 城市地铁里程 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 所属省份 = '广东'

eval_err_num:585
easy pred: SELECT 动物.学名, 动物朋友.朋友id, 动物朋友.理由 FROM 动物 INNER JOIN 动物朋友 ON 动物.动物id = 动物朋友.动物id INNER JOIN 动物的天敌 ON 动物朋友.天敌id = 动物的天敌.动物id WHERE 动物.是否是人类朋友 = 1
easy gold: select 学名 from 动物 where 是否是人类朋友 = "是"

eval_err_num:586
extra pred: SELECT 动物.学名, 动物朋友.朋友id, 动物朋友.理由 FROM 动物 INNER JOIN 动物朋友 ON 动物.动物id = 动物朋友.动物id WHERE 动物朋友.是否是人类朋友 = 1
extra gold: select T2.学名,T3.学名 from 动物朋友 AS T1 JOIN 动物 AS T2 ON T1.动物id = T2.动物id join 动物 AS T3 on T1.朋友id = T3.动物id where T2.学名 in (select 学名 from 动物 where 是否是人类朋友 = "是")

eval_err_num:587
extra pred: SELECT 动物.学名, 动物朋友.朋友id, 动物朋友.理由 FROM 动物 INNER JOIN 动物朋友 ON 动物.动物id = 动物朋友.动物id INNER JOIN 动物的天敌 ON 动物朋友.天敌id = 动物的天敌.动物id WHERE 动物.是否是人类朋友 = 1
extra gold: select T2.学名,T3.学名 from 动物的天敌 AS T1 JOIN 动物 AS T2 ON T1.动物id = T2.动物id join 动物 AS T3 on T1.天敌id = T3.动物id where T2.学名 in (select 学名 from 动物 where 是否是人类朋友 = "是")

eval_err_num:588
easy pred: SELECT * FROM "奥运会冠亚军" WHERE "奥运会名称" = '2022年北京冬奥会' AND "项目名称" = '高山滑雪'
easy gold: select T2.球员姓名 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id

eval_err_num:589
medium pred: SELECT t1.运动员姓名, t2.国家名称 FROM "羽毛球球员" t1 JOIN "冠军国家" t2 ON t1.球员id = t2.国家名称 AND t1.赛事id = t2.赛事id
medium gold: select T2.球员姓名,T2.国籍 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id

eval_err_num:590
hard pred: SELECT t1.运动员姓名, t2.比赛名称 FROM "羽毛球球员" t1 JOIN "重要赛事" t2 ON t1.球员id = t2.赛事id WHERE t2.比赛名称 NOT IN ('奥运会', '世界羽毛球锦标赛') AND t2.比赛名称 NOT IN ('世界杯羽毛球锦标赛', '亚洲羽毛球锦标赛')
hard gold: select T2.球员姓名,T4.赛事名称 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id JOIN 球员夺冠次数 AS T3 ON T2.球员id = T3.球员id JOIN 重要赛事 AS T4 ON T3.赛事id = T4.赛事id

eval_err_num:591
hard pred: SELECT t1.运动员姓名, t2.比赛名称, t1.比赛成绩 FROM "羽毛球球员" t1 JOIN "重要赛事" t2 ON t1.球员id = t2.赛事id WHERE t2.比赛名称 = '高山滑雪' AND t1.比赛成绩 > '0'
hard gold: select T2.球员姓名,T3.冠军次数,T3.亚军次数,T3.季军次数 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id JOIN 球员夺冠次数 AS T3 ON T2.球员id = T3.球员id JOIN 重要赛事 AS T4 ON T3.赛事id = T4.赛事id

easy pred: SELECT * FROM 动物 WHERE 食性 = '草'
easy gold: select 学名 from 动物 where 食性 = "食草"

easy pred: SELECT COUNT(*) FROM 动物
easy gold: select count(*) from 动物 where 食性 = "食草"

eval_err_num:592
extra pred: SELECT 学名, 天敌原因 FROM 动物 JOIN 动物朋友 ON 动物.动物id = 动物朋友.动物id JOIN 动物的天敌 ON 动物朋友.天敌id = 动物的天敌.天敌id WHERE 动物.食性 = '草'
extra gold: select T2.学名,T3.学名 from 动物的天敌 AS T1 JOIN 动物 AS T2 ON T1.动物id = T2.动物id join 动物 AS T3 on T1.天敌id = T3.动物id where T2.学名 in (select 学名 from 动物 where 食性 = "食草")

eval_err_num:593
extra pred: SELECT 学名,天敌原因 FROM 动物 JOIN 动物朋友 ON 动物.动物id = 动物朋友.动物id JOIN 动物的天敌 ON 动物朋友.天敌id = 动物的天敌.天敌id WHERE 动物.食性 = '草'
extra gold: select T2.学名,T3.学名,T1.克星原因 from 动物的天敌 AS T1 JOIN 动物 AS T2 ON T1.动物id = T2.动物id join 动物 AS T3 on T1.天敌id = T3.动物id where T2.学名 in (select 学名 from 动物 where 食性 = "食草")

eval_err_num:594
easy pred: SELECT COUNT(1) AS 开通城市数量 FROM 中国地铁 WHERE 年份 = '2019'
easy gold: select 开通城市数量 from 中国地铁 where 年份 = '2019'

eval_err_num:595
extra pred: SELECT 总里程 AS 总里程 FROM 中国地铁 WHERE 年份 = '1999' AND 年份 = '2000'
extra gold: select 年份 ,开通城市数量 ,总里程 from 中国地铁 where 年份 = '2019' OR 年份 = '1999'

eval_err_num:596
medium pred: SELECT 地铁运营里程 AS 武汉地铁运营里程 FROM 中国地铁 WHERE 城市 = '武汉'
medium gold: select 城市名称 ,地铁运营里程 from 城市地铁里程 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 城市名称 = '武汉'

eval_err_num:597
medium pred: SELECT每日每公里客运量 AS 每日客运量 FROM 城市地铁日均客运量 WHERE 城市 = '武汉' AND 每日每公里客运量 > 0
medium gold: select 城市名称 ,日均客运量 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 城市名称 = '武汉'

eval_err_num:598
medium pred: SELECT 单公里客运量 FROM 城市地铁日均客运量 WHERE 城市 = '武汉' AND 日均客运量 < 10000
medium gold: select 城市名称 ,每日每公里客运量 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 城市名称 = '武汉'

eval_err_num:599
medium pred: SELECT 地铁运营收入 FROM 城市地铁日均客运量 WHERE 城市 = '武汉' AND 日均客运量 > 0
medium gold: select 城市名称 ,每公里运营收入 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 城市名称 = '武汉'

eval_err_num:600
hard pred: SELECT 城市id FROM 中国地铁 WHERE 年份 = (SELECT 年份 FROM 城市 ORDER BY 日均客运量 DESC LIMIT 1) ORDER BY 日均客运量 ASC LIMIT 1
hard gold: select 城市名称 ,日均客运量 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id order by 日均客运量 desc limit 1

eval_err_num:601
extra pred: SELECT 列_2元可乘坐里程 FROM 城市地铁票价 WHERE 城市id = (SELECT 城市id FROM 城市 ORDER BY 列_2元可乘坐里程 DESC LIMIT 1) ORDER BY 列_2元可乘坐里程 ASC LIMIT 1
extra gold: select 城市名称 ,列_2元可乘坐里程 from 城市地铁票价 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 城市名称 = (select 城市名称 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id order by 日均客运量 desc limit 1)

eval_err_num:602
extra pred: SELECT 列_5元可乘坐里程 FROM 城市地铁票价 WHERE 城市id = (SELECT 城市id FROM 城市 ORDER BY 列_5元可乘坐里程 DESC LIMIT 1) ORDER BY 列_5元可乘坐里程 ASC LIMIT 1
extra gold: select 城市名称 ,列_5元可乘坐里程 from 城市地铁票价 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 城市名称 = (select 城市名称 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id order by 日均客运量 desc limit 1)

eval_err_num:603
easy pred: 以下是查询语句: SELECT * FROM "民族" WHERE 民族id IN (SELECT 民族id FROM 民俗节日 WHERE 节日='春节') AND 民族id IN (SELECT 民族id FROM 民俗节日 WHERE 节日='元宵节'); 该语句使用了子查询来获取中国春节和元宵节相关的民族信息,并使用嵌套的子查询来检查这些民族是否在民俗节日表中存在。最终返回的结果包括所有存在的民族id。
easy gold: select 名称 from 民族

eval_err_num:604
medium pred: 以下是查询语句: SELECT 民族id, COUNT(*) AS 人口, SUM(宗教信仰) AS 宗教, COUNT(*) OVER () AS 比例 FROM "民族" WHERE 民族id IN (SELECT 民族id FROM 民俗节日 WHERE 节日='春节') AND 民族id IN (SELECT 民族id FROM 民俗节日 WHERE 节日='元宵节'); 该语句使用了子查询来获取中国春节和元宵节相关的民族信息,并使用嵌套的子查询来检查这些民族是否在民俗节日表中存在。最终返回的结果包括所有存在的民族id、人口和宗教信仰,以及比例。该语句使用了 OVER () 子句来统计每个民族的人口和宗教信仰。
medium gold: select 名称,语言,宗教信仰 from 民族

eval_err_num:605
medium pred: 以下是查询语句: SELECT * FROM "民族" WHERE 节日 IN (SELECT 节日 FROM 民俗节日 WHERE 节日='春节') AND 节日 IN (SELECT 节日 FROM 民俗节日 WHERE 节日='元宵节'); 该语句使用了子查询来获取中国春节和元宵节相关的民族信息,并使用嵌套的子查询来检查这些民族是否在民俗节日表中存在。最终返回的结果包括所有存在的民族id和节日信息。该语句使用了 OVER () 子句来统计每个民族的的节日信息。
medium gold: select T1.名称,T2.节日 from 民族 AS T1 JOIN 民俗节日 AS T2 ON T1.民族id = T2.民族id

eval_err_num:606
medium pred: SELECT人口最少的民族id FROM "民族" WHERE人口 < 4000
medium gold: select 名称,人口 from 民族 order by 人口 asc limit 1

eval_err_num:607
hard pred: SELECT 城市名称, 人口比例 FROM "民族城市" WHERE 民族id IN (SELECT民族id FROM "民族" WHERE人口 > 1000)
hard gold: select T1.名称,T2.城市名称,T2.比例 from 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id order by T1.人口 asc limit 1

eval_err_num:608
medium pred: SELECT 宗教信仰 FROM "民族城市" WHERE 民族id IN (SELECT民族id FROM "民族" WHERE人口 > 1000 AND 地域 = '宁夏')
medium gold: select T1.宗教信仰 from 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id where T2.城市名称 = "宁夏"

eval_err_num:609
medium pred: SELECT 语言 FROM "民族" WHERE 人口 > 1000 AND 地域 = '宁夏'
medium gold: select T1.语言 from 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id where T2.城市名称 = "宁夏"

eval_err_num:610
easy pred: 端午节时间 --------------------- 2023-06-05
easy gold: select 时间 from 民俗节日 where 节日 = "端午节"

eval_err_num:611
medium pred: 端午节人口 --------------------- 1000000
medium gold: select T2.人口 from 民俗节日 AS T1 JOIN 民族 AS T2 ON T1.民族id = T2.民族id where T1.节日 = "端午节"

eval_err_num:612
hard pred: 端午节城市 --------------------- 香江城市
hard gold: select T3.城市名称 from 民俗节日 AS T1 JOIN 民族 AS T2 ON T1.民族id = T2.民族id JOIN 民族城市 AS T3 ON T2.民族id = T3.民族id where T1.节日 = "端午节"

eval_err_num:613
medium pred: 内蒙古民族比例 | 民族数量 ------------------- 藏族 | 10 蒙古族 | 5 回族 | 3 其他 | 10
medium gold: select T1.名称 from 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id where T2.城市名称 = "内蒙古" and T2.比例 >= "10%"

eval_err_num:614
easy pred: SELECT 球员id as 姓名 FROM 篮球运动员 GROUP BY 球员id ORDER BY 球员id asc
easy gold: select 中文名 from 篮球运动员

easy pred: SELECT * FROM 篮球运动员 WHERE 国籍 = '美国'
easy gold: select 中文名 from 篮球运动员 where 国籍 = "美国"

hard pred: SELECT 球员id FROM 篮球运动员 WHERE 参加选秀年 = '1984'
hard gold: select 中文名 from 篮球运动员 where 国籍 = "美国" order by 参加选秀年 limit 1

extra pred: SELECT 球员id FROM 篮球运动员 WHERE 获得球队 = 'NBA总冠军'
extra gold: select distinct 中文队名 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id JOIN 球队 AS T3 ON T1.所属球队 = T3.球队id where 中文名 = (select 中文名 from 篮球运动员 where 国籍 = "美国" order by 参加选秀年 limit 1 )

eval_err_num:615
extra pred: SELECT SUM(次数) as 总共次数 FROM ( SELECT 赛季, 球员id, COUNT(*) as 次数 FROMMVP记录 GROUP BY 赛季, 球员id ) sub WHERE 所属球队 = 'NBA总冠军'
extra gold: select count(*) from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id JOIN 球队 AS T3 ON T1.所属球队 = T3.球队id where 中文名 = (select 中文名 from 篮球运动员 where 国籍 = "美国" order by 参加选秀年 limit 1 )

eval_err_num:616
easy pred: SELECT * FROM "民族" WHERE 词条id IN (SELECT 词条id FROM "民俗节日") AND 词条id NOT IN (SELECT 词条id FROM "民族城市")
easy gold: select 名称 from 民族

eval_err_num:617
medium pred: SELECT 词条id, 语言, 宗教信仰 FROM "民族" WHERE 词条id IN (SELECT 词条id FROM "民俗节日") AND 词条id NOT IN (SELECT 词条id FROM "民族城市")
medium gold: select 名称, 语言, 宗教信仰 from 民族

eval_err_num:618
medium pred: SELECT 词条id, COUNT(*) as 人口 FROM "民族" WHERE 词条id IN (SELECT 词条id FROM "民俗节日") AND 词条id NOT IN (SELECT 词条id FROM "民族城市") GROUP BY 词条id ORDER BY COUNT(*) DESC
medium gold: select 名称, 语言, 宗教信仰 from 民族 order by 人口 desc

eval_err_num:619
hard pred: SELECT t1.姓名, t1.民族, t1.经纪公司, t1.职业 FROM "艺人" t1 INNER JOIN "综艺节目" t2 ON t1.id = t2.艺人id INNER JOIN "平台" t3 ON t2.平台id = t3.词条id WHERE t3.口碑 = '1' GROUP BY t1.姓名, t1.民族, t1.经纪公司, t1.职业 ORDER BY 姓名
hard gold: select T2.姓名 from 节目阵容 AS T1 JOIN 艺人 AS T2 ON T1.艺人id = T2.id JOIN 综艺节目 AS T3 ON T1.综艺节目id = T3.节目id where T3.综艺名称 = "妻子的浪漫旅行"

eval_err_num:620
hard pred: SELECT s.姓名, s.民族, p.综艺节目, p.身份 FROM "节目阵容" s INNER JOIN "综艺节目" p ON s.综艺节目id = p.节目id WHERE p.口碑 = '1' GROUP BY s.姓名, s.民族, p.综艺节目, p.身份 ORDER BY 参加期数
hard gold: select T1.身份, T1.参加期数 from 节目阵容 AS T1 JOIN 艺人 AS T2 ON T1.艺人id = T2.id JOIN 综艺节目 AS T3 ON T1.综艺节目id = T3.节目id where T3.综艺名称 = "妻子的浪漫旅行"

eval_err_num:621
extra pred: SELECT s.姓名, s.民族, p.综艺节目 FROM "节目阵容" s INNER JOIN "综艺节目" p ON s.综艺节目id = p.节目id WHERE p.口碑 = '1' GROUP BY s.姓名, s.民族, p.综艺节目 HAVING COUNT(DISTINCT p.期数) = (SELECT COUNT(DISTINCT t.期数) FROM "综艺节目" t WHERE t.节目id = p.节目id AND t.口碑 = '1') + 1
extra gold: select T2.综艺名称 from 节目阵容 AS T1 JOIN 综艺节目 AS T2 ON T1.综艺节目id = T2.节目id where T1.艺人id = (select T1.艺人id from 节目阵容 AS T1 JOIN 综艺节目 AS T2 ON T1.综艺节目id = T2.节目id where T2.综艺名称 = "妻子的浪漫旅行")

eval_err_num:622
medium pred: SELECT 电视台.name,首播平台.name AS首播平台 FROM 电视台 JOIN 首播平台 ON 电视台.电视台id = 首播平台.电视台id WHERE 首播平台.name = '爱奇艺'
medium gold: select T2.名称 from 电视剧 AS T1 JOIN 电视台 AS T2 ON T1.首播平台id = T2.电视台id where T1.剧名 = "庆余年"

eval_err_num:623
medium pred: SELECT 时间 AS每晚时间 FROM 电视台 WHERE 电视台.name = '芒果TV'
medium gold: select T1.时间段 from 电视剧收视 AS T1 JOIN 电视剧 AS T2 ON T1.电视剧id = T2.电视剧编号 where T2.剧名 = "庆余年"

medium pred: SELECT 收视率 FROM 电视剧收视 WHERE 时间段 = '2022年1月1日至2022年12月31日'
medium gold: select T1.收视率 from 电视剧收视 AS T1 JOIN 电视剧 AS T2 ON T1.电视剧id = T2.电视剧编号 where T2.剧名 = "庆余年"

easy pred: SELECT * FROM 电视剧 WHERE 首播平台id = '1' AND 出品公司 = '爱奇艺'
easy gold: select 剧名 from 电视剧 where 出品公司 = "北京爱奇艺科技有限公司"

eval_err_num:624
medium pred: SELECT t1.剧名, t1.出品时间, t1.出品公司, t1.发行公司, t2.收视率, t3.更多_信息 from 电视剧 as t1 join 电视剧收视 as t2 on t1.电视剧编号 = t2.电视剧id join 电视台 as t3 on t2.平台id = t3.电视台id WHERE t1.剧名 = '这部剧' AND t2.更多_信息='很有教育意义' AND t3.收视率 = '很高'
medium gold: select T1.收视率 from 电视剧收视 AS T1 JOIN 电视剧 AS T2 ON T1.电视剧id = T2.电视剧编号 where T2.出品公司 = "北京爱奇艺科技有限公司"

eval_err_num:625
hard pred: SELECT t1.剧名, t1.出品时间, t1.出品公司, t1.发行公司, t2.收视率, t3.更多_信息 from 电视剧 as t1 join 电视剧收视 as t2 on t1.电视剧编号 = t2.电视剧id join 电视台 as t3 on t2.平台id = t3.电视台id WHERE t1.剧名 = '这部剧' AND t2.更多_信息='相差这么多' AND t3.收视率 > t2.收视率
hard gold: select T3.名称,T1.收视率 from 电视剧收视 AS T1 JOIN 电视剧 AS T2 ON T1.电视剧id = T2.电视剧编号 JOIN 电视台 AS T3 ON T1.平台id = T3.电视台id where T2.出品公司 = "北京爱奇艺科技有限公司"

eval_err_num:626
hard pred: SELECT t1.剧名, t1.出品时间, t1.出品公司, t1.发行公司, t2.收视率, t3.更多_信息 from 电视剧 as t1 join 电视剧收视 as t2 on t1.电视剧编号 = t2.电视剧id join 电视台 as t3 on t2.平台id = t3.电视台id WHERE t1.剧名 = '这部剧' AND t3.电视台id = '1' AND t2.更多_信息='是同一个电视台' AND t2.时间段 = '2020-05-01'
hard gold: select T3.名称,T1.时间段,T1.收视率 from 电视剧收视 AS T1 JOIN 电视剧 AS T2 ON T1.电视剧id = T2.电视剧编号 JOIN 电视台 AS T3 ON T1.平台id = T3.电视台id where T2.出品公司 = "北京爱奇艺科技有限公司"

easy pred: SELECT 剧名, 出品公司, 发行公司 FROM 电视剧 WHERE 首播平台id = ( SELECT 电视台id FROM 电视台 WHERE 名称 = '正午阳光' )
easy gold: select 剧名 from 电视剧 where 出品公司 = "东阳正午阳光影视有限公司"

easy pred: SELECT 出品时间 FROM 电视剧 WHERE 首播平台id = ( SELECT 电视台id FROM 电视台 WHERE 名称 = '正午阳光' )
easy gold: select 出品时间 from 电视剧 where 出品公司 = "东阳正午阳光影视有限公司"

eval_err_num:627
medium pred: SELECT 电视台id FROM 电视剧 WHERE 剧名 in ( SELECT 剧名 FROM 电视剧收视 WHERE 电视台id = ( SELECT 电视台id FROM 电视台 WHERE 名称 = '正午阳光' ) )
medium gold: select T2.名称 from 电视剧 AS T1 JOIN 电视台 AS T2 ON T1.首播平台id = T2.电视台id where T1.出品公司 = "东阳正午阳光影视有限公司"

eval_err_num:628
hard pred: SELECT 时间段 FROM 电视剧收视 WHERE 电视剧id = ( SELECT 电视剧id FROM 电视剧 WHERE 电视台id = ( SELECT 电视台id FROM 电视台 WHERE 名称 = '正午阳光' ) )
hard gold: select T3.时间段 from 电视剧 AS T1 JOIN 电视台 AS T2 ON T1.首播平台id = T2.电视台id JOIN 电视剧收视 AS T3 ON T1.电视剧编号 = T3.电视剧id where T1.出品公司 = "东阳正午阳光影视有限公司"

eval_err_num:629
hard pred: SELECT 收视率 FROM 电视剧收视 WHERE 时间段 = ( SELECT 时间段 FROM 电视剧收视 WHERE 电视台id = ( SELECT 电视台id FROM 电视台 WHERE 名称 = '正午阳光' ) ) AND 时间 >= '2021-01-01' AND 时间 < '2021-02-18'
hard gold: select T3.收视率 from 电视剧 AS T1 JOIN 电视台 AS T2 ON T1.首播平台id = T2.电视台id JOIN 电视剧收视 AS T3 ON T1.电视剧编号 = T3.电视剧id where T1.出品公司 = "东阳正午阳光影视有限公司"

easy pred: SELECT * FROM 电视台 WHERE 名称 = '中国大陆'
easy gold: select 名称 from 电视台

medium pred: SELECT 隶属机构 FROM 电视台
medium gold: select 名称,隶属机构 from 电视台

medium pred: SELECT 上线时间,开播时间 FROM 电视台
medium gold: select 名称,上线时间,开播时间 from 电视台

medium pred: SELECT 剧名, 出品公司, 发行公司 FROM 电视剧
medium gold: select T2.名称,T1.剧名 from 电视剧 AS T1 JOIN 电视台 AS T2 ON T1.首播平台id = T2.电视台id

eval_err_num:630
medium pred: SELECT 平台名称 FROM "平台" WHERE 平台名称 = '创造101'
medium gold: select T1.平台名称 from 平台 AS T1 JOIN 综艺节目 AS T2 ON T1.平台id = T2.平台id where T2.综艺名称 = "创造101"

eval_err_num:631
medium pred: SELECT 节目名称, 平台id, COUNT(*) as 观影量 FROM "综艺节目" WHERE 节目id = '创造101' AND 平台id = '平台' GROUP BY 节目名称, 平台id ORDER BY 观影量 DESC LIMIT 10
medium gold: select T2.期数 from 平台 AS T1 JOIN 综艺节目 AS T2 ON T1.平台id = T2.平台id where T2.综艺名称 = "创造101"

eval_err_num:632
medium pred: SELECT 是否每周播放, 节目名称, 首播时间, 每周播出时间 FROM "综艺节目" WHERE 节目id = '创造101' AND 平台id = '平台' GROUP BY 是否每周播放, 节目名称, 首播时间 HAVING 每周播出时间 = '每周一次' ORDER BY 是否每周播放 DESC, 节目名称, 首播时间 DESC LIMIT 1
medium gold: select T2.每周播出时间 from 平台 AS T1 JOIN 综艺节目 AS T2 ON T1.平台id = T2.平台id where T2.综艺名称 = "创造101"

eval_err_num:633
medium pred: SELECT 季度会费, COUNT(*) as 观影量 FROM "综艺节目" WHERE 节目id = '创造101' AND 平台id = '平台' GROUP BY 季度会费 HAVING 观影量 = (SELECT COUNT(*) from "综艺节目" where 节目id = '创造101' and 平台id = '平台') * 4 ORDER BY 季度会费 DESC LIMIT 10
medium gold: select T1.季度会费 from 平台 AS T1 JOIN 综艺节目 AS T2 ON T1.平台id = T2.平台id where T2.综艺名称 = "创造101"

eval_err_num:634
hard pred: SELECT * FROM "节目阵容" WHERE "节目id" IN (SELECT "节目id" FROM "综艺节目" WHERE "平台id" = (SELECT "词条id" FROM "平台")) AND "参加期数" = 1
hard gold: select T3.姓名 from 节目阵容 AS T1 JOIN 综艺节目 AS T2 ON T1.综艺节目id = T2.节目id JOIN 艺人 AS T3 ON T1.艺人id = T3.id where T2.综艺名称 = "妻子的浪漫旅行"

eval_err_num:635
hard pred: SELECT * FROM "嘉宾" WHERE "姓名" = 'XXX' AND "经纪公司" = 'XXX'
hard gold: select T3.职业 from 节目阵容 AS T1 JOIN 综艺节目 AS T2 ON T1.综艺节目id = T2.节目id JOIN 艺人 AS T3 ON T1.艺人id = T3.id where T2.综艺名称 = "妻子的浪漫旅行"

eval_err_num:636
medium pred: SELECT "平台名称" FROM "平台" WHERE "平台id" = (SELECT "词条id" FROM "平台") AND "首播时间" > "现在时间"
medium gold: select T1.平台名称 from 平台 AS T1 JOIN 综艺节目 AS T2 ON T1.平台id = T2.平台id where T2.综艺名称 = "妻子的浪漫旅行"

eval_err_num:637
hard pred: SELECT平台id, MAX(年会费) AS 年会费_价格低廉 FROM "平台" GROUP BY 平台id ORDER BY MAX(年会费) DESC LIMIT 1
hard gold: select 平台名称 from 平台 where 年会费 = (select min(年会费) from 平台)

eval_err_num:638
hard pred: SELECT SUM(年会费) AS 年会费 FROM "平台" WHERE 平台id IN ( SELECT 平台id FROM "综艺节目" WHERE 节目id IN ( SELECT 节目id FROM "节目阵容" ) ) GROUP BY 平台id HAVING COUNT(DISTINCT 节目id) = ( SELECT COUNT(DISTINCT 节目id) FROM "节目阵容" ) LIMIT 1
hard gold: select distinct 年会费 from 平台 where 年会费 = (select min(年会费) from 平台)

eval_err_num:639
hard pred: SELECT 季度会费 AS 季度会费_价格低廉 FROM "平台" WHERE 平台id IN ( SELECT 平台id FROM "综艺节目" WHERE 节目id IN ( SELECT 节目id FROM "节目阵容" ) ) GROUP BY 平台id ORDER BY MIN(季度会费) DESC LIMIT 1
hard gold: select 平台名称 from 平台 where 季度会费 = (select min(季度会费) from 平台)

eval_err_num:640
hard pred: SELECT SUM(成本) AS 成本 FROM ( SELECT 成本 + (费用 - 成本) * 数量 AS 成本 FROM "商品" WHERE 商品id IN ( SELECT 商品id FROM "商品分类" WHERE 分类id IN ( SELECT 分类id FROM "分类标签" WHERE 标签id IN ( SELECT 标签id FROM "广告标签" WHERE 广告id IN ( SELECT 广告id FROM "广告" WHERE 平台id IN ( SELECT 平台id FROM "平台" WHERE 节目id IN ( SELECT 节目id FROM "节目阵容" WHERE 艺人id IN ( SELECT 艺人id FROM "艺人" WHERE id IN ( SELECT id FROM "艺人" WHERE 性别 = '男' FROM "艺人" WHERE 经纪公司 = 'ABC 经纪公司' FROM "艺人" WHERE 职业 = '艺人' ) ) ) ) ) ) ) ) ) GROUP BY 商品id HAVING SUM(成本) > 1000
hard gold: select distinct 季度会费 from 平台 where 季度会费 = (select min(季度会费) from 平台)

eval_err_num:641
extra pred: SELECT 口碑, 节目id, 节目名称, SUM(观看量) AS 观看量 FROM "平台" WHERE 口碑 = '良好' GROUP BY 口碑, 节目id, 节目名称 HAVING SUM(观看量) > 0
extra gold: select T1.口碑,T2.综艺名称 from 平台 AS T1 JOIN 综艺节目 AS T2 ON T1.平台id = T2.平台id where T1.季度会费 = (select min(季度会费) from 平台)

eval_err_num:642
hard pred: SELECT SELECT * FROM "综艺节目" WHERE "节目名称" = '奇葩说' AND "平台id" = 12345 ORDER BY "每周播出时间" DESC LIMIT 1
hard gold: select T2.综艺名称 from 节目阵容 AS T1 JOIN 综艺节目 AS T2 ON T1.综艺节目id = T2.节目id JOIN 艺人 AS T3 ON T1.艺人id = T3.id where T3.姓名 = "傅首尔"

eval_err_num:643
hard pred: SELECT SELECT * FROM "综艺节目" WHERE "节目名称" = '奇葩说' AND "首播时间" > '2022-01-01' AND "首播时间" < '2022-02-01' ORDER BY "播出状态" DESC LIMIT 1
hard gold: select T2.播出状态 from 节目阵容 AS T1 JOIN 综艺节目 AS T2 ON T1.综艺节目id = T2.节目id JOIN 艺人 AS T3 ON T1.艺人id = T3.id where T3.姓名 = "傅首尔"

eval_err_num:644
extra pred: SELECT SELECT * FROM "平台" WHERE "平台名称" = '知乎' AND "平台id" = '12345' ORDER BY "平台名称" DESC LIMIT 1
extra gold: select T4.平台名称 from 节目阵容 AS T1 JOIN 艺人 AS T2 ON T1.艺人id = T2.id JOIN 综艺节目 AS T3 ON T1.综艺节目id = T3.节目id JOIN 平台 AS T4 ON T4.平台id = T3.平台id where T2.姓名 = "傅首尔"

eval_err_num:645
easy pred: SELECT * FROM "妻子的浪漫旅行" WHERE "日期" = (SELECT "开始播的时间" FROM "电视节目" WHERE "节目id" = "妻子的浪漫旅行"."节目id") AND "status" = "预备役"
easy gold: select 播出状态 from 综艺节目 where 综艺名称 = "妻子的浪漫旅行"

eval_err_num:646
easy pred: SELECT * FROM "妻子的浪漫旅行" WHERE "status" = "已播出" AND "日期" NOT IN (SELECT "开始播的时间" FROM "电视节目" WHERE "节目id" = "妻子的浪漫旅行"."节目id") AND "日期" NOT IN (SELECT "开始播的时间" FROM "电视节目" WHERE "节目id" = "其他电视节目"."节目id")
easy gold: select 首播时间 from 综艺节目 where 综艺名称 = "妻子的浪漫旅行"

eval_err_num:647
easy pred: SELECT "日期" FROM "电视节目" WHERE "节目id" = (SELECT "开始播的时间" FROM "电视节目" WHERE "每周播出时间" = '周一' AND "平台id" = '平台"."节目id") AND "status" = '已播出'
easy gold: select 每周播出时间 from 综艺节目 where 综艺名称 = "妻子的浪漫旅行"

eval_err_num:648
easy pred: SELECT COUNT(*) FROM "节目阵容" WHERE "参加期数" = (SELECT COUNT(*) FROM "综艺节目" WHERE "平台id" = '平台"."节目id' AND "期数" = '期数"."参加期数') AND "status" = '已参加'
easy gold: select 期数 from 综艺节目 where 综艺名称 = "妻子的浪漫旅行"

eval_err_num:649
easy pred: SELECT * FROM "综艺节目" WHERE首播时间 >= '2022-01-01 19:00:00' AND首播时间 < '2022-01-01 22:00:00' AND每周播出时间 >= '2022-01-01' AND每周播出时间 < '2022-01-02' AND播出状态 = '开始'
easy gold: select 综艺名称 from 综艺节目 where 每周播出时间 = "周五22:00"

eval_err_num:650
hard pred: SELECT * FROM "嘉宾" WHERE 姓名 = '马东' AND 经纪公司 = '腾讯'
hard gold: select T3.姓名 from 节目阵容 AS T1 JOIN 综艺节目 AS T2 ON T1.综艺节目id = T2.节目id JOIN 艺人 AS T3 ON T1.艺人id = T3.id where T2.综艺名称 = "奇葩说第六季"

eval_err_num:651
hard pred: SELECT * FROM "节目阵容" WHERE 节目名称 = '奇葩说' AND 参加期数 = 1
hard gold: select T1.身份 from 节目阵容 AS T1 JOIN 综艺节目 AS T2 ON T1.综艺节目id = T2.节目id JOIN 艺人 AS T3 ON T1.艺人id = T3.id where T2.综艺名称 = "奇葩说第六季" and T3.姓名 = "李诞"

eval_err_num:652
easy pred: SELECT * FROM "艺人" WHERE 经纪公司 = '嘉行天下'
easy gold: select 姓名 from 艺人 where 经纪公司 = "嘉行天下"

eval_err_num:653
medium pred: SELECT DISTINCT "姓名" "民族" "经纪公司" "职业" FROM "艺人" WHERE "经纪公司" = '嘉行天下'
medium gold: select 姓名,职业 from 艺人 where 经纪公司 = "嘉行天下"

eval_err_num:654
hard pred: SELECT * FROM "综艺节目" WHERE "制作公司" = '嘉行天下' AND "平台id" = '1'
hard gold: select T2.姓名,T3.综艺名称 from 节目阵容 AS T1 JOIN 艺人 AS T2 ON T1.艺人id = T2.id JOIN 综艺节目 AS T3 ON T1.综艺节目id = T3.节目id where T2.经纪公司 = "嘉行天下"

eval_err_num:655
hard pred: SELECT "期数" FROM "综艺节目" WHERE "制作公司" = '嘉行天下' AND "平台id" = '1' AND "期数" > 0
hard gold: select T1.参加期数 from 节目阵容 AS T1 JOIN 艺人 AS T2 ON T1.艺人id = T2.id JOIN 综艺节目 AS T3 ON T1.综艺节目id = T3.节目id where T2.经纪公司 = "嘉行天下"

eval_err_num:656
hard pred: SELECT 城市名, 城市ID, 老年人口占比 FROM "城市" JOIN "医院" ON 城市ID = "城市"."词条id" JOIN "医院排名" ON 医院ID = "医院"."医院id" WHERE 城市名 = ( SELECT 最高老年人口占比 FROM "城市" GROUP BY 城市名 ORDER BY 老年人口占比 DESC LIMIT 1 )
hard gold: select 名称 from 城市 where 老年人口占比 in (select max(老年人口占比) from 城市)

eval_err_num:657
hard pred: SELECT number FROM "医院" WHERE "医院"."医院id" = ( SELECT "医院"."医院id" FROM "医院" WHERE "医院"."名称" = "北京市" ORDER BY number DESC LIMIT 1 )
hard gold: select 人口数量 * 老年人口占比 from 城市 where 老年人口占比 in (select max(老年人口占比) from 城市)

eval_err_num:658
extra pred: SELECT * FROM "城市" WHERE "城市"."名称" = ( SELECT "城市"."名称" FROM "城市" WHERE "城市"."所属省份" = "中国" ORDER BY "医院"."医院id" DESC LIMIT 1 )
extra gold: select T1.医院名 from 医院 AS T1 JOIN 城市 AS T2 ON T1.所属城市id = T2.城市id where T2.老年人口占比 in (select max(老年人口占比) from 城市)

eval_err_num:659
extra pred: SELECT "医院"."医院id", "医院"."名称", "医院"."所属城市id", "医院"."医院等级", "科室数量", "职工数量" FROM "医院" WHERE "医院"."所属城市id" = ( SELECT "医院"."所属城市id" FROM "城市" WHERE "城市"."名称" = "你所查询的医院的城市名" ORDER BY "医院"."医院id" DESC LIMIT 1 )
extra gold: select T1.职工数量,T1.科室数量 from 医院 AS T1 JOIN 城市 AS T2 ON T1.所属城市id = T2.城市id where T2.老年人口占比 in (select max(老年人口占比) from 城市)

eval_err_num:660
medium pred: SELECT 医院名 FROM "医院" JOIN "医院排名" ON 医院名 = "医院"."医院id" JOIN "城市" ON 医院名 = "城市"."词条id" WHERE "医院排名"."年份" = ( SELECT MAX(年份) FROM "医院" JOIN "医院排名" ON 医院名 = "医院"."医院id" WHERE "医院排名"."排名" = 1 )
medium gold: select T2.医院名 from 特色科室 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where T1.科室 = "肿瘤科" and T1.是否重点 = "是"

eval_err_num:661
medium pred: SELECT 医院名 FROM "医院" WHERE 医院名 IN ( SELECT 医院名 FROM "医院排名" JOIN "城市" ON 医院名 = "医院"."医院id" WHERE "医院排名"."医院等级" = "三甲医院" )
medium gold: select T2.医院等级 from 特色科室 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where T1.科室 = "肿瘤科" and T1.是否重点 = "是"

eval_err_num:662
medium pred: SELECT 医院名, COUNT(*) AS院士数量 FROM "医院" JOIN "特色科室" ON 医院名 = "特色科室"."医院id" WHERE 医院名 NOT IN ( SELECT 医院名 FROM "医院" JOIN "医院排名" ON 医院名 = "医院"."医院id" JOIN "城市" ON 医院名 = "医院"."所属城市id" WHERE "医院排名"."医院等级" = "三甲医院" AND "特色科室"."科室" NOT IN ( SELECT "特色科室"."科室" FROM "特色科室" WHERE 医院名 = "医院"."所属城市id" ) )
medium gold: select T2.院士数量 from 特色科室 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where T1.科室 = "肿瘤科" and T1.是否重点 = "是"

eval_err_num:663
hard pred: SELECT 医院名, COUNT(*) as院士数量 FROM "医院" WHERE 院士数量 = ( SELECT COUNT(*) as院士数量 FROM "医院" WHERE 医院名 = '医院名' )
hard gold: select 医院名 from 医院 where 院士数量 = (select max(院士数量) from 医院)

eval_err_num:664
hard pred: SELECT 医院等级 FROM "医院" WHERE 医院名 = '医院名'
hard gold: select 医院等级 from 医院 where 院士数量 = (select max(院士数量) from 医院)

eval_err_num:665
extra pred: SELECT 城市名 FROM "城市" WHERE 词条id = '医院名'
extra gold: select T1.名称 from 城市 AS T1 JOIN 医院 AS T2 ON T1.城市id = T2.所属城市id where T2.院士数量 = (select max(院士数量) from 医院)

eval_err_num:666
medium pred: 以下是查询语句: SELECT * FROM "医院" WHERE "所属城市id" = ( SELECT "词条id" FROM "城市" WHERE "城市名" = '内蒙古' AND "人口数量" > 0 )
medium gold: select T1.医院名 from 医院 AS T1 JOIN 城市 AS T2 ON T1.所属城市id = T2.城市id where T2.所属省份 = "内蒙古"

eval_err_num:667
medium pred: 以下是查询语句: SELECT * FROM "医院" WHERE "医院等级" = '三甲医院'
medium gold: select T1.医院等级 from 医院 AS T1 JOIN 城市 AS T2 ON T1.所属城市id = T2.城市id where T2.所属省份 = "内蒙古"

eval_err_num:668
hard pred: 以下是查询语句: SELECT * FROM "医院" WHERE "医院等级" <> '三甲医院' AND "科室" = '耳鼻喉科'
hard gold: select T3.是否重点 from 医院 AS T1 JOIN 城市 AS T2 ON T1.所属城市id = T2.城市id JOIN 特色科室 AS T3 ON T3.医院id = T1.医院id where T2.所属省份 = "内蒙古"

eval_err_num:669
medium pred: SELECT * FROM "医院" WHERE "医院名" = '吉林大学白求恩第一医院' AND "医院等级" = '一级甲等'
medium gold: select T1.排名 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where T2.医院名 = "吉林大学白求恩第一医院"

eval_err_num:670
medium pred: SELECT (SELECT COUNT(*) FROM "医院" WHERE "医院名" = '吉林大学白求恩第一医院' AND "医院等级" = '一级甲等') AS 工作量, (SELECT COUNT(*) FROM "医院排名" WHERE "医院id" = '吉林大学白求恩第一医院' AND "医院等级" = '一级甲等') AS 接待病患数量 FROM "医院" WHERE "医院名" = '吉林大学白求恩第一医院' AND "医院等级" = '一级甲等'
medium gold: select T1.接待病患数量 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where T2.医院名 = "吉林大学白求恩第一医院"

eval_err_num:671
medium pred: SELECT (SELECT COUNT(*) FROM "手术" WHERE "手术日期" >= '2023-01-01' AND "手术日期" <= '2023-01-02') AS 手术数量 FROM "手术"
medium gold: select T1.手术数量 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where T2.医院名 = "吉林大学白求恩第一医院"

eval_err_num:672
easy pred: SELECT "职工数量" AS 当前员工数量, (SELECT COUNT(*) FROM "医院" WHERE "医院名" = '吉林大学白求恩第一医院' AND "医院等级" = '一级甲等') AS 现有员工数量 FROM "医院"
easy gold: select 职工数量 from 医院 where 医院名 = "吉林大学白求恩第一医院"

eval_err_num:673
medium pred: SELECT "所属城市id" as 城市名称, "医院id" as 医院名, "医院等级" as 医院等级, "职工数量" as 职工数量, "院士数量" as 院士数量, "科室数量" as 科室数量, "重点专科数量" as 重点专科数量, "科室名称" as 科室名称, "科室id" as 科室id, "是否重点" as 重点, "是否研究中心" as 研究中心, "特色科室数量" as 特色科室数量, "特色科室名称" as 特色科室名称, "特色科室id" as 特色科室id, "所属省份" as 省份, "人口数量" as 人口数量, "老年人口占比" as 老年人口占比, "2023-01-01" as 创建日期, "2023-01-02" as 更新日期 FROM "城市" WHERE "所属省份" = '辽宁省' AND "城市名称" != '沈阳市' AND "医院id" NOT IN (SELECT "医院id" FROM "特色科室")
medium gold: select T1.名称 from 城市 AS T1 JOIN 医院 AS T2 ON T1.城市id = T2.所属城市id where T2.医院名 = "吉林大学白求恩第一医院"

eval_err_num:674
hard pred: SELECT 城市名, 人口数量 FROM "城市" GROUP BY 城市名 ORDER BY 人口数量 DESC LIMIT 1
hard gold: select 名称 from 城市 where 人口数量 = (select max(人口数量) from 城市)

eval_err_num:675
hard pred: SELECT t1.老年人口占比 FROM "城市" t1 JOIN "医院" t2 ON t1.城市名 = t2.城市名 JOIN "医院排名" t3 ON t1.医院id = t3.医院id WHERE t2.医院id = ( SELECT MAX(医院id) FROM "医院" GROUP BY 医院名 )
hard gold: select 老年人口占比 from 城市 where 人口数量 = (select max(人口数量) from 城市)

eval_err_num:676
hard pred: SELECT t1.老年人数量 FROM "城市" t1 JOIN "医院" t2 ON t1.城市名 = t2.城市名 JOIN "医院排名" t3 ON t1.医院id = t3.医院id WHERE t2.医院id = ( SELECT MAX(医院id) FROM "医院" GROUP BY 医院名 )
hard gold: select 老年人口占比 * 人口数量 from 城市 where 人口数量 = (select max(人口数量) from 城市)

eval_err_num:677
extra pred: SELECT * FROM "医院" WHERE 城市名 = ( SELECT 城市名 FROM "城市" WHERE 词条id = 12345 )
extra gold: select T2.医院名,T1.排名 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id JOIN 城市 AS T3 ON T3.城市id = T2.所属城市id where T3.人口数量 = (select max(人口数量) from 城市)

eval_err_num:678
hard pred: SELECT t1.医院名, t1.科室数量, t1.重点专科数量 FROM "医院" t1 INNER JOIN "医院排名" t2 ON t1.医院名 = t2.医院名 AND t1.所属城市id = t2.城市id INNER JOIN "城市" t3 ON t2.城市名 = t3.名称 AND t2.所属省份 = t3.所属省份 INNER JOIN "特色科室" t4 ON t3.城市id = t4.医院id AND t4.是否重点 = t4.是否重点 WHERE t1.重点专科数量 = ( SELECT COUNT(*) FROM "特色科室" WHERE 医院名 = t1.医院名 ) ORDER BY t1.重点专科数量 DESC LIMIT 1
hard gold: select 医院名 from 医院 where 重点专科数量 = (select max(重点专科数量) from 医院)

eval_err_num:679
hard pred: SELECT COUNT(*) as 数量 FROM "医院" t1 INNER JOIN "医院排名" t2 ON t1.医院名 = t2.医院名 AND t1.所属城市id = t2.城市id INNER JOIN "城市" t3 ON t2.城市名 = t3.名称 AND t2.所属省份 = t3.所属省份 INNER JOIN "特色科室" t4 ON t3.城市id = t4.医院id AND t4.是否重点 = t4.是否重点 WHERE t1.重点专科数量 = ( SELECT COUNT(*) FROM "特色科室" WHERE 医院名 = t1.医院名 ) ORDER BY 数量 DESC LIMIT 1
hard gold: select 重点专科数量 from 医院 where 重点专科数量 = (select max(重点专科数量) from 医院)

eval_err_num:680
extra pred: SELECT * FROM "医院" t1 INNER JOIN "医院排名" t2 ON t1.医院名 = t2.医院名 AND t1.所属城市id = t2.城市id INNER JOIN "城市" t3 ON t2.城市名 = t3.名称 AND t2.所属省份 = t3.所属省份 INNER JOIN "特色科室" t4 ON t3.城市id = t4.医院id AND t4.是否重点 = t4.是否重点 WHERE t1.重点专科数量 = ( SELECT COUNT(*) FROM "特色科室" WHERE 医院名 = t1.医院名 ) ORDER BY 医院名, 科室数量, 重点专科数量 LIMIT 1
extra gold: select T1.科室 from 特色科室 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where T1.是否重点 = "是" and T2.重点专科数量 = (select max(重点专科数量) from 医院)

eval_err_num:681
hard pred: SELECT 城市.名称, 城市.所属省份, 城市.人口数量, COUNT(*) as 老年人口占比 FROM "城市" 城市 JOIN "医院" 医院 ON 城市.所属城市id = 医院.词条id JOIN "医院排名" 医院排名 ON 医院.医院id = 医院排名.医院id JOIN "城市" 城市 ON 城市.城市id = 城市排名.城市id WHERE 城市.老年人口占比 = ( SELECT MIN(老年人口占比) FROM "城市" s1 JOIN "医院" s2 ON s1.所属城市id = s2.词条id JOIN "医院排名" s3 ON s2.医院id = s3.医院id WHERE s1.名称 = '上海' AND s2.名称 = '复旦大学附属华山医院' AND s3.排名 = 1 )
hard gold: select 名称 from 城市 where 老年人口占比 = (select min(老年人口占比) from 城市)

eval_err_num:682
extra pred: SELECT * FROM "医院" t WHERE t.词条id = ( SELECT 词条id FROM "城市" c JOIN "医院" t ON t.医院id = c.词条id WHERE c.名称 = '这个城市' )
extra gold: select T1.医院名 from 医院 AS T1 JOIN 城市 AS T2 ON T1.所属城市id = T2.城市id where T2.老年人口占比 = (select min(老年人口占比) from 城市)

eval_err_num:683
extra pred: SELECT 排名 FROM "医院排名" t WHERE t.医院id = ( SELECT 医院id FROM "医院" t1 JOIN "医院排名" t2 ON t1.医院id = t2.医院id WHERE t2.排名 = '这家医院' )
extra gold: select T3.排名 from 医院 AS T1 JOIN 城市 AS T2 ON T1.所属城市id = T2.城市id JOIN 医院排名 AS T3 ON T3.医院id = T1.医院id where T2.老年人口占比 = (select min(老年人口占比) from 城市)

eval_err_num:684
easy pred: SELECT * FROM "医院" WHERE "医院id" IN (SELECT "医院id" FROM "医院排名" WHERE "年份" = '2022')
easy gold: select 医院名 from 医院 where 医院等级 = "三级甲等"

eval_err_num:685
medium pred: SELECT * FROM "医院" WHERE "医院id" IN (SELECT "医院id" FROM "医院排名" WHERE "接待病患数量" > "职工数量")
medium gold: select T2.医院名,T2.职工数量,T1.接待病患数量 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where T2.医院等级 = "三级甲等"

eval_err_num:686
medium pred: SELECT * FROM "医院" WHERE "医院id" IN (SELECT "医院id" FROM "医院排名" WHERE "手术数量" > 0)
medium gold: select T2.医院名,T1.手术数量 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where T2.医院等级 = "三级甲等"

eval_err_num:687
medium pred: SELECT 旅行社.名称, 旅行社.级别 FROM 旅行社 INNER JOIN "出境游所含国家" ON 旅行社.旅行社id = "出境游所含国家".旅行社id INNER JOIN "国内游路线" ON 旅行社.旅行社id = "国内游路线".旅行社id INNER JOIN "邮轮路线" ON 旅行社.旅行社id = "邮轮路线".旅行社id WHERE 旅行社.亚洲排名 = ( SELECT 排名 FROM "亚洲排名" WHERE 排名 >= 3 )
medium gold: select 名称,级别 from 旅行社 order by 亚洲排名 desc limit 3

eval_err_num:688
medium pred: SELECT 旅行社.名称, 旅行社.级别 FROM 旅行社 INNER JOIN "出境游所含国家" ON 旅行社.旅行社id = "出境游所含国家".旅行社id INNER JOIN "国内游路线" ON 旅行社.旅行社id = "国内游路线".旅行社id INNER JOIN "邮轮路线" ON 旅行社.旅行社id = "邮轮路线".旅行社id WHERE 旅行社.接待海外游客数量 = ( SELECT MAX(接待海外游客数量) FROM "接待海外游客数量" )
medium gold: select 名称,级别 from 旅行社 order by 接待海外游客数量 desc limit 3

eval_err_num:689
medium pred: SELECT 旅行社.名称, 旅行社.级别, 邮轮路线.邮轮路线名称, 邮轮路线.航行区域, 出境游所含国家.出境游路线名称, 出境游所含国家.景点数, 国内游路线.景点数 FROM 旅行社 INNER JOIN "出境游所含国家" ON 旅行社.旅行社id = "出境游所含国家".旅行社id INNER JOIN "国内游路线" ON 旅行社.旅行社id = "国内游路线".旅行社id INNER JOIN "邮轮路线" ON 旅行社.旅行社id = "邮轮路线".旅行社id WHERE 旅行社.名称 = "中国国旅" AND 邮轮路线.邮轮路线名称 = "出境游路线" AND 出境游所含国家.出境游路线名称 = "中国国旅出境游路线" AND 出境游所含国家.景点数 > 0 AND 国内游路线.景点数 > 0 AND 国内游路线.旅行社id = "国内游路线".旅行社id
medium gold: select 国内游城市数量,出境游国家数量 from 旅行社 where 名称 = "中国国旅"

eval_err_num:690
medium pred: SELECT 邮轮路线.路线名称, 邮轮路线.航行区域, 出境游路线.景点数 FROM "邮轮路线" INNER JOIN "出境游路线" ON 邮轮路线.出境游路线id =出境游路线.出境游路线id INNER JOIN "国内游路线" ON 邮轮路线.国内游路线id =国内游路线.国内游路线id WHERE 邮轮路线.邮轮路线名称 = "出境游路线" AND 出境游路线.景点数 > 0 AND 国内游路线.景点数 > 0
medium gold: select T2.路线名称,T2.景点数 from 旅行社 AS T1 JOIN 国内游路线 AS T2 ON T1.旅行社id = T2.旅行社id where T1.名称 = "中国国旅"

eval_err_num:691
medium pred: SELECT 出境游路线.路线名称, 出境游路线.航行区域 FROM "出境游路线" INNER JOIN "邮轮路线" ON 出境游路线.出境游路线id =邮轮路线.出境游路线id INNER JOIN "国内游路线" ON 出境游路线.国内游路线id =国内游路线.国内游路线id WHERE 邮轮路线.邮轮路线名称 = "出境游路线" AND 邮轮路线.航行区域 = ( SELECT 航行区域 FROM "邮轮路线" WHERE 邮轮路线.邮轮路线名称 = "出境游路线" ) AND 出境游路线.航行区域 = ( SELECT 航行区域 FROM "出境游路线" WHERE 出境游路线.出境游路线id = "出境游路线".出境游路线id ) AND 国内游路线.国内游路线id = "国内游路线".国内游路线id
medium gold: select T2.路线名称,T2.景点数 from 旅行社 AS T1 JOIN 出境游路线 AS T2 ON T1.旅行社id = T2.旅行社id where T1.名称 = "中国国旅"

eval_err_num:692
medium pred: SELECT 旅行社id FROM "旅行社" GROUP BY 旅行社id ORDER BY 免税店数量 DESC LIMIT 1
medium gold: select 名称 from 旅行社 order by 免税店数量 desc limit 1

eval_err_num:693
medium pred: SELECT 旅行社id FROM "旅行社" GROUP BY 旅行社id ORDER BY 免税店数量 DESC LIMIT 1
medium gold: select 名称 from 旅行社 order by 免税店数量 asc limit 1

eval_err_num:694
medium pred: SELECT 旅行社id, 最高级别("级别") as 级别 FROM "旅行社" GROUP BY 旅行社id ORDER BY 最高级别("级别") asc, 亚洲排名 DESC LIMIT 1
medium gold: select 级别,亚洲排名 from 旅行社 order by 免税店数量 asc limit 1

eval_err_num:695
easy pred: SELECT 路线.路线名称 FROM 出境游路线 INNER JOIN 邮轮路线 ON 出境游路线.路线名称 = 邮轮路线.路线名称 WHERE 邮轮路线.旅行社id = ( SELECT 旅行社.旅行社id FROM 出境游所含国家 INNER JOIN 国内游路线 ON 出境游所含国家.路线id = 国内游路线.路线id INNER JOIN 旅行社 ON 国内游路线.旅行社id = 旅行社.旅行社id WHERE 旅行社.名称 = '旅行社' )
easy gold: select T1.路线名称 from 出境游路线 AS T1 JOIN 邮轮路线 AS T2 ON T1.路线名称 = T2.路线名称

eval_err_num:696
easy pred: SELECT 路线.路线名称 FROM 国内游路线 INNER JOIN 邮轮路线 ON 国内游路线.路线名称 = 邮轮路线.路线名称 WHERE 邮轮路线.旅行社id = ( SELECT 旅行社.旅行社id FROM 出境游所含国家 INNER JOIN 国内游路线 ON 出境游所含国家.路线id = 国内游路线.路线id INNER JOIN 旅行社 ON 国内游路线.旅行社id = 旅行社.旅行社id WHERE 旅行社.名称 = '旅行社' )
easy gold: select T1.路线名称 from 国内游路线 AS T1 JOIN 邮轮路线 AS T2 ON T1.路线名称 = T2.路线名称

eval_err_num:697
medium pred: SELECT 邮轮路线.路线名称, 邮轮路线.内舱房价格 - 邮轮路线.阳台房价格 AS 海景房价格 FROM 邮轮路线 INNER JOIN ( SELECT 路线.路线名称, MAX(内舱房价格) AS 内舱房价格, MAX(阳台房价格) AS 阳台房价格 FROM 邮轮路线 GROUP BY 路线.路线名称 ) adjTable ON 邮轮路线.路线名称 = adjTable.路线名称 WHERE adjTable.阳台房价格 > 0 AND adjTable.内舱房价格 > 0 AND adjTable.阳台房价格 - adjTable.内舱房价格 > 0 AND 邮轮路线.海景房价格 > 0
medium gold: select 路线名称 from 邮轮路线 order by 海景房价格 desc limit 1

eval_err_num:698
medium pred: SELECT 邮轮路线.路线名称, 邮轮路线.内舱房价格, 邮轮路线.阳台房价格 FROM 邮轮路线 INNER JOIN ( SELECT 路线.路线名称, MAX(内舱房价格) AS 内舱房价格, MAX(阳台房价格) AS 阳台房价格 FROM 邮轮路线 GROUP BY 路线.路线名称 ) adjTable ON 邮轮路线.路线名称 = adjTable.路线名称 WHERE adjTable.阳台房价格 > 0 AND adjTable.内舱房价格 > 0 AND adjTable.阳台房价格 - adjTable.内舱房价格 > 0 AND 邮轮路线.海景房价格 > 0
medium gold: select 内舱房价格,阳台房价格 from 邮轮路线 order by 海景房价格 desc limit 1

eval_err_num:699
easy pred: SELECT * FROM "旅行社" WHERE "旅行社"."级别" = (SELECT MAX("旅行社"."级别") FROM "旅行社" GROUP BY "旅行社"."名称")
easy gold: select 名称 from 旅行社 where 级别 = "5A"

eval_err_num:700
medium pred: SELECT s.公司名称, COUNT(*) AS 境外公司数量 FROM "旅行社" s join "出境游所含国家" t on s.旅行社id = t.旅行社id join "邮轮路线" r on s.旅行社id = r.旅行社id group by s.公司名称
medium gold: select 名称,境外公司数量 from 旅行社 where 级别 = "5A"

eval_err_num:701
easy pred: SELECT * FROM "国内游路线" WHERE "路线名称" LIKE '%从北京出发%'
easy gold: select 路线名称 from 国内游路线 where 出发城市 = "北京"

eval_err_num:702
medium pred: SELECT s.个人均价, s.景点数 FROM "出境游路线" s WHERE s."路线名称" IN ( SELECT "长城路线"、"故宫路线"、"颐和园路线" AS路线名称 FROM "国内游路线" WHERE "出发城市" = "北京" )
medium gold: select 个人价格,景点数 from 国内游路线 where 出发城市 = "北京"

eval_err_num:703
medium pred: SELECT 路线.路线名称 FROM "出境游所含国家" 路线 INNER JOIN "国内游路线" 旅行社 ON 路线.旅行社id = 旅行社.旅行社id INNER JOIN "旅行社" 旅行社 ON 旅行社.旅行社id = 路线.旅行社id WHERE 路线.出发城市 = '北京' AND 旅行社.级别 = '高知' AND 路线.出境游路线id IN (SELECT 出境游路线id FROM "出境游路线" WHERE 目的地 = '中国')
medium gold: select T1.路线名称 from 出境游路线 AS T1 JOIN 出境游所含国家 AS T2 ON T1.出境游路线id = T2.路线id where T2.国家 = "中国"

eval_err_num:704
medium pred: SELECT 路线.路线名称 FROM "出境游所含国家" 路线 INNER JOIN "国内游路线" 旅行社 ON 路线.旅行社id = 旅行社.旅行社id INNER JOIN "旅行社" 旅行社 ON 旅行社.旅行社id = 路线.旅行社id WHERE 路线.出发城市 = '香港' AND 旅行社.级别 = '高知' AND 路线.出境游路线id IN (SELECT 出境游路线id FROM "出境游路线" WHERE 目的地 = '香港')
medium gold: select T1.出发城市 from 出境游路线 AS T1 JOIN 出境游所含国家 AS T2 ON T1.出境游路线id = T2.路线id where T2.国家 = "中国"

eval_err_num:705
medium pred: SELECT 路线.路线名称, 路线.成人价格, 路线.儿童价格 FROM "出境游所含国家" 路线 INNER JOIN "国内游路线" 旅行社 ON 路线.旅行社id = 旅行社.旅行社id INNER JOIN "旅行社" 旅行社 ON 旅行社.旅行社id = 路线.旅行社id WHERE 路线.出发城市 = '香港' AND 旅行社.级别 = '高知' AND 路线.出境游路线id IN (SELECT 出境游路线id FROM "出境游路线" WHERE 目的地 = '香港')
medium gold: select T1.成人价格,T1.儿童价格 from 出境游路线 AS T1 JOIN 出境游所含国家 AS T2 ON T1.出境游路线id = T2.路线id where T2.国家 = "中国"

eval_err_num:706
medium pred: SELECT 路线.路线名称, 路线.成人价格 + 路线.儿童价格 AS 总价格 FROM "出境游所含国家" 路线 INNER JOIN "国内游路线" 旅行社 ON 路线.旅行社id = 旅行社.旅行社id INNER JOIN "旅行社" 旅行社 ON 旅行社.旅行社id = 路线.旅行社id WHERE 路线.出发城市 = '香港' AND 旅行社.级别 = '高知' AND 路线.出境游路线id IN (SELECT 出境游路线id FROM "出境游路线" WHERE 目的地 = '香港')
medium gold: select T1.门票总价格 from 出境游路线 AS T1 JOIN 出境游所含国家 AS T2 ON T1.出境游路线id = T2.路线id where T2.国家 = "中国"

eval_err_num:707
hard pred: SELECT 旅行社.name AS 旅行社名称, 旅行社.亚洲排名 FROM "旅行社" 旅行社 INNER JOIN "出境游所含国家" 路线 ON 路线.旅行社id = 旅行社.旅行社id INNER JOIN "国内游路线" 旅行社 ON 旅行社.旅行社id = 旅行社.旅行社id WHERE 旅行社.亚洲排名 >= 100
hard gold: select T3.名称,T3.亚洲排名 from 出境游路线 AS T1 JOIN 出境游所含国家 AS T2 ON T1.出境游路线id = T2.路线id JOIN 旅行社 AS T3 ON T3.旅行社id = T1.旅行社id where T2.国家 = "中国"

eval_err_num:708
medium pred: SELECT 路线名称, 天数 FROM "国内游路线" WHERE 天数 = ( SELECT MAX(天数) FROM "国内游路线" )
medium gold: select 路线名称 from 国内游路线 order by 天数 desc limit 1

eval_err_num:709
hard pred: SELECT 路线名称, 旅行社id, 出发城市, 成人价格, 儿童价格, 景点数, 门票总价格 FROM "出境游路线" WHERE 路线名称 in ( SELECT 路线名称 FROM "出境游所含国家" WHERE 旅行社id = ( SELECT 旅行社id FROM "旅行社" WHERE name = 'XXXXX' ) )
hard gold: select T1.路线名称 from 出境游路线 AS T1 JOIN 邮轮路线 AS T2 ON T1.路线名称 = T2.路线名称 order by T2.天数 desc limit 1

eval_err_num:710
hard pred: SELECT 邮轮路线.邮轮公司 FROM "邮轮路线" 邮轮路线 JOIN "旅行社" 旅行社 ON 邮轮路线.旅行社id = 旅行社.旅行社id JOIN "出境游所含国家" 出境游国家 ON 邮轮路线.路线id = 出境游国家.路线id JOIN "旅行社" WHERE 出境游国家.旅行社id = 'XXXXX'
hard gold: select T2.邮轮公司 from 出境游路线 AS T1 JOIN 邮轮路线 AS T2 ON T1.路线名称 = T2.路线名称 order by T2.天数 desc limit 1

eval_err_num:711
extra pred: SELECT 旅行社.旅行社名称 FROM "旅行社" 旅行社 JOIN "出境游所含国家" 出境游国家 ON 旅行社.旅行社id = 出境游国家.旅行社id JOIN "国内游路线" 国内游路线 ON 出境游国家.路线id = 国内游路线.路线id WHERE 出境游国家.旅行社id = 'XXXXX'
extra gold: select T3.名称 from 出境游路线 AS T1 JOIN 邮轮路线 AS T2 ON T1.路线名称 = T2.路线名称 JOIN 旅行社 AS T3 ON T3.旅行社id = T1.旅行社id order by T2.天数 desc limit 1

eval_err_num:712
medium pred: SELECT price FROM video_prices WHERE type = '软件' ORDER BY price DESC LIMIT 1
medium gold: select 平台名称 from 平台 order by 年会费 limit 1

eval_err_num:713
medium pred: SELECT price FROM video_prices WHERE type = '软件' ORDER BY price DESC LIMIT 1
medium gold: select 平台名称 from 平台 order by 月会费 limit 1

eval_err_num:714
hard pred: SELECT评估_score FROM performance_scores WHERE platform = '平台' ORDER BY评估_score DESC LIMIT 1
hard gold: select 口碑 from 平台 where 平台名称 = (select 平台名称 from 平台 order by 月会费 limit 1)

eval_err_num:715
medium pred: SELECT 音箱产品.名称, 音箱产品.售价 FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.音箱id WHERE 产品销售.季度 = '2022' AND 产品名称 IN ('智能音箱', '智能音箱+小爱同学', '智能音箱+天猫精灵') GROUP BY 音箱产品.名称 HAVING 售价在 100 到 200 之间
medium gold: select 名称 ,售价 from 音箱产品 where 售价 between 100 and 200

eval_err_num:716
medium pred: SELECT 音箱产品.名称, 音箱产品.售价 FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.音箱id WHERE 产品销售.季度 = '2022' AND 产品名称 IN ('智能音箱', '智能音箱+小爱同学', '智能音箱+天猫精灵') GROUP BY 音箱产品.名称 HAVING COUNT(*) > 1
medium gold: select 名称 ,排名 from 音箱产品 where 售价 between 100 and 200

eval_err_num:717
medium pred: SELECT 音箱产品.名称, 音箱产品.售价 FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.音箱id WHERE 产品销售.季度 = '2022' AND 产品名称 IN ('智能音箱', '智能音箱+小爱同学', '智能音箱+天猫精灵') GROUP BY 音箱产品.名称 HAVING COUNT(*) = (SELECT COUNT(*) FROM 产品销售 WHERE 产品名称 = '智能音箱') + (SELECT COUNT(*) FROM 产品销售 WHERE 产品名称 = '智能音箱+小爱同学') + (SELECT COUNT(*) FROM 产品销售 WHERE 产品名称 = '智能音箱+天猫精灵')
medium gold: select 名称 ,排名 ,上升名次 from 音箱产品 where 售价 between 100 and 200

eval_err_num:718
medium pred: SELECT 音箱产品.名称, 音箱产品.售价 FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.音箱id WHERE 产品销售.季度 = '2022' GROUP BY 音箱产品.名称 HAVING SUM(销售数量) = (SELECT SUM(销售数量) FROM 产品销售 WHERE 产品id = '音箱产品' AND 季度 = '2022') + (SELECT SUM(销售数量) FROM 产品销售 WHERE 产品id = '音箱产品' AND 季度 = '2022' AND 产品名称 IN ('智能音箱', '智能音箱+小爱同学', '智能音箱+天猫精灵'))
medium gold: select T2.名称 ,T1.季度 ,T1.销售量 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where 售价 between 100 and 200

eval_err_num:719
medium pred: SELECT 公司名称 FROM "公司" WHERE id = ( SELECT 公司id FROM "音箱产品" WHERE 名称 = '天猫精灵' AND 售价 > 0 )
medium gold: select T1.名称 ,T2.名称 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id where T1.名称 = '天猫精灵'

eval_err_num:720
medium pred: SELECT 公司名称, 国家名称 FROM "公司" WHERE id = ( SELECT 公司id FROM "音箱产品" WHERE 名称 = '该公司' AND 售价 > 0 )
medium gold: select T2.名称 ,T2.所属国家 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id where T1.名称 = '天猫精灵'

eval_err_num:721
medium pred: SELECT 产品名称, COUNT(*) as 排名 FROM "音箱产品" WHERE 名称 = '天猫精灵' AND 售价 > 0 GROUP BY 产品名称
medium gold: select T2.名称 ,T2.排名 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id where T1.名称 = '天猫精灵'

eval_err_num:722
hard pred: SELECT * FROM "音箱产品" WHERE 所属公司 = '百度公司'
hard gold: select T1.名称 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id where T2.名称 like '%百度%'

eval_err_num:723
extra pred: SELECT * FROM "产品销售" WHERE 季度 = '2022' AND 产品id IN (SELECT 音箱id FROM "音箱产品" WHERE 所属公司 = '百度公司')
extra gold: select T1.名称 ,T3.销售量 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id JOIN 产品销售 AS T3 ON T1.音箱id = T3.产品id where T2.名称 like '%百度%'

eval_err_num:724
extra pred: SELECT * FROM "产品销售" WHERE 季度 = '2022' AND 销售量 > 0
extra gold: select T1.名称 ,T3.销售量增长 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id JOIN 产品销售 AS T3 ON T1.音箱id = T3.产品id where T2.名称 like '%百度%'

eval_err_num:725
extra pred: SELECT * FROM "产品销售" WHERE "季度" = '第一季度' ORDER BY "销售量" DESC LIMIT 3
extra gold: select T1.名称 ,T3.销售量 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id JOIN 产品销售 AS T3 ON T1.音箱id = T3.产品id where 季度 = '1' order by T3.销售量 desc limit 3

eval_err_num:726
extra pred: SELECT t1.名称, t1.所属公司id FROM "音箱产品" t1 INNER JOIN "产品销售" t2 ON t1.所属公司id = t2.产品id WHERE t2."季度" = '第一季度' GROUP BY t1.名称, t1.所属公司id HAVING COUNT(*) = (SELECT COUNT(*) FROM "公司" WHERE "id" = t1.所属公司id)
extra gold: select T1.名称 ,T2.名称 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id JOIN 产品销售 AS T3 ON T1.音箱id = T3.产品id where 季度 = '1' order by T3.销售量 desc limit 3

eval_err_num:727
extra pred: SELECT t1.名称, t1.售价 FROM "音箱产品" t1 INNER JOIN "产品销售" t2 ON t1.名称 = t2.产品名称 WHERE t2."季度" = '第一季度' GROUP BY t1.名称, t1.售价 HAVING COUNT(*) > 0
extra gold: select T1.名称 ,T1.售价 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id JOIN 产品销售 AS T3 ON T1.音箱id = T3.产品id where 季度 = '1' order by T3.销售量 desc limit 3

medium pred: SELECT 学名, 食性 FROM 动物 WHERE 是否是人类朋友 = 1 AND 食性 = '食肉'
medium gold: select 学名 from 动物 where 是否是人类朋友 = "是" and 食性 = "食肉"

hard pred: SELECT 理由 FROM 动物 WHERE 是否是人类朋友 = 1 AND 学名 = '猫'
hard gold: select 理由 from 动物 where 学名 in (select 学名 from 动物 where 是否是人类朋友 = "是" and 食性 = "食肉")

easy pred: SELECT COUNT(DISTINCT 学名) FROM 动物 WHERE 是否是人类朋友 = 1
easy gold: select count(学名) from 动物 where 食性 = "食草"

eval_err_num:728
easy pred: SELECT 学名 FROM 动物 WHERE 是否是人类朋友 = 1 GROUP BY 学名 HAVING COUNT(DISTINCT 天敌id) > 1
easy gold: select 学名 from 动物 where 食性 = "食草"

eval_err_num:729
medium pred: SELECT 商家 id, 商家 text, 类型 text FROM "商家平台活动" WHERE 优惠活动 = '麻辣烫'
medium gold: select 商家 from 商家 where 类型 like "%麻辣烫%"

eval_err_num:730
extra pred: SELECT 配送费 FROM "商家平台活动" WHERE 优惠活动 = '麻辣烫' ORDER BY 配送费 DESC LIMIT 1
extra gold: select T2.商家,T1.配送费 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T2.商家 = (select 商家 from 商家 where 类型 like "%麻辣烫%")

eval_err_num:731
extra pred: SELECT 起送价格 FROM "商家平台活动" WHERE 优惠活动 = '麻辣烫' ORDER BY 起送价格 DESC LIMIT 1
extra gold: select T2.商家,T1.起送价格 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T2.商家 = (select 商家 from 商家 where 类型 like "%麻辣烫%")

medium pred: SELECT 商家id FROM 商家 WHERE 商家id IN ( SELECT 商家id FROM 商家平台活动 WHERE 优惠活动 = '免配送费' )
medium gold: select 商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 配送费 = 0

medium pred: SELECT 商家id FROM 商家 WHERE 商家id IN ( SELECT 商家id FROM 商家平台活动 WHERE 优惠活动 = '饮食' )
medium gold: select 商家,类型 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 配送费 = 0

eval_err_num:732
medium pred: SELECT评分 FROM 商家平台活动 WHERE 商家id IN ( SELECT 商家id FROM 商家 WHERE 商家id IN ( SELECT 商家id FROM 商家平台活动 WHERE 优惠活动 = '这家店' ) )
medium gold: select 商家,评分 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 配送费 = 0

eval_err_num:733
medium pred: SELECT 商家id, 月售单数 FROM "商家平台活动" WHERE 商家id NOT IN (SELECT 商家id FROM 商家)
medium gold: select 商家,月售单数 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id

eval_err_num:734
medium pred: SELECT column1, column2, COUNT(*) FROM "商家平台活动" WHERE 商家id IN (SELECT 商家id FROM 商家) GROUP BY column1 ORDER BY COUNT(*) DESC
medium gold: select 商家,月售单数 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id order by 月售单数 desc

eval_err_num:735
extra pred: SELECT 商家id, 优惠活动, COUNT(*) as 月售单数 FROM "商家平台活动" WHERE 商家id IN (SELECT 商家id FROM 商家) GROUP BY 商家id HAVING COUNT(*) = (SELECT COUNT(*) FROM "商家平台活动" WHERE 优惠活动 = '优惠')
extra gold: select 商家,优惠活动 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 月售单数 = (select 月售单数 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id order by 月售单数 desc)

eval_err_num:736
extra pred: SELECT 起送价格 FROM "商家平台活动" WHERE 优惠活动 = '优惠' AND 配送费 = '免费'
extra gold: select 商家,起送价格 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 月售单数 = (select 月售单数 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id order by 月售单数 desc)

eval_err_num:737
hard pred: SELECT * FROM "平台" WHERE市场占比 = (SELECT MAX(市场占比) FROM "平台")
hard gold: select 平台名 from 平台 where 市场占比 = (select max(市场占比) from 平台)

eval_err_num:738
extra pred: SELECT 商家平台活动.*, COUNT(*) AS 市场占比 FROM "商家平台活动" AS 商家平台活动 join "平台" AS 平台 ON 商家平台活动.平台id = 平台.平台id GROUP BY 商家平台活动.平台id order by COUNT(*) DESC LIMIT 1
extra gold: select 平台名,市场占比 from 平台 where 市场占比 = (select max(市场占比) from 平台)

eval_err_num:739
extra pred: SELECT 平台.平台id, 商家.商家id, COUNT(*) AS 合作商家数 FROM "平台" AS 平台 join "商家" AS 商家 ON 商家.商家id = 平台.商家id GROUP BY 平台.平台id, 商家.商家id order by 合作商家数 DESC LIMIT 3
extra gold: select 平台名,count(*) from 商家平台活动 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id where 平台名 in (select 平台名 from 平台 where 市场占比 = (select max(市场占比) from 平台)) group by 平台名

eval_err_num:740
extra pred: SELECT COUNT(*) AS 商家数 FROM "商家" WHERE 商家id = (SELECT 商家id FROM "商家平台活动")
extra gold: select count(*) from 商家平台活动 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id where 平台名 in (select 平台名 from 平台 where 市场占比 = (select max(市场占比) from 平台))

eval_err_num:741
easy pred: SELECT 书名, 作者, 类型 FROM 图书 WHERE 图书id = ( SELECT 图书id FROM 平台 WHERE 平台name = 'Amazon' AND 成立时间 = '2021-01-01' AND 年营业额 = '1000' AND 是否自营 = '0' AND 会员费 = '1' )
easy gold: select 书名 from 图书

eval_err_num:742
medium pred: SELECT 作者 FROM 图书 WHERE 图书id = ( SELECT 图书id FROM 平台 WHERE 平台name = 'Amazon' AND 成立时间 = '2021-01-01' AND 年营业额 = '1000' AND 是否自营 = '0' AND 会员费 = '1' )
medium gold: select 书名,作者 from 图书

eval_err_num:743
medium pred: SELECT 类型 FROM 图书 WHERE 图书id IN ( SELECT 图书id FROM 平台 WHERE 平台name = 'Amazon' AND 成立时间 = '2021-01-01' AND 年营业额 = '1000' AND 是否自营 = '0' AND 会员费 = '1' )
medium gold: select 书名,作者 from 图书 where 类型 = '小说'

eval_err_num:744
hard pred: SELECT 书名, 电子书售价 FROM 图书 WHERE 图书id IN ( SELECT 图书id FROM 平台 WHERE 平台name = 'Amazon' AND 成立时间 = '2021-01-01' AND 年营业额 = '1000' AND 是否自营 = '0' AND 会员费 = '1' )
hard gold: select 售价 from 图书与平台 where 书名id in (select 图书id from 图书 where 类型 = "小说")

eval_err_num:745
medium pred: SELECT t1.公司名称, t1.总部城市id, t1.所属集团, t1.上市股市, t1.经营范围, t1.经营年数, t1.人均消费额 FROM "餐饮公司城市消费" t1 INNER JOIN "城市" t2 ON t1.城市id = t2.城市id WHERE t1.人均消费额 < 500
medium gold: select 公司名 from 餐饮公司城市消费 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id where 人均消费额 < 500

eval_err_num:746
medium pred: SELECT t1.公司名称, t1.所属集团 FROM "餐饮公司城市消费" t1 INNER JOIN "城市" t2 ON t1.城市id = t2.城市id WHERE t1.人均消费额 < 500
medium gold: select 公司名,所属集团 from 餐饮公司城市消费 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id where 人均消费额 < 500

eval_err_num:747
medium pred: SELECT t1.公司名称, t1.总部城市id, t1.所属集团, t1.上市股市, t1.经营范围, t1.经营年数 FROM "餐饮公司城市消费" t1 INNER JOIN "城市" t2 ON t1.城市id = t2.城市id WHERE t1.人均消费额 < 500
medium gold: select 公司名,经营年数 from 餐饮公司城市消费 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id where 人均消费额 < 500

eval_err_num:748
hard pred: SELECT t1.公司名称, t1.总部城市id FROM "餐饮公司城市消费" t1 INNER JOIN "城市" t2 ON t1.城市id = t2.城市id GROUP BY t1.公司名称, t1.总部城市id HAVING COUNT(*) > 0
hard gold: select 公司名,名称 from 餐饮公司 AS T1 JOIN 城市 AS T2 ON T1.总部城市id = T2.城市id JOIN 餐饮公司城市消费 AS T3 ON T1.公司id = T3.公司id where 人均消费额 < 500

eval_err_num:749
medium pred: SELECT 球队的中文队名 as 球队名 FROM 球队
medium gold: select 中文队名 from 球队 where 中文队名 like '%公牛%'

eval_err_num:750
hard pred: SELECT 篮球运动员的中文名, 篮球运动员的参加选秀年, 篮球运动员的是否状元, 篮球运动员所在球队的中文队名,NBA总冠军总教练的英文全称,NBA总冠军所在球队的英文队名, "夺冠次数" 字段 from NBA总冠军
hard gold: select 夺冠次数 from 球队 where 中文队名 = (select 中文队名 from 球队 where 中文队名 like '%公牛%')

eval_err_num:751
medium pred: SELECT 篮球运动员所在赛区, "联盟" FROMMVP记录
medium gold: select 赛区 ,所属联盟 from 球队 where 中文队名 like '%公牛%'

eval_err_num:752
hard pred: SELECT 篮球运动员所在球队, "总教练" FROMMVP记录
hard gold: select T1.总教练 from NBA总冠军 AS T1 JOIN 球队 AS T2 ON T1.球队id = T2.球队id where 中文队名 like '%公牛%'

eval_err_num:753
hard pred: SELECT 篮球运动员所在年份, "赛季" FROMMVP记录
hard gold: select T1.赛季 ,T1.总教练 from NBA总冠军 AS T1 JOIN 球队 AS T2 ON T1.球队id = T2.球队id where 中文队名 like '%公牛%'

eval_err_num:754
easy pred: SELECT 国籍 FROM 篮球运动员 WHERE 球员id = (SELECT 球员id FROMMVP记录 WHERE 赛季 = '2021-2022' AND 所属球队 = 'NBA总冠军' AND 球员id NOT IN (SELECT 球员id FROM 篮球运动员) AND binary = 0)
easy gold: select 国籍 from 篮球运动员 where 中文名 = '库里'

eval_err_num:755
medium pred: SELECT 参加选秀年, 是否状元 FROM 篮球运动员 WHERE 球员id = (SELECT 球员id FROMMVP记录 WHERE 赛季 = '2021-2022' AND 所属球队 = 'NBA总冠军' AND 是否状元 = '1' AND binary = 0)
medium gold: select 参加选秀年 ,是否状元 from 篮球运动员 where 中文名 = '库里'

eval_err_num:756
easy pred: SELECT 获得球队 FROMMVP记录 WHERE 赛季 = '2021-2022' AND 所属球队 = 'NBA总冠军' AND 是否状元 = '1' AND binary = 0
easy gold: select 获得球队 from 篮球运动员 where 中文名 = '库里'

medium pred: SELECT 国籍, 毕业院校 FROM 篮球运动员 WHERE 球员id = '12345'
medium gold: select 国籍 ,毕业院校 from 篮球运动员 where 中文名 = '杜兰特'

eval_err_num:757
medium pred: SELECT * FROMMVP记录 WHERE 赛季 = '2021-2022' AND 球员id = '12345'
medium gold: select T1.赛季 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id where T2.中文名 = '杜兰特'

eval_err_num:758
hard pred: SELECT 球队名称, 球员id, 球队id as 球队信息 FROM 篮球运动员 WHERE 球员id = '12345'
hard gold: select T3.中文队名 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id JOIN 球队 AS T3 ON T1.所属球队 = T3.球队id where T2.中文名 = '杜兰特'

eval_err_num:759
hard pred: SELECT 赛区 FROM "球队" WHERE 球队id = '球队id'
hard gold: select T3.赛区 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id JOIN 球队 AS T3 ON T1.所属球队 = T3.球队id where T2.中文名 = '杜兰特'

eval_err_num:760
hard pred: SELECT 总冠军次数 FROM "NBA总冠军" WHERE 赛季 = '2021-2022'
hard gold: select T3.夺冠次数 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id JOIN 球队 AS T3 ON T1.所属球队 = T3.球队id where T2.中文名 = '杜兰特'

eval_err_num:761
easy pred: SELECT * FROM "NBA总冠军" WHERE "赛区" = '西部'
easy gold: select 中文队名 from 球队 where 所属联盟 = '西部'

eval_err_num:762
medium pred: SELECT * FROM "篮球运动员" WHERE "参加选秀年" = '2021'
medium gold: select 中文队名 ,赛区 from 球队 where 所属联盟 = '西部'

eval_err_num:763
medium pred: SELECT * FROM "NBA总冠军" WHERE "赛季" = '2021-2022' AND "总教练" = 'NBA总教练'
medium gold: select T2.中文队名 ,T1.赛季 ,T1.总教练 from NBA总冠军 AS T1 JOIN 球队 AS T2 ON T1.球队id = T2.球队id where 所属联盟 = '西部'

easy pred: SELECT * FROM 平台
easy gold: select 平台名 from 平台

medium pred: SELECT 成立时间 FROM 平台
medium gold: select 平台名,成立时间 from 平台

eval_err_num:764
medium pred: SELECT 年营业额, COUNT(*) as 营业额Count FROM 平台 GROUP BY 年营业额 ORDER BY 营业额Count DESC LIMIT 1
medium gold: select 平台名,成立时间 from 平台 order by 年营业额 desc

eval_err_num:765
medium pred: SELECT 会员费 AS 费用 FROM ( SELECT 年营业额, COUNT(*) as 营业额Count, rank() over (ORDER BY 年营业额 DESC) as rank FROM 平台 ) subquery WHERE subquery.rank = 1
medium gold: select 平台名,会员费 from 平台 order by 年营业额 desc limit 1

eval_err_num:766
medium pred: SELECT 作者, 题目 FROM 图书
medium gold: select 作者,类型 from 图书 where 书名 = "平凡的世界"

eval_err_num:767
hard pred: SELECT 书籍.书名, 书籍.作者, 书籍.类型, 平台.售价 FROM 图书 AS 书籍 join 平台 AS 平台 ON 书籍.平台id = 平台.平台id
hard gold: select 售价 from 图书与平台 where 书名id = (select 图书id from 图书 where 书名 = "平凡的世界")

eval_err_num:768
hard pred: SELECT 平台.平台name AS 平台名, 平台.成立时间 AS 成立时间, 平台.年营业额 AS 年营业额, 平台.是否自营 AS 是否自营, 书籍.书名, 书籍.作者, 书籍.类型, COUNT(DISTINCT 购买者) AS 购买人数 FROM 图书 AS 书籍 join 平台 AS 平台 ON 书籍.平台id = 平台.平台id group by 平台.平台name, 平台.成立时间, 平台.年营业额, 平台.是否自营
hard gold: select T3.平台名 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T2.书名 = "平凡的世界"

hard pred: SELECT 平台.年营业额 FROM 平台 GROUP BY 平台.年营业额
hard gold: select T3.平台名,T3.年营业额 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T2.书名 = "平凡的世界"

eval_err_num:769
extra pred: SELECT 平台.年营业额, 排序 AS 排序 FROM 平台 GROUP BY 平台.年营业额 ORDER BY 排序
extra gold: select T3.平台名,T3.年营业额 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T2.书名 = "平凡的世界" order by T3.年营业额 desc

eval_err_num:770
easy pred: SELECT 国家 FROM "出境游所含国家" WHERE 旅行天数 > 0
easy gold: select 国家 from 出境游所含国家

eval_err_num:771
medium pred: SELECT 旅行天数 FROM "出境游所含国家" WHERE 景点数量 = 1
medium gold: select 国家,旅行天数 from 出境游所含国家

eval_err_num:772
easy pred: SELECT 景点数量 FROM "出境游所含国家" ORDER BY 景点数量 DESC
easy gold: select 国家 from 出境游所含国家 order by 景点数量 desc

eval_err_num:773
easy pred: SELECT * FROM "出境游所含国家" WHERE "路线id" = ( SELECT "出境游路线id" FROM "国内游路线" WHERE "旅行社id" = ( SELECT "旅行社id" FROM "旅行社" ) ) ON DELETE NOACTION ON UPDATE NOACTION
easy gold: select 路线名称 from 出境游路线

eval_err_num:774
medium pred: SELECT * FROM "出境游路线" WHERE "旅行社id" = ( SELECT "旅行社id" FROM "旅行社" ) ORDER BY "出发城市" DESC
medium gold: select 路线名称,出发城市 from 出境游路线

eval_err_num:775
medium pred: SELECT成人价格, MAX(成人价格) AS max_price FROM "出境游路线" WHERE "旅行社id" = ( SELECT "旅行社id" FROM "旅行社" ) GROUP BY成人价格 ORDER BY max_price DESC
medium gold: select 路线名称,成人价格 from 出境游路线 order by 成人价格 desc

eval_err_num:776
medium pred: SELECT儿童价格, MAX(儿童价格) AS max_price FROM "出境游路线" WHERE "旅行社id" = ( SELECT "旅行社id" FROM "旅行社" ) GROUP BY儿童价格 ORDER BY max_price DESC
medium gold: select 路线名称,儿童价格 from 出境游路线 order by 儿童价格 desc

eval_err_num:777
extra pred: SELECT路线名称,景点数,成人价格, COUNT(*) as total_price FROM "出境游路线" WHERE 成人价格 >= ( SELECT 成人价格 FROM "出境游路线" WHERE 旅行社id = ( SELECT 旅行社id FROM "旅行社" ) GROUP BY路线名称,景点数 ) GROUP BY路线名称,景点数 ORDER BY total_price DESC LIMIT 1
extra gold: select 路线名称,景点数 from 出境游路线 where 成人价格 = (select 成人价格 from 出境游路线 order by 成人价格 desc limit 1)

easy pred: SELECT * FROM 电视剧
easy gold: select 剧名 from 电视剧

eval_err_num:778
easy pred: SELECT t1.剧名 FROM 电视剧 t1 INNER JOIN 电视剧收视 t2 ON t1.剧名 = t2.剧名 AND t1.出品时间 = '2018' AND t2.平台id = t1.首播平台id
easy gold: select 剧名 from 电视剧 where 出品时间 = "2018年"

eval_err_num:779
hard pred: SELECT t1.剧名 FROM 电视剧 t1 INNER JOIN 电视剧收视 t2 ON t1.剧名 = t2.剧名 AND t1.出品时间早于t2.时间段
hard gold: select 剧名 from 电视剧 where 出品时间 in (select min(出品时间) from 电视剧)

eval_err_num:780
hard pred: SELECT t1.剧名, t2.时间段 FROM 电视剧 t1 INNER JOIN 电视剧收视 t2 ON t1.剧名 = t2.剧名 AND t1.出品时间晚于t2.时间段
hard gold: select 剧名 from 电视剧 where 出品时间 in (select max(出品时间) from 电视剧)

eval_err_num:781
easy pred: SELECT 名称 FROM "民族"
easy gold: select 名称 from 民族

eval_err_num:782
medium pred: SELECT 词条id, 人口 FROM "民族"
medium gold: select 名称,人口 from 民族

eval_err_num:783
medium pred: SELECT 词条id, 人口, COUNT(*) as num FROM "民族" GROUP BY 词条id ORDER BY num DESC
medium gold: select 名称,人口 from 民族 order by 人口 desc

eval_err_num:784
easy pred: SELECT 电视剧 FROM 电视剧 WHERE 发行公司 = '北京电视艺术中心'
easy gold: select 剧名 from 电视剧 where 发行公司 = "北京电视艺术中心"

medium pred: SELECT 平台id, 时间段 FROM 电视剧收视 WHERE 电视剧id = '穿越火线'
medium gold: select T1.名称 from 电视台 AS T1 JOIN 电视剧 AS T2 ON T1.电视台id = T2.首播平台id where 剧名 = "甄嬛传"

medium pred: SELECT 开播时间 FROM 电视台 WHERE 电视台id = '湖南卫视'
medium gold: select T1.开播时间 from 电视台 AS T1 JOIN 电视剧 AS T2 ON T1.电视台id = T2.首播平台id where 剧名 = "甄嬛传"

medium pred: SELECT 上线时间 FROM 电视台 WHERE 电视台id = '湖南卫视'
medium gold: select T1.上线时间 from 电视台 AS T1 JOIN 电视剧 AS T2 ON T1.电视台id = T2.首播平台id where 剧名 = "甄嬛传"

eval_err_num:785
easy pred: SELECT * FROM "民族城市" WHERE "民族id" IN ( SELECT "民族id" FROM "民俗节日" WHERE "节日id" = ( SELECT "节日id" FROM "民俗节日" WHERE "时间" = ( SELECT "时间" FROM "民俗节日" WHERE "纪念" = '2022-02-24' ) ) )
easy gold: select 城市名称 from 民族城市 where 比例 > "10%"

eval_err_num:786
easy pred: SELECT COUNT(*) FROM "民族城市" WHERE "民族id" IN ( SELECT "民族id" FROM "民俗节日" WHERE "节日id" = ( SELECT "节日id" FROM "民俗节日" WHERE "时间" = ( SELECT "时间" FROM "民俗节日" WHERE "纪念" = '2022-02-24' ) ) )
easy gold: select count(*) from 民族城市 where 比例 > "10%"

eval_err_num:787
medium pred: SELECT t1.人口 FROM "民族城市" t1 INNER JOIN "民俗节日" t2 ON t1.民族id = t2.民族id AND t2.时间 = ( SELECT t3.人口 FROM "民俗节日" t3 WHERE t3.时间 = ( SELECT t4.时间 FROM "民俗节日" t4 WHERE t4.纪念 = '2022-02-24' ) )
medium gold: select 城市名称,人口 from 民族城市 where 比例 > "10%"

eval_err_num:788
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 城市名称,人口 from 民族城市 where 比例 > "10%" order by 人口 desc

eval_err_num:789
hard pred: SELECT t1.名称, t1.人口 FROM "民族" t1 INNER JOIN "民族城市" t2 ON t1.人口 = t2.人口 AND t1.名称 = t2.名称 AND t1.民族id = t2.民族id
hard gold: select 城市名称,count(*) from 民族城市 AS T1 JOIN 民族 AS T2 ON T1.民族id = T2.民族id where 比例 > "10%" group by 城市名称

eval_err_num:790
medium pred: SELECT 民族 FROM 民俗节日 WHERE 时间 = '2023-02-15' AND 纪念 = '中国'
medium gold: select 名称 from 民俗节日 AS T1 join 民族 AS T2 on T1.民族id = T2.民族id where 节日 = "春节"

eval_err_num:791
medium pred: SELECT 人口 FROM "民族" WHERE 名称 = '汉族'
medium gold: select 人口 from 民俗节日 AS T1 join 民族 AS T2 on T1.民族id = T2.民族id where 节日 = "春节"

eval_err_num:792
hard pred: SELECT COUNT(*) - 1 AS count FROM "民族" WHERE 名称 < '汉族'
hard gold: select count(*) from 民族 where 人口 < (select 人口 from 民俗节日 AS T1 join 民族 AS T2 on T1.民族id = T2.民族id where 节日 = "春节" )

eval_err_num:793
hard pred: SELECT 名称 FROM "民族"
hard gold: select 名称 from 民族 where 人口 < (select 人口 from 民俗节日 AS T1 join 民族 AS T2 on T1.民族id = T2.民族id where 节日 = "春节" )

eval_err_num:794
easy pred: SELECT COUNT(DISTINCT 电视台id) AS num_电视台 FROM 电视台
easy gold: select count(名称) from 电视台

easy pred: SELECT 电视剧编号, 剧名 FROM 电视剧; SELECT 平台id, 时间段, 收视率 FROM 电视剧收视
easy gold: select 名称 from 电视台

eval_err_num:795
hard pred: SELECT 电视台.隶属机构 FROM 电视台 JOIN 电视剧收视 ON 电视台.电视台id = 电视剧收视.电视台id
hard gold: select 隶属机构 from 电视台 where 名称 in (select 名称 from 电视台)

eval_err_num:796
medium pred: SELECT 电视剧收视.剧名 FROM 电视剧收视 JOIN 电视台 ON 电视剧收视.平台id = 电视台.电视台id WHERE 电视台.名称 = '北京卫视'
medium gold: select 剧名 from 电视剧 AS T1 JOIN 电视台 AS T2 ON T1.首播平台id = T2.电视台id where t2.名称 = "北京卫视"

eval_err_num:797
extra pred: SELECT 电视剧.剧名 FROM 电视剧 JOIN 电视台 ON 电视剧.平台id = 电视台.电视台id WHERE 电视台.名称 = '中央电视台文艺中心影视部' AND 电视剧.出品公司 = '中央电视台文艺中心影视部'
extra gold: select 剧名 from 电视剧 where 剧名 in (select 剧名 from 电视剧 AS T1 JOIN 电视台 AS T2 ON T1.首播平台id = T2.电视台id where t2.名称 = "北京卫视") and 出品公司 = "中央电视台文艺中心影视部"

eval_err_num:798
easy pred: SELECT * FROM "民族" WHERE "语言" = '汉语'
easy gold: select 名称 from 民族 where 语言 = "汉语"

eval_err_num:799
medium pred: SELECT * FROM "民族" WHERE "宗教信仰" = '宗教'
medium gold: select 名称,宗教信仰 from 民族 where 语言 = "汉语"

eval_err_num:800
medium pred: SELECT 民族id, 城市名称, 人口, 比例 FROM "民族城市" WHERE 城市名称 = '北京' OR 城市名称 = '上海' OR 城市名称 = '广州' OR 城市名称 = '深圳'
medium gold: select 名称,城市名称 from 民族城市 AS T1 JOIN 民族 AS T2 ON T1.民族id = T2.民族id where 语言 = "汉语"

eval_err_num:801
medium pred: SELECT 城市名称, 人口 FROM "民族城市" WHERE 城市名称 in ('北京', '上海', '广州', '深圳') AND 人口 >= 1000000
medium gold: select sum(T1.人口) from 民族城市 AS T1 JOIN 民族 AS T2 ON T1.民族id = T2.民族id where 语言 = "汉语"

eval_err_num:802
hard pred: SELECT t1.剧名 FROM 电视剧 t1 JOIN 电视剧收视 t2 ON t1.剧名 = t2.剧名 AND t1.出品时间 = t2.时间段 AND t1.首播平台id = t2.平台id WHERE t2.时间段 = '20:00:00' AND t2.平台id IS NOT NULL
hard gold: select t1.剧名 from 电视剧 AS T1 JOIN 电视剧收视 AS T2 ON T1.电视剧编号 = T2.电视剧id JOIN 电视台 AS T3 ON T2.平台id = T3.电视台id where T2.时间段 = "20:00~21:00"

eval_err_num:803
easy pred: SELECT 收视率 FROM 电视剧收视 WHERE 电视剧id = ( SELECT 电视剧id FROM 电视剧 WHERE 出品时间 = '2022-01-01' AND 首播平台id = 1 ) AND 时间段 = '20:00:00'
easy gold: select 收视率 from 电视剧收视 where 时间段 = "20:00~21:00"

eval_err_num:804
easy pred: SELECT t1.剧名, t1.出品时间, t1.发行公司, t1.首播平台id, t1.收视率, t1.时间段 FROM 电视剧 t1 JOIN 电视剧收视 t2 ON t1.剧名 = t2.剧名 AND t1.出品时间 = t2.时间段 AND t1.首播平台id = t2.平台id WHERE t2.时间段 = '20:00:00' AND t2.平台id IS NOT NULL
easy gold: select * from 电视剧 where 剧名 = "庆余年"

eval_err_num:805
medium pred: SELECT 电视台.name AS 电视台名称, 电视台.开播时间 AS 电视台开播时间, 电视台.上线时间 AS 电视台上线时间, 电视台.隶属机构 AS 电视台隶属机构 FROM 电视台 JOIN 电视台表 ON 电视台.电视台id = 电视台表.电视台id WHERE 电视台.name = '它' AND 电视台表.电视台id IS NOT NULL
medium gold: select 名称 from 电视台 AS T1 JOIN 电视剧 AS T2 ON T1.电视台id = T2.首播平台id where 剧名 = "庆余年"

easy pred: SELECT * FROM 动物 WHERE 是否是人类朋友 = 'Y'
easy gold: select 学名 from 动物 where 是否是人类朋友 = "是"

easy pred: SELECT * FROM 动物 WHERE 是否是人类朋友 = 'N'
easy gold: select 学名 from 动物 where 是否是人类朋友 = "否"

medium pred: SELECT * FROM 动物 WHERE 食性 = 'A'
medium gold: select 学名,食性 from 动物 where 是否是人类朋友 = "否"

eval_err_num:806
hard pred: SELECT * FROM 动物的天敌 WHERE 天敌原因 = 'A'
hard gold: select T2.学名,T3.学名 from 动物的天敌 AS T1 JOIN 动物 AS T2 ON T1.动物id = T2.动物id join 动物 AS T3 on T3.动物id = T1.天敌id where T2.是否是人类朋友 = "否"

easy pred: SELECT * FROM 比赛 WHERE 名称 = '模式识别比赛' AND 方向 = '图像识别'
easy gold: select 名称 from 比赛 where 方向 = '模式识别'

eval_err_num:807
medium pred: SELECT 举办单位性质 FROM 比赛 WHERE 单位性质 = '学校'
medium gold: select 举办单位 ,单位性质 from 比赛 where 方向 = '模式识别'

eval_err_num:808
hard pred: SELECT * FROM 参赛队伍 WHERE 加入队伍id = 比赛.参赛队伍id
hard gold: select T2.名称 ,T3.队名 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id where 方向 = '模式识别'

hard pred: SELECT 成绩 FROM 队伍参赛成绩 WHERE 参加比赛id = 比赛.比赛id
hard gold: select T3.队名 ,T1.成绩 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id where 方向 = '模式识别'

hard pred: SELECT * FROM 动物朋友 WHERE 动物id IN (SELECT 动物id FROM 动物)
hard gold: select T2.学名 from 动物朋友 AS T1 JOIN 动物 AS T2 ON T1.朋友id = T2.动物id JOIN 动物 AS T3 ON T1.动物id = T3.动物id where T3.学名 = "狗"

eval_err_num:809
hard pred: SELECT * FROM 动物的天敌 WHERE 天敌id IN (SELECT 天敌id FROM 动物朋友)
hard gold: select T2.学名 from 动物的天敌 AS T1 JOIN 动物 AS T2 ON T1.天敌id = T2.动物id JOIN 动物 AS T3 ON T1.动物id = T3.动物id where T3.学名 = "狗"

eval_err_num:810
hard pred: SELECT 天敌原因 FROM 动物的天敌 WHERE 天敌id IN (SELECT 天敌id FROM 动物)
hard gold: select T2.学名,T1.克星原因 from 动物的天敌 AS T1 JOIN 动物 AS T2 ON T1.天敌id = T2.动物id JOIN 动物 AS T3 ON T1.动物id = T3.动物id where T3.学名 = "狗"

easy pred: SELECT * FROM 动物 WHERE 学名 = '狗'
easy gold: select 是否是人类朋友 from 动物 where 学名 = "狗"

easy pred: SELECT * FROM 动物 WHERE 是否是人类朋友 = 'Y'
easy gold: select 理由 from 动物 where 学名 = "狗"

eval_err_num:811
easy pred: SELECT 动物.学名, 动物朋友.朋友id, 动物朋友.理由 FROM 动物 JOIN 动物朋友 ON 动物.动物id = 动物朋友.动物id JOIN 动物的天敌 ON 动物.天敌id = 动物的天敌.动物id WHERE 动物.是否是人类朋友 = 'Y'
easy gold: select 学名 from 动物 where 理由 = "人类忠实的朋友"

eval_err_num:812
medium pred: SELECT 动物.学名, 动物朋友.朋友id, 动物的天敌.天敌原因 FROM 动物 JOIN 动物朋友 ON 动物.动物id = 动物朋友.动物id JOIN 动物的天敌 ON 动物.天敌id = 动物的天敌.动物id WHERE 动物的食性 = 'P'
medium gold: select 学名,食性 from 动物 where 理由 = "人类忠实的朋友"

eval_err_num:813
hard pred: SELECT 动物.学名, 动物朋友.朋友id, 动物朋友.理由 FROM 动物 JOIN 动物朋友 ON 动物.动物id = 动物朋友.动物id WHERE 动物.是否是人类朋友 = 'Y' and 动物.食性 != 'P'
hard gold: select T3.学名,T2.学名 from 动物朋友 AS T1 JOIN 动物 AS T2 ON T1.朋友id = T2.动物id JOIN 动物 AS T3 ON T1.动物id = T3.动物id where T3.理由 = "人类忠实的朋友"

eval_err_num:814
hard pred: SELECT 动物.学名, 动物朋友.朋友id, 动物的天敌.天敌原因 FROM 动物 JOIN 动物朋友 ON 动物.动物id = 动物朋友.动物id JOIN 动物的天敌 ON 动物.天敌id = 动物的天敌.动物id WHERE 动物的天敌.天敌原因 != 'N'
hard gold: select T3.学名,T2.学名 from 动物的天敌 AS T1 JOIN 动物 AS T2 ON T1.天敌id = T2.动物id JOIN 动物 AS T3 ON T1.动物id = T3.动物id where T3.理由 = "人类忠实的朋友"

eval_err_num:815
hard pred: ```sql SELECT 天敌.天敌原因 FROM 动物 JOIN 动物朋友 ON 动物.动物id = 动物朋友.动物id JOIN 动物的天敌 ON 动物.天敌id = 动物的天敌.动物id WHERE 动物.学名 = '动物的天敌' and 动物朋友.朋友id = '动物的天敌' and 动物的天敌.天敌原因 != 'N'
hard gold: select T3.学名,T2.学名,T1.克星原因 from 动物的天敌 AS T1 JOIN 动物 AS T2 ON T1.天敌id = T2.动物id JOIN 动物 AS T3 ON T1.动物id = T3.动物id where T3.理由 = "人类忠实的朋友"

eval_err_num:816
easy pred: SELECT * FROM 动物朋友 WHERE 动物id IN (SELECT 动物id FROM 天敌)
easy gold: select 学名 from 动物 where 理由 = "捕食对人类有害的昆虫"

hard pred: SELECT * FROM 动物 WHERE 学名 = '猫'
hard gold: select T3.学名,T2.学名 from 动物朋友 AS T1 JOIN 动物 AS T2 ON T1.朋友id = T2.动物id JOIN 动物 AS T3 ON T1.动物id = T3.动物id where T3.理由 = "捕食对人类有害的昆虫"

hard pred: SELECT * FROM 动物 WHERE 学名 = '猫' AND 食性 = '昆虫'
hard gold: select T2.学名,T3.学名 from 动物的天敌 AS T1 JOIN 动物 AS T2 ON T1.天敌id = T2.动物id JOIN 动物 AS T3 ON T1.动物id = T3.动物id where T2.理由 = "捕食对人类有害的昆虫"

eval_err_num:817
easy pred: SELECT * FROM "公司" WHERE name = 'ABC 公司'
easy gold: select 名称 from 公司

eval_err_num:818
medium pred: SELECT 公司名称,所属国家 FROM "公司" WHERE name = 'ABC 公司'
medium gold: select 名称,所属国家 from 公司

eval_err_num:819
medium pred: SELECT * FROM "公司" WHERE name = 'ABC 公司' ORDER BY排名 DESC
medium gold: select 名称,所属国家 from 公司 order by 排名 desc

eval_err_num:820
easy pred: SELECT "音箱产品"."名称" FROM "音箱产品" WHERE 1=1
easy gold: select 名称 from 音箱产品

eval_err_num:821
medium pred: SELECT "音箱产品"."排名" FROM "音箱产品" WHERE 1=1
medium gold: select 名称,排名 from 音箱产品

eval_err_num:822
extra pred: SELECT * FROM "音箱产品" WHERE "售价"大于等于300
extra gold: select 名称,排名 from 音箱产品 where 售价>300 or 售价 = 300

eval_err_num:823
hard pred: SELECT t1.公司名称, t1.所属国家, t2.公司名称, t2.所属国家 FROM "公司" t1 JOIN "音箱产品" t2 ON t1.id=t2.所属公司id WHERE t2."售价"大于等于300
hard gold: select 名称 from 公司 where id in (select 所属公司id from 音箱产品 where 名称 in (select 名称 from 音箱产品 where 售价>300 or 售价 = 300))

eval_err_num:824
easy pred: SELECT 百度公司."排名" FROM "公司" WHERE 百度公司."id" IN (SELECT 公司名称 FROM "音箱产品" WHERE "售价"大于等于300)
easy gold: select 排名 from 公司 where 名称 = "百度"

eval_err_num:825
easy pred: SELECT 音箱id AS 名称 FROM "音箱产品" GROUP BY 音箱id
easy gold: select 名称 from 音箱产品

eval_err_num:826
medium pred: SELECT 音箱id, 售价 FROM "音箱产品" ORDER BY 售价 DESC
medium gold: select 名称,售价 from 音箱产品

eval_err_num:827
medium pred: SELECT 音箱id, 售价 FROM "音箱产品" ORDER BY 售价 DESC, 售价 ASC
medium gold: select 名称,售价 from 音箱产品 order by 售价 desc

eval_err_num:828
hard pred: SELECT 公司id, 售价 FROM "音箱产品" WHERE 售价 = ( SELECT MAX(售价) FROM "音箱产品" GROUP BY 公司id )
hard gold: select 名称 from 公司 where id = (select 所属公司id from 音箱产品 where 名称 = (select 名称 from 音箱产品 order by 售价 desc limit 1))

eval_err_num:829
medium pred: SELECT price FROM "音箱产品" WHERE id = (SELECT id FROM "公司" WHERE name = '小米') ON DELETE NO ACTION ON UPDATE NOACTION
medium gold: select 名称,售价 from 音箱产品 where 名称 = "小爱"

eval_err_num:830
medium pred: SELECT COUNT(*) as 排名 FROM "音箱产品" WHERE id = (SELECT id FROM "公司" WHERE name = '小米') ON DELETE NOACTION ON UPDATE NOACTION
medium gold: select 名称,排名 from 音箱产品 where 名称 = "小爱"

eval_err_num:831
hard pred: SELECT 公司名称 FROM "公司" WHERE id = (SELECT id FROM "音箱产品" WHERE name = '小爱音箱') ON DELETE NOACTION ON UPDATE NOACTION
hard gold: select 名称 from 公司 where id = (select 所属公司id from 音箱产品 where 名称 = "小爱" )

eval_err_num:832
hard pred: SELECT SUM(销售量) as 销售量 FROM "产品销售" WHERE 产品id = (SELECT id FROM "音箱产品" WHERE name = '小爱音箱') ON DELETE NOACTION ON UPDATE NOACTION
hard gold: select 销售量 from 产品销售 where 产品id = (select 音箱id from 音箱产品 where 名称 = "小爱")

eval_err_num:833
medium pred: SELECT 比赛.名称 FROM 比赛 JOIN 参赛队伍 ON 比赛.比赛id = 参赛队伍.比赛id JOIN 参赛学生 ON 比赛.比赛id = 参赛学生.比赛id JOIN 学生参赛记录 ON 参赛队伍.加入队伍id = 学生参赛记录.加入队伍id JOIN 比赛平台 ON 学生参赛记录.比赛平台 = 比赛.比赛平台 WHERE 学生参赛记录.加入队伍日期 = '2022-01-01' AND 比赛.奖金数 = '1000'
medium gold: select 名称 from 比赛 where 举办单位 like '%京东%'

eval_err_num:834
medium pred: SELECT 比赛.方向 FROM 比赛 JOIN 参赛队伍 ON 比赛.比赛id = 参赛队伍.比赛id JOIN 参赛学生 ON 比赛.比赛id = 参赛学生.比赛id JOIN 学生参赛记录 ON 参赛队伍.加入队伍id = 学生参赛记录.加入队伍id JOIN 比赛平台 ON 学生参赛记录.比赛平台 = 比赛.比赛平台 WHERE 学生参赛记录.加入队伍日期 = '2022-01-01' AND 比赛.方向 = '学术'
medium gold: select 方向 from 比赛 where 举办单位 like '%京东%'

eval_err_num:835
medium pred: SELECT 比赛平台.平台名 FROM 比赛平台 JOIN 比赛 ON 比赛平台.比赛平台 = 比赛平台.比赛平台 JOIN 参赛队伍 ON 比赛平台.加入队伍id = 参赛队伍.加入队伍id JOIN 学生参赛记录 ON 参赛队伍.学生参赛记录id = 学生参赛记录.学生参赛记录id WHERE 学生参赛记录.加入队伍日期 = '2022-01-01' AND 比赛平台.比赛平台 = '知乎'
medium gold: select 比赛平台 from 比赛 where 举办单位 like '%京东%'

eval_err_num:836
easy pred: SELECT * FROM 学生参赛记录 WHERE 学生id IN (SELECT 学生id FROM 参赛学生 WHERE 学校 = '北京理工大学') AND 加入队伍日期早于('2022-01-01'日期)
easy gold: select 姓名 from 参赛学生 where 学校 = '北京理工大学'

eval_err_num:837
medium pred: SELECT 学历, age FROM 参赛学生 WHERE 学校 = '北京理工大学' AND 年龄早于('2022-01-01'日期)
medium gold: select 姓名 ,学历 ,年龄 from 参赛学生 where 学校 = '北京理工大学'

hard pred: SELECT 加入队伍id FROM 队伍参赛成绩 WHERE 参加比赛id = '2022_09_20_18_48_38'
hard gold: select T3.队名 from 学生参赛记录 AS T1 JOIN 参赛学生 AS T2 ON T1.学生id = T2.学生id JOIN 参赛队伍 AS T3 ON T1.队伍id = T3.队伍id where 学校 = '北京理工大学'

eval_err_num:838
hard pred: SELECT 加入队伍日期 FROM 队伍参赛成绩 WHERE 参加比赛id = '2022_09_20_18_48_38'
hard gold: select T1.加入队伍日期 from 学生参赛记录 AS T1 JOIN 参赛学生 AS T2 ON T1.学生id = T2.学生id JOIN 参赛队伍 AS T3 ON T1.队伍id = T3.队伍id where 学校 = '北京理工大学'

extra pred: SELECT 成绩 FROM 队伍参赛成绩 WHERE 参加比赛id = '2022_09_20_18_48_38'
extra gold: select T4.成绩 from 学生参赛记录 AS T1 JOIN 参赛学生 AS T2 ON T1.学生id = T2.学生id JOIN 参赛队伍 AS T3 ON T1.队伍id = T3.队伍id JOIN 队伍参赛成绩 AS T4 ON T3.队伍id = T4.加入队伍id where 学校 = '北京理工大学'

eval_err_num:839
medium pred: SELECT 比赛.name, 比赛.方向, 比赛.举办单位, 比赛.单位性质, 奖金数.number, 奖金数.text FROM 比赛 INNER JOIN 奖金数 ON 比赛.id = 奖金数.比赛id ORDER BY 奖金数.text DESC LIMIT 3
medium gold: select 名称 ,奖金数 from 比赛 order by 奖金数 desc limit 3

eval_err_num:840
medium pred: SELECT 比赛.name, 比赛.方向, 比赛.举办单位, 比赛.单位性质, 学生.加入队伍id, 学生.学生id, 学生.姓名, 学生.年龄, 学生.学历, 学生.学校, (SELECT COUNT(*) FROM 学生参赛记录 WHERE 学生参赛记录.加入队伍id = 学生.加入队伍id) AS 录取队伍数量 FROM 比赛 INNER JOIN 学生 ON 比赛.id = 学生.比赛id INNER JOIN 学生参赛记录 ON 学生.id = 学生参赛记录.学生id WHERE 比赛.id = (SELECT 比赛id FROM 比赛 WHERE 奖金数.text = 'XXX') GROUP BY 比赛.name, 比赛.方向, 比赛.举办单位, 比赛.单位性质, 学生.加入队伍id, 学生.学生id, 学生.姓名, 学生.年龄, 学生.学历, 学生.学校 LIMIT 1
medium gold: select 名称 ,录取队伍数量 from 比赛 order by 奖金数 desc limit 3

eval_err_num:841
extra pred: SELECT 比赛.name, 比赛.方向, 比赛.举办单位, 学生.加入队伍id, 学生.学生id, 学生.姓名, 学生.年龄, 学生.学历, 学生.学校 FROM 比赛 INNER JOIN 学生 ON 比赛.id = 学生.比赛id INNER JOIN 学生参赛记录 ON 学生.id = 学生参赛记录.学生id WHERE 比赛.id = (SELECT 比赛id FROM 比赛 WHERE 奖金数.text = 'XXX') GROUP BY 比赛.name, 比赛.方向, 比赛.举办单位, 学生.加入队伍id, 学生.学生id, 学生.姓名, 学生.年龄, 学生.学历, 学生.学校 LIMIT 1
extra gold: select T3.队名,T2.名称 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id order by 奖金数 desc limit 3

eval_err_num:842
extra pred: SELECT 比赛.name, 比赛.方向, 比赛.举办单位, 学生.加入队伍id, 学生.学生id, 学生.姓名, 学生.年龄, 学生.学历, 学生.学校, 比赛.成绩 FROM 比赛 INNER JOIN 学生 ON 比赛.id = 学生.比赛id INNER JOIN 学生参赛记录 ON 学生.id = 学生参赛记录.学生id WHERE 比赛.id = (SELECT 比赛id FROM 比赛 WHERE 奖金数.text = 'XXX') GROUP BY 比赛.name, 比赛.方向, 比赛.举办单位, 学生.加入队伍id, 学生.学生id, 学生.姓名, 学生.年龄, 学生.学历, 学生.学校 LIMIT 1
extra gold: select T3.队名 ,T2.名称 ,T1.成绩 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id order by 奖金数 desc limit 3

eval_err_num:843
easy pred: SELECT t1.公司名称, t1.总部城市id, t1.所属集团, t1.上市股市, t1.经营范围, t1.经营年数, (SELECT COUNT(*) FROM "餐饮公司城市消费" t2 WHERE t2.公司id = t1.公司id AND t2.城市id = t1.总部城市id) AS 经营年数城市消费比 FROM "城市" t1 JOIN "餐饮公司" t2 ON t1.城市id = t2.城市id GROUP BY t1.公司名称, t1.总部城市id, t1.所属集团, t1.上市股市, t1.经营范围, t1.经营年数 ORDER BY t1.公司名称, t1.总部城市id, t1.所属集团, t1.上市股市, t1.经营范围, t1.经营年数
easy gold: select 所属集团 from 餐饮公司 where 公司名 = '麦当劳'

eval_err_num:844
easy pred: SELECT t1.公司名称, t1.总部城市id, t1.所属集团, t1.上市股市, t1.经营范围 FROM "餐饮公司" t1 JOIN "城市" t2 ON t1.公司id = t2.公司id WHERE t2.城市id = ( SELECT t3.城市id FROM "餐饮公司城市消费" t3 WHERE t3.公司id = t1.公司id AND t3.城市id = t2.城市id )
easy gold: select 经营范围 from 餐饮公司 where 公司名 = '麦当劳'

eval_err_num:845
easy pred: SELECT t1.经营年数 FROM "餐饮公司城市连锁" t1 JOIN "城市" t2 ON t1.城市id = t2.城市id WHERE t2.城市id = ( SELECT t4.城市id FROM "餐饮公司城市消费" t4 WHERE t4.公司id = t1.公司id AND t4.城市id = t2.城市id )
easy gold: select 经营年数 from 餐饮公司 where 公司名 = '麦当劳'

eval_err_num:846
hard pred: SELECT t1.人气, t1.总消费额, t1.排名 FROM "餐饮公司城市消费" t1 JOIN "城市" t2 ON t1.城市id = t2.城市id WHERE t2.城市id = ( SELECT t3.城市id FROM "餐饮公司城市连锁" t3 WHERE t3.公司id = t1.公司id AND t3.城市id = t2.城市id ) GROUP BY t1.人气, t1.总消费额, t1.排名 ORDER BY t1.人气 DESC
hard gold: select T1.人气 from 餐饮公司城市消费 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T3.公司id = T1.公司id where T3.公司名 = '麦当劳' AND T2.名称 = '杭州'

eval_err_num:847
easy pred: SELECT SUM(CASE WHEN 城市.餐饮收入 >= 1000 THEN 1000 ELSE 0 END) AS 成都餐饮收入 FROM "城市" AS 城市
easy gold: select 餐饮收入 from 城市 where 名称 = '成都'

eval_err_num:848
easy pred: SELECT (SELECT COUNT(*) FROM "城市" AS c1 WHERE c1.城市id = 城市.城市id AND c1.同比增长 >= 1%) / (SELECT COUNT(*) FROM "城市" AS c2 WHERE c2.城市id = 城市.城市id AND c2.同比增长 <= 1%) AS 同比增长比率 FROM "城市" AS 城市
easy gold: select 同比增长 from 城市 where 名称 = '成都'

eval_err_num:849
extra pred: SELECT 哪家餐饮公司.公司名称, 哪家餐饮公司.总部城市id, 哪家餐饮公司.分店数量, 哪家餐饮公司.占地面积, 哪家餐饮公司.餐位数量, 哪家餐饮公司.员工数量 FROM 餐饮公司城市连锁.分店 哪家餐饮公司 INNER JOIN "城市".城市 ON 哪家餐饮公司.城市id = "城市"."城市id" INNER JOIN "餐饮公司城市消费".公司 ON 哪家餐饮公司.公司id = "餐饮公司城市消费"."公司id" WHERE "城市"."城市id" = 1
extra gold: select T1.分店数量 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where 名称 = '成都' order by 分店数量 desc limit 1

eval_err_num:850
easy pred: SELECT * FROM "餐饮公司" WHERE "上市股市" = 'A股'
easy gold: select 公司名 from 餐饮公司 where 上市股市 = 'A股'

eval_err_num:851
hard pred: SELECT t1.城市id FROM "餐饮公司城市连锁" t1 JOIN "城市" t2 ON t1.城市id = t2.城市id WHERE t2.名称 = '它们' AND t2.所属省份 = '中国'
hard gold: select T3.公司名 ,T2.名称 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where 上市股市 = 'A股'

eval_err_num:852
hard pred: SELECT t1.占地面积 FROM "餐饮公司城市连锁" t1 JOIN "城市" t2 ON t1.城市id = t2.城市id WHERE t2.名称 = '它们' AND t2.所属省份 = '中国'
hard gold: select T1.占地面积 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where 上市股市 = 'A股'

eval_err_num:853
extra pred: SELECT t1.城市id FROM "城市" t1 JOIN "餐饮公司" t2 ON t1.城市id = t2.总部城市id JOIN "餐饮公司城市连锁" t3 ON t2.公司id = t3.公司id WHERE t3.员工数量 = ( SELECT MAX(员工数量) FROM "餐饮公司城市连锁" )
extra gold: select T2.名称 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where T3.公司名 = '麦当劳' order by T1.员工数量 desc limit 1

eval_err_num:854
extra pred: SELECT count(DISTINCT "餐饮公司城市连锁".餐位数量) AS total_餐位 FROM "餐饮公司城市连锁" WHERE "餐饮公司城市连锁"."城市id" = ( SELECT "城市".城市id FROM "城市" WHERE "城市"."名称" = '麦当劳' )
extra gold: select T1.餐位数量 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where T3.公司名 = '麦当劳' order by T1.员工数量 desc limit 1

eval_err_num:855
extra pred: SELECT "餐饮公司城市连锁"."员工数量" FROM "餐饮公司城市连锁" WHERE "餐饮公司城市连锁"."城市id" = ( SELECT "城市".城市id FROM "城市" WHERE "城市"."名称" = '麦当劳' )
extra gold: select T1.员工数量 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where T3.公司名 = '麦当劳' order by T1.员工数量 desc limit 1

eval_err_num:856
extra pred: SELECT COUNT(*) FROM "餐饮公司城市连锁" WHERE "餐饮公司城市连锁"."城市id" = ( SELECT "城市".城市id FROM "城市" WHERE "城市"."名称" = '麦当劳' )
extra gold: select T1.分店数量 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where T3.公司名 = '麦当劳' order by T1.员工数量 desc limit 1

medium pred: SELECT 时间 FROM 民俗节日
medium gold: select 节日,时间 from 民俗节日

medium pred: SELECT 纪念 FROM 民俗节日
medium gold: select 节日,纪念 from 民俗节日

eval_err_num:857
hard pred: SELECT 民族城市.民族id, 民族城市.城市名称, 民族城市.人口, 民族.人口, 民族.语言, 民族.宗教信仰, 民俗节日.节日名称, 民俗节日.时间, 民俗节日.纪念 FROM 民族城市 JOIN 民族 ON 民族城市.民族id = 民族.民族id JOIN 民俗节日 ON 民族城市.民族id = 民俗节日.民族id WHERE 民俗节日.时间 = ( SELECT MAX(时间) FROM 民俗节日 )
hard gold: select 名称 from 民族 where 民族id = (select 民族id from 民俗节日 where 节日 = "端午节")

eval_err_num:858
extra pred: SELECT 民族城市.人口, 民族.人口, 民族城市.语言, 民族.宗教信仰, 民俗节日.节日名称, 民俗节日.时间, 民俗节日.纪念 FROM 民族城市 JOIN 民族 ON 民族城市.民族id = 民族.民族id JOIN 民俗节日 ON 民族城市.民族id = 民俗节日.民族id WHERE 民俗节日.时间 = ( SELECT MAX(时间) FROM 民俗节日 )
extra gold: select 名称,人口 from 民族 where 民族id = (select 民族id from 民俗节日 where 节日 = "端午节")

eval_err_num:859
easy pred: SELECT * FROM "民族"
easy gold: select 名称 from 民族

eval_err_num:860
medium pred: SELECT "语言" FROM "民族"
medium gold: select 名称,语言 from 民族

eval_err_num:861
medium pred: SELECT人口, COUNT(*) as 人数 FROM "民族" GROUP BY人口 ORDER BY 人数 DESC
medium gold: select 名称,人口 from 民族 order by 人口 desc

eval_err_num:862
medium pred: SELECT宗教信仰 FROM "民族" GROUP BY人口 ORDER BY 人数 DESC LIMIT 1
medium gold: select 名称,宗教信仰 from 民族 order by 人口 desc limit 1

eval_err_num:863
easy pred: SELECT "城市名称" FROM "民族城市" WHERE "民族id" = (SELECT "民族id" FROM "民族") ON DELETE NOACTION ON UPDATE NOACTION
easy gold: select 城市名称 from 民族城市

eval_err_num:864
medium pred: SELECT "人口" AS total_population, "比例" AS population_ Ratio FROM "民族城市" WHERE "民族id" = (SELECT "民族id" FROM "民族") ON DELETE NOACTION ON UPDATE NOACTION
medium gold: select 城市名称,人口,比例 from 民族城市

eval_err_num:865
medium pred: SELECT "人口数量" AS population_number, COUNT(*) AS population_count, order by population_count DESC FROM "民族城市" GROUP BY "民族id" HAVING COUNT(*) > 1
medium gold: select 城市名称,人口,比例 from 民族城市 order by 人口 desc

eval_err_num:866
extra pred: SELECT t1.name AS 城市名称, t1.人口, t2.民族id, t2.名称 AS 民族, t2.人口 as 人口_ ratio FROM "民族城市" t1 INNER JOIN "民族" t2 ON t1.民族id = t2.民族id GROUP BY t1.name, t1.人口 HAVING MAX(t2.人口) = (SELECT MAX(人口) FROM "民族城市" WHERE t1.民族id = t1.民族id) ORDER BY t1.人口 DESC
extra gold: select 名称 from 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id where T2.城市名称 = (select 城市名称 from 民族城市 order by 人口 desc limit 1)

eval_err_num:867
extra pred: SELECT "信仰" AS宗教信仰 FROM "民族城市" WHERE "民族id" = (SELECT "民族id" FROM "民族") ON DELETE NOACTION ON UPDATE NOACTION
extra gold: select 名称,宗教信仰 from 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id where T2.城市名称 = (select 城市名称 from 民族城市 order by 人口 desc limit 1)

eval_err_num:868
easy pred: SELECT * FROM "球队" WHERE 中文队名 = '球队'
easy gold: select 中文队名 from 球队

eval_err_num:869
medium pred: SELECT 赛区,篮球运动员FROM "篮球运动员" WHERE 球员id = '1234'
medium gold: select 中文队名,赛区 from 球队

eval_err_num:870
medium pred: SELECT 赛季, 球队id, '总教练' AS coach FROM "NBA总冠军" WHERE 赛季 = '2022-2023' ORDER BY 夺冠次数 DESC
medium gold: select 中文队名,赛区 from 球队 order by 夺冠次数 desc

eval_err_num:871
extra pred: SELECT 球队id, '总教练' AS coach FROM "NBA总冠军" WHERE 冠军次数 = (SELECT MAX(冠军次数) FROM "NBA总冠军")
extra gold: select 总教练 from NBA总冠军 AS T1 JOIN 球队 AS T2 ON T1.球队id = T2.球队id where T2.中文队名 = (select 中文队名 from 球队 order by 夺冠次数 desc limit 1)

eval_err_num:872
easy pred: SELECT t1.中文名 FROM "篮球运动员" t1 join "NBA总冠军" t2 on t1.球员id = t2.球队id WHERE t2.赛季 = '2021-2022' AND t2.总教练 = 'NBA总冠军'
easy gold: select 中文名 from 篮球运动员

eval_err_num:873
medium pred: SELECT t1.参加选秀年 FROM "篮球运动员" t1 join "NBA总冠军" t2 on t1.球员id = t2.球队id WHERE t2.赛季 = '2021-2022' AND t2.总教练 = 'NBA总冠军'
medium gold: select 中文名,参加选秀年 from 篮球运动员

eval_err_num:874
medium pred: SELECT t1.是否状元, t2.赛季, t2.总教练, t3.球员id FROM "篮球运动员" t1 join "NBA总冠军" t2 on t1.球员id = t2.球队id join "MVP记录" t3 on t2.赛季 = t3.赛季 AND t2.总教练 = t3.总教练 WHERE t3.赛季 = '2021-2022' AND t2.总教练 = 'NBA总冠军'
medium gold: select 中文名,参加选秀年 from 篮球运动员 where 是否状元 = "是"

eval_err_num:875
medium pred: SELECT t1.获得球队 FROM "篮球运动员" t1 join "NBA总冠军" t2 on t1.球员id = t2.球队id join "MVP记录" t3 on t2.赛季 = t3.赛季 AND t2.总教练 = t3.总教练 WHERE t3.赛季 = '2021-2022' AND t2.总教练 = 'NBA总冠军'
medium gold: select 中文名,获得球队 from 篮球运动员 where 是否状元 = "是"

eval_err_num:876
easy pred: SELECT t1.国籍 FROM "篮球运动员" t1 join "NBA总冠军" t2 on t1.球员id = t2.球队id join "MVP记录" t3 on t2.赛季 = t3.赛季 AND t2.总教练 = t3.总教练 WHERE t3.赛季 = '2021-2022' AND t2.总教练 = 'NBA总冠军'
easy gold: select 国籍 from 篮球运动员 where 是否状元 = "是"

eval_err_num:877
easy pred: SELECT 电视剧.剧名 FROM 电视剧 JOIN 电视台 ON 电视剧.首播平台id = 电视台.电视台id JOIN 电视剧收视 ON 电视剧.电视剧编号 = 电视剧收视.电视剧编号 WHERE 电视台.名称 = '中国电视' AND 电视剧收视.平台id = '腾讯'
easy gold: select 剧名 from 电视剧

eval_err_num:878
medium pred: SELECT 电视剧.出品时间 FROM 电视剧 JOIN 电视台 ON 电视剧.首播平台id = 电视台.电视台id JOIN 电视剧收视 ON 电视剧.电视剧编号 = 电视剧收视.电视剧编号 WHERE 电视台.名称 = '中国电视' AND 电视剧收视.平台id = '腾讯'
medium gold: select 剧名,出品时间 from 电视剧

eval_err_num:879
medium pred: SELECT 电视剧.出品公司 FROM 电视剧 JOIN 电视台 ON 电视剧.首播平台id = 电视台.电视台id JOIN 电视剧收视 ON 电视剧.电视剧编号 = 电视剧收视.电视剧编号 WHERE 电视台.名称 = '中国电视' AND 电视剧收视.平台id = '腾讯'
medium gold: select 剧名,出品公司 from 电视剧

eval_err_num:880
medium pred: SELECT 电视剧.出品公司, 电视剧.发行公司 FROM 电视剧 JOIN 电视台 ON 电视剧.首播平台id = 电视台.电视台id JOIN 电视剧收视 ON 电视剧.电视剧编号 = 电视剧收视.电视剧编号 WHERE 电视台.名称 = '中国电视' AND 电视剧收视.平台id = '腾讯' AND 电视剧.剧名 = '甄嬛传'
medium gold: select 剧名,发行公司 from 电视剧 where 剧名 = "甄嬛传"

eval_err_num:881
medium pred: SELECT 电视剧.收视率 FROM 电视剧 JOIN 电视台 ON 电视剧.首播平台id = 电视台.电视台id JOIN 电视剧收视 ON 电视剧.电视剧编号 = 电视剧收视.电视剧编号 WHERE 电视台.名称 = '中国电视' AND 电视剧收视.平台id = '腾讯' AND 电视剧.剧名 = '西游记'
medium gold: select 收视率 from 电视剧收视 AS T1 JOIN 电视剧 AS T2 ON T1.电视剧id = T2.电视剧编号 where T2.剧名 = "甄嬛传"

eval_err_num:882
medium pred: SELECT 时间 FROM 电视剧 WHERE 剧名 = '破冰行动'
medium gold: select 剧名,出品时间 from 电视剧 where 剧名 = "破冰行动"

hard pred: SELECT 平台id FROM 电视剧收视 WHERE 电视剧id = '破冰行动' AND 平台id = 1
hard gold: select 名称 from 电视台 where 电视台id =(select 首播平台id from 电视剧 where 剧名 = "破冰行动")

eval_err_num:883
extra pred: SELECT 机构id FROM 电视台 WHERE 名称 = '该平台' AND 隶属机构 = '机构'
extra gold: select 名称,隶属机构 from 电视台 where 电视台id =(select 首播平台id from 电视剧 where 剧名 = "破冰行动")

eval_err_num:884
extra pred: SELECT 时间 FROM 电视剧 WHERE 剧名 = '破冰行动' AND 出品时间 = '2021'
extra gold: select 名称,开播时间,上线时间 from 电视台 where 电视台id =(select 首播平台id from 电视剧 where 剧名 = "破冰行动")

easy pred: SELECT 出品公司 FROM 电视剧 WHERE 剧名 = '破冰行动' AND 出品公司 = '该剧出品公司'
easy gold: select 出品公司 from 电视剧 where 剧名 = "破冰行动"

eval_err_num:885
easy pred: SELECT * FROM "公司" WHERE id IN (SELECT id FROM "音箱产品" WHERE 所属公司id = 1)
easy gold: select 名称 from 公司 where 所属国家 = "中国"

eval_err_num:886
medium pred: SELECT 名称 FROM "音箱产品" WHERE id IN (SELECT id FROM "公司" WHERE 名称 = '亚马逊')
medium gold: select T2.名称 from 公司 AS T1 JOIN 音箱产品 AS T2 ON T1.id = T2.所属公司id where T1.所属国家 = "中国"

eval_err_num:887
medium pred: SELECT 排名, 上升名次 FROM "音箱产品" WHERE id IN (SELECT id FROM "公司" WHERE 名称 = '微软')
medium gold: select T2.排名,T2.上升名次 from 公司 AS T1 JOIN 音箱产品 AS T2 ON T1.id = T2.所属公司id where T1.所属国家 = "中国"

eval_err_num:888
hard pred: SELECT * FROM "产品销售" WHERE 季度 = '2022季度' AND 销售量 >= 1000 AND 销售量增长 >= 5
hard gold: select T3.销售量 from 公司 AS T1 JOIN 音箱产品 AS T2 ON T1.id = T2.所属公司id JOIN 产品销售 AS T3 ON T3.产品id = T2.音箱id where T1.所属国家 = "中国" and T3.季度 = "春季"

eval_err_num:889
medium pred: SELECT 音箱产品."名称" FROM "音箱产品" WHERE 音箱id = ( SELECT 音箱id FROM "产品销售" WHERE 季度 = '2022' ORDER BY 售价 DESC LIMIT 1 ) AND 上升名次 = 1
medium gold: select 名称 from 音箱产品 order by 排名 desc limit 1

eval_err_num:890
medium pred: SELECT 音箱产品."售价" FROM "音箱产品" WHERE 音箱id = ( SELECT 音箱id FROM "产品销售" WHERE 季度 = '2022' ORDER BY 售价 DESC LIMIT 1 ) AND 上升名次 = 0
medium gold: select 售价 from 音箱产品 order by 排名 desc limit 1

eval_err_num:891
extra pred: SELECT 产品销售."销售量增长" FROM "产品销售" WHERE 季度 = '2022' AND 产品id = ( SELECT 产品id FROM "音箱产品" WHERE 音箱id = IIF(SUM(销售数据.销售量) > 0, 1, 0) GROUP BY 产品id HAVING COUNT(DISTINCT 销售数据.产品id) = 1 ) AND 上升名次 = 0
extra gold: select T2.销售量增长 from 音箱产品 AS T1 JOIN 产品销售 AS T2 ON T1.音箱id = T2.产品id where T2.季度 = "春季" order by 排名 desc limit 1

eval_err_num:892
easy pred: SELECT 姓名 FROM "作者"
easy gold: select 姓名 from 作者

eval_err_num:893
medium pred: SELECT 年龄 FROM "作者"
medium gold: select 姓名,年龄 from 作者

eval_err_num:894
medium pred: SELECT 年龄, COUNT(*) as num FROM "作者" WHERE 年龄 < 50 GROUP BY 年龄 ORDER BY COUNT(*) DESC
medium gold: select 姓名,年龄 from 作者 order by 年龄 desc

eval_err_num:895
medium pred: 查询语句如下: ```sql SELECT * FROM "作者" WHERE "年龄" = (SELECT MAX("年龄") FROM "作者")
medium gold: select 姓名,年龄 from 作者 order by 年龄 desc limit 1

eval_err_num:896
extra pred: SELECT * FROM "出版图书" WHERE "作者id" = (SELECT "作者id" FROM "作者") AND "书名" IN (SELECT "书名" FROM "出版图书")
extra gold: select 书名 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.作者id = (select 作者id from 作者 order by 年龄 desc limit 1)

eval_err_num:897
extra pred: SELECT "字数" AS "字数", "类型" AS "类型" FROM "出版图书" WHERE "书名" IN (SELECT "书名" FROM "出版图书") AND "评分" < 5.0 AND "点击数" > 0.0
extra gold: select 书名,字数,类型 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.作者id = (select 作者id from 作者 order by 年龄 desc limit 1)

eval_err_num:898
extra pred: SELECT "评分" AS "最高评分", "书名" AS "书名", "作者id" AS "作者id" FROM "出版图书" WHERE "评分" = (SELECT MAX("评分") FROM "出版图书") ORDER BY "评分" DESC
extra gold: select 书名,评分 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.作者id = (select 作者id from 作者 order by 年龄 desc limit 1) and T1.评分 = (select max(评分) from 出版图书)

eval_err_num:899
extra pred: SELECT "点击数" AS "点击数", "书名" AS "书名", "作者id" AS "作者id" FROM "出版图书" WHERE "评分" < 5.0 AND "点击数" > 0.0 ORDER BY "点击数" DESC
extra gold: select 书名,点击数 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.作者id = (select 作者id from 作者 order by 年龄 desc limit 1) and T1.评分 = (select max(评分) from 出版图书)

eval_err_num:900
easy pred: 以下是查询语句: SELECT 公司名 FROM 餐饮公司; 该语句选择了“餐饮公司”表中的“公司名”列,并输出了结果。
easy gold: select 公司名 from 餐饮公司

eval_err_num:901
medium pred: 以下是查询语句: SELECT 公司名,所属集团 FROM 餐饮公司; 该语句选择了“餐饮公司”表中的“公司名”和“所属集团”列,并输出了结果。
medium gold: select 公司名,所属集团 from 餐饮公司

eval_err_num:902
medium pred: 以下是查询语句: SELECT 上市股市 FROM 餐饮公司 WHERE 上市股市 = '港股'; 该语句选择了“餐饮公司”表中的“上市股市”列,并输出了结果。该语句使用了子查询的方式,根据“餐饮公司”表中的“上市股市”列的值,返回了包含“港股”的上市股市列表。
medium gold: select 公司名,所属集团 from 餐饮公司 where 上市股市 = "港股"

eval_err_num:903
medium pred: 以下是查询语句: SELECT经营年数, COUNT(*) as num FROM 餐饮公司 GROUP BY 经营年数 ORDER BY num DESC LIMIT 1; 该语句选择了“餐饮公司”表中的“经营年数”和“计数列”,并输出了结果。该语句使用了子查询和GROUP BY语句,根据“经营年数”列的值,对“餐饮公司”表返回了一组经营年数的列表。然后,该语句使用COUNT函数计算每组经营年数的总和,并使用ORDER BY语句按照总和降序排序,最后限制结果条数到1条,输出从多到少的顺序排列的结果。
medium gold: select 公司名,所属集团,经营年数 from 餐饮公司 where 上市股市 = "港股" order by 经营年数 desc

eval_err_num:904
medium pred: 以下是查询语句: SELECT经营年数, COUNT(*) as num FROM 餐饮公司 GROUP BY 经营年数 ORDER BY COUNT(*) DESC LIMIT 1; 该语句使用了与上一条语句类似的逻辑,但是使用了COUNT函数计算每个经营年数的总和,并使用ORDER BY语句按照总和降序排序,最后限制结果条数到1条,输出从少到多的顺序排列的结果。
medium gold: select 公司名,所属集团,经营年数 from 餐饮公司 where 上市股市 = "港股" order by 经营年数 asc

eval_err_num:905
easy pred: 以下是查询语句: SELECT \"城市名称\"
easy gold: select 名称 from 城市

eval_err_num:906
medium pred: 以下是查询语句: SELECT \"所属省份\"
medium gold: select 名称,所属省份 from 城市

eval_err_num:907
medium pred: 以下是查询语句: SELECT \"餐饮收入\", \"同比增长\", COUNT(*) as total_sales, SUM(CASE WHEN \"同比增长\" = 1 THEN 1 else 0 END) as growth from \"城市\" where \"城市名称\" in (SELECT \"省份名称\" FROM \"餐饮公司\" WHERE \"公司id\" = \"总部城市id\") order by total_sales DESC
medium gold: select 名称,所属省份,餐饮收入 from 城市 order by 餐饮收入 desc

eval_err_num:908
medium pred: 以下是查询语句: SELECT \"同比增长\", COUNT(*) as total_sales, SUM(CASE WHEN \"同比增长\" = 1 THEN 1 else 0 END) as growth from \"城市\" where \"城市名称\" in (SELECT \"省份名称\" FROM \"餐饮公司\" WHERE \"公司id\" = \"总部城市id\") order by total_sales DESC
medium gold: select 名称,所属省份,餐饮收入,同比增长 from 城市 order by 餐饮收入 desc

eval_err_num:909
medium pred: SELECT t1.公司名称, t1.总部城市id, t1.所属集团, t1.上市股市, t1.经营范围, t1.经营年数 FROM "餐饮公司" t1 INNER JOIN "城市" t2 ON t1.公司id = t2.公司id AND t2.城市id = "城市"."城市id" GROUP BY t1.公司名称, t1.总部城市id, t1.所属集团, t1.上市股市, t1.经营范围, t1.经营年数 ORDER BY MAX(经营年数) DESC LIMIT 1
medium gold: select 公司名 from 餐饮公司 order by 经营年数 desc limit 1

eval_err_num:910
medium pred: SELECT 经营范围 FROM "餐饮公司城市消费" AS t1 INNER JOIN "城市" AS t2 ON t1.城市id = t2.城市id WHERE t2.名称 = '北京'
medium gold: select 公司名,经营范围 from 餐饮公司 order by 经营年数 desc limit 1

eval_err_num:911
extra pred: SELECT t1.公司名称, t1.总部城市id FROM "餐饮公司城市消费" t1 INNER JOIN "城市" t2 ON t1.城市id = t2.城市id WHERE t2.名称 = '上海'
extra gold: select 名称 from 城市 AS T1 JOIN 餐饮公司 AS T2 ON T2.总部城市id = T1.城市id where T2.公司名 = (select 公司名 from 餐饮公司 order by 经营年数 desc limit 1 )

eval_err_num:912
extra pred: SELECT t1.公司名称, t1.人均消费额 FROM "餐饮公司城市消费" t1 JOIN "城市" t2 ON t1.城市id = t2.城市id GROUP BY t1.公司名称 ORDER BY t1.人均消费额 DESC LIMIT 1
extra gold: select 公司名 from 餐饮公司 AS T1 JOIN 餐饮公司城市消费 AS T2 ON T1.公司id = T2.公司id where T2.人均消费额 = (select max(人均消费额) from 餐饮公司城市消费)

eval_err_num:913
medium pred: SELECT t1.公司名称, t2.总消费, t3.人气 FROM "餐饮公司城市消费" t1 JOIN "城市" t2 ON t1.城市id = t2.城市id JOIN "餐饮公司城市连锁" t3 ON t1.公司id = t3.公司id AND t2.城市id = t3.城市id WHERE t1.公司名称 IN (SELECT 公司名称 FROM "餐饮公司城市消费" WHERE 总消费额 NOT NULL AND人气 NOT NULL) ORDER BY t2.总消费 DESC, t3.人气 DESC LIMIT 1
medium gold: select 总消费额,人气 from 餐饮公司城市消费 order by 人均消费额 desc limit 1

eval_err_num:914
medium pred: SELECT t1.公司名称, t2.总消费, t3.人气, COUNT(*) as排名 FROM "餐饮公司城市消费" t1 JOIN "城市" t2 ON t1.城市id = t2.城市id JOIN "餐饮公司城市连锁" t3 ON t1.公司id = t3.公司id AND t2.城市id = t3.城市id WHERE t1.公司名称 IN (SELECT 公司名称 FROM "餐饮公司城市消费" WHERE 总消费额 NOT NULL AND人气 NOT NULL) GROUP BY t1.公司名称, t2.总消费, t3.人气 ORDER BY COUNT(*) DESC LIMIT 1
medium gold: select 排名 from 餐饮公司城市消费 order by 人均消费额 desc limit 1

eval_err_num:915
extra pred: SELECT t1.城市id FROM "餐饮公司城市连锁" t1 JOIN "城市" t2 ON t1.城市id = t2.城市id WHERE t2.名称 = '北京' AND t1.公司id = '2'
extra gold: select distinct 名称 from 城市 AS T1 JOIN 餐饮公司城市消费 AS T2 ON T1.城市id = T2.城市id where T1.城市id = (select 城市id from 餐饮公司城市消费 order by 人均消费额 desc limit 1)

eval_err_num:916
extra pred: SELECT t1.省份 FROM "城市" t1 JOIN "省份" t2 ON t1.省份 = t2.省份 WHERE t2.名称 = '中国' AND t1.城市id = '北京市'
extra gold: select distinct 所属省份 from 城市 AS T1 JOIN 餐饮公司城市消费 AS T2 ON T1.城市id = T2.城市id where T2.城市id = (select 城市id from 餐饮公司城市消费 order by 人均消费额 desc limit 1)

eval_err_num:917
hard pred: SELECT t1.公司名称, t1.总部城市id, t1.所属集团, t1.上市股市, t1.经营范围, t1.经营年数, COUNT(*) as 员工数量 FROM "餐饮公司" t1 INNER JOIN "城市" t2 ON t1.总部城市id = t2.城市id INNER JOIN "餐饮公司城市连锁" t3 ON t1.公司id = t3.公司id GROUP BY t1.公司名称, t1.总部城市id, t1.所属集团, t1.上市股市, t1.经营范围, t1.经营年数 ORDER BY COUNT(*) DESC LIMIT 1
hard gold: select 公司名 from 餐饮公司 AS T1 JOIN 餐饮公司城市连锁 AS T2 ON T1.公司id = T2.公司id order by T2.员工数量 desc limit 1

eval_err_num:918
medium pred: SELECT A.占地面积 FROM "餐饮公司城市连锁" A INNER JOIN "城市" B ON A.城市id = B.城市id INNER JOIN "餐饮公司" C ON A.公司id = C.公司id WHERE B.名称 = '他' GROUP BY A.占地面积 ORDER BY COUNT(*) DESC LIMIT 1
medium gold: select 占地面积 from 餐饮公司城市连锁 order by 员工数量 desc limit 1

eval_err_num:919
medium pred: SELECT A.占地面积 FROM "餐饮公司城市连锁" A INNER JOIN "城市" B ON A.城市id = B.城市id INNER JOIN "餐饮公司" C ON A.公司id = C.公司id WHERE B.名称 = '他' GROUP BY A.占地面积 ORDER BY COUNT(*) DESC LIMIT 1
medium gold: select 占地面积 from 餐饮公司城市连锁 order by 占地面积 desc limit 1

eval_err_num:920
hard pred: SELECT t1.公司名, t1.总部城市id, COUNT(*) as 分店数量 FROM "餐饮公司城市连锁" t1 INNER JOIN "城市" t2 ON t1.城市id = t2.城市id GROUP BY t1.公司名, t1.总部城市id ORDER BY COUNT(*) DESC LIMIT 1
hard gold: select 公司名 from 餐饮公司 AS T1 JOIN 餐饮公司城市连锁 AS T2 ON T1.公司id = T2.公司id order by 分店数量 desc limit 1

eval_err_num:921
hard pred: SELECT * FROM "餐饮公司城市连锁" t1 INNER JOIN "城市" t2 ON t1.城市id = t2.城市id WHERE t2.名称 = '他'
hard gold: select 名称 from 城市 AS T1 JOIN 餐饮公司城市连锁 AS T2 ON T1.城市id = T2.城市id order by 分店数量 desc limit 1

eval_err_num:922
hard pred: SELECT t1.集团名称 FROM "餐饮公司城市连锁" t1 INNER JOIN "城市" t2 ON t1.城市id = t2.城市id INNER JOIN "餐饮公司" t3 ON t1.公司id = t3.公司id AND t2.集团名称 = t3.集团名称 WHERE t3.集团名称 = '某集团'
hard gold: select 所属集团 from 餐饮公司 AS T1 JOIN 餐饮公司城市连锁 AS T2 ON T1.公司id = T2.公司id order by 分店数量 desc limit 1

eval_err_num:923
hard pred: SELECT * FROM "餐饮公司城市消费" t1 INNER JOIN "城市" t2 ON t1.城市id = t2.城市id INNER JOIN "餐饮公司" t3 ON t1.公司id = t3.公司id AND t2.集团名称 = t3.集团名称 WHERE t3.上市股市 = 'A股'
hard gold: select 所属集团,上市股市 from 餐饮公司 AS T1 JOIN 餐饮公司城市连锁 AS T2 ON T1.公司id = T2.公司id order by 分店数量 desc limit 1

eval_err_num:924
easy pred: SELECT "商店名" FROM "应用商店"
easy gold: select 商店名 from 应用商店

eval_err_num:925
medium pred: SELECT t1.应用软件数, t2.应用软件数 FROM "应用商店" t1, "应用商店" t2 WHERE t1.商店名 = t2.商店名
medium gold: select 商店名,应用软件数 from 应用商店

eval_err_num:926
medium pred: SELECT 应用软件数量, COUNT(*) AS 应用软件数量_sum FROM "应用商店" GROUP BY 应用软件数量 ORDER BY 应用软件数量_sum DESC
medium gold: select 商店名,应用软件数 from 应用商店 order by 应用软件数 desc

eval_err_num:927
medium pred: SELECT 累计下载次数 FROM "应用商店"
medium gold: select 商店名,应用软件数,累计下载次数 from 应用商店 order by 应用软件数 desc

eval_err_num:928
medium pred: SELECT软件id, SUM(下载量) AS下载量 FROM "软件下载" GROUP BY软件id
medium gold: select 名称,下载量 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id

eval_err_num:929
medium pred: SELECT软件id, SUM(下载量) AS下载量 FROM "软件下载" GROUP BY软件id ORDER BY SUM(下载量) DESC
medium gold: select 名称,下载量 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id order by 下载量 desc

eval_err_num:930
medium pred: SELECT软件id, SUM(下载量) AS下载量 FROM "软件下载" GROUP BY软件id ORDER BY SUM(下载量) ASC
medium gold: select 名称,下载量 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id order by 下载量 asc

eval_err_num:931
medium pred: SELECT 应用商店.商店名, 应用商店.商店名, 应用商店.应用软件数, 应用商店.累计下载次数, 应用商店.用户是否可以购买应用程序, 应用商店.开发人员是否可以出售应用程序 FROM "应用商店" 应用商店 LEFT JOIN "应用商店支持国家" 支持国家 ON 应用商店.商店名 = 支持国家.应用商店名 WHERE 支持国家.国家 = ( SELECT 国家 FROM "应用商店支持国家" 支持国家2 WHERE 支持国家2.商店名 = 商店名 )
medium gold: select 商店名,国家 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id

eval_err_num:932
medium pred: SELECT 国家, COUNT(*) as 计数 FROM "应用商店支持国家" 支持国家 GROUP BY 国家 HAVING COUNT(*) > 0
medium gold: select 商店名,国家,用户是否可以购买应用程序 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id

eval_err_num:933
medium pred: SELECT 是否允许出售应用程序 as允许出售, COUNT(*) as 允许出售计数 FROM "应用商店支持国家" 支持国家 WHERE 支持国家.商店名 = "应用商店" GROUP BY 支持国家.商店名 HAVING COUNT(*) > 0 NATURAL JOIN ( SELECT 国家, COUNT(*) as 国家计数 FROM "应用商店支持国家" 支持国家2 WHERE 支持国家2.商店名 = "应用商店" GROUP BY 国家 HAVING COUNT(*) > 0 ) 允许出售国家2 ON 允许出售国家2.允许出售 = 1
medium gold: select 商店名,国家,开发人员是否可以出售应用程序 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id

eval_err_num:934
medium pred: SELECT 应用商店.商店名, COUNT(*) as 累计下载次数 FROM "应用商店" 应用商店 GROUP BY 应用商店.商店名 ORDER BY 累计下载次数 DESC LIMIT 1
medium gold: select 商店名 from 应用商店 order by 累计下载次数 desc limit 1

eval_err_num:935
medium pred: SELECT 应用商店.商店名, COUNT(*) as 应用软件总数 FROM "应用商店" 应用商店 GROUP BY 应用商店.商店名 HAVING COUNT(*) > 0
medium gold: select 商店名,应用软件数 from 应用商店 order by 累计下载次数 desc limit 1

eval_err_num:936
medium pred: SELECT软件id, SUM(下载量) AS 下载量 FROM "软件下载" GROUP BY 软件id
medium gold: select 名称,下载量 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id

eval_err_num:937
hard pred: SELECT COUNT(评价人数) AS评价人数, MIN(下载量) AS 下载量 FROM "软件下载" GROUP BY 下载量
hard gold: select 名称,下载量,评价人数 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id order by 下载量 asc limit 1

eval_err_num:938
hard pred: SELECT COUNT(1) AS好评数, MIN(评价人数) AS 好评数 FROM "软件下载" GROUP BY 好评数
hard gold: select 名称,评价人数,好评数 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id order by 下载量 asc limit 1

eval_err_num:939
medium pred: SELECT动物.学名, 动物朋友.动物id, 动物朋友.是否是人类朋友, 动物朋友.理由 FROM 动物 JOIN 动物朋友 ON 动物.动物id = 动物朋友.动物id JOIN 动物的天敌 ON 动物.天敌id = 动物的天敌.天敌id WHERE 动物朋友.是否是人类朋友 = 1 AND 动物.食性 = '肉'
medium gold: select 学名 from 动物 where 食性 = "食肉" and 理由 = "人类忠实的朋友"

hard pred: SELECT * FROM 动物 WHERE 学名 = '猫科动物'
hard gold: select 学名 from 动物 where 动物id = (select 朋友id from 动物朋友 where 动物id = (select 动物id from 动物 where 学名 = "狗"))

eval_err_num:940
hard pred: SELECT 天敌.学名, 天敌朋友.动物id, 天敌朋友.是否是人类朋友, 天敌朋友.理由 FROM 动物 JOIN 动物朋友 ON 动物.动物id = 动物朋友.动物id JOIN 动物的天敌 ON 动物.天敌id = 动物的天敌.天敌id WHERE 动物朋友.是否是人类朋友 = 1 AND 动物.学名 = '猫科动物'
hard gold: select 学名 from 动物 where 动物id = (select 天敌id from 动物的天敌 where 动物id = (select 动物id from 动物 where 学名 = "狗"))

eval_err_num:941
hard pred: SELECT 天敌.学名, 天敌.天敌原因 FROM 动物 JOIN 动物朋友 ON 动物.动物id = 动物朋友.动物id JOIN 动物的天敌 ON 动物.天敌id = 动物的天敌.天敌id WHERE 动物.学名 = '狗' AND 天敌.天敌原因 = '恐惧'
hard gold: select 克星原因 from 动物的天敌 where 动物id = (select 动物id from 动物 where 学名 = "狗")

eval_err_num:942
easy pred: SELECT * FROM "台风影响的中国省份" AS t1 INNER JOIN "台风" AS t2 ON t1."台风id" = t2."台风id" INNER JOIN "台风影响的国家" AS t3 ON t1."台风id" = t3."台风id" WHERE t3."经济损失" > 1000
easy gold: select 名称 from 台风

eval_err_num:943
medium pred: SELECT t1."名称", t1."登陆地点", t1."登陆时间" FROM "台风影响的中国省份" AS t1 INNER JOIN "台风" AS t2 ON t1."台风id" = t2."台风id" WHERE t2."名称" = "台风" AND t2."登陆地点" = "台湾" AND t2."登陆时间" >= "2022年01月01日" AND t2."登陆时间" <= "2022年01月10日"
medium gold: select 名称,登陆地点,登陆时间 from 台风

eval_err_num:944
medium pred: SELECT强度, COUNT(*) as total_强度 FROM "台风影响的中国省份" AS t1 INNER JOIN "台风" AS t2 ON t1."台风id" = t2."台风id" GROUP BY t2."台风id", t2."名称" ORDER BY total_强度 DESC LIMIT 1
medium gold: select 名称,登陆强度 from 台风 order by 登陆强度 desc

eval_err_num:945
medium pred: SELECT 省份, COUNT(*) as death_count FROM "台风影响的中国省份" AS t1 INNER JOIN "台风" AS t2 ON t1."台风id" = t2."台风id" WHERE t2."名称" = "台风" AND t2."登陆地点" = "中国" GROUP BY 省份 ORDER BY death_count DESC LIMIT 1
medium gold: select 名称,死亡人数 from 台风 order by 死亡人数 desc

eval_err_num:946
medium pred: SELECT t1.经济损失 FROM "台风影响的国家" t1 JOIN "台风" t2 ON t1.台风id = t2.台风id WHERE t2.名称 = '台风'
medium gold: select 名称,经济损失 from 台风

eval_err_num:947
medium pred: SELECT 经济损失 FROM "台风影响的国家" t1 JOIN "台风" t2 ON t1.台风id = t2.台风id GROUP BY 经济损失 ORDER BY COUNT(*) DESC
medium gold: select 名称,经济损失 from 台风 order by 经济损失 desc

eval_err_num:948
medium pred: SELECT t1.省份 FROM "台风影响的中国省份" t1 JOIN "台风" t2 ON t1.台风id = t2.台风id WHERE t2.名称 IN (SELECT t3.省份 FROM "台风影响的国家" t3 JOIN "台风" t4 ON t3.台风id = t4.台风id WHERE t4.国家 = '中国' AND t4.经济损失 = (SELECT MAX(经济损失) FROM "台风影响的国家" t5 WHERE t5.台风id = t2.台风id)))
medium gold: select 名称,省份 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id

eval_err_num:949
medium pred: SELECT t1.省份, t1.登陆强度 FROM "台风影响的中国省份" t1 JOIN "台风" t2 ON t1.台风id = t2.台风id JOIN "台风影响的国家" t3 ON t3.台风id = t2.台风id AND t3.国家 = '中国' JOIN "台风" t4 ON t4.台风id = t2.台风id AND t4.经济损失 = (SELECT MAX(经济损失) FROM "台风影响的国家" t5 WHERE t5.台风id = t2.台风id))
medium gold: select 名称,省份,T1.登陆强度 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id

eval_err_num:950
easy pred: 以下是查询语句: SELECT * FROM "台风影响的国家" WHERE "台风id" IN (SELECT "台风id" FROM "台风")
easy gold: select 国家 from 台风影响的国家

eval_err_num:951
medium pred: 以下是查询语句: SELECT * FROM "台风" WHERE "台风id" IN (SELECT "台风id" FROM (SELECT "台风id", "登陆地点", "登陆时间" FROM "台风影响的中国省份") AS A WHERE A."台风id" IN (SELECT "台风id" FROM "台风"))
medium gold: select 名称,国家 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id

eval_err_num:952
medium pred: 以下是查询语句: SELECT t1.国家, t2.经济损失 FROM "台风影响的国家" t1 WHERE t1."台风id" IN (SELECT "台风id" FROM "台风") AND t1."国家" IN (SELECT "国家" FROM "台风影响的国家") t2; 其中,"台风"和"台风影响的国家"分别是两个表的名称,查询语句中的t1和t2分别是这两个表中的字段名。该查询语句使用了子查询和外连接来找到被多个"台风影响的国家"影响到的国家和经济损失。
medium gold: select 名称,国家,T1.经济损失 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id

eval_err_num:953
medium pred: 以下是查询语句: SELECT * FROM "台风影响的国家" AS t1 WHERE t1."经济损失" > 0 ORDER BY COUNT(*) DESC; 该查询语句使用了聚合函数(COUNT())和排序函数(ORDER BY)来找到每个国家在"台风影响的国家"表中的经济损失数量,然后按照经济损失的数量从多到少排序。最后,该查询语句将返回按照从多到少的顺序排序的国家列表。
medium gold: select 名称,国家,T1.经济损失 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id order by T1.经济损失 asc

eval_err_num:954
medium pred: 以下是查询语句: SELECT t1.台风id, t2.死亡人数 FROM "台风影响的国家" t1 WHERE t1."经济损失" > 0 AND t1."台风id" IN (SELECT "台风id" FROM "台风") AND t1."国家" IN (SELECT "国家" FROM "台风影响的国家") t2; 该查询语句使用了子查询和外连接来找到被多个"台风影响的国家"影响到的国家和经济损失。然后,该查询语句使用了聚合函数(COUNT())和排序函数(ORDER BY)来找到每个台风在"台风影响的国家"表中的死亡人数,并按照死亡人数从多到少排序。最后,该查询语句将返回按照从多到少的顺序排序的台风和死亡人数列表。
medium gold: select 名称,国家,T1.经济损失,死亡人数 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id order by T1.经济损失 desc

easy pred: SELECT * FROM 商家 WHERE 类型 = '西式快餐'
easy gold: select 商家 from 商家 where 类型 = "西式快餐"

eval_err_num:955
medium pred: SELECT * FROM "商家平台活动" WHERE 优惠活动 = '折扣促销'
medium gold: select 商家,优惠活动 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 类型 = "西式快餐"

eval_err_num:956
medium pred: SELECT评分 FROM "商家平台活动" WHERE 月售单数 = ( SELECT 月售单数 FROM 商家 WHERE 商家id = '你的商家id' )
medium gold: select 商家,评分 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 类型 = "西式快餐"

eval_err_num:957
hard pred: SELECT MAX(评分) FROM "商家平台活动" WHERE 月售单数 = ( SELECT 月售单数 FROM 商家 WHERE 商家id = '你的商家id' )
hard gold: select 商家,评分 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 类型 = "西式快餐" order by 评分 desc

medium pred: SELECT 所属国家 FROM 篮球运动队
medium gold: select 队名,所属国家 from 篮球运动队

medium pred: SELECT 成立时间 FROM 篮球运动队
medium gold: select 队名,成立时间 from 篮球运动队

medium pred: SELECT 成立时间 FROM 篮球运动队 order by 成立时间 asc
medium gold: select 队名,成立时间 from 篮球运动队 order by 成立时间 asc

eval_err_num:958
easy pred: SELECT现任主教练 FROM 篮球运动队
easy gold: select 现任主教练 from 篮球运动队 where 队名 = "美国男篮国家队"

medium pred: SELECT 名次 FROM 奥运会成绩 WHERE 年份 = 2012
medium gold: select 名次 from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where 队名 = "美国男篮国家队" and 奥运会名称 = "2012年伦敦奥运会"

medium pred: SELECT 主教练 FROM 奥运会成绩 WHERE 年份 = '2012'
medium gold: select 主教练 from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where 队名 = "美国男篮国家队" and 奥运会名称 = "2012年伦敦奥运会"

medium pred: SELECT 地区生产总值, 第三产业总值 FROM 城市 WHERE 城市id = '四川省成都'
medium gold: select 第一产业总值 , 第二产业总值 , 第三产业总值 from 城市 where 名称 = "成都"

medium pred: SELECT 地区生产总值, 生产总值增长率 FROM 城市 WHERE 城市id = '四川省成都'
medium gold: select 地区生产总值 , 生产总值增长率 from 城市 where 名称 = "成都"

eval_err_num:959
extra pred: SELECT s.进口额, s.进口额增长率 FROM 城市贸易产业 s JOIN 城市第一产业 c1 ON s.城市id = c1.城市id JOIN 城市 ON c1.城市id = s.城市id AND c1.第二产业总值 = 0
extra gold: select 进口额 , 进口额增长率 from 城市贸易产业 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 名称 = "成都" and 行业 = "服务贸易"

eval_err_num:960
extra pred: SELECT s.出口额, s.出口额增长率 FROM 城市贸易产业 s JOIN 城市第一产业 c1 ON s.城市id = c1.城市id JOIN 城市 ON c1.城市id = s.城市id AND c1.第二产业总值 = 0 JOIN 城市 ON c2.城市id = s.城市id AND c2.第三产业总值 = 0
extra gold: select 出口额 , 出口额增长率 from 城市贸易产业 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 名称 = "成都" and 行业 = "服务贸易"

eval_err_num:961
hard pred: SELECT t1.城市名称, t1.地铁运营里程 FROM 城市 t1 INNER JOIN 城市地铁里程 t2 ON t1.城市id = t2.城市id INNER JOIN 中国地铁 t3 ON t2.城市id = t3.年份 ORDER BY t2.地铁运营里程 DESC LIMIT 1
hard gold: select T2.城市名称 from 城市地铁里程 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id order by T1.地铁运营里程 desc limit 1

eval_err_num:962
extra pred: SELECT s.日均客运量 FROM 城市地铁日均客运量 s INNER JOIN 城市 t1 ON s.城市id = t1.城市id INNER JOIN 城市地铁票价 t2 ON t1.城市id = t2.城市id INNER JOIN 中国地铁 t3 ON t2.城市id = t3.年份 WHERE t3.城市id = 1
extra gold: select T1.日均客运量 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.城市名称 = (select T2.城市名称 from 城市地铁里程 AS T3 JOIN 城市 AS T2 ON T3.城市id = T2.城市id order by T3.地铁运营里程 desc limit 1)

eval_err_num:963
extra pred: SELECT s.日均客运量 FROM 城市地铁日均客运量 s INNER JOIN 城市 t1 ON s.城市id = t1.城市id INNER JOIN 城市地铁票价 t2 ON t1.城市id = t2.城市id INNER JOIN 中国地铁 t3 ON t2.城市id = t3.年份 GROUP BY s.日均客运量 HAVING MAX(s.日均客运量) > MAX(t3.日均客运量)
extra gold: select T2.城市名称, T1.日均客运量 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T1.日均客运量 > ( select T1.日均客运量 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.城市名称 = (select T2.城市名称 from 城市地铁里程 AS T3 JOIN 城市 AS T2 ON T3.城市id = T2.城市id order by T3.地铁运营里程 desc limit 1))

eval_err_num:964
extra pred: SELECT t1.省份 FROM 城市 t1 INNER JOIN 城市地铁里程 t2 ON t1.城市id = t2.城市id INNER JOIN 中国地铁 t3 ON t2.城市id = t3.年份 GROUP BY t1.省份 HAVING COUNT(DISTINCT t1.城市id) > 1
extra gold: select T2.城市名称, T2.所属省份 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T1.日均客运量 > ( select T1.日均客运量 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.城市名称 = (select T2.城市名称 from 城市地铁里程 AS T3 JOIN 城市 AS T2 ON T3.城市id = T2.城市id order by T3.地铁运营里程 desc limit 1))

eval_err_num:965
medium pred: SELECT COUNT(*) as num_地铁 FROM 城市
medium gold: select T1.已运营线路数 from 城市地铁里程 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.城市名称 = "广州"

eval_err_num:966
medium pred: SELECT 运营成本 from 城市地铁日均客运量
medium gold: select T1.每公里运营成本 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.城市名称 = "广州"

eval_err_num:967
medium pred: SELECT 列_5元可乘坐里程 as 列_里程 FROM 城市地铁票价
medium gold: select T1.列_5元可乘坐里程 from 城市地铁票价 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.城市名称 = "广州"

eval_err_num:968
medium pred: SELECT age,学历, school FROM 参赛学生
medium gold: select 姓名,年龄,学历,学校 from 参赛学生

eval_err_num:969
medium pred: SELECT age FROM 参赛学生 ORDER BY age DESC
medium gold: select 姓名,年龄,学历,学校 from 参赛学生 order by 年龄 asc

medium pred: SELECT 方向 FROM 比赛
medium gold: select 名称,方向 from 比赛

medium pred: SELECT 举办单位, 单位性质 FROM 比赛
medium gold: select 名称,举办单位,单位性质 from 比赛

eval_err_num:970
medium pred: SELECT 奖金数, order_by(奖金数) as排序 order_by(奖金数) as排序_order FROM 比赛
medium gold: select 名称,奖金数 from 比赛 order by 奖金数 asc

medium pred: SELECT 队伍id FROM 参赛队伍
medium gold: select 名称,队名 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id

easy pred: SELECT * FROM 参赛队伍
easy gold: select 队名 from 参赛队伍

eval_err_num:971
medium pred: SELECT 每只队伍的学生id, 每只队伍加入的学生id, 每只队伍参加比赛的学生id, 比赛平台 FROM 学生参赛记录 WHERE 加入队伍id IN (SELECT 加入队伍id FROM 参赛队伍)
medium gold: select 队名,姓名 from 学生参赛记录 AS T1 JOIN 参赛队伍 AS T2 ON T1.队伍id = T2.队伍id JOIN 参赛学生 AS T3 ON T1.学生id = T3.学生id

eval_err_num:972
medium pred: SELECT 学生id, 学校名称 FROM 学生参赛记录 WHERE 加入学校日期 IN (SELECT 加入学校日期 FROM 参赛学校)
medium gold: select 队名,姓名,学校 from 学生参赛记录 AS T1 JOIN 参赛队伍 AS T2 ON T1.队伍id = T2.队伍id JOIN 参赛学生 AS T3 ON T1.学生id = T3.学生id

eval_err_num:973
medium pred: SELECT 加入队伍日期, 加入队伍时所在日期, 是否为训练日 FROM 队伍参赛成绩 WHERE 加入队伍id IN (SELECT 加入队伍id FROM 参赛队伍)
medium gold: select 队名,姓名,加入队伍日期 from 学生参赛记录 AS T1 JOIN 参赛队伍 AS T2 ON T1.队伍id = T2.队伍id JOIN 参赛学生 AS T3 ON T1.学生id = T3.学生id

eval_err_num:974
easy pred: SELECT 比赛.比赛id, 比赛.名称, 比赛.方向, 比赛.举办单位, 比赛.单位性质, 比赛.奖金数, 录取队伍数量, 比赛.平台 FROM 比赛 JOIN 参赛队伍 ON 比赛.比赛id = 参赛队伍.比赛id JOIN 参赛学生 ON 比赛.比赛id = 参赛学生.比赛id JOIN 学生参赛记录 ON 参赛队伍.加入队伍id = 学生参赛记录.加入队伍id JOIN 学生 ON 学生参赛记录.学生id = 学生.学生id WHERE 学生.姓名 = '张三' AND 学生.年龄 = 18
easy gold: select 名称 from 比赛

eval_err_num:975
medium pred: SELECT 比赛平台 FROM 比赛 JOIN 参赛队伍 ON 比赛.比赛id = 参赛队伍.比赛id JOIN 学生 ON 参赛队伍.加入队伍id = 学生参赛记录.加入队伍id WHERE 学生.姓名 = '张三' AND 学生.年龄 = 18
medium gold: select 名称,比赛平台 from 比赛

eval_err_num:976
medium pred: SELECT 比赛.比赛id, 比赛.名称, 比赛.方向, 比赛.举办单位, 比赛.单位性质, 比赛.奖金数, 录取队伍数量, 比赛.平台 FROM 比赛 WHERE 比赛.比赛id IN ( SELECT 比赛id FROM 比赛 JOIN 参赛队伍 ON 比赛.比赛id = 参赛队伍.比赛id JOIN 学生 ON 比赛.比赛id = 参赛学生.比赛id WHERE 参赛学生.姓名 = '张三' AND 参赛学生.年龄 = 18 )
medium gold: select 名称,比赛平台 from 比赛 where 比赛平台 = "学术会议"

eval_err_num:977
medium pred: SELECT 比赛.比赛id, 比赛.名称, 比赛.方向, 比赛.举办单位, 比赛.单位性质, 比赛.奖金数, 录取队伍数量 FROM 比赛 JOIN 参赛队伍 ON 比赛.比赛id = 参赛队伍.比赛id JOIN 学生 ON 参赛队伍.加入队伍id = 学生参赛记录.加入队伍id JOIN 学生 ON 学生.学生id = 学生.学生id WHERE 学生.姓名 = '张三' AND 学生.年龄 = 18 GROUP BY 比赛.比赛id, 比赛.名称, 比赛.方向, 比赛.举办单位, 比赛.单位性质, 比赛.奖金数 ORDER BY 录取队伍数量 DESC
medium gold: select 名称,录取队伍数量 from 比赛 where 比赛平台 = "学术会议" order by 录取队伍数量 desc

eval_err_num:978
medium pred: SELECT 城市地铁日均客运量 FROM 城市地铁
medium gold: select 城市名称,日均客运量 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id

eval_err_num:979
medium pred: SELECT t1.名称, t1.开播时间, t1.上线时间, t1.隶属机构 FROM 电视台 t1 INNER JOIN 电视剧 t2 ON t1.首播平台id = t2.平台id AND t1.剧名 = t2.剧名 WHERE t1.开播时间 = ( SELECT MAX(开播时间) FROM 电视台 GROUP BY 名称, 开播时间, 上线时间,隶属机构 )
medium gold: select 名称 from 电视台 order by 开播时间 desc limit 1

eval_err_num:980
medium pred: SELECT隶属机构 FROM 电视台 WHERE 名称 = '它'
medium gold: select 隶属机构 from 电视台 order by 开播时间 desc limit 1

eval_err_num:981
easy pred: SELECT t1.名称, t1.开播时间, t1.上线时间, t1.隶属机构 FROM 电视台 t1 INNER JOIN 电视剧 t2 ON t1.首播平台id = t2.平台id AND t1.剧名 = t2.剧名 WHERE t1.隶属机构 = '该机构'
easy gold: select 名称 from 电视台 where 隶属机构 = "上海电视台"

eval_err_num:982
easy pred: SELECT t1.上线时间 FROM 电视剧 t1 INNER JOIN 电视台 t2 ON t1.首播平台id = t2.平台id AND t2.名称 = t1.剧名 GROUP BY t1.上线时间
easy gold: select 上线时间 from 电视台 where 隶属机构 = "上海电视台"

eval_err_num:983
hard pred: SELECT * FROM 电视剧收视 WHERE 平台id = '2' AND 时间段 = '2021-01-01' AND 电视台id = '1'
hard gold: select T3.剧名 from 电视台 AS T1 JOIN 电视剧收视 AS T2 ON T1.电视台id = T2.平台id JOIN 电视剧 AS T3 ON T3.电视剧编号 = T2.电视剧id where T1.名称 = "东方卫视"

eval_err_num:984
extra pred: SELECT 电视剧收视.电视剧id, 电视剧收视.平台id, 电视剧收视.时间段, 电视剧收视.收视率 FROM 电视剧收视 INNER JOIN 电视剧 ON 电视剧收视.电视剧id = 电视剧.电视剧编号 INNER JOIN 电视剧收视平台 ON 电视剧收视.平台id = 电视剧收视平台.平台id WHERE 电视剧收视平台.平台id = '2' AND 电视剧收视.时间段 = '2021-01-01' GROUP BY 电视剧收视.电视剧id, 电视剧收视.平台id, 电视剧收视.时间段 ORDER BY 收视率 DESC LIMIT 1
extra gold: select T3.剧名 from 电视台 AS T1 JOIN 电视剧收视 AS T2 ON T1.电视台id = T2.平台id JOIN 电视剧 AS T3 ON T3.电视剧编号 = T2.电视剧id where T1.名称 = "东方卫视" order by T2.收视率 desc limit 1

eval_err_num:985
extra pred: SELECT 电视剧.出品公司, 电视剧.发行公司 FROM 电视剧 INNER JOIN 电视剧收视 ON 电视剧.电视剧编号 = 电视剧收视.电视剧编号 WHERE 电视剧收视.平台id = '2' AND 电视剧.出品公司 = '出品公司' AND 电视剧.发行公司 = '发行公司' GROUP BY 电视剧.出品公司, 电视剧.发行公司 ORDER BY 出品公司 ASC, 发行公司 DESC LIMIT 1
extra gold: select T3.出品公司,T3.发行公司 from 电视台 AS T1 JOIN 电视剧收视 AS T2 ON T1.电视台id = T2.平台id JOIN 电视剧 AS T3 ON T3.电视剧编号 = T2.电视剧id where T1.名称 = "东方卫视" order by T2.收视率 desc limit 1

easy pred: SELECT * FROM 电视剧 WHERE 出品公司 = '腾讯影业'
easy gold: select 剧名 from 电视剧 where 出品公司 = "腾讯影业"

easy pred: SELECT 出品时间 FROM 电视剧
easy gold: select 出品时间 from 电视剧 where 出品公司 = "腾讯影业"

eval_err_num:986
hard pred: SELECT 首播平台id FROM 电视剧收视 WHERE 首播平台id = '腾讯视频'
hard gold: select T1.名称 from 电视台 AS T1 JOIN 电视剧收视 AS T2 ON T1.电视台id = T2.平台id JOIN 电视剧 AS T3 ON T3.电视剧编号 = T2.电视剧id where T3.出品公司 = "腾讯影业"

eval_err_num:987
easy pred: SELECT 类型 FROM 图书 WHERE 图书id = (SELECT 图书id FROM 平台 WHERE 平台name = '知乎')
easy gold: select 类型 from 图书

eval_err_num:988
hard pred: SELECT 平台id FROM 平台 WHERE 平台name = '淘宝' AND 平台name = '京东' AND 平台name = '亚马逊' AND 平台name = '当当'
hard gold: select T3.平台名 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id where T1.类型 = "少儿"

eval_err_num:989
medium pred: SELECT * FROM 平台 WHERE 成立时间 NOT IN (SELECT 最晚成立时间 FROM 平台)
medium gold: select 平台名 from 平台 order by 成立时间 desc limit 1

medium pred: SELECT 平台名, 年营业额, 是否自营 FROM 平台
medium gold: select 年营业额,会员费 from 平台 order by 成立时间 desc limit 1

eval_err_num:990
extra pred: SELECT 图书类型 FROM 图书与平台 WHERE 平台id = (SELECT 平台id FROM 平台)
extra gold: select T3.类型 from 平台 AS T1 JOIN 图书与平台 AS T2 ON T1.平台id = T2.平台id JOIN 图书 AS T3 ON T3.图书id = T2.书名id order by T1.成立时间 desc limit 1

hard pred: SELECT 平台名 FROM 平台 WHERE 年营业额 = '2019年' AND 是否自营 = '是'
hard gold: select T3.平台名 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id where T1.书名 = "平凡的世界"

eval_err_num:991
extra pred: SELECT 平台名, 售价 FROM 平台 WHERE 年营业额 = '2019年' AND 是否自营 = '是' ORDER BY 售价 DESC LIMIT 1
extra gold: select T3.平台名 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id where T1.书名 = "平凡的世界" order by T2.售价 asc limit 1

eval_err_num:992
extra pred: SELECT 书名, 售价, 评分 FROM 图书_平台 WHERE 书名 in (SELECT 书名 FROM 图书_平台 WHERE 平台id = 10) AND 平台id in (SELECT 平台名 FROM 平台 WHERE 年营业额 = '2019年' AND 是否自营 = '是')
extra gold: select T2.售价,T2.评分 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id where T1.书名 = "平凡的世界" order by T2.售价 asc limit 1

eval_err_num:993
extra pred: SELECT 平台名, 是否缺货 FROM 平台 WHERE 年营业额 = '2019年' AND 是否自营 = '是'
extra gold: select T2.缺货 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id where T1.书名 = "平凡的世界" order by T2.售价 asc limit 1

eval_err_num:994
extra pred: SELECT 书名, MAX(评分) AS max_评分 FROM 图书 GROUP BY 书名
extra gold: select T1.书名,T2.评分 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id order by T2.评分 desc limit 1

eval_err_num:995
extra pred: SELECT 平台id FROM 图书与平台 WHERE 书名id IN ( SELECT 书名id FROM 图书 GROUP BY 书名 ORDER BY MAX(售价) DESC LIMIT 1 )
extra gold: select T3.平台名 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id order by T2.评分 desc limit 1

eval_err_num:996
extra pred: SELECT SUM(加入购物车人数) AS total_购物车人数, SUM(收藏人数) AS total_收藏人数 FROM 图书与平台 WHERE 书名id IN ( SELECT 书名id FROM 图书 GROUP BY 书名 ORDER BY MAX(售价) DESC LIMIT 1 )
extra gold: select T2.加入购物车人数,T2.收藏人数 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id order by T2.评分 desc limit 1

eval_err_num:997
extra pred: SELECT 电子书售价 FROM 电子书 WHERE 书名id = ( SELECT 书名id FROM 图书 WHERE 类型 = '书籍' GROUP BY 书名 ORDER BY 电子书售价 DESC LIMIT 1 )
extra gold: select T4.电子书售价 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id JOIN 电子书 AS T4 ON T4.书名id = T1.图书id order by T2.评分 desc limit 1

eval_err_num:998
extra pred: SELECT 会员价格 FROM 电子书 WHERE 书名id IN ( SELECT 书名id FROM 图书 WHERE 类型 = '书籍' GROUP BY 书名 ORDER BY 电子书售价 DESC LIMIT 1 )
extra gold: select T4.会员价格 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id JOIN 电子书 AS T4 ON T4.书名id = T1.图书id order by T2.评分 desc limit 1

eval_err_num:999
medium pred: SELECT 商店名, 应用软件数 FROM "应用商店" GROUP BY 商店名 ORDER BY 应用软件数 DESC LIMIT 1
medium gold: select 商店名 from 应用商店 order by 应用软件数 desc limit 1

eval_err_num:1000
hard pred: SELECT 国家 FROM "应用商店支持国家" WHERE 应用商店id = ( SELECT 应用商店id FROM "应用商店" WHERE 商店名 = '中国' ORDER BY 累计下载次数 DESC LIMIT 1 )
hard gold: select T2.国家 from 应用商店 AS T1 JOIN 应用商店支持国家 AS T2 ON T1.商店id = T2.应用商店id order by T1.应用软件数 desc limit 1

eval_err_num:1001
hard pred: SELECT * FROM "应用商店支持国家" WHERE "用户是否可以购买应用程序" = '1' AND "开发人员是否可以出售应用程序" = '0'
hard gold: select T2.用户是否可以购买应用程序 from 应用商店 AS T1 JOIN 应用商店支持国家 AS T2 ON T1.商店id = T2.应用商店id order by T1.应用软件数 desc limit 1

eval_err_num:1002
hard pred: SELECT 软件id, COUNT(*) as 下载量 FROM "软件下载" GROUP BY 软件id ORDER BY 下载量 DESC LIMIT 1
hard gold: select T1.名称 from 软件 AS T1 JOIN 软件下载 AS T2 ON T1.软件id = T2.软件id order by T2.下载量 desc limit 1

eval_err_num:1003
hard pred: SELECT 名称 FROM "软件" WHERE 用途 = '手机应用'
hard gold: select T1.用途 from 软件 AS T1 JOIN 软件下载 AS T2 ON T1.软件id = T2.软件id order by T2.下载量 desc limit 1

eval_err_num:1004
extra pred: SELECT 商店名 FROM "应用商店支持国家" WHERE 商店id = ( SELECT 商店id FROM "应用商店" WHERE 商店名 = '中国' )
extra gold: select T3.商店名 from 软件 AS T1 JOIN 软件下载 AS T2 ON T1.软件id = T2.软件id JOIN 应用商店 AS T3 ON T3.商店id = T2.应用商店id order by T2.下载量 desc limit 1

eval_err_num:1005
hard pred: SELECT * FROM "软件下载" WHERE "好评数" = ( SELECT MAX("好评数") FROM "软件下载" GROUP BY "软件id" )
hard gold: select T1.名称 from 软件 AS T1 JOIN 软件下载 AS T2 ON T1.软件id = T2.软件id order by T2.好评数 desc limit 1

eval_err_num:1006
extra pred: SELECT 商店名 FROM "应用商店" WHERE 商店名 = ( SELECT 商店名 FROM "应用商店支持国家" WHERE "商店id" = "应用商店" )
extra gold: select T3.商店名 from 软件 AS T1 JOIN 软件下载 AS T2 ON T1.软件id = T2.软件id JOIN 应用商店 AS T3 ON T3.商店id = T2.应用商店id order by T2.下载量 desc limit 1

eval_err_num:1007
extra pred: SELECT COUNT(*) FROM "软件下载" WHERE "应用商店id" = ( SELECT "应用商店id" FROM "应用商店支持国家" WHERE "应用商店id" = "应用商店" )
extra gold: select T2.下载量 from 软件 AS T1 JOIN 软件下载 AS T2 ON T1.软件id = T2.软件id JOIN 应用商店 AS T3 ON T3.商店id = T2.应用商店id order by T2.下载量 desc limit 1

eval_err_num:1008
extra pred: SELECT * FROM "畅销榜" WHERE "畅销榜"."网络小说id" = ( SELECT "网络小说id" FROM "网络小说" WHERE "网络小说"."书名" = '小说名称' ORDER BY "网络小说"."总排名" DESC LIMIT 1 )
extra gold: select T1.姓名 from 作者 AS T1 JOIN 网络小说 AS T2 ON T1.作者id = T2.作者id JOIN 畅销榜 AS T3 ON T3.网络小说id = T2.网络图书id order by T3.总排名 desc limit 1

eval_err_num:1009
extra pred: SELECT * FROM "畅销榜" WHERE "畅销榜"."网络小说id" = ( SELECT "网络小说id" FROM "网络小说" WHERE "网络小说"."书名" = '小说名称' ORDER BY "网络小说"."周排名" DESC LIMIT 1 )
extra gold: select T1.姓名 from 作者 AS T1 JOIN 网络小说 AS T2 ON T1.作者id = T2.作者id JOIN 畅销榜 AS T3 ON T3.网络小说id = T2.网络图书id order by T3.周排名 desc limit 1

eval_err_num:1010
extra pred: SELECT 书名 FROM "网络小说" WHERE 周排名 = ( SELECT 周排名 FROM "畅销榜" WHERE 畅销榜."网络小说id" = "网络小说"."网络图书id" ORDER BY 周排名 DESC LIMIT 1 )
extra gold: select T2.书名 from 作者 AS T1 JOIN 网络小说 AS T2 ON T1.作者id = T2.作者id JOIN 畅销榜 AS T3 ON T3.网络小说id = T2.网络图书id order by T3.周排名 desc limit 1

eval_err_num:1011
medium pred: SELECT MIN(评分) AS low_score FROM "出版图书"
medium gold: select 书名 from 出版图书 order by 评分 asc limit 1

eval_err_num:1012
medium pred: SELECT 评分, COUNT(*) AS total_点击量 FROM "出版图书" WHERE评分 >= ? AND 评分 < ?
medium gold: select 评价人数,点击数 from 出版图书 order by 评分 asc limit 1

eval_err_num:1013
hard pred: SELECT 书名,作者id FROM "网络小说" WHERE 状态 = '连载中'
hard gold: select T2.姓名 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id order by T1.评分 asc limit 1

eval_err_num:1014
hard pred: SELECT 年龄 FROM "作者" WHERE 年龄 = ?
hard gold: select T2.年龄 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id order by T1.评分 asc limit 1

eval_err_num:1015
hard pred: SELECT * FROM "出版图书" WHERE "作者id" = '梁夜白'
hard gold: select T2.书名,T3.书名 from 作者 AS T1 JOIN 出版图书 AS T2 ON T1.作者id = T2.作者id JOIN 网络小说 AS T3 ON T3.作者id = T1.作者id where T1.姓名 = "梁夜白"

eval_err_num:1016
easy pred: SELECT * FROM "作者" WHERE "年龄" = (SELECT MAX("年龄") FROM "作者")
easy gold: select 年龄 from 作者 where 姓名 = "梁夜白"

eval_err_num:1017
hard pred: SELECT COUNT(*) as 总排名 FROM "收藏榜" WHERE "网络小说id" = (SELECT "网络小说id" FROM "畅销榜")
hard gold: select T3.总排名 from 作者 AS T1 JOIN 网络小说 AS T2 ON T1.作者id = T2.作者id JOIN 收藏榜 AS T3 ON T3.网络小说id = T2.网络图书id where T1.姓名 = "梁夜白"

eval_err_num:1018
medium pred: SELECT price FROM "网络小说" WHERE price > (SELECT MAX(price) FROM "网络小说" GROUP BY "网络图书id")
medium gold: select 书名,价格 from 网络小说 order by 价格 desc limit 1

eval_err_num:1019
medium pred: SELECT type, status FROM "畅销榜" WHERE id = (SELECT id FROM "网络小说" WHERE "网络图书id" = "12345")
medium gold: select 类型,状态 from 网络小说 order by 价格 desc limit 1

eval_err_num:1020
hard pred: SELECT SUM(CASE WHEN id = (SELECT id FROM "网络小说" WHERE "网络图书id" = "12345") THEN 1 END) AS总排名 FROM "畅销榜"
hard gold: select T2.总排名 from 网络小说 AS T1 JOIN 畅销榜 AS T2 ON T1.网络图书id = T2.网络小说id order by T1.价格 desc limit 1

eval_err_num:1021
hard pred: SELECT作者.name FROM作者 WHERE作者.id = (SELECT作者.id FROM作者 WHERE作者.name = '曹雪芹')
hard gold: select T2.姓名 from 网络小说 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id order by T1.价格 desc limit 1

eval_err_num:1022
medium pred: SELECT p.name AS 平台名称, c.口碑 FROM "平台" p JOIN "综艺节目" c ON p.词条id = c.平台id JOIN "艺人" s ON p.艺人id = s.id ORDER BY c.口碑 DESC LIMIT 1
medium gold: select 平台名称 from 平台 order by 月会费 desc limit 1

eval_err_num:1023
medium pred: SELECT p.name AS 平台名称, c.口碑 FROM "平台" p JOIN "综艺节目" c ON p.词条id = c.平台id JOIN "艺人" s ON p.艺人id = s.id WHERE p.年会费 > (SELECT MAX(年会费) FROM "平台") ORDER BY c.口碑 DESC LIMIT 1
medium gold: select 口碑 from 平台 order by 月会费 desc limit 1

eval_err_num:1024
extra pred: SELECT c.name AS 综艺节目名称, s.name AS 艺人名称, a.name AS 节目阵容名称 FROM "综艺节目" c INNER JOIN "节目阵容" s ON c.节目id = s.节目id INNER JOIN "平台" p ON s.平台id = p.平台id WHERE p.年会费 > (SELECT MAX(年会费) FROM "平台") GROUP BY c.name, s.name, a.name HAVING COUNT(*) > 0 ORDER BY COUNT(*) DESC LIMIT 1
extra gold: select T1.综艺名称 from 综艺节目 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id where T1.播出状态 = '正在播出' AND T2.平台名称 = (select 平台名称 from 平台 order by 月会费 desc limit 1)

eval_err_num:1025
extra pred: SELECT c.name AS 综艺节目名称, a.name AS 制作公司 FROM "综艺节目" c INNER JOIN "节目阵容" s ON c.节目id = s.节目id INNER JOIN "平台" p ON s.平台id = p.平台id WHERE p.年会费 > (SELECT MAX(年会费) FROM "平台") GROUP BY c.name, a.name HAVING COUNT(*) > 0 ORDER BY COUNT(*) DESC LIMIT 1
extra gold: select T1.制作公司 from 综艺节目 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id where T1.播出状态 = '正在播出' AND T2.平台名称 = (select 平台名称 from 平台 order by 月会费 desc limit 1)

eval_err_num:1026
easy pred: SELECT DISTINCT s.name FROM 旅行社 s JOIN 出境游所含国家 t ON s.旅行社id = t.路线id JOIN 国内游路线 c ON t.路线id = c.路线id JOIN 邮轮路线 p ON c.路线id = p.邮轮路线id WHERE p.旅行社id = 1
easy gold: select 国家 from 出境游所含国家

eval_err_num:1027
easy pred: SELECT t.name FROM 出境游所含国家 t JOIN 旅行社 s ON s.旅行社id = t.路线id JOIN 国内游路线 c ON t.路线id = c.路线id JOIN 邮轮路线 p ON c.路线id = p.邮轮路线id WHERE p.旅行社id = 1 AND t.name = '意大利'
easy gold: select 旅行天数 from 出境游所含国家 where 国家 = "意大利"

eval_err_num:1028
easy pred: SELECT c.景点数 FROM 出境游路线 c JOIN 旅行社 s ON s.旅行社id = c.旅行社id JOIN 国内游路线 c1 ON c.路线id = c1.路线id JOIN 邮轮路线 p ON c.路线id = p.邮轮路线id WHERE p.旅行社id = 1
easy gold: select 景点数量 from 出境游所含国家 where 国家 = "意大利"

eval_err_num:1029
medium pred: SELECT s.name FROM 出境游所含国家 t JOIN 旅行社 s ON s.旅行社id = t.路线id JOIN 国内游路线 c ON t.路线id = c.路线id JOIN 邮轮路线 p ON c.路线id = p.邮轮路线id WHERE p.旅行社id = 1
medium gold: select 路线名称 from 出境游路线 AS T1 JOIN 出境游所含国家 AS T2 ON T1.出境游路线id = T2.路线id where 国家 = "意大利"

eval_err_num:1030
easy pred: SELECT t1.旅行社id, t1.名称, t1.级别, t2.出境游国家数量, t2.国内游城市数量, t2.出境游路线数量, t2.国内游路线数量, t3.亚洲排名, t4.接待海外游客数量, t4.境外公司数量, t4.控股子公司数量, t4.有业务关系的旅行商数量, t4.免税店数量, t5.铠恩国际邮轮公司 FROM "旅行社" t1 JOIN "出境游所含国家" t2 ON t1.旅行社id = t2.旅行社id JOIN "国内游路线" t3 ON t1.旅行社id = t3.旅行社id AND t2.路线id = t3.路线id JOIN "邮轮路线" t4 ON t3.旅行社id = t4.旅行社id JOIN "出境游路线" t5 ON t4.旅行社id = t5.旅行社id AND t5.路线id = t4.路线id WHERE t5.出发城市 = '伦敦'
easy gold: select 出发城市 from 出境游路线 where 路线名称 = "英国+爱尔兰+威尔士精选之旅"

eval_err_num:1031
medium pred: SELECT t1.成人价格, t1.儿童价格 FROM "出境游路线" t1 JOIN "国内游路线" t2 ON t1.路线id = t2.路线id JOIN "邮轮路线" t3 ON t2.路线id = t3.路线id JOIN "出境游所含国家" t4 ON t3.旅行社id = t4.旅行社id JOIN "旅行社" t5 ON t4.旅行社id = t5.旅行社id WHERE t5.出发城市 = '北京' AND t5.出境游路线名称 = '长城'
medium gold: select 成人价格,儿童价格 from 出境游路线 where 路线名称 = "英国+爱尔兰+威尔士精选之旅"

eval_err_num:1032
easy pred: SELECT COUNT(*) as 景点数 FROM "出境游路线" t1 JOIN "国内游路线" t2 ON t1.路线id = t2.路线id JOIN "邮轮路线" t3 ON t2.路线id = t3.路线id JOIN "出境游所含国家" t4 ON t3.旅行社id = t4.旅行社id JOIN "旅行社" t5 ON t4.旅行社id = t5.旅行社id WHERE t5.出发城市 = '伦敦' AND t5.出境游路线名称 = '英国+爱尔兰+威尔士精选之旅'
easy gold: select 景点数 from 出境游路线 where 路线名称 = "英国+爱尔兰+威尔士精选之旅"

eval_err_num:1033
easy pred: SELECT SUM(t1.门票总价格) as 门票总价格 FROM "出境游路线" t1 JOIN "国内游路线" t2 ON t1.路线id = t2.路线id JOIN "邮轮路线" t3 ON t2.路线id = t3.路线id JOIN "出境游所含国家" t4 ON t3.旅行社id = t4.旅行社id JOIN "旅行社" t5 ON t4.旅行社id = t5.旅行社id WHERE t5.出发城市 = '伦敦' GROUP BY t5.出境游路线名称
easy gold: select 门票总价格 from 出境游路线 where 路线名称 = "英国+爱尔兰+威尔士精选之旅"

eval_err_num:1034
medium pred: SELECT t1.名称 FROM "旅行社" t1 JOIN "出境游所含国家" t2 ON t1.旅行社id = t2.旅行社id JOIN "国内游路线" t3 ON t1.旅行社id = t3.旅行社id JOIN "邮轮路线" t4 ON t3.旅行社id = t4.旅行社id WHERE t2.国家 = '意大利' AND t3.路线id = '大城小镇' AND t4.路线id = '书香之旅' AND t1.级别 = '精品'
medium gold: select 名称 from 旅行社 AS T1 JOIN 出境游路线 AS T2 ON T1.旅行社id = T2.旅行社id where 路线名称 = "悦选意大利经典大城小镇书香之旅"

eval_err_num:1035
easy pred: SELECT t1.路线name FROM "出境游路线" t1 JOIN "国内游路线" t2 ON t1.路线name = t2.路线name JOIN "邮轮路线" t3 ON t2.路线name = t3.路线name JOIN "旅行社" t4 ON t3.旅行社id = t4.旅行社id WHERE t4.旅行社id = 1
easy gold: select 出发城市 from 出境游路线 where 路线名称 = "悦选意大利经典大城小镇书香之旅"

eval_err_num:1036
easy pred: SELECT t1.旅行社id FROM "旅行社" t1 JOIN "出境游所含国家" t2 ON t1.旅行社id = t2.旅行社id JOIN "国内游路线" t3 ON t1.旅行社id = t3.旅行社id JOIN "邮轮路线" t4 ON t3.旅行社id = t4.旅行社id WHERE t2.级别 = '精品' AND t3.路线id = '书香之旅' AND t4.路线id = '大城小镇'
easy gold: select 级别 from 旅行社 where 名称 = "中旅总社"

eval_err_num:1037
extra pred: SELECT t1.公司名称, t1.总部城市id, t1.经营年数, COUNT(DISTINCT t2.城市id) as 总消费额 FROM "餐饮公司城市消费" t1 INNER JOIN "城市" t2 ON t1.城市id = t2.城市id GROUP BY t1.公司名称, t1.总部城市id, t1.经营年数 ORDER BY 总消费额 DESC LIMIT 1
extra gold: select T1.公司名 from 餐饮公司 AS T1 JOIN 餐饮公司城市消费 AS T2 ON T1.公司id = T2.公司id JOIN 城市 AS T3 ON T3.城市id = T2.城市id where T3.名称 = "上海" order by T2.总消费额 desc limit 1

eval_err_num:1038
extra pred: SELECT t1.公司名称, t1.总部城市id FROM "餐饮公司城市连锁" t1 INNER JOIN "城市" t2 ON t1.城市id = t2.城市id WHERE t2.名称 = '北京'
extra gold: select T4.名称 from 餐饮公司 AS T1 JOIN 餐饮公司城市消费 AS T2 ON T1.公司id = T2.公司id JOIN 城市 AS T3 ON T3.城市id = T2.城市id JOIN 城市 AS T4 ON T4.城市id = T1.总部城市id where T3.名称 = "上海" order by T2.总消费额 desc limit 1

eval_err_num:1039
extra pred: SELECT t1.经营年数, t1.经营范围 FROM "餐饮公司城市消费" t1 INNER JOIN "城市" t2 ON t1.城市id = t2.城市id WHERE t2.名称 = '上海城市消费' AND t2.同比增长 = 0
extra gold: select T1.经营范围,T1.经营年数 from 餐饮公司 AS T1 JOIN 餐饮公司城市消费 AS T2 ON T1.公司id = T2.公司id JOIN 城市 AS T3 ON T3.城市id = T2.城市id where T3.名称 = "上海" order by T2.总消费额 desc limit 1

eval_err_num:1040
easy pred: SELECT 公司名, 股市名 FROM "餐饮公司" WHERE 股市名 IN ('纽约证券交易所', '纳斯达克', '泛美证券交易所', '道琼斯工业平均指数', '标准普尔500指数')
easy gold: select 公司名 from 餐饮公司 where 上市股市 = "美股"

eval_err_num:1041
hard pred: SELECT 城市名 FROM "餐饮公司城市连锁" WHERE 公司id IN (SELECT 公司id FROM "餐饮公司" WHERE 总部城市id = (SELECT 总部城市id FROM "城市" ORDER BY 城市id DESC LIMIT 1))
hard gold: select T1.名称 from 城市 AS T1 JOIN 餐饮公司城市连锁 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T3.公司id = T2.公司id where T3.上市股市 = "美股"

eval_err_num:1042
extra pred: SELECT 城市名 FROM "餐饮公司城市连锁" WHERE 分店数量 = (SELECT 分店数量 FROM (SELECT COUNT(*) as 分店数量 FROM "餐饮公司城市连锁" GROUP BY 城市名) t WHERE t.城市名 = (SELECT 城市名 FROM "城市" ORDER BY 分店数量 DESC LIMIT 1))
extra gold: select T1.名称 from 城市 AS T1 JOIN 餐饮公司城市连锁 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T3.公司id = T2.公司id where T3.上市股市 = "美股" order by T2.分店数量 desc limit 1

eval_err_num:1043
easy pred: SELECT t1.城市id, t1.名称, t1.所属省份, t1.餐饮收入, t1.同比增长, t2.总消费额, t2.人均消费额, t2.人气, t2.排名, t3.分店数量, t3.占地面积, t3.餐位数量, t3.员工数量 FROM "城市" t1 JOIN "餐饮公司" t2 ON t1.城市id = t2.总部城市id JOIN "餐饮公司城市消费" t3 ON t2.公司id = t3.公司id JOIN "城市" t4 ON t3.城市id = t4.城市id WHERE t4.名称 = '上海'
easy gold: select 餐饮收入 from 城市 where 名称 = "上海"

eval_err_num:1044
extra pred: SELECT t1.分店数量, t1.占地面积, t1.餐位数量, t1.员工数量, COUNT(*) as 人气 FROM "餐饮公司城市连锁" t1 JOIN "城市" t2 ON t1.城市id = t2.城市id JOIN "餐饮公司" t3 ON t2.公司id = t3.公司id WHERE t3.城市id = '北京' AND t4.城市id = t2.城市id AND t1.分店数量 >= 1 GROUP BY t1.分店数量, t1.占地面积, t1.餐位数量, t1.员工数量 ORDER BY COUNT(*) DESC LIMIT 1
extra gold: select T3.公司名 from 城市 AS T1 JOIN 餐饮公司城市消费 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T3.公司id = T2.公司id where T1.名称 = "上海" order by T2.人气 desc limit 1

eval_err_num:1045
extra pred: SELECT t1.分店数量, t1.占地面积, t1.餐位数量, t1.员工数量, COUNT(*) as 人气, COUNT(*) as 排名 FROM "餐饮公司城市连锁" t1 JOIN "城市" t2 ON t1.城市id = t2.城市id JOIN "餐饮公司" t3 ON t2.公司id = t3.公司id WHERE t3.城市id = '北京' AND t4.城市id = t2.城市id AND t1.分店数量 >= 1 GROUP BY t1.分店数量, t1.占地面积, t1.餐位数量, t1.员工数量 ORDER BY COUNT(*) DESC, COUNT(*) DESC LIMIT 1
extra gold: select T3.公司名 from 城市 AS T1 JOIN 餐饮公司城市消费 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T3.公司id = T2.公司id where T1.名称 = "上海" order by T2.排名 desc limit 1

easy pred: SELECT 品牌名, 公司, 国家, 市场份额 FROM 电视机品牌
easy gold: select 品牌名 from 电视机品牌

easy pred: SELECT 品牌名, 公司, 国家, 市场份额 FROM 电视机品牌 WHERE 国家 = '中国'
easy gold: select 品牌名 from 电视机品牌 where 国家 = '中国'

eval_err_num:1046
medium pred: SELECT 品牌名, 公司, 国家, 市场总份额 from 电视机品牌
medium gold: select 品牌名 ,市场份额 from 电视机品牌 where 国家 = '中国'

medium pred: SELECT 公司, 国家, 品牌名, 市场份额 from 电视机品牌
medium gold: select 品牌名 ,公司 from 电视机品牌 where 国家 = '中国'

eval_err_num:1047
easy pred: SELECT 公司名称, 所属国家, 排名 FROM "公司" WHERE 名称 = '音箱公司'
easy gold: select 名称 from 公司

eval_err_num:1048
easy pred: SELECT 公司名称, 所属国家 FROM "公司" WHERE 所属国家 = '中国'
easy gold: select 名称 from 公司 where 所属国家 = "中国"

eval_err_num:1049
easy pred: SELECT 排名 FROM "公司" WHERE 名称 = '音箱公司' GROUP BY 排名 ORDER BY 排名 DESC
easy gold: select 排名 from 公司 where 名称 = "百度"

eval_err_num:1050
medium pred: SELECT 音箱产品.名称 FROM "音箱产品" JOIN "产品销售" ON 音箱产品.音箱id = 产品销售.音箱id WHERE 产品销售.季度 = '2022' AND 产品名称 = '亚马逊音箱'
medium gold: select T1.名称 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id where t2.名称 = "百度"

eval_err_num:1051
easy pred: SELECT price FROM "音箱产品" WHERE id = (SELECT id FROM "公司" WHERE name = '天猫精灵') ON DELETE NO ACTION ON UPDATE NOACTION
easy gold: select 售价 from 音箱产品 where 名称 = "天猫精灵"

eval_err_num:1052
medium pred: SELECT 产品销售.销售量 FROM "产品销售" WHERE 季度 = 第四季度 ON DELETE NOACTION ON UPDATE NOACTION
medium gold: select 销售量 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where 名称 = "天猫精灵" and t1.季度 = "4"

eval_err_num:1053
medium pred: SELECT 产品销售.销售量 + 产品销售.销售增长量 FROM "产品销售" WHERE 季度 = 第四季度 ON DELETE NOACTION ON UPDATE NOACTION
medium gold: select 销售量增长 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where 名称 = "天猫精灵" and t1.季度 = "4"

eval_err_num:1054
hard pred: SELECT 音箱产品.名称, 音箱产品.售价 FROM "音箱产品" 音箱产品 JOIN "产品销售" 产品销售 ON 产品销售.产品id = 音箱产品.音箱id WHERE 产品销售.季度 = (SELECT 季度 FROM "产品销售") AND 音箱产品.售价 = (SELECT MAX(售价) FROM "音箱产品")
hard gold: select 名称 from 音箱产品 where 售价 in (select max(售价) from 音箱产品)

eval_err_num:1055
hard pred: SELECT 音箱产品.名称, 音箱产品.售价 FROM "音箱产品" 音箱产品 JOIN "产品销售" 产品销售 ON 产品销售.产品id = 音箱产品.音箱id WHERE 产品销售.季度 = (SELECT 季度 FROM "产品销售") AND 音箱产品.售价 < (SELECT MIN(售价) FROM "音箱产品")
hard gold: select 名称 from 音箱产品 where 售价 in (select min(售价) from 音箱产品)

eval_err_num:1056
hard pred: SELECT 产品名称, 排名 FROM "音箱产品" WHERE 售价 = (SELECT MAX(售价) FROM "音箱产品")
hard gold: select 排名 from 音箱产品 where 名称 in (select 名称 from 音箱产品 where 售价 in (select max(售价) from 音箱产品))

eval_err_num:1057
hard pred: SELECT 产品名称, 排名, COUNT(*) as上升名次 FROM "音箱产品" JOIN "产品销售" 产品销售 ON 产品销售.产品id = 音箱产品.音箱id WHERE 产品名称 in (SELECT 产品名称 FROM "音箱产品" WHERE上升名次 > (SELECT MAX(上升名次) FROM "音箱产品")) GROUP BY 产品名称, 排名 ORDER BY上升名次 DESC
hard gold: select 上升名次 from 音箱产品 where 名称 in (select 名称 from 音箱产品 where 售价 in (select max(售价) from 音箱产品))

eval_err_num:1058
easy pred: SELECT节日, 纪念 FROM 民俗节日 WHERE 民族id = (SELECT 词条id FROM 民族) ON DELETE NOACTION ON UPDATE NOACTION
easy gold: select 节日 from 民俗节日

eval_err_num:1059
easy pred: SELECT 节日, 纪念 FROM 民俗节日 WHERE 民族id = (SELECT 词条id FROM 民族) AND 时间 = (SELECT 时间 FROM 民族 WHERE 民族id = '汉族') ON DELETE NOACTION ON UPDATE NOACTION
easy gold: select 时间 from 民俗节日 where 节日 = "端午节"

eval_err_num:1060
medium pred: SELECT 民族id, 民族名称, 人口, 语言, 宗教信仰, 时间 FROM 民族 WHERE 节日 = '端午节' ON DELETE NOACTION ON UPDATE NOACTION
medium gold: select 名称 from 民族 AS T1 JOIN 民俗节日 AS T2 ON T1.民族id = T2.民族id where 节日 = "端午节"

eval_err_num:1061
easy pred: SELECT * FROM "民族" WHERE 民族id IN (SELECT 民族id FROM "民俗节日") AND 民族id NOT IN (SELECT 民族id FROM "民族城市")
easy gold: select 名称 from 民族

eval_err_num:1062
easy pred: SELECT * FROM "民族" WHERE 民族id = (SELECT 民族id FROM "民俗节日") AND 民族id NOT IN (SELECT 民族id FROM "民族城市") AND 名称 = "汉族"
easy gold: select 人口 from 民族 where 名称 = "汉族"

eval_err_num:1063
easy pred: SELECT 语言 FROM "民族" WHERE 语言 NOT IN (SELECT 语言 FROM "人类")
easy gold: select 语言 from 民族 where 名称 = "汉族"

eval_err_num:1064
easy pred: SELECT 宗教信仰 FROM "民族" WHERE 名称 = "中国"
easy gold: select 宗教信仰 from 民族 where 名称 = "汉族"

eval_err_num:1065
medium pred: SELECT 节日 FROM "民俗节日" WHERE 民族id = (SELECT 民族id FROM "民族") AND 时间 = "春节"
medium gold: select 节日 from 民俗节日 AS T1 JOIN 民族 AS T2 ON T1.民族id = T2.民族id where 名称 = "汉族"

eval_err_num:1066
easy pred: SELECT * FROM "篮球运动员" WHERE 球员id IN (SELECT 球员id FROM "NBA总冠军" WHERE 赛季 = '2021-2022' AND 球队id = 'NBA球队')
easy gold: select 中文名 from 篮球运动员

eval_err_num:1067
easy pred: SELECT 球员id FROM "篮球运动员" WHERE 毕业院校 = '德克萨斯大学'
easy gold: select 中文名 from 篮球运动员 where 毕业院校 = "德克萨斯大学"

eval_err_num:1068
hard pred: SELECT 球员id FROM "篮球运动员" WHERE 国籍 = '美国'
hard gold: select 国籍 from 篮球运动员 where 中文名 in (select 中文名 from 篮球运动员 where 毕业院校 = "德克萨斯大学")

eval_err_num:1069
hard pred: SELECT 球员id FROM "篮球运动员" WHERE 参加选秀年 = '2020'
hard gold: select 参加选秀年 from 篮球运动员 where 中文名 in (select 中文名 from 篮球运动员 where 毕业院校 = "德克萨斯大学")

eval_err_num:1070
extra pred: SELECT 球队id FROM "球队" WHERE 名称 = 'NBA球队'
extra gold: select 中文队名 from 球队 AS T1 JOIN MVP记录 AS T2 ON T1.球队id = T2.所属球队 JOIN 篮球运动员 AS T3 ON T2.球员id = T3.球员id where 中文名 in (select 中文名 from 篮球运动员 where 毕业院校 = "德克萨斯大学")

eval_err_num:1071
easy pred: SELECT 球员id AS 状元 FROM 篮球运动员 WHERE 是否状元 = 1
easy gold: select 中文名 from 篮球运动员 where 是否状元 = "是"

easy pred: SELECT 球员id FROM 篮球运动员 WHERE 获得球队 = 'NBA总冠军' AND 毕业院校 = '清华大学'
easy gold: select 毕业院校 from 篮球运动员 where 中文名 = "库里"

hard pred: SELECT 球员id FROM 篮球运动员 WHERE 获得球队 = 'NBA总冠军'
hard gold: select 获得球队 from 篮球运动员 where 毕业院校 in (select 毕业院校 from 篮球运动员 where 中文名 = "库里")

eval_err_num:1072
medium pred: SELECT 赛季 AS 赛季, 球员id FROM 篮球运动员 WHERE 获得球队 = 'NBA总冠军' AND 毕业院校 = '清华大学'
medium gold: select 赛季 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id where 中文名 = "库里"

eval_err_num:1073
hard pred: SELECT 球队id FROM 篮球运动员 WHERE 获得球队 = 'NBA总冠军' AND 毕业院校 = '清华大学'
hard gold: select distinct 中文队名 from 球队 AS T1 JOIN MVP记录 AS T2 ON T1.球队id = T2.所属球队 JOIN 篮球运动员 AS T3 ON T2.球员id = T3.球员id where 中文名 = "库里"

eval_err_num:1074
easy pred: SELECT * FROM "球队" WHERE "球队id" IN (SELECT "球队id" FROM "NBA总冠军" WHERE "赛季" = '2022')
easy gold: select 中文队名 from 球队

eval_err_num:1075
easy pred: SELECT * FROM "球队" WHERE "赛区" = '西南'
easy gold: select 中文队名 from 球队 where 赛区 = "西南赛区"

eval_err_num:1076
hard pred: SELECT "它"."联盟" FROM "球队" WHERE "它"."联盟" = 'NBA'
hard gold: select 所属联盟 from 球队 where 中文队名 in (select 中文队名 from 球队 where 赛区 = "西南赛区")

eval_err_num:1077
hard pred: SELECT COUNT(DISTINCT "球队id") AS夺冠次数 FROM "球队"
hard gold: select 夺冠次数 from 球队 where 中文队名 in (select 中文队名 from 球队 where 赛区 = "西南赛区")

eval_err_num:1078
hard pred: SELECT t1.球队id FROM "球队" t1 JOIN "NBA总冠军" t2 ON t1.球队id = t2.球队id WHERE t2.夺冠次数 = ( SELECT MAX(夺冠次数) FROM "NBA总冠军" )
hard gold: select 中文队名 from 球队 where 夺冠次数 in (select max(夺冠次数) from 球队)

eval_err_num:1079
hard pred: SELECT 赛区 FROM "球队" WHERE 球队id = ( SELECT 赛区 FROM "篮球运动员" WHERE 球员id = 12345 )
hard gold: select 赛区 from 球队 where 中文队名 in (select 中文队名 from 球队 where 夺冠次数 in (select max(夺冠次数) from 球队))

eval_err_num:1080
hard pred: SELECT t1.赛季, t1.球队id, t2.夺冠次数 FROM "NBA总冠军" t1 JOIN "球队" t2 ON t1.球队id = t2.球队id WHERE t2.夺冠次数 = ( SELECT COUNT(*) FROM "NBA总冠军" )
hard gold: select 夺冠次数 from 球队 where 中文队名 in (select 中文队名 from 球队 where 夺冠次数 in (select max(夺冠次数) from 球队))

eval_err_num:1081
easy pred: SELECT t1.总教练 FROM "NBA总冠军" t1 INNER JOIN "球队" t2 ON t1.球队id = t2.球队id WHERE t2.赛季 = '2005-06'
easy gold: select 总教练 from NBA总冠军 where 赛季 = "2005-06赛季"

eval_err_num:1082
extra pred: SELECT t1.球队名 FROM "球队" t1 INNER JOIN "NBA总冠军" t2 ON t1.球队id = t2.球队id WHERE t2.总教练 = '菲尔·杰克逊'
extra gold: select 中文队名 from 球队 AS T1 JOIN NBA总冠军 AS T2 ON T1.球队id = T2.球队id where 总教练 in (select 总教练 from NBA总冠军 where 赛季 = "2005-06赛季")

eval_err_num:1083
hard pred: SELECT t1.联盟名 FROM "球队" t1 INNER JOIN "NBA总冠军" t2 ON t1.球队id = t2.球队id WHERE t2.所属联盟 = 'NBA'
hard gold: select 所属联盟 from 球队 where 中文队名 in (select 中文队名 from 球队 AS T1 JOIN NBA总冠军 AS T2 ON T1.球队id = T2.球队id where 总教练 in (select 总教练 from NBA总冠军 where 赛季 = "2005-06赛季"))

eval_err_num:1084
easy pred: SELECT t1.球员id, t2.是否状元, t3.获得球队, t4.毕业院校, t5.国籍 FROM "篮球运动员" t1 INNER JOIN "NBA总冠军" t2 ON t1.球员id = t2.球队id INNER JOIN "球队" t3 ON t2.球队id = t3.球队id INNER JOIN "MVP记录" t4 ON t3.球员id = t4.球员id INNER JOIN "篮球运动员" t5 ON t4.球员id = t5.球员id WHERE t5.是否状元 = 'Y'
easy gold: select 是否状元 from 篮球运动员 where 获得球队 = "勇士"

eval_err_num:1085
easy pred: SELECT t1.中文名 FROM "篮球运动员" t1 INNER JOIN "NBA总冠军" t2 ON t1.球员id = t2.球队id INNER JOIN "球队" t3 ON t2.球队id = t3.球队id WHERE t2.是否状元 = 'Y' AND t3.球队name = '勇士队'
easy gold: select 中文名 from 篮球运动员 where 获得球队 = "勇士"

eval_err_num:1086
hard pred: SELECT t1.参加选秀年 FROM "篮球运动员" t1 INNER JOIN "NBA总冠军" t2 ON t1.球员id = t2.球队id INNER JOIN "球队" t3 ON t2.球队id = t3.球队id WHERE t2.是否状元 = 'Y' AND t3.球队name = '勇士队'
hard gold: select 参加选秀年 from 篮球运动员 where 中文名 in (select 中文名 from 篮球运动员 where 获得球队 = "勇士")

eval_err_num:1087
medium pred: SELECT t1.名称 as 台风名称, t2.经济损失 as 经济损失 FROM "台风影响的国家" t2 INNER JOIN "台风影响的中国省份" t1 ON t2.台风id = t1.台风id WHERE t2.经济损失 = ( SELECT MAX(经济损失) FROM "台风影响的国家" GROUP BY t2.台风id )
medium gold: select 名称 from 台风 order by 经济损失 desc limit 1

eval_err_num:1088
medium pred: SELECT t1.名称 as 台风名称, t2.登陆地点 as 登陆地点 FROM "台风影响的国家" t2 INNER JOIN "台风影响的中国省份" t1 ON t2.台风id = t1.台风id WHERE t2.登陆地点 = ( SELECT t3.登陆地点 FROM "台风" t3 WHERE t3.台风id = t1.台风id AND t3.名称 = t1.名称 )
medium gold: select 登陆地点 from 台风 order by 经济损失 desc limit 1

eval_err_num:1089
extra pred: SELECT t1.国家 as 国家 FROM "台风影响的国家" t1 INNER JOIN "台风影响的中国省份" t2 ON t1.台风id = t2.台风id WHERE t2.省份 = ( SELECT t3.省份 FROM "台风影响的国家" t3 WHERE t3.国家 = t1.国家 AND t3.经济损失 = t1.经济损失 )
extra gold: select T1.国家 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T2.名称 = (select 名称 from 台风 order by 经济损失 desc limit 1)

eval_err_num:1090
medium pred: SELECT * FROM "台风影响的中国省份" AS t1 JOIN "台风" AS t2 ON t1."台风id" = t2."台风id" WHERE t2."名称" = '海南'
medium gold: select T2.名称 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T1.省份 = "海南"

eval_err_num:1091
medium pred: SELECT t1."登陆时间" FROM "台风影响的中国省份" AS t1 JOIN "台风" AS t2 ON t1."台风id" = t2."台风id" WHERE t2."名称" = '台风1998w'
medium gold: select T2.登陆时间 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T1.省份 = "海南"

eval_err_num:1092
medium pred: SELECT t1."经济损失" FROM "台风影响的中国省份" AS t1 JOIN "台风" AS t2 ON t1."台风id" = t2."台风id" WHERE t2."名称" = '台风1998w' AND t2."影响国家" = '中国'
medium gold: select T2.经济损失 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T1.省份 = "海南"

easy pred: SELECT * FROM 电视机品牌
easy gold: select 品牌名 from 电视机品牌

eval_err_num:1093
easy pred: SELECT 品牌名, 公司, 国家, 市场份额 as 国产份额 from 电视机品牌
easy gold: select 品牌名 from 电视机品牌 where 国家 = "中国"

eval_err_num:1094
medium pred: SELECT 品牌名, 公司, 国家, 国产份额, SUM(市场份额) as 总市场份额 from 电视机品牌
medium gold: select 品牌名, 市场份额 from 电视机品牌 where 国家 = "中国"

eval_err_num:1095
hard pred: 以下是查询语句: ```sql SELECT 型号 FROM 电视机平台售卖 WHERE 当前售价 = ( SELECT MAX(当前售价) FROM 电视机平台售卖 )
hard gold: select T2.型号 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id order by T1.当前售价 desc limit 1

eval_err_num:1096
extra pred: 以下是查询语句: ```sql SELECT 品牌名 FROM 电视机品牌 WHERE 型号 = ( SELECT 型号 FROM 电视机平台售卖 WHERE 当前售价 = ( SELECT MAX(当前售价) FROM 电视机平台售卖 ) )
extra gold: select T3.品牌名 from 电视机型号 AS T2 JOIN 电视机品牌 AS T3 ON T2.品牌id = T3.品牌id where T2.型号 = (select T2.型号 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id order by T1.当前售价 desc limit 1)

eval_err_num:1097
extra pred: 以下是查询语句: ```sql SELECT 定价 FROM 电视机型号 WHERE 品牌id = ( SELECT 品牌id FROM 电视机品牌 WHERE 型号 = ( SELECT 型号 FROM 电视机平台售卖 WHERE 当前售价 = ( SELECT MAX(当前售价) FROM 电视机平台售卖 ) ) )
extra gold: select T2.定价 from 电视机型号 AS T2 JOIN 电视机品牌 AS T3 ON T2.品牌id = T3.品牌id where T2.型号 = (select T2.型号 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id order by T1.当前售价 desc limit 1)

eval_err_num:1098
extra pred: 以下是查询语句: ```sql SELECT 平台 FROM 电视机平台售卖 WHERE 型号 = ( SELECT 型号 FROM 电视机平台售卖 WHERE 当前售价 = ( SELECT MAX(当前售价) FROM 电视机平台售卖 ) )
extra gold: select T1.平台 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where T2.型号 = (select T2.型号 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id order by T1.当前售价 desc limit 1)

eval_err_num:1099
extra pred: 以下是查询语句: ```sql SELECT 用户评分 FROM 电视机平台售卖 WHERE 型号 = ( SELECT 型号 FROM 电视机平台售卖 WHERE 当前售价 = ( SELECT MAX(当前售价) FROM 电视机平台售卖 ) )
extra gold: select T1.平台, T1.用户评分 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where T2.型号 = (select T2.型号 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id order by T1.当前售价 desc limit 1)

eval_err_num:1100
easy pred: 以下是查询语句: SELECT "医院名" FROM "医院" WHERE 1=1; 其中,"医院名"是需要查询的字段,"1=1"表示条件为真,即只有一家医院。
easy gold: select 医院名 from 医院

eval_err_num:1101
medium pred: 以下是查询语句: SELECT DISTINCT "医院等级" FROM "医院" WHERE 1=1; 其中,"医院等级"是需要查询的字段,"1=1"表示条件为真,即只有一家医院有等级。DISTINCT 表示去除重复值,返回结果为唯一一份数据。
medium gold: select 医院名,医院等级 from 医院

eval_err_num:1102
medium pred: 以下是查询语句: SELECT * FROM "医院" WHERE "医院等级" = "三级甲等"; 其中,"医院等级"是需要查询的字段,"三级甲等"是需要筛选的值。SELECT 表示SELECT语句,* 表示匹配所有字段,FROM 表示FROM语句,"医院" 表示表名,WHERE 表示WHERE语句,1=1 表示条件为真,即只有一家三级甲等的医院。
medium gold: select 医院名,医院等级 from 医院 where 医院等级 = "三级甲等"

eval_err_num:1103
medium pred: 以下是查询语句: SELECT 城市名, 所属城市名 FROM "医院" WHERE 医院名 IN (SELECT 城市名 FROM "城市" WHERE 城市名 = "北京市"); 其中,"医院"是表名,"城市"是需要查询的城市名列表。SELECT 表示SELECT语句,城市名和所属城市名是需要查询的字段,FROM 表示FROM语句,"医院" 表示表名,WHERE 表示WHERE语句,医院名 IN 表示在表中查找医院名,使用子查询从"城市"表中查找匹配的城市名,并将结果附加到查询结果中。
medium gold: select 医院名,名称 from 医院 AS T1 JOIN 城市 AS T2 ON T1.所属城市id = T2.城市id where 医院等级 = "三级甲等"

eval_err_num:1104
medium pred: SELECT 医院.医院名, 医院.所属城市id, 医院.职工数量 FROM "医院" 医院 JOIN "医院排名" 排名 ON 医院.医院名 = 排名.医院名 JOIN "城市" 城市 ON 排名.城市id = 城市.城市id GROUP BY 医院.医院名, 医院.所属城市id ORDER BY 职工数量 DESC
medium gold: select 医院名,职工数量 from 医院

eval_err_num:1105
medium pred: SELECT 院士数量 FROM "医院" 医院 JOIN "医院排名" 排名 ON 医院.医院名 = 排名.医院名 JOIN "城市" 城市 ON 排名.城市id = 城市.城市id WHERE 医院.医院名 = 'XX医院'
medium gold: select 医院名,职工数量,院士数量 from 医院

eval_err_num:1106
medium pred: SELECT 医院.医院名, 医院.所属城市id, 医院.职工数量 FROM "医院" 医院 JOIN "医院排名" 排名 ON 医院.医院名 = 排名.医院名 JOIN "城市" 城市 ON 排名.城市id = 城市.城市id GROUP BY 医院.医院名, 医院.所属城市id ORDER BY 职工数量 DESC, 医院.医院名
medium gold: select 医院名,职工数量,院士数量 from 医院 order by 职工数量 desc

eval_err_num:1107
hard pred: SELECT 排名.排名, 排名.年份, 排名.医院id, 排名.接待病患数量, 排名.手术数量, 医院.职工数量 FROM "医院排名" 排名 JOIN "城市" 城市 ON 排名.城市id = 城市.城市id WHERE 排名.年份 = ( SELECT 年份 FROM "医院排名" 排名2 WHERE 排名2.医院id = 排名.医院id ORDER BY 职工数量 DESC LIMIT 1 )
hard gold: select 医院名,排名 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id order by 职工数量 desc limit 1

eval_err_num:1108
hard pred: SELECT 排名.排名, 排名.年份, 排名.医院id, 排名.接待病患数量, 排名.手术数量, 医院.院士数量 FROM "医院排名" 排名 JOIN "城市" 城市 ON 排名.城市id = 城市.城市id WHERE 排名.年份 = ( SELECT 年份 FROM "医院排名" 排名2 WHERE 排名2.医院id = 排名.医院id ORDER BY 院士数量 DESC LIMIT 1 )
hard gold: select 医院名,排名 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id order by 院士数量 desc limit 1

eval_err_num:1109
hard pred: SELECT 医院名 FROM "医院" ORDER BY 医院等级 DESC LIMIT 1
hard gold: select 医院名 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id order by 排名 asc limit 1

eval_err_num:1110
hard pred: SELECT 医院名, SUM(接待病患数量) FROM "医院" WHERE 医院名 IN (SELECT 医院名 FROM "医院排名" WHERE 年份 = '2022' ORDER BY 接待病患数量 DESC LIMIT 1) GROUP BY 医院名 ORDER BY SUM(接待病患数量) DESC LIMIT 1
hard gold: select 医院名,接待病患数量 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id order by 排名 asc limit 1

eval_err_num:1111
hard pred: SELECT 医院名, SUM(手术数量) FROM "医院" WHERE 医院名 IN (SELECT 医院名 FROM "医院排名" WHERE 年份 = '2022' ORDER BY 手术数量 DESC LIMIT 1) GROUP BY 医院名 ORDER BY SUM(手术数量) DESC LIMIT 1
hard gold: select 医院名,手术数量 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id order by 排名 asc limit 1

eval_err_num:1112
hard pred: SELECT t1.医院名, t1.医院等级, t1.职工数量, t1.院士数量, t1.科室数量, t1.重点专科数量, t1.接待病患数量, t1.手术数量 FROM "医院" t1 JOIN "医院排名" t2 ON t1.医院名 = t2.医院名 AND t1.所属城市id = t2.所属城市id JOIN "城市" t3 ON t1.城市名 = t3.名称 AND t1.所属省份 = t3.所属省份 JOIN "特色科室" t4 ON t1.科室 = t4.科室 GROUP BY t1.医院名, t1.医院等级, t1.职工数量, t1.院士数量, t1.科室数量, t1.重点专科数量, t1.接待病患数量, t1.手术数量 ORDER BY t1.手术数量 DESC LIMIT 1
hard gold: select 医院名 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id order by 手术数量 desc limit 1

eval_err_num:1113
hard pred: SELECT COUNT(*) as num, year(timestamp) as year FROM "医院" t1 JOIN "医院排名" t2 ON t1.医院名 = t2.医院名 JOIN "城市" t3 ON t1.城市名 = t3.名称 AND t1.所属省份 = t3.所属省份 JOIN "特色科室" t4 ON t1.科室 = t4.科室 WHERE t1.所属城市id = t2.所属城市id AND t1.医院名 = t2.医院名 AND t1.timestamp >= '2022-01-01' AND t1.timestamp <= '2023-01-01' GROUP BY year(timestamp) ORDER BY num DESC LIMIT 1
hard gold: select 医院名,年份,手术数量 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id order by 手术数量 desc limit 1

eval_err_num:1114
extra pred: SELECT t4.科室 FROM "医院" t1 JOIN "医院排名" t2 ON t1.医院名 = t2.医院名 JOIN "城市" t3 ON t1.城市名 = t3.名称 AND t1.所属省份 = t3.所属省份 JOIN "特色科室" t4 ON t1.科室 = t4.科室 WHERE t1.所属城市id = t2.所属城市id AND t1.医院名 = t2.医院名 AND t1.timestamp >= '2022-01-01' AND t1.timestamp <= '2023-01-01' GROUP BY t4.科室 HAVING COUNT(*) = (SELECT COUNT(*) FROM "特色科室" WHERE t4.科室 = t4.科室)
extra gold: select 医院名,科室 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id JOIN 特色科室 AS T3 ON T2.医院id = T3.医院id order by 手术数量 desc limit 1

easy pred: SELECT 品牌名, 公司, 国家, 市场份额 FROM 电视机品牌 WHERE 国家 = '中国'
easy gold: select 品牌名 from 电视机品牌 where 国家 = '中国'

medium pred: SELECT 市场份额 FROM 电视机品牌 WHERE 国家 = '中国'
medium gold: select 品牌名 ,市场份额 from 电视机品牌 where 国家 = '中国'

eval_err_num:1115
medium pred: SELECT 型号 FROM 电视机平台售卖 WHERE 平台 = '淘宝' AND 售卖量 > 1000
medium gold: select T2.品牌名 ,T1.型号 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id where T2.国家 = '中国'

eval_err_num:1116
easy pred: SELECT 公司名 FROM 电视机品牌 WHERE 品牌名 = '海信'
easy gold: select 公司 from 电视机品牌 where 品牌名 = '海信'

medium pred: SELECT 型号 FROM 电视机型号 WHERE 品牌id = 12345
medium gold: select T1.型号 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id where T2.品牌名 = '海信'

medium pred: SELECT 屏幕尺寸, 屏幕比例, 分辨率 FROM 电视机型号 WHERE 品牌id = 12345
medium gold: select T1.型号 ,T1.屏幕尺寸 ,T1.屏幕比例 ,T1.分辨率 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id where T2.品牌名 = '海信'

hard pred: SELECT 平台 FROM 电视机平台售卖 WHERE 型号id = 12345
hard gold: select T1.型号 ,T3.平台 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id JOIN 电视机平台售卖 AS T3 ON T1.型号id = T3.型号id where T2.品牌名 = '海信'

eval_err_num:1117
hard pred: SELECT t1.型号, t1.产品定位, t1.屏幕尺寸, t1.屏幕比例, t1.分辨率, t1.背光灯寿命, t1.定价 FROM 电视机平台售卖 t1 JOIN 电视机型号 t2 ON t1.型号id = t2.型号id JOIN 电视机品牌 t3 ON t2.品牌id = t3.品牌id AND t3.品牌id = '天猫商城' WHERE t1.售卖量 = ( SELECT MAX(售卖量) FROM 电视机平台售卖 WHERE 平台 = '天猫商城' AND 型号 = t1.型号 )
hard gold: select T2.型号 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where T1.平台 like '%天猫商城%'

eval_err_num:1118
hard pred: SELECT t1.定价 FROM 电视机平台售卖 t1 JOIN 电视机型号 t2 ON t1.型号id = t2.型号id JOIN 电视机品牌 t3 ON t2.品牌id = t3.品牌id AND t3.品牌id = '天猫商城' WHERE t1.售卖量 = ( SELECT MAX(售卖量) FROM 电视机平台售卖 WHERE 平台 = '天猫商城' AND 型号 = t1.型号 )
hard gold: select T2.型号 ,T1.当前售价 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where T1.平台 like '%天猫商城%'

eval_err_num:1119
hard pred: SELECT count(1) AS 售卖量 FROM 电视机平台售卖 WHERE 平台 = '天猫商城' AND 型号 = '任意型号'
hard gold: select T2.型号 ,T1.售卖量 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where T1.平台 like '%天猫商城%'

eval_err_num:1120
hard pred: SELECT t1.用户评分 FROM 电视机平台售卖 t1 JOIN 电视机型号 t2 ON t1.型号id = t2.型号id JOIN 电视机品牌 t3 ON t2.品牌id = t3.品牌id AND t3.品牌id = '天猫商城' WHERE t1.售卖量 = ( SELECT MAX(售卖量) FROM 电视机平台售卖 WHERE 平台 = '天猫商城' AND 型号 = t1.型号 )
hard gold: select T2.型号 ,T1.用户评分 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where T1.平台 like '%天猫商城%'

eval_err_num:1121
hard pred: SELECT 型号id, MAX(用户评分) AS 最高评分 FROM 电视机平台售卖 GROUP BY 型号id
hard gold: select T2.型号 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id order by T1.用户评分 desc limit 1

eval_err_num:1122
hard pred: SELECT 型号id, MAX(当前售价) AS 最高售价, MIN(当前售价) AS 最低价 FROM 电视机平台售卖
hard gold: select T2.型号 ,T1.最高价格 ,T1.最低价格 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id order by T1.用户评分 desc limit 1

hard pred: SELECT 型号id, 产品定位 FROM 电视机型号
hard gold: select T2.型号 ,T2.产品定位 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id order by T1.用户评分 desc limit 1

eval_err_num:1123
hard pred: SELECT 型号id, COUNT(*) AS 背光灯寿命 FROM 电视机型号
hard gold: select T2.型号 ,T2.背光灯寿命 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id order by T1.用户评分 desc limit 1

eval_err_num:1124
hard pred: SELECT * FROM 羽毛球球员 JOIN 重要赛事 ON 羽毛球球员.球员id = 重要赛事.球员id JOIN 奥运会冠亚军 ON 羽毛球球员.球员id = 奥运会冠亚军.金牌获得者id JOIN 冠军国家 ON 羽毛球球员.球员id = 冠军国家.国家名称 JOIN 球员夺冠次数 ON 奥运会冠亚军.赛事id = 球员夺冠次数.赛事id WHERE 李敬元 = '李敬元'
hard gold: select 赛事名称 from 球员夺冠次数 AS T1 JOIN 重要赛事 AS T2 ON T1.赛事id = T2.赛事id JOIN 羽毛球球员 AS T3 ON T1.球员id = T3.球员id where 球员姓名 = "李敬元"

eval_err_num:1125
medium pred: SELECT 奥运会名称, 项目名称, 金牌获得者id, 银牌获得者id, 铜牌获得者id FROM 奥运会冠亚军 WHERE 金牌获得者id IN ( SELECT 金牌获得者id FROM 羽毛球球员 JOIN 重要赛事 ON 羽毛球球员.球员id = 重要赛事.球员id JOIN 奥运会冠亚军 ON 羽毛球球员.球员id = 奥运会冠亚军.金牌获得者id JOIN 冠军国家 ON 羽毛球球员.球员id = 冠军国家.国家名称 JOIN 球员夺冠次数 ON 奥运会冠亚军.赛事id = 球员夺冠次数.赛事id )
medium gold: select 奥运会名称 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id where 球员姓名 = "李敬元"

eval_err_num:1126
medium pred: SELECT 奥运会名称, 项目名称, 金牌获得者id, 银牌获得者id, 铜牌获得者id FROM 奥运会冠亚军 WHERE 银牌获得者id IN ( SELECT 银牌获得者id FROM 羽毛球球员 JOIN 重要赛事 ON 羽毛球球员.球员id = 重要赛事.球员id JOIN 奥运会冠亚军 ON 羽毛球球员.球员id = 奥运会冠亚军.银牌获得者id JOIN 冠军国家 ON 羽毛球球员.球员id = 冠军国家.国家名称 JOIN 球员夺冠次数 ON 奥运会冠亚军.赛事id = 球员夺冠次数.赛事id )
medium gold: select 奥运会名称 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.银牌获得者id = T2.球员id where 球员姓名 = "李敬元"

medium pred: SELECT 国家名称 FROM 冠军国家 WHERE 赛事id IN ( SELECT 赛事id FROM 重要赛事 WHERE 赛事名称 = '苏迪曼杯' )
medium gold: select 国家名称 from 冠军国家 AS T1 JOIN 重要赛事 AS T2 ON T1.赛事id = T2.赛事id where 赛事名称 = "苏迪曼杯"

eval_err_num:1127
hard pred: SELECT 球员id FROM 奥运会冠亚军 WHERE 赛事id IN ( SELECT 赛事id FROM 重要赛事 WHERE 赛事名称 = '苏迪曼杯' )
hard gold: select 球员姓名 from 球员夺冠次数 AS T1 JOIN 羽毛球球员 AS T2 ON T1.球员id = T2.球员id JOIN 重要赛事 AS T3 ON T1.赛事id = T3.赛事id where 赛事名称 = "苏迪曼杯"

hard pred: SELECT 球员姓名 FROM 羽毛球球员 WHERE 球员姓名 NOT IN ( SELECT 球员姓名 FROM 羽毛球球员 WHERE 性别 = '男' AND 国籍 = '中国' )
hard gold: select 球员姓名,国籍 from 球员夺冠次数 AS T1 JOIN 羽毛球球员 AS T2 ON T1.球员id = T2.球员id JOIN 重要赛事 AS T3 ON T1.赛事id = T3.赛事id where 赛事名称 = "苏迪曼杯"

eval_err_num:1128
hard pred: SELECT 球员身高 FROM 羽毛球球员 WHERE 性别 = '男' AND 国籍 = '中国' AND 球员姓名 NOT IN ( SELECT 球员姓名 FROM 羽毛球球员 WHERE 性别 = '女' AND 国籍 = '中国' )
hard gold: select 球员姓名,身高 from 球员夺冠次数 AS T1 JOIN 羽毛球球员 AS T2 ON T1.球员id = T2.球员id JOIN 重要赛事 AS T3 ON T1.赛事id = T3.赛事id where 赛事名称 = "苏迪曼杯"

eval_err_num:1129
extra pred: SELECT 球员身高 FROM 羽毛球球员 ORDER BY 身高 DESC
extra gold: select 球员姓名,身高 from 球员夺冠次数 AS T1 JOIN 羽毛球球员 AS T2 ON T1.球员id = T2.球员id JOIN 重要赛事 AS T3 ON T1.赛事id = T3.赛事id where 赛事名称 = "苏迪曼杯" order by 身高 desc

eval_err_num:1130
hard pred: SELECT t1.球员姓名 FROM "羽毛球球员" t1 INNER JOIN "重要赛事" t2 ON t1.球员id = t2.球员id INNER JOIN "奥运会冠亚军" t3 ON t2.赛事id = t3.赛事id WHERE t3.奥运会名称 = '悉尼奥运会' AND t3.项目名称 = '羽毛球'
hard gold: select 球员姓名 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id where 奥运会名称 like "%悉尼奥运会%"

eval_err_num:1131
extra pred: SELECT t1.球员姓名 FROM "羽毛球球员" t1 INNER JOIN "重要赛事" t2 ON t1.球员id = t2.球员id INNER JOIN "奥运会冠亚军" t3 ON t2.赛事id = t3.赛事id AND t3.项目名称 = '羽毛球' AND t3.银牌获得者id = '10'
extra gold: select 奥运会名称 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.银牌获得者id = T2.球员id where 球员姓名 in (select 球员姓名 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id where 奥运会名称 like "%悉尼奥运会%")

eval_err_num:1132
extra pred: SELECT t1.赛事名称 FROM "羽毛球球员" t1 INNER JOIN "重要赛事" t2 ON t1.球员id = t2.球员id INNER JOIN "奥运会冠亚军" t3 ON t2.赛事id = t3.赛事id WHERE t3.奥运会名称 = '羽毛球' AND t3.比赛类型 = '奥运会'
extra gold: select 赛事名称 from 球员夺冠次数 AS T4 JOIN 羽毛球球员 AS T2 ON T4.球员id = T2.球员id JOIN 重要赛事 AS T5 ON T4.赛事id = T5.赛事id where 球员姓名 in (select 球员姓名 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id where 奥运会名称 like "%悉尼奥运会%")

eval_err_num:1133
extra pred: SELECT COUNT(*) as total FROM "冠军国家" t1 INNER JOIN "重要赛事" t2 ON t1.赛事id = t2.赛事id INNER JOIN "奥运会冠亚军" t3 ON t2.赛事id = t3.赛事id WHERE t3.奥运会名称 = '羽毛球' AND t3.比赛类型 = '奥运会' GROUP BY t1.赛事id
extra gold: select count(*) from 球员夺冠次数 AS T4 JOIN 羽毛球球员 AS T2 ON T4.球员id = T2.球员id JOIN 重要赛事 AS T5 ON T4.赛事id = T5.赛事id where 球员姓名 in (select 球员姓名 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id where 奥运会名称 like "%悉尼奥运会%")

eval_err_num:1134
easy pred: SELECT 台风.名称 FROM "台风" 台风 JOIN "台风影响的中国省份" 省份 ON 台风.台风id = 省份.台风id JOIN "台风影响的国家" 国家 ON 台风.台风id = 国家.台风id WHERE 省份.省份 NOT IN ('中国', '台湾') AND 国家.国家 NOT IN ('中国', '台湾')
easy gold: select 名称 from 台风

eval_err_num:1135
medium pred: SELECT 省份.省份, 省份.登陆强度 FROM "台风影响的中国省份" 省份 JOIN "台风" 台风 ON 省份.台风id = 台风.台风id WHERE 台风.名称 NOT IN ('莫兰蒂', '泰利')
medium gold: select 名称,登陆强度 from 台风

eval_err_num:1136
medium pred: SELECT 台风.名称, 台风.登陆强度 FROM "台风影响的中国省份" 省份 JOIN "台风" 台风 ON 省份.台风id = 台风.台风id ORDER BY 台风.登陆强度 DESC
medium gold: select 名称,登陆强度 from 台风 order by 登陆强度 desc

eval_err_num:1137
medium pred: SELECT 台风.台风id, 省份.省份, 国家.国家, 台风.登陆强度, 台风.死亡人数, 台风.经济损失 FROM "台风影响的中国省份" 台风 INNER JOIN "台风影响的国家" 省份 ON 台风.台风id = 省份.台风id INNER JOIN "台风" 台风 ON 省份.国家 = 台风.台风id WHERE 省份.省份 = '广东'
medium gold: select 名称 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where 省份 = "广东"

eval_err_num:1138
extra pred: SELECT 国家.国家 FROM "台风影响的国家" 国家 INNER JOIN "台风影响的国家" 省份 ON 国家.国家 = 省份.国家 INNER JOIN "台风" 台风 ON 省份.国家 = 台风.台风id WHERE 台风.台风id = 国家.台风id
extra gold: select 国家 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where 名称 = (select 名称 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where 省份 = "广东")

eval_err_num:1139
extra pred: SELECT 台风.台风id, 省份.省份, 国家.国家, 台风.登陆强度, 台风.死亡人数, 台风.经济损失 FROM "台风影响的中国省份" 台风 INNER JOIN "台风影响的国家" 省份 ON 台风.台风id = 省份.台风id INNER JOIN "台风" 台风 ON 省份.国家 = 台风.台风id INNER JOIN "台风影响的国家" 国家 ON 国家.国家 = 省份.国家 WHERE 省份.省份 = '广东' AND 国家.国家 = '中国' AND 台风.经济损失 > 0
extra gold: select 国家,T3.经济损失 from 台风影响的国家 AS T3 JOIN 台风 AS T2 ON T3.台风id = T2.台风id where 名称 = (select 名称 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where 省份 = "广东")

eval_err_num:1140
medium pred: SELECT 台风.台风id, 台风.名称, 台风.登陆地点, 台风.登陆时间, 台风.登陆强度, 台风.死亡人数, 台风.经济损失 FROM "台风影响的中国省份" 台风 JOIN "台风影响的国家" 台风_国 ON 台风.台风id = 台风_国.台风id JOIN "台风" 台风_t ON 台风_国.国家 = 台风_t.台风id WHERE 台风_t.名称 = '台风' GROUP BY 台风.台风id, 台风.名称, 台风.登陆地点, 台风.登陆时间, 台风.登陆强度, 台风.死亡人数, 台风.经济损失
medium gold: select 名称,死亡人数 from 台风

eval_err_num:1141
medium pred: SELECT 台风.台风id, 台风.名称, 台风.登陆地点, 台风.登陆时间, 台风.登陆强度, 台风.死亡人数, (SELECT COUNT(*) FROM "台风影响的国家" 国 WHERE 国.国家 = 台风_t.台风id AND 国.经济损失 = 台风_t.经济损失) AS 登陆次数 FROM "台风影响的中国省份" 台风 JOIN "台风影响的国家" 台风_国 ON 台风.台风id = 台风_国.台风id JOIN "台风" 台风_t ON 台风_国.国家 = 台风_t.台风id WHERE 台风_t.名称 = '台风' GROUP BY 台风.台风id, 台风.名称, 台风.登陆地点, 台风.登陆时间, 台风.登陆强度, 台风.死亡人数 ORDER BY 登陆次数 DESC LIMIT 1
medium gold: select 登陆地点 from 台风 order by 死亡人数 desc limit 1

eval_err_num:1142
medium pred: SELECT 台风.台风id, 台风.名称, 台风.登陆地点, 台风.登陆时间, 台风.登陆强度, 台风.死亡人数, (SELECT COUNT(*) FROM "台风影响的国家" 国 WHERE 国.国家 = 台风_t.台风id AND 国.经济损失 = 台风_t.经济损失) AS 登陆次数 FROM "台风影响的中国省份" 台风 JOIN "台风影响的国家" 台风_国 ON 台风.台风id = 台风_国.台风id JOIN "台风" 台风_t ON 台风_国.国家 = 台风_t.台风id WHERE 台风_t.名称 = '台风' GROUP BY 台风.台风id, 台风.名称, 台风.登陆地点, 台风.登陆时间, 台风.登陆强度, 台风.死亡人数
medium gold: select 登陆时间 from 台风 order by 死亡人数 desc limit 1

eval_err_num:1143
easy pred: SELECT a.省份 FROM "台风影响的中国省份" a INNER JOIN "台风影响的国家" b ON a.台风id = b.台风id WHERE b.国家 = '中国'
easy gold: select 省份 from 台风影响的中国省份

eval_err_num:1144
medium pred: SELECT a.省份 FROM "台风影响的中国省份" a INNER JOIN "台风影响的国家" b ON a.台风id = b.台风id WHERE b.国家 = '中国' ORDER BY a.登陆强度 DESC LIMIT 1
medium gold: select 省份 from 台风影响的中国省份 order by 登陆强度 desc limit 1

eval_err_num:1145
medium pred: SELECT a.死亡人数, b.失踪人数 FROM "台风影响的中国省份" a INNER JOIN "台风影响的国家" b ON a.台风id = b.台风id WHERE b.国家 = '中国' GROUP BY a.省份 HAVING COUNT(DISTINCT b.死亡人数) > 0 AND COUNT(DISTINCT b.失踪人数) > 0
medium gold: select 死亡人数,失踪人数 from 台风影响的中国省份 order by 登陆强度 desc limit 1

eval_err_num:1146
hard pred: SELECT 台风.名称 FROM 台风影响的国家 INNER JOIN 台风 ON 台风影响的国家.台风id = 台风.台风id WHERE 台风影响的国家.国家 = '中国' AND 台风.登陆地点 = '福建'
hard gold: select T2.名称 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id order by T1.登陆强度 desc limit 1

eval_err_num:1147
hard pred: SELECT t.持续天数 FROM "台风影响的中国省份" a INNER JOIN "台风影响的国家" b ON a.台风id = b.台风id INNER JOIN "台风" t ON b.经济损失 = t.经济损失 AND b.台风id = t.台风id WHERE b.国家 = '中国'
hard gold: select T2.持续天数 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id order by T1.登陆强度 desc limit 1

eval_err_num:1148
hard pred: 查询语句如下: SELECT * FROM "台风影响的国家" WHERE "台风id" IN ( SELECT "台风id" FROM "台风" GROUP BY "台风id" ORDER BY MAX("台风强度") DESC LIMIT 1 )
hard gold: select T1.国家 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id order by T2.登陆强度 desc limit 1

eval_err_num:1149
hard pred: 查询语句如下: SELECT "经济损失" AS total_经济损失 FROM "台风影响的国家" WHERE "台风id" IN ( SELECT "台风id" FROM "台风" GROUP BY "台风id" ORDER BY MAX("台风强度") DESC LIMIT 1 )
hard gold: select T1.经济损失 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id order by T2.登陆强度 desc limit 1

eval_err_num:1150
hard pred: 查询语句如下: SELECT "台风"."登陆地点" FROM "台风影响的国家" INNER JOIN "台风" ON "台风影响的国家"."台风id" = "台风"."台风id" WHERE "台风"."名称" = '菲律宾' GROUP BY "台风"."登陆地点" HAVING COUNT(DISTINCT "台风影响的国家"."省份") > 1
hard gold: select T2.登陆时间,T2.登陆地点 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id order by T2.登陆强度 desc limit 1

eval_err_num:1151
hard pred: SELECT 城市id FROM 城市金融产业 GROUP BY 城市id ORDER BY 总数量 DESC LIMIT 1
hard gold: select t1.名称 from 城市 as t1 join 城市金融产业 as t2 on t1.城市id = t2.城市id order by t2.金融机构数量 desc limit 1

eval_err_num:1152
hard pred: SELECT 城市id FROM 城市金融产业 GROUP BY 城市id ORDER BY 总数量 DESC LIMIT 1
hard gold: select t1.名称 from 城市 as t1 join 城市金融产业 as t2 on t1.城市id = t2.城市id order by t2.金融机构数量 asc limit 1

eval_err_num:1153
extra pred: SELECT 城市, 省份 FROM 城市 JOIN 城市第一产业 ON 城市id = 城市.城市id JOIN 城市贸易产业 ON 城市id = 城市.城市id JOIN 城市金融产业 ON 城市id = 城市.城市id WHERE 城市.名称 = '中国' AND 城市.所属省份 = 省份.省份
extra gold: select t1.名称,t1.所属省份 from 城市 as t1 join 城市金融产业 as t2 on t1.城市id = t2.城市id where t2.金融机构数量 in (select max(金融机构数量) from 城市金融产业 union select min(金融机构数量) from 城市金融产业)

eval_err_num:1154
extra pred: SELECT 省份, 城市金融产业.金融业增加值 FROM 省份 JOIN 城市金融产业 ON 省份.省份 = 城市金融产业.城市id GROUP BY 省份, 城市金融产业.金融业增加值 HAVING 城市金融产业.金融业增加值 > 0
extra gold: select t1.第三产业总值,t1.所属省份 from 城市 as t1 join 城市金融产业 as t2 on t1.城市id = t2.城市id where t2.金融机构数量 in (select max(金融机构数量) from 城市金融产业 union select min(金融机构数量) from 城市金融产业)

                     easy                 medium               hard                 extra                all                  joint_all           
count                242                  482                  314                  253                  1291                 333                 
=====================   EXECUTION ACCURACY     =====================
execution            0.054                0.006                0.000                0.004                0.000                0.000               

====================== EXACT MATCHING ACCURACY =====================
exact match          0.050                0.002                0.000                0.000                0.010                0.000               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.442                0.351                0.130                0.400                0.350                0.000               
select(no AGG)       0.442                0.386                0.130                0.400                0.365                0.000               
where                0.417                0.083                0.000                0.000                0.188                0.000               
where(no OP)         0.417                0.083                0.100                0.000                0.208                0.000               
group(no Having)     0.000                0.000                0.000                0.000                0.000                0.000               
group                0.000                0.000                0.000                0.000                0.000                0.000               
order                0.000                0.333                0.000                0.000                0.200                0.000               
and/or               1.000                0.952                0.945                0.853                0.940                0.000               
IUEN                 0.000                0.000                0.000                0.000                0.000                0.000               
keywords             0.861                0.725                0.591                0.400                0.728                0.000               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.095                0.041                0.010                0.008                0.037                0.000               
select(no AGG)       0.095                0.046                0.010                0.008                0.039                0.000               
where                0.096                0.011                0.000                0.000                0.020                0.000               
where(no OP)         0.096                0.011                0.008                0.000                0.022                0.000               
group(no Having)     0.000                0.000                0.000                0.000                0.000                0.000               
group                0.000                0.000                0.000                0.000                0.000                0.000               
order                0.000                0.010                0.000                0.000                0.004                0.000               
and/or               0.963                0.998                0.983                0.995                0.987                0.000               
IUEN                 0.000                0.000                0.000                0.000                0.000                0.000               
keywords             0.195                0.077                0.042                0.008                0.068                0.000               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.156                0.074                0.018                0.016                0.067                1.000               
select(no AGG)       0.156                0.082                0.018                0.016                0.070                1.000               
where                0.155                0.019                1.000                1.000                0.036                1.000               
where(no OP)         0.155                0.019                0.015                1.000                0.040                1.000               
group(no Having)     1.000                1.000                1.000                1.000                1.000                1.000               
group                1.000                1.000                1.000                1.000                1.000                1.000               
order                1.000                0.019                1.000                1.000                0.007                1.000               
and/or               0.981                0.974                0.964                0.919                0.963                1.000               
IUEN                 1.000                1.000                1.000                1.000                1.000                1.000               
keywords             0.318                0.139                0.078                0.016                0.124                1.000               


                     turn 1               turn 2               turn 3               turn 4               turn >4             
count                333                  333                  333                  210                  82                  
=====================   TRUN XECUTION ACCURACY     =====================
execution            0.036                0.009                0.003                0.000                0.012               

====================== TRUN EXACT MATCHING ACCURACY =====================
exact match          0.027                0.009                0.003                0.000                0.000               
