medium pred: SELECT * FROM 电子书
medium gold: select T2.书名,T1.电子书售价 from 电子书 AS T1 JOIN 图书 AS T2 ON T2.图书id = T1.书名id

eval_err_num:1
hard pred: SELECT MAX(电子书售价) AS price FROM 电子书
hard gold: select T2.书名 from 电子书 AS T1 JOIN 图书 AS T2 ON T2.图书id = T1.书名id order by T1.电子书售价 desc limit 1

eval_err_num:2
hard pred: SELECT price AS price FROM 电子书 WHERE 书名='The Shawshank Redemption'
hard gold: select T2.书名 from 电子书 AS T1 JOIN 图书 AS T2 ON T2.图书id = T1.书名id order by T1.电子书售价 limit 1

eval_err_num:3
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select T2.书名,T1.会员价格 from 电子书 AS T1 JOIN 图书 AS T2 ON T2.图书id = T1.书名id

eval_err_num:4
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select T2.书名,T1.会员价格 from 电子书 AS T1 JOIN 图书 AS T2 ON T2.图书id = T1.书名id order by T1.会员价格 limit 1

eval_err_num:5
easy pred: SELECT 书名id, 平台id FROM 图书 INNER JOIN 平台 ON 图书.图书id = 平台.平台id INNER JOIN 图书与平台 ON 图书.书名id = 平台.平台id WHERE 平台.成立时间 = '2020-01-01'
easy gold: select 平台名 from 平台

eval_err_num:6
easy pred: SELECT 书名id, 平台id FROM 图书 INNER JOIN 平台 ON 图书.图书id = 平台.平台id WHERE 平台.是否自营 = '1'
easy gold: select 平台名 from 平台 where 是否自营 = "是"

eval_err_num:7
medium pred: SELECT 书名id, 平台id FROM 图书 INNER JOIN 平台 ON 图书.图书id = 平台.平台id INNER JOIN 图书与平台 ON 图书.书名id = 平台.平台id WHERE 平台.是否自营 = '1' GROUP BY 书名id, 平台id HAVING SUM(会员费) = '2'
medium gold: select 平台名,会员费 from 平台 where 是否自营 = "是"

eval_err_num:8
hard pred: SELECT price FROM 电子书 WHERE price > ( SELECT price FROM 电子书 WHERE 书籍id = '2' ORDER BY 售价 DESC LIMIT 1 )
hard gold: select 平台名,会员费 from 平台 where 是否自营 = "是" order by 会员费 desc limit 1

eval_err_num:9
hard pred: SELECT price FROM 电子书 WHERE price < ( SELECT price FROM 电子书 WHERE 书籍id = '2' ORDER BY 售价 ASC LIMIT 1 )
hard gold: select 平台名,会员费 from 平台 where 是否自营 = "是" order by 会员费 limit 1

eval_err_num:10
medium pred: SELECT t1.name, t1.time AS成立时间 FROM 图书 t1, 平台 t2 WHERE t1.书名id = t2.平台id AND t1.time > t2.成立时间
medium gold: select 平台名 from 平台 order by 成立时间 limit 1

eval_err_num:11
medium pred: SELECT t1.name AS 平台名, t1.time AS 成立时间, t1.年营业额 AS 年营业额, t2.年营业额 AS 年营业额_binary FROM 平台 t1 INNER JOIN 图书 t2 ON t1.平台id = t2.平台id WHERE t1.成立时间 > t2.成立时间
medium gold: select 年营业额 from 平台 order by 成立时间 limit 1

eval_err_num:12
medium pred: SELECT t1.name, t1.time, t1.年营业额 AS 年营业额_text FROM 平台 t1 INNER JOIN ( SELECT name, MAX(time) AS max_time, COUNT(*) AS total_营业额 FROM 图书 GROUP BY name, max_time ) t2 ON t1.平台id = t2.平台id AND t1.time = t2.max_time WHERE t1.name = t2.name
medium gold: select 平台名,年营业额 from 平台

eval_err_num:13
medium pred: SELECT name, MAX(年营业额) AS 最高年营业额, COUNT(*) AS 最高营业额_text FROM 图书 GROUP BY name SELECT MAX(年营业额) AS 最高年营业额, COUNT(*) AS 最高营业额_text FROM 平台 GROUP BY name
medium gold: select 平台名,年营业额 from 平台 order by 年营业额 desc limit 1

hard pred: SELECT 书名, 平台id FROM 图书 JOIN 平台 ON 图书id = 平台id WHERE 平台id = '平台名'
hard gold: select T3.平台名 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id where T1.书名 = "大众心理研究学"

eval_err_num:14
hard pred: SELECT price FROM 图书 JOIN 平台 ON 图书id = 平台id WHERE 平台id = '平台名'
hard gold: select T3.平台名,T2.售价 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id where T1.书名 = "大众心理研究学"

eval_err_num:15
extra pred: SELECT price FROM 图书 JOIN 平台 ON 图书id = 平台id WHERE 平台id IN ('平台名1', '平台名2', '平台名3')
extra gold: select T3.平台名,T2.售价 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id where T1.书名 = "大众心理研究学" order by T2.售价 limit 1

eval_err_num:16
medium pred: SELECT 书籍.书名, 平台.平台名, 书和平台之间的关系.评分, 书和平台之间的关系.购买人数, 书和平台之间的关系.加入购物车人数, 书和平台之间的关系.收藏人数, 书和平台之间的关系.缺货 FROM 书籍 书籍_table, 平台 平台_table, 书和平台之间的关系 书籍_table_and_平台_table, 平台 平台_table, 关系表_and_book_table 书籍_table_and_平台_table_and_关系表_and_book_table ORDER BY 评分 DESC, 购买人数 DESC
medium gold: select T1.书名,T2.评分 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id

eval_err_num:17
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select T1.书名,T2.评分 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id ORDER BY T2.评分 DESC LIMIT 1

eval_err_num:18
hard pred: SELECT 电子书.书名, 电子书.价格, COUNT(*) AS 购买人数 FROM 电子书 电子书_table, 关系表_and_book_table 书籍_table_and_平台_table, 书籍 书籍_table, 平台 平台_table, 关系表_and_book_table 书籍_table_and_平台_table_and_关系表_and_book_table GROUP BY 电子书.书名, 书籍_table.书名, 电子书_table.价格, 书籍_table_and_平台_table.书名, 书籍_table_and_平台_table_and_关系表_and_book_table.书名, 书籍_table_and_平台_table_and_关系表_and_book_table.价格, 书籍_table_and_平台_table_and_关系表_and_book_table.购买人数
hard gold: select T1.书名,T2.加入购物车人数 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id ORDER BY T2.评分 DESC LIMIT 1

eval_err_num:19
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select T1.书名,T2.收藏人数 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id ORDER BY T2.评分 DESC LIMIT 1

eval_err_num:20
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select T1.书名,T2.购买人数 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id ORDER BY T2.评分 DESC LIMIT 1

eval_err_num:21
medium pred: SELECT书名, 平台名, COUNT(*) as 购买人数 FROM 图书_平台 GROUP BY 书名, 平台名 HAVING 缺货
medium gold: select distinct T2.书名 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id WHERE T1.缺货 = "是"

eval_err_num:22
medium pred: SELECT作者 FROM 图书 WHERE 类型 = 'text' FOREIGN KEY (作者) REFERENCES 图书 (图书id)
medium gold: select distinct T2.书名,T2.作者 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id WHERE T1.缺货 = "是"

eval_err_num:23
medium pred: SELECT类型 FROM 图书 WHERE 类型 = 'text' FOREIGN KEY (类型) REFERENCES text (图书id)
medium gold: select distinct T2.书名,T2.类型 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id WHERE T1.缺货 = "是"

eval_err_num:24
hard pred: SELECT * FROM 图书_平台 WHERE 书籍_id IN (SELECT MAX(书名id) FROM 图书_平台)
hard gold: select T1.书名 FROM 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id ORDER BY 收藏人数 DESC LIMIT 1

eval_err_num:25
hard pred: SELECTSELECT 售价 FROM 图书_平台 WHERE 书籍_id IN (SELECT MAX(书名id) FROM 图书_平台)
hard gold: select T2.售价 FROM 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id ORDER BY 收藏人数 DESC LIMIT 1

eval_err_num:26
extra pred: SELECTSELECTSELECT 电子书_id, 电子书_售价 FROM 电子书_平台 WHERE 电子书_id IN (SELECT MAX(电子书_id) FROM 电子书_平台)
extra gold: select T3.电子书售价 FROM 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 电子书 AS T3 ON T3.书名id = T2.书名id ORDER BY 收藏人数 DESC LIMIT 1

eval_err_num:27
medium pred: SELECT 书名id, 评分, 购买人数, 加入购物车人数, 收藏人数, 缺货 FROM 图书与平台 WHERE 书名id REFERENCES 图书 (图书id) AND 平台id REFERENCES 平台 (平台id)
medium gold: select T2.评分 FROM 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id WHERE T1.书名 = "平凡的世界"

eval_err_num:28
medium pred: SELECT AVG(评分) AS 平均得分 FROM 图书与平台 WHERE 书名id REFERENCES 图书 (图书id) AND 平台id REFERENCES 平台 (平台id)
medium gold: select AVG(T2.评分) FROM 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id WHERE T1.书名 = "平凡的世界"

eval_err_num:29
medium pred: SELECT COUNT(1) AS 参与人数 FROM 图书与平台 WHERE 书名id REFERENCES 图书 (图书id) AND 平台id REFERENCES 平台 (平台id)
medium gold: select sum(T2.评分人数) FROM 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id WHERE T1.书名 = "平凡的世界"

eval_err_num:30
hard pred: SELECT 平台id AS 平台id, 书名id AS 书名id, 购买人数, 加入购物车人数, 收藏人数, 缺货 FROM 图书与平台 WHERE 书名id REFERENCES 图书 (图书id) AND 平台id REFERENCES 平台 (平台id)
hard gold: select T3.平台名 FROM 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id WHERE T1.书名 = "平凡的世界" AND T2.缺货 = "否"

eval_err_num:31
easy pred: SELECT * FROM "民俗节日" WHERE "民族id" IN (SELECT "民族id" FROM "民族") AND "时间" = '2022-01-01' AND "纪念" = '自由'
easy gold: select 节日 from 民俗节日

eval_err_num:32
medium pred: SELECT * FROM "民俗节日" WHERE "节日" = '春节' AND "民族id" = '汉族' AND "纪念" = '1949-01-01'
medium gold: select 节日, 纪念 from 民俗节日

eval_err_num:33
medium pred: SELECT * FROM "民俗节日" WHERE "节日" = '春节' AND "民族id" = '汉族' AND "纪念" = '1949-01-01' AND "庆祝" = '2022-01-01' AND "时间" = '2022-01-01'
medium gold: select 节日, 时间 from 民俗节日

eval_err_num:34
easy pred: SELECT COUNT(*) FROM "民族" WHERE "民族id" IN (SELECT "民族id" FROM "民俗节日" WHERE "时间" = '2022-01-01' AND "纪念" = 'NULL')
easy gold: select COUNT(名称) from 民族

eval_err_num:35
easy pred: SELECT * FROM "民族" WHERE "民族id" IN (SELECT "民族id" FROM "民俗节日" WHERE "时间" = '2022-01-01' AND "纪念" = 'NULL')
easy gold: select 名称 from 民族

eval_err_num:36
medium pred: SELECT COUNT(*) AS "人口数量" FROM "民族" WHERE "民族id" IN (SELECT "民族id" FROM "民俗节日" WHERE "时间" = '2022-01-01' AND "纪念" = 'NULL')
medium gold: select 名称,人口 from 民族

eval_err_num:37
medium pred: SELECT *, COUNT(*) AS "人口数量" FROM "民族" GROUP BY "民族id" HAVING COUNT(*) > 1
medium gold: select 名称,人口 from 民族 order by 人口 desc

eval_err_num:38
medium pred: SELECT宗教信仰 FROM "民族" WHERE 民族id IN (SELECT 民族id FROM "民族城市") ON DELETE NOACTION ON UPDATE NOACTION
medium gold: select 名称,宗教信仰 from 民族

eval_err_num:39
medium pred: SELECT 民族id, 语言 FROM "民族" WHERE 语言 IN (SELECT 语言 FROM "民族城市") ON DELETE NOACTION ON UPDATE NOACTION
medium gold: select 名称,宗教信仰,语言 from 民族

eval_err_num:40
medium pred: SELECT 城市名称, COUNT(*) AS 人口 FROM "民族城市" GROUP BY 城市名称 ON DELETE NOACTION ON UPDATE NOACTION
medium gold: select T1.名称,T2.城市名称 FROM 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id

eval_err_num:41
medium pred: SELECT 民族id, SUM(人口) AS 总人数 FROM "民族" GROUP BY 民族id ON DELETE NOACTION ON UPDATE NOACTION
medium gold: select T1.名称,T2.人口 FROM 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id

eval_err_num:42
medium pred: SELECT 民族id, COUNT(*) AS 总人数, SUM(人口) AS 总人口 FROM "民族" GROUP BY 民族id, 总人数 ON DELETE NOACTION ON UPDATE NOACTION
medium gold: select T1.名称,T2.人口 FROM 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id order by T2.人口 desc

eval_err_num:43
medium pred: SELECT 民族, 民族城市.人口 / 城市.人口 AS 比例 FROM "民族" AS 民族 INNER JOIN "民族城市" AS 民族城市 ON 民族.民族id = 民族城市.民族id INNER JOIN "城市" AS 城市 ON 民族城市.城市名称 = 城市.城市名称 GROUP BY 民族, 民族城市.人口 ORDER BY 比例 DESC
medium gold: select T1.名称,T2.城市名称,T2.比例 FROM 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id

eval_err_num:44
hard pred: SELECT * FROM "民族城市" AS 民族城市 INNER JOIN "民族" AS 民族 ON 民族.民族id = 民族城市.民族id INNER JOIN "城市" AS 城市 ON 民族城市.城市名称 = 城市.城市名称 GROUP BY 民族, 民族城市.人口 HAVING MAX(人口) = (SELECT MAX(人口) FROM "民族城市" AS 民族城市 WHERE 民族.民族id = 民族城市.民族id) ORDER BY 比例 DESC
hard gold: select T1.名称,T2.城市名称,T2.比例 FROM 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id order by 比例 desc limit 1

eval_err_num:45
hard pred: SELECT * FROM "民族城市" AS 民族城市 INNER JOIN "民族" AS 民族 ON 民族.民族id = 民族城市.民族id INNER JOIN "城市" AS 城市 ON 民族城市.城市名称 = 城市.城市名称 GROUP BY 民族, 民族城市.人口 HAVING MIN(人口) = (SELECT MIN(人口) FROM "民族城市" AS 民族城市 WHERE 民族.民族id = 民族城市.民族id) ORDER BY 比例 DESC
hard gold: select T1.名称,T2.城市名称,T2.比例 FROM 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id order by 比例 limit 1

eval_err_num:46
hard pred: SELECT人口 FROM "民族" AS 民族 INNER JOIN "民族城市" AS 民族城市 ON 民族.民族id = 民族城市.民族id INNER JOIN "城市" AS 城市 ON 民族城市.城市名称 = 城市.城市名称 WHERE 民族.人口 > (SELECT COUNT(*) FROM "民族城市" AS 民族城市 WHERE 民族.民族id = 民族城市.民族id)
hard gold: select T1.名称,T2.人口 FROM 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id order by 比例 limit 1

eval_err_num:47
easy pred: NO SQL FOUND
easy gold: select 名称 from 旅行社

eval_err_num:48
medium pred: NO SQL FOUND
medium gold: select 名称,级别 from 旅行社

eval_err_num:49
easy pred: NO SQL FOUND
easy gold: select 名称 from 旅行社 where 级别 = " 5A"

eval_err_num:50
medium pred: NO SQL FOUND
medium gold: select 名称,出境游路线数量 from 旅行社 where 级别 = " 5A"

eval_err_num:51
easy pred: SELECT * FROM "公司" WHERE id IN (SELECT 所属公司id FROM "音箱产品" WHERE 名称 = '智能音箱' AND 售价 > 0)
easy gold: select 名称 from 公司

eval_err_num:52
medium pred: SELECT 产品名称 FROM "音箱产品" WHERE 名称 = '智能音箱'
medium gold: select T2.名称,T1.名称 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id

eval_err_num:53
medium pred: SELECT 售价 FROM "音箱产品" WHERE 名称 = '智能音箱' AND 售价 > 0
medium gold: select T2.名称,T1.名称,T1.售价 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id

eval_err_num:54
hard pred: SELECT 售价, COUNT(*) as total_sales FROM "音箱产品" WHERE 名称 = '智能音箱' AND 售价 > 0 GROUP BY 售价 DESC ORDER BY total_sales DESC LIMIT 1
hard gold: select T2.名称,T1.名称,T1.售价 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id order by T1.售价 desc limit 1

eval_err_num:55
easy pred: SELECT 公司名称, 排名 FROM "公司" WHERE 所属国家 = '中国' ORDER BY 排名 DESC LIMIT 1
easy gold: select 名称 from 公司 where 排名 = "1"

eval_err_num:56
medium pred: SELECT 产品名 FROM "音箱产品" WHERE 所属公司 = '它们' LIMIT 1
medium gold: select T1.名称 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id WHERE T2.名称 = "百度"

eval_err_num:57
medium pred: SELECT 销售数量, COUNT(*) as 排名 FROM "产品销售" WHERE 季度 = '2022' GROUP BY 销售数量 ORDER BY COUNT(*) DESC LIMIT 1
medium gold: select T1.名称,T1.排名 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id WHERE T2.名称 = "百度"

eval_err_num:58
extra pred: SELECT 音箱产品名, COUNT(*) as 排名 FROM "音箱产品" WHERE 所属公司id = ( SELECT MAX(所属公司id) FROM "公司" GROUP BY 公司名称 ) GROUP BY 音箱产品名 ORDER BY COUNT(*) DESC LIMIT 1
extra gold: select T1.名称,T1.排名 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id WHERE T2.名称 = "百度" order by T1.排名 asc limit 1

eval_err_num:59
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T1.名称,T1.上升名次 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id WHERE T2.名称 = "百度" order by T1.排名 asc limit 1

eval_err_num:60
medium pred: SELECT 音箱产品.名称, 产品销售.季度, 音箱产品.售价, 音箱产品.排名, 音箱产品.上升名次, COUNT(DISTINCT 产品销售.销售量) 销售量_增长 FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.音箱id WHERE 产品销售.季度 = 4 GROUP BY 音箱产品.名称, 产品销售.季度 ORDER BY 销售量_增长 DESC
medium gold: select T1.销售量 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where T2.名称 = "小度音箱" and 季度 = "4"

eval_err_num:61
medium pred: SELECT 音箱产品.名称, 产品销售.季度, 音箱产品.售价, 音箱产品.排名, 音箱产品.上升名次, COUNT(DISTINCT 产品销售.销售量) 销售量_增长 FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.音箱id WHERE 产品销售.季度 = 4 GROUP BY 音箱产品.名称, 产品销售.季度 ORDER BY 销售量_增长 DESC
medium gold: select T1.销售量增长 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where T2.名称 = "小度音箱" and 季度 = "4"

eval_err_num:62
medium pred: SELECT 音箱产品.名称, 产品销售.季度, 音箱产品.售价, 音箱产品.排名, COUNT(DISTINCT 产品销售.销售量) 销售量_增长 FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.音箱id WHERE 产品销售.季度 = 4 GROUP BY 音箱产品.名称, 产品销售.季度 ORDER BY COUNT(DISTINCT 产品销售.销售量) DESC, 音箱产品.排名 ASC
medium gold: select T2.排名 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where T2.名称 = "小度音箱" and 季度 = "4"

eval_err_num:63
easy pred: SELECT * FROM "国内游路线" WHERE 路线名称 = 'A线路'
easy gold: select 路线名称 from 国内游路线

eval_err_num:64
medium pred: SELECT 路线名称, 出发城市, 天数, '预售价格', '参团价格', '起团人数', '个人价格', '景点数' FROM "出境游路线" WHERE 路线名称 = 'A线路' AND 旅行社id = 'A旅行社'
medium gold: select 路线名称,出发城市 from 国内游路线

eval_err_num:65
medium pred: SELECT 天数 FROM "国内游路线" WHERE 路线名称 = 'A线路' AND 旅行社id = 'A旅行社'
medium gold: select 路线名称,天数 from 国内游路线

eval_err_num:66
hard pred: SELECT 天数, '成人价格', '儿童价格', '景点数' FROM "出境游路线" WHERE 路线名称 = 'A线路' AND 旅行社id = 'A旅行社' ORDER BY 天数 DESC LIMIT 1
hard gold: select 路线名称 from 国内游路线 where 天数 = (select max(天数) from 国内游路线)

eval_err_num:67
medium pred: SELECT * FROM "国内游路线" WHERE "预售价格" = (SELECT MAX("国内游路线预售价格") FROM "国内游路线" WHERE "旅行社id" = 1)
medium gold: select 路线名称,预售价格 from 国内游路线

eval_err_num:68
extra pred: SELECT * FROM "出境游路线" WHERE "价格" = (SELECT MAX("价格") FROM "出境游路线" WHERE "旅行社id" = 1)
extra gold: select 路线名称,预售价格 from 国内游路线 where 预售价格 = (select max(预售价格) from 国内游路线 )

eval_err_num:69
extra pred: SELECT * FROM "出境游路线" WHERE "价格" IN (SELECT MAX("价格") FROM "出境游路线" WHERE "旅行社id" = 1)
extra gold: select 路线名称,天数 from 国内游路线 where 预售价格 = (select max(预售价格) from 国内游路线 )

eval_err_num:70
extra pred: SELECT * FROM "旅行社" WHERE "旅行社id" IN (SELECT MAX("旅行社id") FROM "旅行社" WHERE "名称" = '旅行社')
extra gold: select T1.路线名称,T2.名称 from 国内游路线 AS T1 JOIN 旅行社 AS T2 ON T1.旅行社id = T2.旅行社id where T1.预售价格 = (select max(预售价格) from 国内游路线 )

eval_err_num:71
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 路线名称 from 邮轮路线

eval_err_num:72
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 路线名称 from 邮轮路线 where 出发城市 = "上海"

eval_err_num:73
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 天数 from 邮轮路线 where 出发城市 = "上海"

eval_err_num:74
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 内舱房价格,海景房价格, 阳台房价格 from 邮轮路线 where 出发城市 = "上海"

eval_err_num:75
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 路线名称 from 出境游路线

eval_err_num:76
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 路线名称,出发城市 from 出境游路线

eval_err_num:77
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 路线名称,成人价格 from 出境游路线

eval_err_num:78
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select 路线名称,成人价格 from 出境游路线 where 成人价格 in (select max(成人价格) from 出境游路线)

eval_err_num:79
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select 路线名称,儿童价格 from 出境游路线 where 成人价格 in (select max(成人价格) from 出境游路线)

eval_err_num:80
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 景点数 from 出境游路线 where 路线名称 = "德法瑞意深度纵览一价无忧"

eval_err_num:81
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 门票总价格 from 出境游路线 where 路线名称 = "德法瑞意深度纵览一价无忧"

eval_err_num:82
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 成人价格 from 出境游路线 where 路线名称 = "德法瑞意深度纵览一价无忧"

eval_err_num:83
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 儿童价格 from 出境游路线 where 路线名称 = "德法瑞意深度纵览一价无忧"

eval_err_num:84
easy pred: NO SQL FOUND
easy gold: select 出发城市 from 出境游路线 where 路线名称 = "德法瑞意深度纵览一价无忧"

eval_err_num:85
easy pred: SELECT * FROM "旅行社" WHERE 旅行社id = 5A
easy gold: select 名称 from 旅行社 where 级别 = " 5A"

eval_err_num:86
medium pred: SELECT * FROM "出境游所含国家" WHERE 路线id IN (SELECT 路线id FROM "出境游路线" WHERE 旅行社id = 5A)
medium gold: select 名称,亚洲排名 from 旅行社 where 级别 = " 5A"

eval_err_num:87
extra pred: SELECT 天数, 门票总价格 FROM "出境游路线" ORDER BY 门票总价格 DESC LIMIT 1
extra gold: select 名称,亚洲排名 from 旅行社 where 级别 = " 5A" and 亚洲排名 = (select min(亚洲排名) from 旅行社)

eval_err_num:88
extra pred: SELECT a.旅行社id, a.出境游国家数量, a.国内游城市数量 FROM "旅行社" a JOIN "出境游所含国家" b ON a.旅行社id = b.旅行社id JOIN "国内游路线" c ON b.路线id = c.路线id WHERE a.旅行社id = 5A ORDER BY a.出境游国家数量 DESC, a.国内游城市数量 DESC LIMIT 1
extra gold: select 名称,出境游国家数量, 国内游城市数量 from 旅行社 where 级别 = " 5A" and 亚洲排名 = (select min(亚洲排名) from 旅行社)

eval_err_num:89
hard pred: SELECT书名, 平台id FROM 图书 INNER JOIN 平台 ON 图书id = 平台id ORDER BY 购买人数 DESC LIMIT 1
hard gold: select 书名 from 电子书 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id order by 购买人数 desc limit 1

eval_err_num:90
hard pred: SELECT 书名, 平台id FROM 图书 INNER JOIN 平台 ON 图书id = 平台id WHERE 平台id = ( SELECT 平台id FROM 平台 GROUP BY 平台id ORDER BY COUNT(*) DESC LIMIT 1 )
hard gold: select 平台名 from 电子书 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id order by 购买人数 desc limit 1

eval_err_num:91
extra pred: SELECT 书名, MAX(评分) FROM 图书 GROUP BY 书名 HAVING MAX(评分) = ( SELECT MAX(评分) FROM 图书 GROUP BY 书名 )
extra gold: select 评分 from 电子书 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id JOIN 图书与平台 AS T3 ON T2.平台id = T3.平台id order by T1.购买人数 desc limit 1

easy pred: SELECT * FROM 电视剧 WHERE 出品时间 < '2021-09-01' AND 出品公司 = 'ABC 电视剧公司'
easy gold: select 剧名 from 电视剧

eval_err_num:92
medium pred: NO SQL FOUND
medium gold: select T2.剧名 from 电视剧收视 AS T1 JOIN 电视剧 AS T2 ON T1.电视剧id = T2.电视剧编号 where T1.时间段 = "21:00~22:00"

eval_err_num:93
medium pred: NO SQL FOUND
medium gold: select T1.收视率 from 电视剧收视 AS T1 JOIN 电视剧 AS T2 ON T1.电视剧id = T2.电视剧编号 where T1.时间段 = "21:00~22:00"

eval_err_num:94
medium pred: SELECT商店名,软件数 FROM "应用商店" GROUP BY商店名 ORDER BY软件数 DESC LIMIT 1
medium gold: select 商店名 from 应用商店 order by 应用软件数 desc limit 1

eval_err_num:95
hard pred: SELECT * FROM "应用商店支持国家" WHERE "用户是否可以购买应用程序" = '1' AND "开发人员是否可以出售应用程序" = '0' LIMIT 1
hard gold: select t1.开发人员是否可以出售应用程序 from 应用商店支持国家 as t1 join 应用商店 as t2 on t1.应用商店id = t2.商店id order by t2.应用软件数 desc limit 1

eval_err_num:96
hard pred: SELECT * FROM "应用商店支持国家" WHERE "用户是否可以购买应用程序" = '1' AND "开发人员是否可以出售应用程序" = '0' LIMIT 1
hard gold: select t1.用户是否可以购买应用程序 from 应用商店支持国家 as t1 join 应用商店 as t2 on t1.应用商店id = t2.商店id order by t2.应用软件数 desc limit 1

eval_err_num:97
medium pred: SELECT MAX(下载量) FROM "软件下载" WHERE "软件id" = (SELECT "软件id" FROM "软件")
medium gold: select 下载量 from 软件下载 order by 下载量 desc limit 1

eval_err_num:98
hard pred: SELECT 软件名称 FROM "软件" WHERE 软件id = (SELECT "软件id" FROM "软件下载")
hard gold: select 名称 from 软件 where 软件id = (select 软件id from 软件下载 order by 下载量 desc limit 1)

eval_err_num:99
hard pred: SELECT 用途 FROM "软件" WHERE 软件id = (SELECT "软件id" FROM "软件下载")
hard gold: select 用途 from 软件 where 软件id = (select 软件id from 软件下载 order by 下载量 desc limit 1)

eval_err_num:100
extra pred: SELECT 软件名称, 软件用途 FROM "软件" WHERE 软件id IN (SELECT "软件id" FROM "软件下载")
extra gold: select 名称 from 软件 where 用途 = (select 用途 from 软件 where 软件id = (select 软件id from 软件下载 order by 下载量 desc limit 1)) except select 名称 from 软件 where 软件id = (select 软件id from 软件下载 order by 下载量 desc limit 1)

eval_err_num:101
easy pred: SELECT * FROM输入法软件 WHERE 应用商店名 = 'Google Play Store' AND 软件下载支持国家 = 'Google Play国家'
easy gold: select 名称 from 软件 where 用途 = "输入法"

eval_err_num:102
easy pred: SELECT * FROM地图软件 WHERE 应用商店名 = 'Google Play Store' AND 软件下载支持国家 = 'Google Play国家'
easy gold: select 名称 from 软件 where 用途 = "地图"

eval_err_num:103
hard pred: SELECT * FROM软件下载 WHERE 应用商店id = 'App Store' AND 下载量 > 1000 AND 评价人数 = 1 AND 好评数 > 0
hard gold: select t1.商店名 from 应用商店 as t1 join 软件下载 as t2 on t1.商店id = t2.应用商店id join 软件 as t3 on t2.软件id = t3.软件id where t3.用途 = "地图"

eval_err_num:104
hard pred: SELECT COUNT(*) FROM应用商店支持国家 WHERE 商店名 = 'App Store' AND 用户是否可以购买应用程序 = 'True' AND 开发人员是否可以出售应用程序 = 'True'
hard gold: select t1.应用软件数 from 应用商店 as t1 join 软件下载 as t2 on t1.商店id = t2.应用商店id join 软件 as t3 on t2.软件id = t3.软件id where t3.用途 = "地图"

eval_err_num:105
easy pred: SELECT t1.累计下载次数 FROM "应用商店" t1 join "应用商店支持国家" t2 on t1.商店id = t2.商店id join "软件" t3 on t1.软件id = t3.软件id where t2.用户是否可以购买应用程序 = '1' and t2.开发人员是否可以出售应用程序 = '0' order by t1.累计下载次数 limit 1
easy gold: select 累计下载次数 from 应用商店 where 商店名 = "酷安"

eval_err_num:106
medium pred: SELECT t1.国家 FROM "应用商店" t1 join "应用商店支持国家" t2 on t1.商店id = t2.商店id join "软件" t3 on t1.软件id = t3.软件id where t2.用户是否可以购买应用程序 = '0' and t2.开发人员是否可以出售应用程序 = '1' and t3.名称 = '酷安'
medium gold: select T1.国家 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id where T2.商店名 = "酷安"

eval_err_num:107
extra pred: SELECT 商店名称 from "应用商店" join "应用商店支持国家" on 商店id = 应用商店支持国家.商店id join "软件" on 商店id =软件.软件id where 商店支持国家.用户是否可以购买应用程序 = '0' and 商店支持国家.开发人员是否可以出售应用程序 = '1' and 软件.名称 like '酷安%'
extra gold: select distinct t3.商店名 from 应用商店 as t3 join 应用商店支持国家 as t4 on t3.商店id = t4.应用商店id where t4.国家 in(select T1.国家 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id where T2.商店名 = "酷安")

eval_err_num:108
extra pred: SELECT * FROM "应用商店" as t1 join "应用商店支持国家" as t2 on t1.商店id = t2.商店id join "软件" as t3 on t1.软件id = t3.软件id where t2.用户是否可以购买应用程序 = '0' and t2.开发人员是否可以出售应用程序 = '1' and t3.名称 like '酷安%'
extra gold: select * from 应用商店 as t3 join 应用商店支持国家 as t4 on t3.商店id = t4.应用商店id where t4.国家 in(select T1.国家 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id where T2.商店名 = "酷安")

eval_err_num:109
hard pred: SELECT软件id, MAX(好评数) AS max_好评数 FROM "软件下载" GROUP BY软件id ORDER BY max_好评数 DESC
hard gold: select t1.名称 from 软件 as t1 join 软件下载 as t2 on t1.软件id = t2.软件id order by t2.好评数 desc limit 1

eval_err_num:110
hard pred: SELECT软件id, MAX(下载量) AS max_下载量 FROM "软件下载" GROUP BY软件id ORDER BY max_下载量 DESC
hard gold: select t1.名称 from 软件 as t1 join 软件下载 as t2 on t1.软件id = t2.软件id order by t2.下载量 desc limit 1

eval_err_num:111
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select 名称,用途 from 软件 where 名称 = (select t1.名称 from 软件 as t1 join 软件下载 as t2 on t1.软件id = t2.软件id order by t2.下载量 desc limit 1) or 名称 = (select t3.名称 from 软件 as t3 join 软件下载 as t4 on t3.软件id = t4.软件id order by t4.好评数 desc limit 1)

eval_err_num:112
easy pred: SELECT COUNT(*) FROM "应用商店" WHERE "商店名" = '小米应用商店'
easy gold: select 应用软件数 from 应用商店 where 商店名 = "小米应用商店"

eval_err_num:113
easy pred: SELECT 的总和 FROM "应用商店" t1, "软件" t2 WHERE t1.商店id = t2.商店id AND t2.软件id = '软件'
easy gold: select 累计下载次数 from 应用商店 where 商店名 = "小米应用商店"

eval_err_num:114
hard pred: SELECT * FROM "应用商店" t1 JOIN "应用商店支持国家" t2 ON t1.商店id = t2.商店id AND t2.国家 = '中国'
hard gold: select 商店名 from 应用商店 where 累计下载次数 > (select 累计下载次数 from 应用商店 where 商店名 = "小米应用商店")

eval_err_num:115
easy pred: SELECT * FROM "应用商店" WHERE "商店名"='打车软件' AND "应用商店支持国家"."商店id"=1
easy gold: select 名称 from 软件 where 用途 = "打车"

eval_err_num:116
medium pred: SELECT 软件下载."下载量" AS下载量, 软件下载."评价人数" AS评价人数, 软件下载."好评数" AS好评数, PRIMARY KEY (软件下载."软件id"), FOREIGN KEY (应用商店id) REFERENCES "应用商店" (应用商店id) ON DELETE NOACTION ON UPDATE NOACTION FROM "软件下载" WHERE 软件下载."应用商店支持国家" = '中国' ORDER BY 好评数 DESC
medium gold: select t1.名称,t2.好评数 from 软件 as t1 join 软件下载 as t2 on t1.软件id = t2.软件id where t1.用途 = "打车"

eval_err_num:117
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select t1.名称,t2.好评数,t3.商店名 from 软件 as t1 join 软件下载 as t2 on t1.软件id = t2.软件id join 应用商店 as t3 on t2.应用商店id = t3.商店id where t1.用途 = "打车"

eval_err_num:118
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select t3.国家 from 软件 as t1 join 软件下载 as t2 on t1.软件id = t2.软件id join 应用商店支持国家 as t3 on t2.应用商店id = t3.应用商店id where t1.用途 = "打车"

eval_err_num:119
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 公司名 from 餐饮公司

eval_err_num:120
medium pred: SELECT 公司名称, 集团名称, 城市名称, 城市id所属集团, 总餐饮收入, 同比增长, 总消费额, 总的人气, 总的排名 FROM 餐饮公司, 城市, 餐饮公司城市消费, 餐饮公司城市连锁 WHERE 公司id IN ( SELECT 公司id FROM 餐饮公司 JOIN 城市 ON 城市id = 公司id JOIN 餐饮公司城市消费 ON 餐饮公司城市消费id = 城市id JOIN 餐饮公司城市连锁 ON 城市连锁id = 城市id )
medium gold: select 公司名,所属集团 from 餐饮公司

eval_err_num:121
medium pred: SELECT 公司名称, 餐饮类型 FROM 餐饮公司, 餐饮公司城市消费, 餐饮公司城市连锁 WHERE 公司id IN ( SELECT 公司id FROM 餐饮公司 JOIN 餐饮公司城市消费 ON 餐饮公司城市消费id = 公司id JOIN 餐饮公司城市连锁 ON 城市连锁id = 公司id )
medium gold: select 公司名,经营范围 from 餐饮公司

eval_err_num:122
hard pred: SELECT 公司名称, 城市名称, 公司id, 经营年数, 餐饮收入, 同比增长, 消费额, 人气, 排名 FROM "餐饮公司", "城市", "餐饮公司城市消费", "餐饮公司城市连锁" WHERE 公司id IN ( SELECT 公司id FROM "餐饮公司" JOIN "城市" ON "城市"."城市id" = "餐饮公司"."城市id" JOIN "餐饮公司城市消费" ON "餐饮公司城市消费"."公司id" = "餐饮公司"."公司id" JOIN "城市" ON "城市"."城市id" = "城市"."城市id" JOIN "餐饮公司城市连锁" ON "餐饮公司城市连锁"."公司id" = "城市"."公司id" )
hard gold: select 公司名 from 餐饮公司 where 经营年数 = (select max(经营年数) from 餐饮公司)

eval_err_num:123
hard pred: SELECT * FROM "餐饮公司城市连锁" WHERE 公司id IN (SELECT 公司id FROM "餐饮公司" WHERE 总部城市id = '北京') ON DELETE NOACTION ON UPDATE NOACTION
hard gold: select T2.名称 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where T3.公司名 = "必胜客"

eval_err_num:124
hard pred: SELECT COUNT(*) as 分店数量 FROM "餐饮公司城市连锁" WHERE 城市id IN (SELECT 城市id FROM "城市") ON DELETE NOACTION ON UPDATE NOACTION
hard gold: select T2.名称,T1.分店数量 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where T3.公司名 = "必胜客"

eval_err_num:125
hard pred: SELECT *, COUNT(*) as 员工数量 FROM "餐饮公司城市消费" join "餐饮公司城市连锁" on "餐饮公司城市消费"."公司id" = "餐饮公司城市连锁"."公司id" WHERE "餐饮公司城市消费"."城市id" IN (SELECT 城市id FROM "城市") ON DELETE NOACTION ON UPDATE NOACTION
hard gold: select T2.名称,T1.员工数量 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where T3.公司名 = "必胜客"

eval_err_num:126
hard pred: SELECT 餐厅座位数, COUNT(*) as 餐厅座位数量 FROM "餐饮公司城市连锁" WHERE 公司id IN (SELECT 公司id FROM "餐饮公司") ON DELETE NOACTION ON UPDATE NOACTION
hard gold: select T2.名称,T1.餐位数量 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where T3.公司名 = "必胜客"

eval_err_num:127
hard pred: SELECT 总面积, SUM(面积) as 总面积 FROM "餐饮公司城市连锁" GROUP BY 公司id ON DELETE NOACTION ON UPDATE NOACTION
hard gold: select T2.名称,T1.占地面积 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where T3.公司名 = "必胜客"

eval_err_num:128
hard pred: SELECT t1.name, t1.所属省份, t1.餐饮收入, t1.同比增长 FROM "城市" t1 INNER JOIN "餐饮公司" t2 ON t1.城市id = t2.总部城市id INNER JOIN "餐饮公司城市消费" t3 ON t2.公司id = t3.公司id INNER JOIN "餐饮公司城市连锁" t4 ON t3.城市id = t4.城市id WHERE t4.人气 = ( SELECT MAX(人气) FROM "餐饮公司城市消费" WHERE "餐饮公司城市消费"."公司id" = t2.公司id )
hard gold: select 名称 from 城市 where 餐饮收入 = (select max(餐饮收入) from 城市)

eval_err_num:129
hard pred: SELECT t1.name, t1.所属省份, t1.餐饮收入, t1.同比增长 FROM "城市" t1 INNER JOIN "餐饮公司" t2 ON t1.城市id = t2.总部城市id INNER JOIN "餐饮公司城市消费" t3 ON t2.公司id = t3.公司id INNER JOIN "餐饮公司城市连锁" t4 ON t3.城市id = t4.城市id WHERE t4.人气 = ( SELECT MAX(人气) FROM "餐饮公司城市消费" WHERE "餐饮公司城市消费"."公司id" = t2.公司id )
hard gold: select distinct 餐饮收入 from 城市 where 餐饮收入 = (select max(餐饮收入) from 城市)

eval_err_num:130
extra pred: SELECT t1.name, t1.所属省份, t1.餐饮收入, t1.同比增长 FROM "城市" t1 INNER JOIN "餐饮公司" t2 ON t1.城市id = t2.总部城市id INNER JOIN "餐饮公司城市消费" t3 ON t2.公司id = t3.公司id INNER JOIN "餐饮公司城市连锁" t4 ON t3.城市id = t4.城市id WHERE t4.同比增长 = ( SELECT MAX(同比增长) FROM "餐饮公司城市消费" WHERE "餐饮公司城市消费"."公司id" = t2.公司id )
extra gold: select 名称,同比增长 from 城市 where 餐饮收入 = (select max(餐饮收入) from 城市)

eval_err_num:131
extra pred: SELECT t1.name, t1.所属省份, MAX(t1.同比增长) AS 同比增长 FROM "城市" t1 INNER JOIN "餐饮公司城市消费" t3 ON t1.城市id = t3.城市id INNER JOIN "餐饮公司" t2 ON t3.公司id = t2.公司id GROUP BY t1.name, t1.所属省份 ORDER BY MAX(t1.同比增长) DESC LIMIT 1
extra gold: select 所属省份 from 城市 where 餐饮收入 = (select max(餐饮收入) from 城市) order by 同比增长 desc limit 1

eval_err_num:132
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T1.公司名 from 餐饮公司 AS T1 JOIN 城市 AS T2 ON T1.总部城市id = T2.城市id where T2.餐饮收入 = (select max(餐饮收入) from 城市) order by T2.同比增长 desc limit 1

eval_err_num:133
hard pred: NO SQL FOUND
hard gold: select T2.公司名 from 餐饮公司城市消费 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id JOIN 城市 AS T3 ON T1.城市id = T3.城市id where T3.名称 = "杭州"

eval_err_num:134
hard pred: NO SQL FOUND
hard gold: select T1.排名 from 餐饮公司城市消费 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id JOIN 城市 AS T3 ON T1.城市id = T3.城市id where T3.名称 = "杭州"

eval_err_num:135
hard pred: NO SQL FOUND
hard gold: select T1.人气 from 餐饮公司城市消费 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id JOIN 城市 AS T3 ON T1.城市id = T3.城市id where T3.名称 = "杭州"

eval_err_num:136
hard pred: NO SQL FOUND
hard gold: select T1.人均消费额 from 餐饮公司城市消费 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id JOIN 城市 AS T3 ON T1.城市id = T3.城市id where T3.名称 = "杭州"

eval_err_num:137
medium pred: SELECT 书名id, 平台id FROM 图书, 平台 WHERE 图书id IN (SELECT 图书id FROM 图书) AND 平台id IN (SELECT 平台id FROM 平台) GROUP BY 书名id, 平台id HAVING COUNT(*) > 0
medium gold: select T2.平台名, count(*) from 图书与平台 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id group by T2.平台名

eval_err_num:138
hard pred: SELECT 书名id, 平台id FROM 图书, 平台 WHERE 图书id IN (SELECT 图书id FROM 图书) AND 平台id IN (SELECT 平台id FROM 平台) ORDER BY COUNT(*) DESC
hard gold: select T2.平台名, count(*) from 图书与平台 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id group by T2.平台名 order by count(*) desc

eval_err_num:139
hard pred: SELECT书名id, 作者id, 出版社id, 书籍类型, 出版时间FROM 图书_table WHERE 出版社id IN (SELECT 出版社id FROM 出版社) AND 书籍类型 IN (SELECT 书籍类型 FROM 书籍) AND 出版时间 IN (SELECT 出版时间 FROM 出版时间) GROUP BY 书名id, 作者id, 出版社id, 书籍类型, 出版时间HAVING COUNT(*) > 0
hard gold: select T2.书名 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T3.平台名 = "天猫"

eval_err_num:140
medium pred: SELECT 平台名 FROM 平台 WHERE 成立时间早于 '2010-01-01'
medium gold: select 平台名 from 平台 order by 成立时间 asc limit 1

eval_err_num:141
medium pred: SELECT 是否自营 FROM 平台 WHERE 成立时间早于 '2010-01-01'
medium gold: select 是否自营 from 平台 order by 成立时间 asc limit 1

eval_err_num:142
extra pred: SELECT 书名, 电子书售价, 购买人数 FROM 图书与平台 WHERE 书名 in (SELECT 书名 from 图书 where 图书id in (SELECT 图书id from 平台 where 平台id in (SELECT 平台id from 图书_平台 WHERE 书名 in (SELECT 书名 from 图书 WHERE 类型 in ('e', 'r', 'm'))))
extra gold: select T2.书名 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T3.平台名 = (select T4.平台名 from 平台 AS T4 order by T4.成立时间 asc limit 1) UNION select T7.书名 from 电子书 AS T5 JOIN 平台 AS T6 ON T5.平台id = T6.平台id JOIN 图书 AS T7 ON T5.书名id = T7.图书id where T6.平台名 = (select T8.平台名 from 平台 AS T8 order by T8.成立时间 asc limit 1)

eval_err_num:143
extra pred: SELECT 书名, 平台id FROM 图书 JOIN 平台 ON 图书.平台id = 平台id WHERE 平台id = ( SELECT MAX(平台id) FROM 平台 )
extra gold: select T2.书名 from 电子书 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T3.平台名 = "京东" order by T1.购买人数 desc limit 1

extra pred: SELECT 书名, 作者, 类型 FROM 图书 WHERE 类型 = 'text' LIMIT 1
extra gold: select T2.类型, T2.作者 from 电子书 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T3.平台名 = "京东" order by T1.购买人数 desc limit 1

eval_err_num:144
extra pred: SELECT 电子书.书名, 电子书.平台id, 电子书.电子书售价, 电子书.购买人数 FROM 图书_with_平台 书籍 JOIN 电子书 ON 书籍.书名id = 电子书.书名id JOIN 平台 ON 书籍.平台id = 平台.平台id WHERE 书籍.类型 = 'text' LIMIT 1
extra gold: select T3.平台名, T1.电子书售价 from 电子书 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T2.书名 = (select T2.书名 from 电子书 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T3.平台名 = "京东" order by T1.购买人数 desc limit 1)

eval_err_num:145
hard pred: SELECT * FROM 图书 WHERE id IN (SELECT 图书id FROM 平台 WHERE 平台id IN (SELECT 平台id FROM 图书 WHERE 书名 IN (SELECT 书名id FROM 图书_平台 WHERE 平台id IN (SELECT 平台id FROM 图书_平台 WHERE 书名 IN (SELECT 书名id FROM 图书 WHERE 类型 = 'text'))) AND 年营业额 > 0)
hard gold: select T2.书名 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T3.平台名 = "天猫"

eval_err_num:146
hard pred: SELECT * FROM 图书 WHERE id IN (SELECT 图书id FROM 平台 WHERE 平台id IN (SELECT 平台id FROM 图书 WHERE 书名 IN (SELECT 书名id FROM 图书_平台 WHERE 平台id IN (SELECT 平台id FROM 图书_平台 WHERE 书名 IN (SELECT 书名id FROM 图书 WHERE 类型 = 'text'))) AND 年营业额 > 0) AND 是否自营 = '1')
hard gold: select T2.书名 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T3.平台名 = "天猫" AND T1.缺货 = "否"

eval_err_num:147
hard pred: SELECT * FROM 图书 WHERE id IN (SELECT 图书id FROM 平台 WHERE 平台id IN (SELECT 平台id FROM 图书_平台 WHERE 平台id IN (SELECT 平台id FROM 图书_平台 WHERE 书名 IN (SELECT 书名id FROM 图书 WHERE 类型 = 'text'))) AND 年营业额 > 0) AND 是否自营 = '1' AND 平台名 = '京东'
hard gold: select T2.书名 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T3.平台名 = "京东" AND T1.缺货 = "否"

eval_err_num:148
hard pred: SELECT评分 FROM 图书_平台 WHERE 书名id = (SELECT 书名id FROM 图书 WHERE 类型 = 'text' AND 出版社 = '淘宝') AND 平台id = (SELECT 平台id FROM 平台 WHERE 年营业额 > 0) AND 评分人数 = 1
hard gold: select T1.评分 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T3.平台名 = "京东" AND T1.缺货 = "否"

easy pred: SELECT * FROM 图书; SELECT * FROM 平台; SELECT * FROM 图书与平台
easy gold: select 平台名 from 平台 where 是否自营 = "是"

eval_err_num:149
medium pred: SELECT 营业额, COUNT(*) as 人数 FROM 图书; SELECT 营业额, COUNT(*) as 人数 FROM 平台; SELECT 营业额, COUNT(*) as 人数 FROM 图书与平台; SELECT 营业额, COUNT(*) as 人数 FROM 书籍; ORDER BY 营业额 DESC
medium gold: select 平台名, 年营业额 from 平台 where 是否自营 = "是" order by 年营业额 desc

eval_err_num:150
easy pred: SELECT 会员费 as 费用 FROM 平台; SELECT 会员费 as 费用 FROM 图书与平台; SELECT 会员费 as 费用 FROM 书籍
easy gold: select 会员费 from 平台 where 平台名 = "拼多多"

eval_err_num:151
extra pred: SELECT书名, 电子书售价 as 电子书售价, 购买人数 as 购买人数 FROM 书籍; SELECT 书名, 电子书售价 as 电子书售价, 购买人数 as 购买人数 FROM 图书与平台; SELECT 书名, 电子书售价 as 电子书售价, 购买人数 as 购买人数 FROM 平台; FROM 书籍, 书籍与平台, 平台, 书籍
extra gold: select T2.书名 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T3.平台名 = "拼多多" UNION select T6.书名 from 电子书 AS T4 JOIN 平台 AS T5 ON T4.平台id = T5.平台id JOIN 图书 AS T6 ON T4.书名id = T6.图书id where T5.平台名 = "拼多多"

eval_err_num:152
extra pred: SELECT 作者, 类型 FROM 书籍; SELECT 作者, 类型 FROM 图书与平台; SELECT 作者, 类型 FROM 平台; FROM 书籍, 书籍与平台, 平台, 书籍
extra gold: select T2.书名, T2.作者, T2.类型 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T3.平台名 = "拼多多" UNION select T6.书名, T6.作者, T6.类型 from 电子书 AS T4 JOIN 平台 AS T5 ON T4.平台id = T5.平台id JOIN 图书 AS T6 ON T4.书名id = T6.图书id where T5.平台名 = "拼多多"

eval_err_num:153
hard pred: SELECT 平台名 FROM 图书 INNER JOIN 平台 ON 图书.平台id = 平台.平台id WHERE 书名 = '巴菲特的估值逻辑'
hard gold: select T3.平台名 from 电子书 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T2.书名 = "巴菲特的估值逻辑"

eval_err_num:154
medium pred: SELECT MAX(电子书售价) AS MAX_电子书售价, MIN(电子书售价) AS MIN_电子书售价 FROM 电子书 WHERE 书名 = '巴菲特的估值逻辑' GROUP BY 书名 ORDER BY MAX_电子书售价 DESC, MIN_电子书售价 DESC
medium gold: select T1.电子书售价, T1.会员价格 from 电子书 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id where T2.书名 = "巴菲特的估值逻辑"

eval_err_num:155
medium pred: SELECT 电子书售价 - 会员价格 AS相差 FROM 电子书 WHERE 书名 = '巴菲特的估值逻辑' GROUP BY 书名 ORDER BY相差 DESC, 电子书售价 DESC LIMIT 1
medium gold: select T1.电子书售价 - T1.会员价格 from 电子书 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id where T2.书名 = "巴菲特的估值逻辑"

eval_err_num:156
hard pred: SELECT 会员费 AS 会员费, 电子书售价 - 会员费 AS 相差 FROM 电子书 WHERE 书名 = '巴菲特的估值逻辑' GROUP BY 电子书售价, 会员费 ORDER BY 相差 DESC, 会员费 DESC LIMIT 1
hard gold: select T3.平台名, T3.会员费 from 电子书 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T2.书名 = "巴菲特的估值逻辑"

eval_err_num:157
medium pred: SELECT 电视剧收视.收视率, 电视剧.剧名, 电视剧收视.平台id FROM 电视剧收视 INNER JOIN 电视剧 ON 电视剧收视.平台id = 电视剧.平台id INNER JOIN 电视台 ON 电视剧收视.电视台id = 电视台.电视台id WHERE 电视剧收视.时间段 = ( SELECT 时间段 FROM 电视节目 WHERE 电视节目.出品公司 = '出品公司' AND 电视节目.发行公司 = '发行公司' ORDER BY 收视率 DESC LIMIT 1 )
medium gold: select T2.名称, avg(收视率) from 电视剧收视 AS T1 JOIN 电视台 AS T2 ON T2.电视台id = T1.平台id group by T2.名称

eval_err_num:158
extra pred: SELECT 电视剧.剧名, 电视剧.出品公司, 电视剧.发行公司, 时间段, 电视剧收视.收视率 FROM 电视剧 INNER JOIN 电视剧收视 ON 电视剧.剧名 = 电视剧收视.剧名 AND 电视剧.出品公司 = 电视剧收视.出品公司 AND 电视剧.发行公司 = 电视剧收视.发行公司 INNER JOIN 电视台 ON 电视剧收视.平台id = 电视剧收视.平台id WHERE 电视剧收视.时间段 = ( SELECT 时间段 FROM 电视节目 WHERE 电视节目.出品公司 = '出品公司' AND 电视节目.发行公司 = '发行公司' ORDER BY 收视率 DESC LIMIT 1 )
extra gold: select T1.时间段, T2.剧名 from 电视剧收视 AS T1 JOIN 电视剧 AS T2 ON T1.电视剧id = T2.电视剧编号 JOIN 电视台 AS T3 ON T1.平台id = T3.电视台id where T3.名称 like "北京%"

eval_err_num:159
extra pred: SELECT 电视剧.剧名, 电视剧.出品公司, 电视剧.发行公司, 电视台.平台id, 电视台.开播时间, 电视台.上线时间, 电视剧收视.收视率 FROM 电视剧 INNER JOIN 电视剧收视 ON 电视剧.剧名 = 电视剧收视.剧名 AND 电视剧.出品公司 = 电视剧收视.出品公司 AND 电视剧.发行公司 = 电视剧收视.发行公司 INNER JOIN 电视台 ON 电视剧收视.平台id = 电视台.平台id INNER JOIN 电视节目 ON 电视剧收视.平台id = 电视节目.平台id WHERE 电视台.开播时间 = ( SELECT 开播时间 FROM 电视台 WHERE 电视台.隶属机构 = '隶属机构' ORDER BY 开播时间 DESC LIMIT 1 )
extra gold: select T6.名称 from 电视剧收视 AS T4 JOIN 电视剧 AS T5 ON T4.电视剧id = T5.电视剧编号 JOIN 电视台 AS T6 ON T4.平台id = T6.电视台id where T6.名称 not like "北京%" AND T5.剧名 = (select T2.剧名 from 电视剧收视 AS T1 JOIN 电视剧 AS T2 ON T1.电视剧id = T2.电视剧编号 JOIN 电视台 AS T3 ON T1.平台id = T3.电视台id where T3.名称 like "北京%")

eval_err_num:160
medium pred: SELECT首播平台id FROM 电视剧 WHERE 出品时间 = '2022-02-18 10:00:00' AND 出品公司 = 'TVB'
medium gold: select T2.名称 from 电视剧 AS T1 JOIN 电视台 AS T2 ON T1.首播平台id = T2.电视台id where T1.剧名 = "破冰行动"

hard pred: SELECT * FROM 电视台 WHERE 开播时间 = '2022-02-18 10:00:00' AND 上线时间 = '2022-02-18 10:00:00' AND 隶属机构 = 'TVB'
hard gold: select distinct T6.名称 from 电视剧收视 AS T4 JOIN 电视剧 AS T5 ON T4.电视剧id = T5.电视剧编号 JOIN 电视台 AS T6 ON T4.平台id = T6.电视台id where T5.剧名 = "破冰行动"

eval_err_num:161
hard pred: SELECT 时间段, 电视剧收视表的收视率 FROM 电视剧收视 WHERE 电视剧id = (SELECT 电视剧id FROM 电视剧收视 WHERE 平台id = 'TVB' AND 时间段 = '2022-02-19 11:00:00') order by 收视率 DESC limit 1
hard gold: select T6.名称, T4.时间段 from 电视剧收视 AS T4 JOIN 电视剧 AS T5 ON T4.电视剧id = T5.电视剧编号 JOIN 电视台 AS T6 ON T4.平台id = T6.电视台id where T5.剧名 = "破冰行动"

eval_err_num:162
extra pred: SELECT 电视剧id, 收视率 FROM 电视剧收视 WHERE 平台id = 'TVB' AND 时间段 = '2022-02-19 11:00:00' AND 时间段 = '2022-02-20 11:00:00' AND (SELECT COUNT(*) FROM 电视剧收视 WHERE 电视剧id = 电视剧表的id AND 平台id = 'TVB' AND 时间段 = '2022-02-19 11:00:00') > (SELECT COUNT(*) FROM 电视剧收视 WHERE 电视剧id = 电视剧表的id AND 平台id = 'TVB' AND 时间段 = '2022-02-20 11:00:00')
extra gold: select T6.名称, T4.时间段 from 电视剧收视 AS T4 JOIN 电视剧 AS T5 ON T4.电视剧id = T5.电视剧编号 JOIN 电视台 AS T6 ON T4.平台id = T6.电视台id where T5.剧名 = "破冰行动" order by T4.收视率 desc limit 1

extra pred: SELECT * FROM 电视台 WHERE 开播时间 = '2022-02-18 10:00:00' AND 上线时间 = '2022-02-18 10:00:00' AND 隶属机构 = '浙江台'
extra gold: select T5.剧名 from 电视剧收视 AS T4 JOIN 电视剧 AS T5 ON T4.电视剧id = T5.电视剧编号 JOIN 电视台 AS T6 ON T4.平台id = T6.电视台id where T5.剧名 != "破冰行动" AND T6.名称 like "浙江%"

eval_err_num:163
hard pred: SELECT 出品公司, 发行公司 FROM 电视剧收视 cross join 电视剧 cross join 电视台 where 首播平台id in (SELECT 电视台id FROM 电视台) and 出品公司 in (SELECT 公司 text FROM 出品公司) and 发行公司 in (SELECT 公司 text FROM 发行公司) order by 首播时间, 出品公司
hard gold: select 出品公司 from 电视剧 INTERSECT select 发行公司 from 电视剧

eval_err_num:164
easy pred: SELECT 电视剧编号, 剧名 FROM 电视剧收视 cross join 电视剧 cross join 电视台 where 出品公司 in (SELECT 公司 text FROM 出品公司) and 发行公司 in (SELECT 公司 text FROM 发行公司) and 出品公司 + 发行公司 = (SELECT MAX(出品公司) + MAX(发行公司) FROM 电视剧收视) order by 剧名, 出品公司
easy gold: select 剧名 from 电视剧 where 出品公司 = 发行公司

eval_err_num:165
medium pred: SELECT 电视剧编号, 出品时间, 发行时间 FROM 电视剧收视 cross join 电视剧 cross join 电视台 where 首播平台id in (SELECT 电视台id FROM 电视台) and 首播时间 in (SELECT time FROM 电视剧 WHERE 剧名 = '神鬼奇兵') and 首播时间 in (SELECT time FROM 电视剧 WHERE 剧名 = '神鬼奇兵') and 出品公司 in (SELECT 公司 text FROM 出品公司) and 发行公司 in (SELECT 公司 text FROM 发行公司) order by 电视剧编号, 出品时间, 发行时间
medium gold: select 剧名, 出品时间 from 电视剧 where 出品公司 = 发行公司

eval_err_num:166
medium pred: SELECT 首播平台id, 首播时间 FROM 电视剧收视 cross join 电视剧 cross join 电视台 where 首播平台id in (SELECT 电视台id FROM 电视台) and 首播时间 in (SELECT time FROM 电视剧 WHERE 剧名 = '神鬼奇兵') and 首播平台id in (SELECT 电视台id FROM 电视台) order by 首播平台id, 首播时间
medium gold: select T1.剧名, T2.名称 from 电视剧 AS T1 JOIN 电视台 AS T2 ON T1.首播平台id = T2.电视台id where T1.出品公司 = T1.发行公司

eval_err_num:167
easy pred: SELECT 出品公司, COUNT(*) AS 数量 FROM 电视剧 GROUP BY 出品公司 HAVING 数量 > 1
easy gold: select distinct 出品公司 from 电视剧

eval_err_num:168
medium pred: SELECT 出品公司, SUM(出品时间) AS 数量 FROM 电视剧 GROUP BY 出品公司 HAVING 数量 > 1
medium gold: select 出品公司, count(*) from 电视剧 group by 出品公司

eval_err_num:169
medium pred: SELECT 收视率, COUNT(*) AS 数量 FROM 电视剧收视 GROUP BY 收视率 HAVING COUNT(*) > 1
medium gold: select T2.出品公司, avg(T1.收视率) from 电视剧收视 AS T1 JOIN 电视剧 AS T2 ON T1.电视剧id = T2.电视剧编号 group by T2.出品公司

eval_err_num:170
easy pred: SELECT * FROM "球队" WHERE id IN ( SELECT 球队id FROM "篮球运动员" WHERE name = 'NBA总冠军' LIMIT 10 )
easy gold: select 中文队名 from 球队

eval_err_num:171
medium pred: SELECT赛区, 冠军次数 FROM "球队" WHERE id IN ( SELECT id FROM "篮球运动员" WHERE name = 'NBA总冠军' LIMIT 10 )
medium gold: select 中文队名,赛区 from 球队

eval_err_num:172
medium pred: SELECT联盟, 球队id, 冠军次数 FROM "球队" WHERE id IN ( SELECT id FROM "篮球运动员" WHERE name = 'NBA总冠军' LIMIT 10 )
medium gold: select 中文队名,所属联盟 from 球队

eval_err_num:173
medium pred: SELECT联盟, 球队id, 冠军次数 FROM "球队" WHERE id IN ( SELECT id FROM "篮球运动员" WHERE name = 'NBA总冠军' LIMIT 10 )
medium gold: select 中文队名,夺冠次数 from 球队

eval_err_num:174
easy pred: SELECT t1.球员id, t2.参加选秀年 FROM "篮球运动员" t1 INNER JOIN "NBA总冠军" t2 ON t1.球员id = t2.球队id INNER JOIN "time" t3 ON t2.赛季 = t3.时间 WHERE t3.时间 = '1984-01-01' AND t1.是否状元 = '0'
easy gold: select 参加选秀年 from 篮球运动员 where 中文名 = "詹姆斯"

eval_err_num:175
easy pred: SELECT t1.球员id, t2.就读的学校 FROM "篮球运动员" t1 INNER JOIN "NBA总冠军" t2 ON t1.球员id = t2.球队id INNER JOIN "text" t3 ON t2.就读的学校 = t3.学校名 WHERE t3.学校名 = 'Harlem High School' AND t1.是否状元 = '0'
easy gold: select 毕业院校 from 篮球运动员 where 中文名 = "詹姆斯"

eval_err_num:176
easy pred: SELECT t1.球员id, t2.是否状元 FROM "篮球运动员" t1 INNER JOIN "NBA总冠军" t2 ON t1.球员id = t2.球队id INNER JOIN "text" t3 ON t2.是否状元 = t3.学校名 WHERE t3.学校名 = 'Harlem High School'
easy gold: select 是否状元 from 篮球运动员 where 中文名 = "詹姆斯"

eval_err_num:177
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 获得球队 from 篮球运动员 where 中文名 = "詹姆斯"

eval_err_num:178
easy pred: CREATE TABLE "MVP记录" ( "赛季" number, "球员id" number, "所属球队" TEXT, PRIMARY KEY ("球员id") ) CREATE TABLE "篮球运动员" ( "球员id" text, "中文名" text, "参加选秀年" time, "是否状元" binary, "获得球队" text, "毕业院校" text, "国籍" TEXT, PRIMARY KEY ("球员id") )
easy gold: select T2.中文名 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id

eval_err_num:179
medium pred: SELECT * FROM "NBA总冠军" WHERE "球队id" = ( SELECT "球队id" FROM "MVP记录" ORDER BY "赛季" DESC LIMIT 1 )
medium gold: select T2.中文名,T3.中文队名 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id JOIN 球队 AS T3 ON T1.所属球队 = T3.球队id

eval_err_num:180
easy pred: SELECT * FROM "NBA总冠军" WHERE "球队id" = ( SELECT "球队id" FROM "MVP记录" ORDER BY "赛季" DESC LIMIT 1 ) AND "总教练" = '冠军球队'
easy gold: select 总教练 from NBA总冠军

eval_err_num:181
easy pred: SELECT * FROM "NBA总冠军" WHERE "球队id" IN (SELECT "球队id" FROM "篮球运动员" WHERE "球员id" = (SELECT "球员id" FROM "篮球运动员" WHERE "获得球队" = '球队的赛季' AND "毕业院校" = '球队的年份' AND "国籍" = '球队的国家' LIMIT 1)) ON DELETE NOACTION ON UPDATE NOACTION
easy gold: select T2.中文队名 from NBA总冠军 AS T1 JOIN 球队 AS T2 ON T1.球队id = T2.球队id

eval_err_num:182
medium pred: SELECT * FROM "NBA总冠军" WHERE "赛季" IN ( SELECT "赛季" FROM "MVP记录" WHERE "球员id" = ( SELECT "球员id" FROM "篮球运动员" WHERE "获得球队" = '球队的赛季' AND "毕业院校" = '球队的年份' AND "国籍" = '球队的国家' LIMIT 1 ) )
medium gold: select T2.中文队名,T1.赛季 from NBA总冠军 AS T1 JOIN 球队 AS T2 ON T1.球队id = T2.球队id

eval_err_num:183
medium pred: SELECT * FROM "NBA总冠军" WHERE "总教练" IN ( SELECT "总教练" FROM "篮球运动员" WHERE "获得球队" = '球队的赛季' AND "毕业院校" = '球队的年份' AND "国籍" = '球队的国家' LIMIT 1 )
medium gold: select T2.中文队名,T1.总教练 from NBA总冠军 AS T1 JOIN 球队 AS T2 ON T1.球队id = T2.球队id

eval_err_num:184
extra pred: SELECT 书籍.书名, 出版图书.书名, 网络小说.书名, 出版图书.评分, 出版图书.评价人数, 出版图书.字数, 出版图书.点击数, 网络小说.类型, 网络小说.状态, 网络小说.价格,畅销榜.周排名,畅销榜.月排名,畅销榜.总排名 FROM 书籍 INNER JOIN 出版图书 ON 书籍.书名 = 出版图书.书名 INNER JOIN 网络小说 ON 书籍.书名 = 网络小说.书名 INNER JOIN 畅销榜 ON 出版图书.出版图书id = 畅销榜.出版图书id ON DELETE > 0 ON UPDATE > 0
extra gold: select T1.书名 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.姓名 = "吱吱" UNION select T3.书名 from 网络小说 AS T3 JOIN 作者 AS T4 ON T3.作者id = T4.作者id where T4.姓名 = "吱吱"

eval_err_num:185
easy pred: SELECT 作者.姓名, 作者.年龄 FROM作者 INNER JOIN 出版图书 ON作者.作者id = 出版图书.作者id INNER JOIN 网络小说 ON作者.作者id = 网络小说.作者id INNER JOIN 畅销榜 ON出版图书.出版图书id = 畅销榜.出版图书id ON DELETE > 0
easy gold: select 年龄 from 作者 where 姓名 = "吱吱"

eval_err_num:186
extra pred: SELECT 网络小说.书名, 网络小说.评分 FROM 网络小说 INNER JOIN 畅销榜 ON 网络小说.网络图书id = 畅销榜.网络图书id ORDER BY 网络小说.评分 DESC LIMIT 1
extra gold: select T3.书名 from 网络小说 AS T3 JOIN 作者 AS T4 ON T3.作者id = T4.作者id where T4.姓名 = "吱吱" order by T3.评分 desc limit 1

eval_err_num:187
extra pred: SELECT畅销榜.周排名,畅销榜.月排名,畅销榜.总排名 FROM畅销榜 INNER JOIN 畅销榜 ON畅销榜.网络小说id =畅销榜.网络小说id ORDER BY畅销榜.总排名 DESC LIMIT 100
extra gold: select T5.总排名 from 网络小说 AS T3 JOIN 作者 AS T4 ON T3.作者id = T4.作者id JOIN 畅销榜 AS T5 ON T5.网络小说id = T3.网络图书id where T4.姓名 = "吱吱" order by T3.评分 desc limit 1

eval_err_num:188
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T3.价格 from 网络小说 AS T3 JOIN 作者 AS T4 ON T3.作者id = T4.作者id where T4.姓名 = "吱吱" order by T3.评分 desc limit 1

eval_err_num:189
easy pred: SELECT * FROM "网络小说" WHERE 状态 = '完结'
easy gold: select 书名 from 网络小说 where 状态 = "完结"

eval_err_num:190
medium pred: SELECT作者id FROM "网络小说" WHERE 状态 = '完结' AND 书名 = '穿越'
medium gold: select T1.书名, T2.姓名 from 网络小说 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T1.状态 = "完结"

eval_err_num:191
medium pred: SELECT * FROM "网络小说" WHERE 状态 = '完结' AND 价格 >= 10000 ORDER BY 价格 DESC LIMIT 10
medium gold: select T2.书名, T1.周排名 from 畅销榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id where T2.状态 = "完结"

eval_err_num:192
medium pred: SELECT * FROM "网络小说" WHERE 状态 = '完结' AND 价格 < 10000 ORDER BY 价格 ASC LIMIT 10
medium gold: select T2.书名, T1.周排名 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id where T2.状态 = "完结"

eval_err_num:193
easy pred: SELECT * FROM "网络小说" WHERE 状态 = '完结' AND 书名 = '三生三世十里桃花'
easy gold: select 价格 from 网络小说 where 书名 = "三生三世十里桃花"

eval_err_num:194
easy pred: SELECT 书名, 类型 FROM "出版图书" WHERE 作者id = (SELECT 作者id FROM "作者" WHERE name = '人类简史' AND age = 18)
easy gold: select 类型 from 出版图书 where 书名 = "人类简史"

eval_err_num:195
easy pred: SELECT 点击数 FROM "出版图书" WHERE 书名 = '人类简史' AND 出版图书id = (SELECT 出版图书id FROM "网络小说" WHERE 书名 = '人类简史' AND 评价人数 = 1 ORDER BY 点击 DESC LIMIT 1)
easy gold: select 点击数 from 出版图书 where 书名 = "人类简史"

eval_err_num:196
medium pred: SELECT 作家id FROM "作者" WHERE name = '人类简史' AND age = 18 ORDER BY 姓名 ASC LIMIT 1
medium gold: select T2.姓名 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T1.书名 = "人类简史"

eval_err_num:197
easy pred: NO SQL FOUND
easy gold: select 姓名 from 作者

eval_err_num:198
hard pred: NO SQL FOUND
hard gold: select 姓名 from 作者 where 年龄 = (select min(年龄) from 作者)

eval_err_num:199
extra pred: NO SQL FOUND
extra gold: select T1.书名 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.年龄 = (select min(年龄) from 作者)

eval_err_num:200
extra pred: NO SQL FOUND
extra gold: select T1.类型 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.年龄 = (select min(年龄) from 作者)

eval_err_num:201
medium pred: NO SQL FOUND
medium gold: select T1.书名 from 网络小说 AS T1 JOIN 畅销榜 AS T2 ON T1.网络图书id = T2.网络小说id where T2.周排名 = "1"

eval_err_num:202
medium pred: NO SQL FOUND
medium gold: select T1.书名 from 网络小说 AS T1 JOIN 畅销榜 AS T2 ON T1.网络图书id = T2.网络小说id where T2.月排名 = "1"

eval_err_num:203
medium pred: NO SQL FOUND
medium gold: select T1.书名 from 网络小说 AS T1 JOIN 畅销榜 AS T2 ON T1.网络图书id = T2.网络小说id where T2.总排名 = "1"

eval_err_num:204
hard pred: NO SQL FOUND
hard gold: select T3.姓名 from 网络小说 AS T1 JOIN 畅销榜 AS T2 ON T1.网络图书id = T2.网络小说id JOIN 作者 AS T3 ON T3.作者id = T1.作者id where T2.总排名 = "1"

eval_err_num:205
medium pred: SELECT 网络小说id AS 书名, SUM(价格) AS 评分 FROM 收藏榜 WHERE 周排名 = (SELECT 周排名 FROM畅销榜 WHERE 网络小说id = 网络小说id_1) GROUP BY 网络小说id ORDER BY 周排名 DESC LIMIT 1
medium gold: select T2.书名 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id where T1.周排名 = "1"

eval_err_num:206
medium pred: SELECT 网络小说id AS 书名, SUM(价格) AS 评分 FROM 收藏榜 WHERE 月排名 = (SELECT 月排名 FROM畅销榜 WHERE 网络小说id = 网络小说id_1) GROUP BY 网络小说id ORDER BY 月排名 ASC LIMIT 1
medium gold: select T2.书名 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id where T1.月排名 = "1"

eval_err_num:207
medium pred: SELECT 网络小说id AS 书名, SUM(价格) AS 评分 FROM 收藏榜 WHERE 总排名 = (SELECT 总排名 FROM畅销榜 WHERE 网络小说id = 网络小说id_1) GROUP BY 网络小说id ORDER BY 总排名 DESC LIMIT 1
medium gold: select T2.书名 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id where T1.总排名 = "1"

eval_err_num:208
hard pred: SELECT 作者.姓名, 作者.年龄 FROM作者 a JOIN出版图书 b ON a.作者id = b.作者id WHERE b.书名 = '流浪的蛙' ORDER BY a.姓名, a.年龄 LIMIT 1
hard gold: select T3.姓名 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id JOIN 作者 AS T3 ON T2.作者id = T3.作者id where T1.总排名 = "1"

eval_err_num:209
hard pred: SELECT age FROM作者 WHERE name = '作者'
hard gold: select T3.年龄 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id JOIN 作者 AS T3 ON T2.作者id = T3.作者id where T1.总排名 = "1"

eval_err_num:210
easy pred: SELECT 网络小说.书名,作者.姓名,作者.年龄, 出版图书.书名, 出版图书.评分, 出版图书.评价人数, 出版图书.字数, 出版图书.点击数, 网络小说.类型, 网络小说.状态, 网络小说.价格,畅销榜.周排名,畅销榜.月排名,畅销榜.总排名 FROM 网络小说 INNER JOIN畅销榜 ON 网络小说.网络图书id =畅销榜.网络小说id INNER JOIN作者 ON 网络小说.作者id =作者.作者id INNER JOIN 出版图书 ON 出版图书.出版图书id =作者.作者id ON DELETE NOACTION ON UPDATE NOACTION
easy gold: select 书名 from 网络小说

eval_err_num:211
medium pred: SELECT作者.姓名,作者.年龄, 出版图书.书名, 出版图书.评分, 出版图书.评价人数, 出版图书.字数, 出版图书.点击数, 网络小说.类型, 网络小说.状态, 网络小说.价格,畅销榜.周排名,畅销榜.月排名,畅销榜.总排名 FROM作者 INNER JOIN 出版图书 ON作者.作者id = 出版图书.出版图书id INNER JOIN 网络小说 ON 网络小说.网络图书id = 出版图书.出版图书id INNER JOIN畅销榜 ON 网络小说.网络图书id =畅销榜.网络小说id ON DELETE NOACTION ON UPDATE NOACTION
medium gold: select T1.书名,T2.姓名 from 网络小说 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id

eval_err_num:212
hard pred: SELECT书名,评分 FROM 网络小说 INNER JOIN畅销榜 ON 网络小说.网络图书id =畅销榜.网络小说id WHERE评分 = ( SELECT MAX(评分) FROM 网络小说 ) ON DELETE NOACTION ON UPDATE NOACTION
hard gold: select 书名 from 网络小说 where 评分 = (select max(评分) from 网络小说)

eval_err_num:213
hard pred: SELECT 网络小说.书名, 网络小说.评分,畅销榜.周排名,畅销榜.月排名,畅销榜.总排名 FROM 网络小说 INNER JOIN畅销榜 ON 网络小说.网络图书id =畅销榜.网络小说id WHERE 评分 = ( SELECT MAX(评分) FROM 网络小说 ) ON DELETE NOACTION ON UPDATE NOACTION
hard gold: select 评分 from 网络小说 where 评分 = (select max(评分) from 网络小说)

eval_err_num:214
hard pred: SELECT 网络小说.书名, 网络小说.状态 FROM 网络小说 INNER JOIN 状态表 ON 网络小说.网络图书id = 状态表.网络图书id WHERE 状态 = '收藏'
hard gold: select 状态 from 网络小说 where 评分 = (select max(评分) from 网络小说)

eval_err_num:215
hard pred: SELECT * FROM出版图书 WHERE点击数 = (SELECT MAX(点击数) FROM 网络小说 WHERE 网络小说id = 出版图书id)
hard gold: select 书名 from 出版图书 where 点击数 = (select max(点击数) from 出版图书)

eval_err_num:216
hard pred: SELECT * FROM出版图书 WHERE点击数 = (SELECT MAX(点击数) FROM 网络小说 WHERE 网络小说id = 出版图书id)
hard gold: select 点击数 from 出版图书 where 点击数 = (select max(点击数) from 出版图书)

eval_err_num:217
hard pred: NO SQL FOUND
hard gold: select 类型 from 出版图书 where 点击数 = (select max(点击数) from 出版图书)

eval_err_num:218
easy pred: SELECT * FROM "网络小说" WHERE 所有权 = 'Y' AND 状态 = '已完成'
easy gold: select 书名 from 网络小说 where 状态 = "完结"

eval_err_num:219
hard pred: SELECT 价格 FROM "网络小说" WHERE 所有权 = 'Y' AND 状态 = '已完成' ORDER BY 价格 DESC LIMIT 1
hard gold: select 书名 from 网络小说 where 状态 = "完结" order by 价格 limit 1

eval_err_num:220
hard pred: SELECT 价格 FROM "网络小说" WHERE 所有权 = 'Y' AND 状态 = '已完成' ORDER BY 价格 ASC LIMIT 1
hard gold: select 价格 from 网络小说 where 状态 = "完结" order by 价格 limit 1

eval_err_num:221
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T2.姓名 from 网络小说 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T1.状态 = "完结" order by 价格 limit 1

eval_err_num:222
hard pred: SELECT 评估人 FROM "出版图书" WHERE 出版图书id = '82' AND 评价人数 = '1' AND 评分 > 2
hard gold: select 评分 from 网络小说 where 状态 = "完结" order by 价格 limit 1

hard pred: SELECT * FROM 网络小说 WHERE 评分 > (SELECT 评分 FROM 出版图书 WHERE 书名 = '书名' AND 作者id = '作者id') AND 类型 = '类型'
hard gold: select 书名 from 出版图书 where 评分 = (select max(评分) from 出版图书)

eval_err_num:223
extra pred: NO SQL FOUND
extra gold: select T2.姓名 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T1.评分 = (select max(评分) from 出版图书)

eval_err_num:224
extra pred: NO SQL FOUND
extra gold: select T2.年龄 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T1.评分 = (select max(评分) from 出版图书)

eval_err_num:225
medium pred: NO SQL FOUND
medium gold: select 名称 from 台风 order by 经济损失 desc limit 1

eval_err_num:226
medium pred: NO SQL FOUND
medium gold: select 经济损失,登陆地点 from 台风 order by 经济损失 desc limit 1

eval_err_num:227
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select 省份 from 台风影响的中国省份 where 台风id = (select 台风id from 台风 order by 经济损失 desc limit 1)

eval_err_num:228
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select 国家 from 台风影响的国家 where 台风id = (select 台风id from 台风 order by 经济损失 desc limit 1)

eval_err_num:229
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select 国家,经济损失 from 台风影响的国家 where 台风id = (select 台风id from 台风 order by 经济损失 desc limit 1)

eval_err_num:230
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 名称 from 台风 order by 登陆时间 asc

eval_err_num:231
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 名称,登陆时间 from 台风 order by 登陆时间 asc

eval_err_num:232
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select 国家 from 台风影响的国家 where 台风id = (select 台风id from 台风 order by 登陆时间 desc limit 1)

eval_err_num:233
hard pred: SELECT * FROM "台风" WHERE DATE(登陆时间) = (SELECT DATE(最早一次登陆时间) FROM "台风" AS t1 WHERE t1.台风id = '台风id' ORDER BY DATE(登陆时间) DESC LIMIT 1)
hard gold: select 国家 from 台风影响的国家 where 台风id = (select 台风id from 台风 order by 登陆时间 asc limit 1)

eval_err_num:234
extra pred: SELECT t1.name, t1.登陆地点, t1.登陆时间, t1.登陆强度, t1.死亡人数, t1.失踪人数, t2.经济损失 FROM "台风" t1 JOIN "台风影响的国家" t2 ON t1.台风id = t2.台风id WHERE t2.经济损失 = ( SELECT MAX(经济损失) FROM "台风影响的国家" WHERE "台风id" = t2.台风id ) ORDER BY 经济损失 DESC
extra gold: select t2.名称 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where t1.经济损失 = (select max(经济损失) from 台风影响的国家)

eval_err_num:235
extra pred: SELECT t1.name, t1.登陆地点 FROM "台风" t1 JOIN "台风影响的中国省份" t2 ON t1.台风id = t2.台风id JOIN "台风影响的国家" t3 ON t1.台风id = t3.台风id WHERE t2.省份 = ( SELECT 省份 FROM "台风影响的中国省份" WHERE "台风id" = t2.台风id ) AND t3.国家 = ( SELECT 国家 FROM "台风影响的国家" WHERE "台风id" = t3.台风id ) AND t1.登陆地点 = t3.国家 ORDER BY t1.name
extra gold: select t2.名称,t2.登陆地点 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where t1.经济损失 = (select max(经济损失) from 台风影响的国家)

eval_err_num:236
extra pred: SELECT COUNT(*) as死亡人数 FROM "台风影响的中国省份" t1 JOIN "台风影响的国家" t2 ON t1.台风id = t2.台风id JOIN "台风" t3 ON t1.台风id = t3.台风id WHERE t2.国家 = ( SELECT 国家 FROM "台风影响的国家" WHERE "台风id" = t2.台风id ) AND t3.台风id = t2.台风id GROUP BY t1.省份, t2.国家, t3.台风id ORDER BY死亡人数 DESC
extra gold: select sum(死亡人数) from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where t1.经济损失 = (select max(经济损失) from 台风影响的国家)

eval_err_num:237
medium pred: SELECT appname, appid, COUNT(*) AS download_count FROM "应用商店" AS app WHERE appid IN (SELECT appid FROM "软件") GROUP BY appid ORDER BY download_count DESC LIMIT 1
medium gold: select 商店名 from 应用商店 order by 应用软件数 desc limit 1

eval_err_num:238
extra pred: SELECT country FROM "应用商店" AS app WHERE appid IN (SELECT appid FROM "软件") GROUP BY country ORDER BY COUNT(*) DESC LIMIT 1
extra gold: select T1.国家 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id where T2.商店名 = (select T3.商店名 from 应用商店 AS T3 order by T3.应用软件数 desc limit 1)

eval_err_num:239
extra pred: SELECT country, '允许用户购买应用程序' AS allowed_application_购买 FROM "应用商店" AS app WHERE appid IN (SELECT appid FROM "软件") FOREIGN KEY (appid) REFERENCES "软件" ("软件id") ON DELETE NOACTION ON UPDATE NOACTION
extra gold: select T1.国家 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id where T2.商店名 = (select T3.商店名 from 应用商店 AS T3 order by T3.应用软件数 desc limit 1) AND T1.用户是否可以购买应用程序 = "是"

eval_err_num:240
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T1.好评数 from 软件下载 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id JOIN 软件 AS T3 ON T1.软件id = T3.软件id where T2.商店名 = (select T4.商店名 from 应用商店 AS T4 order by T4.应用软件数 desc limit 1) AND T3.名称 = "滴滴打车"

eval_err_num:241
easy pred: SELECT * FROM "应用商店" WHERE "商店名" = '滴滴打车' AND "用户是否可以购买应用程序" = '1' AND "开发人员是否可以出售应用程序" = '0' SELECT * FROM "应用商店支持国家" WHERE "应用商店id" = '1' AND "国家" = '中国' SELECT * FROM "软件" WHERE "软件id" = '1' SELECT * FROM "软件下载" WHERE "应用商店id" = '1' AND "软件id" = '软件id'
easy gold: select 名称 from 软件 where 用途 = "打车"

eval_err_num:242
extra pred: SELECT AVG(下载量) FROM "应用商店" WHERE "商店名" = '滴滴打车' AND "用户是否可以购买应用程序" = '1' AND "开发人员是否可以出售应用程序" = '0' SELECT AVG(下载量) FROM "应用商店支持国家" WHERE "应用商店id" = '1' AND "国家" = '中国' SELECT AVG(下载量) FROM "软件" WHERE "软件id" = '1' SELECT AVG(下载量) FROM "软件下载" WHERE "应用商店id" = '1' AND "软件id" = '软件id'
extra gold: select avg(下载量) from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id where T2.名称 = (select T3.名称 from 软件 AS T3 where T3.用途 = "打车")

eval_err_num:243
extra pred: SELECT 商店名, 下载量 FROM "应用商店" WHERE 商店名 = '滴滴打车' AND 下载量 > 0 SELECT 商店名, 下载量 FROM "应用商店支持国家" WHERE 商店名 = '滴滴打车' AND 下载量 > 0 SELECT 商店名, 下载量 FROM "软件" WHERE 软件id = '1' AND 商店名 = '滴滴打车' SELECT 商店名, 下载量 FROM "软件下载" WHERE 商店名 = '滴滴打车' AND 软件id = '软件id'
extra gold: select T3.商店名 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id JOIN 应用商店 AS T3 ON T1.应用商店id = T3.商店id where T2.名称 = (select T4.名称 from 软件 AS T4 where T4.用途 = "打车")

eval_err_num:244
easy pred: SELECT COUNT(*) FROM "台风影响的中国省份" WHERE "台风id" IN (SELECT "台风id" FROM "台风" WHERE "名称" = '台风' AND "登陆地点" = '中国') AND "死亡人数" > 0; SELECT COUNT(*) FROM "台风影响的国家" WHERE "台风id" IN (SELECT "台风id" FROM "台风" WHERE "名称" = '台风' AND "登陆地点" = '国家') AND "经济损失" > 0; SELECT "死亡人数" AS "总共死亡人数" FROM "台风影响的中国省份" WHERE "台风id" IN (SELECT "台风id" FROM "台风" WHERE "名称" = '台风' AND "登陆地点" = '中国') AND "死亡人数" > 0; SELECT "经济损失" AS "总共经济损失" FROM "台风影响的国家" WHERE "台风id" IN (SELECT "台风id" FROM "台风" WHERE "名称" = '台风' AND "登陆地点" = '国家') AND "经济损失" > 0
easy gold: select sum(死亡人数) from 台风

eval_err_num:245
easy pred: SELECT SUM(经济损失) AS "经济损失" FROM "台风影响的国家" WHERE "台风id" IN (SELECT "台风id" FROM "台风" WHERE "名称" = '台风' AND "登陆地点" = '国家') AND "经济损失" > 0
easy gold: select sum(经济损失) from 台风

eval_err_num:246
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 名称 from 台风 order by 经济损失 desc limit 1

eval_err_num:247
hard pred: SELECT * FROM "台风影响的中国省份" WHERE id IN (SELECT id FROM "台风")
hard gold: select 省份 from 台风影响的中国省份 where 台风id = (select 台风id from 台风 order by 经济损失 desc limit 1)

eval_err_num:248
easy pred: SELECT 登陆时间 FROM "台风" WHERE 台风id = (SELECT 台风id FROM "台风影响的国家" WHERE 国家 = '澳大利亚')
easy gold: select 登陆时间 from 台风 where 名称 = "利奇马台风"

eval_err_num:249
medium pred: SELECT 登陆强度, 登陆地点 FROM "台风" WHERE 台风id = (SELECT 台风id FROM "台风影响的国家" WHERE 国家 = '澳大利亚' AND 经济损失 = 0)
medium gold: select 登陆强度,登陆地点 from 台风 where 名称 = "利奇马台风"

eval_err_num:250
medium pred: SELECT * FROM "台风影响的中国省份" WHERE 台风id IN (SELECT 台风id FROM "台风影响的国家" WHERE 国家 = '中国') AND 省份 = '省份名'
medium gold: select t2.省份 from 台风 as t1 join 台风影响的中国省份 as t2 on t1.台风id = t2.台风id where t1.名称 = "利奇马台风"

eval_err_num:251
medium pred: SELECT * FROM "台风影响的国家" WHERE 国家 = '澳大利亚' AND 经济损失 = 0
medium gold: select t2.国家 from 台风 as t1 join 台风影响的国家 as t2 on t1.台风id = t2.台风id where t1.名称 = "利奇马台风"

eval_err_num:252
medium pred: SELECT 经济损失 FROM "台风影响的国家" WHERE 国家 = '澳大利亚' AND 经济损失 = 0 DELETE FROM "台风影响的国家" WHERE 国家 = '澳大利亚'
medium gold: select t2.国家,t2.经济损失 from 台风 as t1 join 台风影响的国家 as t2 on t1.台风id = t2.台风id where t1.名称 = "利奇马台风"

eval_err_num:253
medium pred: SELECT 台风id, 名称, 登陆地点, 登陆时间, 登陆强度, 持续天数, 死亡人数, 经济损失 FROM "台风" WHERE 登陆地点 = '浙江省'
medium gold: select 名称 from 台风 where 登陆地点 like "%浙江%"

eval_err_num:254
medium pred: SELECT 台风id, 死亡数, 平均死亡数 FROM "台风" WHERE 影响地点 = '浙江省' GROUP BY 台风id ORDER BY 平均死亡数 DESC LIMIT 10
medium gold: select avg(死亡人数) from 台风 where 登陆地点 like "%浙江%"

eval_err_num:255
hard pred: SELECT 台风id, 省份 FROM "台风" GROUP BY 台风id ORDER BY 省份 DESC LIMIT 10
hard gold: select t1.名称,t2.省份 from 台风 as t1 join 台风影响的中国省份 as t2 on t1.台风id = t2.台风id where t1.登陆地点 like "%浙江%"

eval_err_num:256
extra pred: SELECT 台风id, 省份, 国家, 经济损失 FROM "台风" GROUP BY 台风id, 省份, 国家 ORDER BY 经济损失 DESC LIMIT 10
extra gold: select t1.名称,t2.省份,t3.国家 from 台风 as t1 join 台风影响的中国省份 as t2 on t1.台风id = t2.台风id join 台风影响的国家 as t3 on t3.台风id = t2.台风id where t1.登陆地点 like "%浙江%"

eval_err_num:257
easy pred: SELECT作者.姓名, 出版图书.书名, 出版图书.作者id, 网络小说.书名, 网络小说.评分, 网络小说.类型, 网络小说.状态, 网络小说.价格,畅销榜.周排名,畅销榜.月排名,畅销榜.总排名 FROM作者 JOIN出版图书 ON作者.作者id =出版图书.作者id JOIN 网络小说 ON出版图书.出版图书id =网络小说.网络图书id JOIN畅销榜 ON 网络小说.网络图书id =畅销榜.网络小说id ON DELETE = 0 ON UPDATE = 0
easy gold: select distinct T2.姓名 from 网络小说 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id

eval_err_num:258
easy pred: SELECT作者.姓名, 出版图书.书名, 出版图书.作者id, 网络小说.书名, 网络小说.评分, 网络小说.类型, 网络小说.状态, 书籍.书名, 书籍.作者id, 书籍.作者id FROM作者 JOIN 出版图书 ON作者.作者id =出版图书.作者id JOIN 网络小说 ON出版图书.出版图书id =网络小说.网络图书id JOIN 书籍 ON网络小说.网络图书id =书籍.书籍id ON DELETE = 0 ON UPDATE = 0
easy gold: select distinct T2.姓名 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id

eval_err_num:259
medium pred: SELECT作者.姓名, 出版图书.书名, 出版图书.作者id, 网络小说.书名, 网络小说.评分, 网络小说.类型, 网络小说.状态, 书籍.书名, 书籍.作者id, 书籍.作者id FROM作者 JOIN 出版图书 ON作者.作者id =出版图书.作者id JOIN 网络小说 ON出版图书.出版图书id =网络小说.网络图书id JOIN 书籍 ON网络小说.网络图书id =书籍.书籍id ON DELETE = 0 ON UPDATE = 0
medium gold: select distinct T2.姓名 from 网络小说 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id JOIN 出版图书 AS T3 ON T2.作者id = T3.作者id

eval_err_num:260
hard pred: SELECT作者.姓名, 出版图书.书名, 出版图书.作者id, 网络小说.书名, 网络小说.评分, 网络小说.类型, 网络小说.状态, 书籍.书名, 书籍.作者id, 书籍.作者id FROM作者 JOIN 出版图书 ON作者.作者id =出版图书.作者id JOIN 网络小说 ON出版图书.出版图书id =网络小说.网络图书id JOIN 书籍 ON网络小说.网络图书id =书籍.书籍id ON DELETE = 0 ON UPDATE = 0
hard gold: select count(*) from 出版图书 where 作者id in (select distinct T2.作者id from 网络小说 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id JOIN 出版图书 AS T3 ON T2.作者id = T3.作者id)

eval_err_num:261
hard pred: SELECT作者.姓名, 出版图书.书名, 出版图书.作者id, 网络小说.书名, 网络小说.评分, 网络小说.类型, 网络小说.状态, 书籍.书名, 书籍.作者id, 书籍.作者id FROM作者 JOIN 出版图书 ON作者.作者id =出版图书.作者id JOIN 网络小说 ON出版图书.出版图书id =网络小说.网络图书id JOIN 书籍 ON网络小说.网络图书id =书籍.书籍id ON DELETE = 0 ON UPDATE = 0
hard gold: select count(*) from 网络小说 where 作者id in (select distinct T2.作者id from 网络小说 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id JOIN 出版图书 AS T3 ON T2.作者id = T3.作者id)

eval_err_num:262
hard pred: NO SQL FOUND
hard gold: select T2.书名 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id order by T1.总排名 desc limit 1

eval_err_num:263
extra pred: NO SQL FOUND
extra gold: select T3.姓名 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id JOIN 作者 AS T3 ON T2.作者id = T3.作者id order by T1.总排名 desc limit 1

eval_err_num:264
medium pred: SELECT 网络小说.书名, 网络小说.收藏量 FROM 网络小说 INNER JOIN 畅销榜 ON 网络小说.网络图书id = 畅销榜.网络小说id INNER JOIN 畅销榜 ON 畅销榜.周排名 = 网络小说.周排名 WHERE 畅销榜.类型 = '书籍' GROUP BY 网络小说.书名, 网络小说.收藏量 ORDER BY 收藏量 DESC LIMIT 10
medium gold: select T2.书名 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id where T1.总排名 <= 10

eval_err_num:265
hard pred: SELECT 网络小说.书名, 网络小说.收藏量 FROM 网络小说 INNER JOIN 畅销榜 ON 网络小说.网络图书id = 畅销榜.网络小说id INNER JOIN 畅销榜 ON 畅销榜.周排名 = 网络小说.周排名 WHERE 畅销榜.类型 = '书籍' GROUP BY 网络小说.书名, 网络小说.收藏量 ORDER BY 收藏量 DESC LIMIT 10
hard gold: select T2.书名 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id where T1.总排名 <= 10 order by T2.书名

eval_err_num:266
hard pred: SELECT 网络小说.书名, 网络小说.收藏量 FROM 网络小说 INNER JOIN 畅销榜 ON 网络小说.网络图书id = 畅销榜.网络小说id INNER JOIN 畅销榜 ON 畅销榜.周排名 = 网络小说.周排名 WHERE 畅销榜.类型 = '书籍' GROUP BY 网络小说.书名, 网络小说.收藏量 HAVING COUNT(*) > 1
hard gold: select count(T2.书名) from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id where T1.总排名 <= 10 and T2.状态 = "完结" order by T2.书名

eval_err_num:267
medium pred: SELECT COUNT(DISTINCT 网络小说id) AS 网络小说本数 FROM 网络小说 ON DELETE DELETE NOACTION ON UPDATE UPDATE NOACTION WHERE 作者id = '唐七公子'
medium gold: select count(T1.书名) from 网络小说 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.姓名 = "唐七公子"

eval_err_num:268
medium pred: SELECT * FROM 网络小说 WHERE 出版图书id = (SELECT 出版图书id FROM 出版图书 ON DELETE DELETE NOACTION)
medium gold: select count(T1.书名) from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.姓名 = "唐七公子"

eval_err_num:269
medium pred: SELECT 书名 FROM 出版图书 WHERE 出版图书id = (SELECT 出版图书id FROM 出版图书 ON DELETE DELETE NOACTION)
medium gold: select T1.书名 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.姓名 = "唐七公子"

eval_err_num:270
medium pred: SELECT 评分 FROM 网络小说 WHERE 网络小说id = (SELECT 网络小说id FROM 网络小说 ON DELETE DELETE NOACTION)
medium gold: select T1.评分 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.姓名 = "唐七公子"

eval_err_num:271
hard pred: SELECT 书名 FROM 出版图书 WHERE 评分 < > (SELECT 评分 FROM 网络小说 WHERE 网络小说id = (SELECT 网络小说id FROM 网络小说 ON DELETE DELETE NOACTION))
hard gold: select 书名 from 出版图书 where 评分 > (select T1.评分 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.姓名 = "唐七公子")

eval_err_num:272
medium pred: SELECT 书名 FROM 出版图书 WHERE 出版图书id IN ( SELECT 出版图书id FROM 畅销榜 ORDER BY 周排名 DESC LIMIT 5 )
medium gold: select T2.书名 from 畅销榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id where T1.周排名 <= 5 and T1.月排名 <= 5 and T1.总排名 <= 5

eval_err_num:273
medium pred: SELECT 书名 FROM 网络小说 WHERE 网络小说id IN ( SELECT 网络小说id FROM 收藏榜 ORDER BY 周排名 DESC LIMIT 5 )
medium gold: select T2.书名 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id where T1.周排名 <= 5 and T1.月排名 <= 5 and T1.总排名 <= 5

eval_err_num:274
hard pred: SELECT 书名, 首字母排序 FROM 网络小说 ORDER BY 首字母排序 DESC, 小说名 DESC
hard gold: select T2.书名 from 收藏榜 AS T1 JOIN 网络小说 AS T2 ON T1.网络小说id = T2.网络图书id where T1.周排名 <= 5 and T1.月排名 <= 5 and T1.总排名 <= 5 order by T2.书名

eval_err_num:275
medium pred: NO SQL FOUND
medium gold: select distinct T2.姓名 from 网络小说 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T1.状态 = "完结"

eval_err_num:276
hard pred: NO SQL FOUND
hard gold: select distinct T2.姓名 from 网络小说 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T1.状态 = "完结" order by T2.姓名

eval_err_num:277
hard pred: NO SQL FOUND
hard gold: select distinct T1.书名 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id JOIN 网络小说 AS T3 ON T2.作者id = T3.作者id where T3.状态 = "完结"

eval_err_num:278
easy pred: SELECT * FROM "台风影响的国家" as t1 LEFT JOIN "台风" as t2 ON t1."台风id" = t2."台风id" WHERE t2."经济损失" > (SELECT SUM(经济损失) FROM "台风影响的国家" as t3 WHERE t3."台风id" = t1."台风id")
easy gold: select 经济损失 from 台风影响的国家 where 国家 = "日本"

eval_err_num:279
medium pred: SELECT 台风id, 名称, 登陆地点, 登陆时间, 登陆强度, 持续天数, 死亡人数, 经济损失 FROM "台风影响的国家" as t1 LEFT JOIN "台风" as t2 ON t1."台风id" = t2."台风id" WHERE t2."经济损失" = ( SELECT SUM(经济损失) FROM "台风影响的国家" as t3 WHERE t3."台风id" = t1."台风id" )
medium gold: select T2.名称 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T1.国家 = "日本"

eval_err_num:280
medium pred: SELECT 台风id FROM "台风影响的国家" as t1 INNER JOIN "台风" as t2 ON t1."台风id" = t2."台风id" WHERE t2."登陆地点" = ( SELECT 登陆地点 FROM "台风影响的国家" as t3 WHERE t3."台风id" = t1."台风id" )
medium gold: select T2.登陆地点 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T1.国家 = "日本"

eval_err_num:281
easy pred: SELECT * FROM "台风影响的中国省份" AS a INNER JOIN "台风" AS b ON a."台风id" = b."台风id" WHERE b."登陆地点" = "海南"
easy gold: select 名称 from 台风 where 登陆地点 = "海南琼海"

eval_err_num:282
easy pred: SELECT * FROM "台风影响的国家" AS a INNER JOIN "台风" AS b ON a."台风id" = b."台风id" WHERE b."登陆时间" = (SELECT MAX(登陆时间) FROM "台风影响的国家" WHERE "国家" = a."国家")
easy gold: select 登陆强度 from 台风 where 登陆地点 = "海南琼海"

eval_err_num:283
easy pred: SELECT * FROM "台风影响的国家" AS a INNER JOIN "台风" AS b ON a."台风id" = b."台风id" WHERE b."登陆时间" = (SELECT MAX(登陆时间) FROM "台风影响的国家" WHERE "国家" = a."国家")
easy gold: select 死亡人数 from 台风 where 登陆地点 = "海南琼海"

eval_err_num:284
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select T1.省份,T1.死亡人数 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T2.登陆地点 = "海南琼海"

eval_err_num:285
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select T1.国家,T1.经济损失 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T2.登陆地点 = "海南琼海"

eval_err_num:286
easy pred: SELECT t1.国家, t2.经济损失 FROM "台风影响的国家" t1 INNER JOIN "台风" t2 ON t1."台风id" = t2."台风id" WHERE t2."登陆时间" = ( SELECT MAX(登陆时间) FROM "台风影响的国家" t3 WHERE t3."国家" = t1.国家 )
easy gold: select 国家 from 台风影响的国家

eval_err_num:287
hard pred: SELECT t1.省份, t2.经济损失 FROM "台风影响的中国省份" t1 INNER JOIN "台风影响的国家" t2 ON t1."台风id" = t2."台风id" INNER JOIN "台风" t3 ON t1."台风id" = t3."台风id" AND t3."登陆时间" = ( SELECT MAX(登陆时间) FROM "台风影响的国家" t4 WHERE t4."国家" = t1.省份 )
hard gold: select 国家 from 台风影响的国家 where 经济损失 = (select max(经济损失) from 台风影响的国家)

eval_err_num:288
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T2.登陆地点,T2.经济损失 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T1.经济损失 = (select max(经济损失) from 台风影响的国家)

eval_err_num:289
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T1.省份,T1.死亡人数 from 台风影响的中国省份 AS T1 JOIN 台风影响的国家 AS T2 ON T1.台风id = T2.台风id where T2.经济损失 = (select max(经济损失) from 台风影响的国家)

eval_err_num:290
medium pred: SELECT COUNT(DISTINCT 运动队id) AS 奥运冠军次数 FROM 奥运会成绩 INNER JOIN 奥运会交手记录 ON 奥运会成绩.运动队id = 奥运会交手记录.球队id WHERE 运动队id REFERENCES 篮球运动队 (id)
medium gold: select count(*) from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where T2.所属国家 = "美国" AND T1.名次 = 1

eval_err_num:291
medium pred: SELECT 奥运会名称, 比赛日期 FROM 奥运会成绩 INNER JOIN 奥运会交手记录 ON 奥运会成绩.运动队id = 奥运会交手记录.球队id WHERE 运动队id REFERENCES 篮球运动队 (id) AND 赛事类型 = '奥运会'
medium gold: select T1.奥运会名称 from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where T2.所属国家 = "美国" AND T1.名次 = 1

eval_err_num:292
extra pred: SELECT 对手id, 是否胜利 FROM 奥运会交手记录 INNER JOIN 奥运会成绩 ON 奥运会交手记录.对手id = 奥运会成绩.对手id WHERE 奥运会成绩.年份 = 2022 AND 奥运会成绩.比赛类型 = '奥运会' GROUP BY 对手id, 是否胜利 ORDER BY 是否胜利 DESC, 比赛日期 ASC
extra gold: select T3.奥运会名称, T4.队名 from 奥运会成绩 AS T3 JOIN 篮球运动队 AS T4 ON T3.运动队id = T4.id where T3.奥运会名称 in (select T1.奥运会名称 from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where T2.所属国家 = "美国" AND T1.名次 = 1) AND T3.名次 = 2

eval_err_num:293
hard pred: SELECT 比分 FROM 奥运会交手记录 INNER JOIN 奥运会成绩 ON 奥运会交手记录.对手id = 奥运会成绩.对手id WHERE 奥运会成绩.年份 = 2022 AND 奥运会成绩.比赛类型 = '奥运会' GROUP BY 奥运会交手记录.对手id, 奥运会成绩.比赛类型 HAVING COUNT(DISTINCT 奥运会交手记录.对手id) = 2
hard gold: select T1.奥运会, T1.比分 from 奥运会交手记录 AS T1 JOIN 篮球运动队 AS T2 ON T1.对手id = T2.id JOIN 篮球运动队 AS T3 ON T3.id = T1.球队id where T1.赛事类型 = "决赛" AND T2.所属国家 = "西班牙" AND T3.所属国家 = "美国"

eval_err_num:294
hard pred: SELECT现任主教练 FROM 篮球运动队 WHERE 队名 = '西班牙' AND 成立时间 = '2021' FOREIGN KEY (队名, 成立时间) REFERENCES REFERENCES 篮球运动队 (id, id)
hard gold: select T1.主教练 from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where T2.所属国家 = "西班牙" AND T1.奥运会名称 like "%伦敦奥运会"

eval_err_num:295
medium pred: NO SQL FOUND
medium gold: select 队名 from 篮球运动队 order by 成立时间 asc limit 1

eval_err_num:296
extra pred: SELECT MAX(奥运会成绩) AS max_奥运会成绩, MAX(奥运会比赛日期) AS max_奥运会比赛日期 FROM 奥运会成绩 INNER JOIN 奥运会交手记录 ON 奥运会成绩 = 奥运会交手记录(对手id) GROUP BY 运动队id, 主教练, 奥运会名称, 年份, 奥运会比赛日期
extra gold: select min(T1.名次) from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where T2.队名 = (select T3.队名 from 篮球运动队 AS T3 order by T3.成立时间 asc limit 1)

eval_err_num:297
extra pred: SELECT 年份, 奥运会名称, 奥运会比赛日期 FROM 奥运会成绩 INNER JOIN 奥运会交手记录 ON 奥运会成绩 = 奥运会交手记录(对手id) GROUP BY 年份, 奥运会名称, 奥运会比赛日期
extra gold: select T1.年份 from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where T2.队名 = (select T3.队名 from 篮球运动队 AS T3 order by T3.成立时间 asc limit 1) AND T1.名次 = (select min(T4.名次) from 奥运会成绩 AS T4 JOIN 篮球运动队 AS T5 ON T4.运动队id = T5.id where T5.队名 = (select T6.队名 from 篮球运动队 AS T6 order by T6.成立时间 asc limit 1))

easy pred: SELECT 主教练 FROM 奥运会成绩 WHERE 年份 = 2022
easy gold: select 现任主教练 from 篮球运动队 where 所属国家 = "西班牙"

extra pred: SELECT COUNT(*) FROM 奥运会交手记录 WHERE 对手id = '1' AND 年份 = '2022'
extra gold: select count(*) from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where T1.主教练 = (select T3.现任主教练 from 篮球运动队 AS T3 where T3.所属国家 = "西班牙") AND T2.所属国家 = "西班牙"

extra pred: SELECT 主教练, AVG(名次) FROM 奥运会成绩 GROUP BY 主教练
extra gold: select min(T1.名次) from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where T1.主教练 = (select T3.现任主教练 from 篮球运动队 AS T3 where T3.所属国家 = "西班牙") AND T2.所属国家 = "西班牙"

eval_err_num:298
medium pred: SELECT * FROM 商家 WHERE 类型 = 'A' AND 配送费 = 0
medium gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 配送费 = "0"

eval_err_num:299
medium pred: SELECT 商家id FROM 商家 WHERE 类型 = 'A' AND 配送费 = 0
medium gold: select T1.平台名 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id where T2.配送费 = "0"

eval_err_num:300
medium pred: SELECT * FROM "商家平台活动" WHERE 优惠活动 = 'Free配送费' AND 配送费 = 0
medium gold: select T2.优惠活动 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id where T2.配送费 = "0"

eval_err_num:301
medium pred: SELECT 配送费 FROM "商家平台活动" WHERE 起送价格 = 0
medium gold: select T2.起送价格 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id where T2.配送费 = "0"

eval_err_num:302
medium pred: SELECT评分, 月售单数 FROM "商家平台活动" WHERE 商家id = 'A' AND 平台id = 'X'
medium gold: select T2.评分,T2.月售单数 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id where T2.配送费 = "0"

easy pred: SELECT * FROM 商家 WHERE 商家id IN ( SELECT 商家id FROM 商家平台活动 ORDER BY 配送费 DESC LIMIT 10 )
easy gold: select 商家 from 商家 where 类型 = "中式快餐"

hard pred: SELECT * FROM 商家 WHERE 商家id IN ( SELECT 商家id FROM 商家平台活动 ORDER BY 配送费 DESC LIMIT 10 )
hard gold: select T1.平台名 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T2.商家id = T3.商家id where T3.类型 = "中式快餐"

hard pred: SELECT * FROM 商家 JOIN 商家平台活动 ON 商家id = 商家平台活动.商家id WHERE 商家平台活动.配送费 > ( SELECT MAX(配送费) FROM 商家平台活动 ORDER BY 配送费 DESC )
hard gold: select T1.平台名,T2.优惠活动 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T2.商家id = T3.商家id where T3.类型 = "中式快餐"

hard pred: SELECT 商家id, 平台id, 配送费, 起送价格 FROM 商家 JOIN 商家平台活动 ON 商家id = 商家平台活动.商家id ORDER BY 配送费 DESC, 起送价格 DESC LIMIT 10
hard gold: select T1.平台名,T2.配送费,T2.起送价格 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T2.商家id = T3.商家id where T3.类型 = "中式快餐"

eval_err_num:303
extra pred: CREATE TABLE 商家 (商家id TEXT PRIMARY KEY, 商家 text, 类型 TEXT); CREATE TABLE "商家平台活动" ( "商家id" TEXT, "平台id" TEXT, "优惠活动" text, "配送费" number, "起送价格" real, "评分" real, "月售单数" INT, FOREIGN KEY ("商家id") REFERENCES "商家" ("商家id"), FOREIGN KEY ("平台id") REFERENCES "平台" ("平台id") ON DELETE NOACTION ON UPDATE NOACTION, )
extra gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T1.起送价格 = (select min(起送价格) from 商家平台活动)

eval_err_num:304
extra pred: CREATE TABLE 商家 (商家id TEXT PRIMARY KEY, 商家 text, 类型 TEXT); CREATE TABLE "商家平台活动" ( "商家id" TEXT, "平台id" TEXT, "优惠活动" text, "配送费" number, "起送价格" real, "评分" real, "月售单数" INT, FOREIGN KEY ("商家id") REFERENCES "商家" ("商家id"), FOREIGN KEY ("平台id") REFERENCES "平台" ("平台id") ON DELETE NOACTION ON UPDATE NOACTION, )
extra gold: select T2.类型 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T1.起送价格 = (select min(起送价格) from 商家平台活动)

eval_err_num:305
extra pred: CREATE TABLE 商家 (商家id TEXT PRIMARY KEY, 商家 text, 类型 TEXT); CREATE TABLE "商家平台活动" ( "商家id" TEXT, "平台id" TEXT, "优惠活动" text, "配送费" number, "起送价格" real, "评分" real, "月售单数" INT, FOREIGN KEY ("商家id") REFERENCES "商家" ("商家id"), FOREIGN KEY ("平台id") REFERENCES "平台" ("平台id") ON DELETE NOACTION ON UPDATE NOACTION, )
extra gold: select T1.评分 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T1.起送价格 = (select min(起送价格) from 商家平台活动)

eval_err_num:306
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T1.平台名 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T2.商家id = T3.商家id where T2.起送价格 = (select min(起送价格) from 商家平台活动)

eval_err_num:307
extra pred: INSERT INTO "商家平台活动" ("商家id", "平台id", "优惠活动", "配送费", "起送价格", "评分", "月售单数") VALUES ('商家1', '平台1', '优惠活动1', '配送费100', '起送价格1', '评分4.5', '月售单数20')
extra gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T1.评分 = (select max(评分) from 商家平台活动)

eval_err_num:308
hard pred: INSERT INTO "商家平台活动" ("商家id", "平台id", "优惠活动", "配送费", "起送价格", "评分", "月售单数") VALUES ('商家1', '平台1', '优惠活动1', '配送费100', '起送价格1', '评分4.5', '月售单数20')
hard gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id order by T1.评分 DESC limit 2

hard pred: SELECT 平台id FROM 平台 WHERE 市场占比 = 2
hard gold: select T1.平台名 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T2.商家id = T3.商家id where T3.商家 = "必胜客"

eval_err_num:309
hard pred: SELECT 优惠活动 FROM "商家平台活动" WHERE 商家id = '商家1' AND 平台id = '平台1'
hard gold: select T2.优惠活动 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T2.商家id = T3.商家id where T3.商家 = "必胜客"

eval_err_num:310
extra pred: SELECT COUNT(*) AS num_下单量 FROM "商家平台活动" WHERE "商家id" = (SELECT MAX(商家id) FROM "商家")
extra gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T1.月售单数 = (select max(月售单数) from 商家平台活动)

eval_err_num:311
extra pred: SELECT *, AVG(评分) AS avg_评分 FROM "商家平台活动" WHERE "商家id" = (SELECT MAX(商家id) FROM "商家")
extra gold: select T1.评分 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T1.月售单数 = (select max(月售单数) from 商家平台活动)

eval_err_num:312
extra pred: SELECT 平台名,市场占比 FROM 平台 GROUP BY 平台名 ORDER BY市场占比 DESC LIMIT 1
extra gold: select T1.平台名 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T2.商家id = T3.商家id where T2.月售单数 = (select max(月售单数) from 商家平台活动)

eval_err_num:313
extra pred: SELECT 平台名, 平台id, 配送费, 起送价格 FROM "商家平台活动" WHERE 商家id = (SELECT MAX(商家id) FROM "商家") ORDER BY 平台名, 平台id, 配送费, 起送价格 DESC LIMIT 1
extra gold: select T2.起送价格 from 平台 AS T1 JOIN 商家平台活动 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T2.商家id = T3.商家id where T2.月售单数 = (select max(月售单数) from 商家平台活动)

eval_err_num:314
easy pred: SELECT * FROM "应用商店支持国家" INNER JOIN "软件" ON "软件"."软件id" = "应用商店"."商店id" INNER JOIN "应用商店支持国家" ON "应用商店"."商店id" = "软件"."软件id" WHERE "应用商店"."商店id" = ( SELECT MAX(商店id) FROM "应用商店" GROUP BY 商店名 )
easy gold: select 名称 from 软件 where 用途 = "美妆"

eval_err_num:315
hard pred: SELECT * FROM "应用商店支持国家" INNER JOIN "软件" ON "软件"."软件id" = "应用商店"."商店id" INNER JOIN "应用商店支持国家" ON "应用商店"."商店id" = "软件"."软件id" WHERE "应用商店"."商店id" = ( SELECT MAX(商店id) FROM "应用商店" GROUP BY 商店名 )
hard gold: select T2.商店名 from 软件下载 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id JOIN 软件 AS T3 ON T1.软件id = T3.软件id where T3.用途 = "美妆"

eval_err_num:316
extra pred: SELECT * FROM "应用商店支持国家" INNER JOIN "软件" ON "软件"."软件id" = "应用商店"."商店id" INNER JOIN "应用商店支持国家" ON "应用商店"."商店id" = "软件"."软件id" GROUP BY "应用商店支持国家"."商店id" ORDER BY MAX(累计下载次数) DESC LIMIT 1
extra gold: select T2.商店名 from 软件下载 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id JOIN 软件 AS T3 ON T1.软件id = T3.软件id where T3.用途 = "美妆" order by T2.累计下载次数 desc

eval_err_num:317
hard pred: SELECT * FROM "应用商店支持国家" INNER JOIN "软件" ON "软件"."软件id" = "应用商店"."商店id" INNER JOIN "应用商店支持国家" ON "应用商店"."商店id" = "软件"."软件id" GROUP BY "应用商店支持国家"."商店id" ORDER BY MAX(评价人数) DESC, MAX(好评数) DESC LIMIT 1
hard gold: select T1.好评数 from 软件下载 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id JOIN 软件 AS T3 ON T1.软件id = T3.软件id where T3.用途 = "美妆"

eval_err_num:318
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select T1.下载量 from 软件下载 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id JOIN 软件 AS T3 ON T1.软件id = T3.软件id where T3.用途 = "美妆"

eval_err_num:319
hard pred: SELECT 应用商店.商店名, 应用商店.应用软件数, 应用商店.累计下载次数, 软件.软件名称, 软件.用途, 软件.下载量, 软件.评价人数, 软件.好评数 FROM 应用商店 INNER JOIN 应用商店支持国家 ON 应用商店.商店id = 支持国家.应用商店id INNER JOIN "软件" ON 应用商店.软件id = "软件".软件id WHERE 支持国家.国家 = '中国'
hard gold: select T2.商店名 from 软件下载 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id JOIN 软件 AS T3 ON T1.软件id = T3.软件id where T3.用途 = "地图"

eval_err_num:320
extra pred: SELECT 商店.商店名, 商店.应用软件数, 商店.累计下载次数, 商店.用户是否可以购买应用程序, 商店.开发人员是否可以出售应用程序, 软件.软件名称, 软件.用途, 软件.下载量, 软件.评价人数, 软件.好评数 FROM 应用商店 INNER JOIN 应用商店支持国家 ON 应用商店.商店id = 支持国家.应用商店id INNER JOIN "软件" ON 应用商店.软件id = "软件".软件id WHERE 支持国家.国家 = '中国' AND 软件.用途 = '导航软件'
extra gold: select T4.国家 from 应用商店支持国家 AS T4 JOIN 应用商店 AS T5 ON T4.应用商店id = T5.商店id where T5.商店名 = (select T2.商店名 from 软件下载 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id JOIN 软件 AS T3 ON T1.软件id = T3.软件id where T3.用途 = "地图") and 用户是否可以购买应用程序 = "是"

eval_err_num:321
extra pred: SELECT 商店.商店名, 商店.应用软件数, 商店.累计下载次数, 商店.用户是否可以购买应用程序, 商店.开发人员是否可以出售应用程序, 软件.软件名称, 软件.用途, 软件.下载量, 软件.评价人数, 软件.好评数 FROM 应用商店 INNER JOIN 应用商店支持国家 ON 应用商店.商店id = 支持国家.应用商店id INNER JOIN "软件" ON 应用商店.软件id = "软件".软件id WHERE 支持国家.国家 = '中国'
extra gold: select T4.开发人员是否可以出售应用程序 from 应用商店支持国家 AS T4 JOIN 应用商店 AS T5 ON T4.应用商店id = T5.商店id where T5.商店名 = (select T2.商店名 from 软件下载 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id JOIN 软件 AS T3 ON T1.软件id = T3.软件id where T3.用途 = "地图") and 用户是否可以购买应用程序 = "是"

eval_err_num:322
hard pred: SELECT * FROM "软件下载" WHERE评价人数 = (SELECT COUNT(*) FROM "应用商店" WHERE商店名 = 'Google应用商店' AND 软件id = 'Android SDK' AND 应用名 = 'Android Studio' AND 开发者_可不可以_购买_应用程序 = 1 AND 用户是否可以_购买_应用程序 = 0)
hard gold: select T2.名称 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id order by T1.评价人数 desc limit 1

eval_err_num:323
hard pred: SELECT 软件id,下载量,评价人数,好评数,(SELECT COUNT(*) FROM "应用商店" WHERE商店名 = 'Google应用商店' AND 软件id = 'Android SDK' AND 应用名 = 'Android Studio' AND 开发者_可不可以_购买_应用程序 = 1 AND 用户是否可以_购买_应用程序 = 0) AS 下载量_评价人数_好评数 FROM "软件下载" ORDER BY 下载量 DESC,评价人数 DESC,好评数 DESC LIMIT 1
hard gold: select * from (select T2.名称 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id order by 下载量 desc limit 1) except select * from (select T4.名称 from 软件下载 AS T3 JOIN 软件 AS T4 ON T3.软件id = T4.软件id order by T3.评价人数 desc limit 1)

eval_err_num:324
hard pred: SELECT 软件id, 软件名称, 用途 FROM "软件" WHERE 用途 = '开发' LIMIT 1
hard gold: select 用途 from 软件 where 名称 = (select * from (select T2.名称 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id order by 下载量 desc limit 1) except select * from (select T4.名称 from 软件下载 AS T3 JOIN 软件 AS T4 ON T3.软件id = T4.软件id order by T3.评价人数 desc limit 1) )

eval_err_num:325
medium pred: SELECT软件id,好评数 FROM "软件" ORDER BY好评数 DESC LIMIT 1
medium gold: select T2.名称 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id order by T1.好评数 desc

eval_err_num:326
easy pred: NO SQL FOUND
easy gold: select 地区生产总值 from 城市 where 名称 = "杭州"

eval_err_num:327
easy pred: SELECT 生产总值增长率 FROM 城市 WHERE 城市id = (SELECT 城市id FROM 城市第一产业 WHERE 产业类型 = '农业' AND 收入 > (SELECT收入 FROM 城市贸易产业 WHERE 城市id = 城市 id)) AND 地区生产总值 > (SELECT 地区生产总值 FROM 城市 WHERE 城市id = (SELECT 城市id FROM 城市第一产业 WHERE 产业类型 = '农业' AND 收入 > (SELECT收入 FROM 城市贸易产业 WHERE 城市id = 城市 id)) AND 产业类型 = '农业' AND 收入 > (SELECT收入 FROM 城市贸易产业 WHERE 城市id = 城市 id))
easy gold: select 生产总值增长率 from 城市 where 名称 = "杭州"

eval_err_num:328
medium pred: NO SQL FOUND
medium gold: select 第一产业总值,第二产业总值,第三产业总值 from 城市 where 名称 = "杭州"

eval_err_num:329
medium pred: SELECT 金融业增加值 FROM 城市 WHERE 城市id = (SELECT 城市id FROM 城市第一产业 WHERE 产业类型 = '金融' AND 收入 > (SELECT收入 FROM 城市贸易产业 WHERE 城市id = 城市 id)) AND 城市id = (SELECT 城市id FROM 城市第一产业 WHERE 产业类型 = '金融' AND 收入 > (SELECT收入 FROM 城市贸易产业 WHERE 城市id = 城市 id)) AND 城市id = (SELECT 城市id FROM 城市第一产业 WHERE 产业类型 = '金融' AND 收入 > (SELECT收入 FROM 城市贸易产业 WHERE 城市id = 城市 id)) AND 城市id = (SELECT 城市id FROM 城市第一产业 WHERE 产业类型 = '金融' AND 收入 > (SELECT收入 FROM 城市贸易产业 WHERE 城市id = 城市 id)) AND 产业类型 = '金融' AND 收入 > (SELECT收入 FROM 城市贸易产业 WHERE 城市id = 城市 id))
medium gold: select T1.金融业增加值 from 城市金融产业 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.名称 = "杭州"

eval_err_num:330
hard pred: SELECT MAX(生产总值增长率) AS max_生产总值_增长率 FROM 城市第一产业 WHERE 经济 = '低迷'
hard gold: select 生产总值增长率 from 城市 where 生产总值增长率 = (select max(生产总值增长率) from 城市)

eval_err_num:331
hard pred: SELECT 城市id, 生产总值增长率 FROM 城市第一产业 WHERE 产业类型 = '农业' AND 城市id IN (SELECT 城市id FROM 城市 WHERE 经济 = '低迷')
hard gold: select 名称 from 城市 where 生产总值增长率 = (select max(生产总值增长率) from 城市)

eval_err_num:332
extra pred: SELECT 产业类型 FROM 城市第一产业 WHERE 城市id IN (SELECT 城市id FROM 城市 WHERE 经济 = '低迷')
extra gold: select T1.产业类型 from 城市第一产业 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.生产总值增长率 = (select max(生产总值增长率) from 城市)

eval_err_num:333
extra pred: SELECT COUNT(*) AS count FROM 城市第一产业 WHERE 产业类型 = '农业' AND 城市id IN (SELECT 城市id FROM 城市 WHERE 经济 = '低迷')
extra gold: select T1.产业类型,T1.收入增长率 from 城市第一产业 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.生产总值增长率 = (select max(生产总值增长率) from 城市)

eval_err_num:334
medium pred: SELECT 金融业增加值, 增长率 FROM 城市金融产业 WHERE 城市id = (SELECT 城市id FROM 城市) AND 金融业增加值 > (SELECT 金融业增加值 FROM 城市) AND 增长率 > (SELECT 增长率 FROM 城市) AND 城市id = (SELECT 城市id FROM 城市 WHERE 名称 = '长沙') AND 今年的增加值 > (SELECT 增加值 FROM 城市 WHERE 城市id = (SELECT 城市id FROM 城市 WHERE 名称 = '长沙') AND 增长率 > 0) AND 同比去年增长 > (SELECT 增长率 FROM 城市贸易产业 WHERE 城市id = (SELECT 城市id FROM 城市 WHERE 名称 = '长沙') AND 行业 = '贸易产业')
medium gold: select T1.金融业增加值,T1.增长率 from 城市金融产业 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.名称 = "长沙"

eval_err_num:335
medium pred: SELECT count(金融机构数量) AS num FROM 城市金融产业
medium gold: select T1.金融机构数量 from 城市金融产业 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.名称 = "长沙"

eval_err_num:336
medium pred: SELECT 贷款余额, 同比增长率 FROM 城市金融产业
medium gold: select T1.贷款余额,T1.贷款余额增长率 from 城市金融产业 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.名称 = "长沙"

eval_err_num:337
extra pred: NO SQL FOUND
extra gold: select T2.名称 from 城市贸易产业 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T1.进口额 = (select max(进口额) from 城市贸易产业)

eval_err_num:338
hard pred: NO SQL FOUND
hard gold: select 行业 from 城市贸易产业 where 进口额 = (select max(进口额) from 城市贸易产业)

eval_err_num:339
extra pred: NO SQL FOUND
extra gold: select T2.名称 from 城市贸易产业 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T1.出口额 = (select max(出口额) from 城市贸易产业)

eval_err_num:340
hard pred: NO SQL FOUND
hard gold: select 行业 from 城市贸易产业 where 出口额 = (select max(出口额) from 城市贸易产业)

eval_err_num:341
medium pred: SELECT 产业类型, 收入, 收入增长率, 产量, 产量增长率, 城市id, 城市名称, 所属省份, 地区生产总值, 生产总值增长率, 城市id, 城市名称, 所属省份, 地区生产总值, 生产总值增长率 FROM 城市 INNER JOIN 城市第一产业 ON 城市id = 城市第一产业.城市id INNER JOIN 城市贸易产业 ON 城市id = 城市贸易产业.城市id INNER JOIN 城市金融产业 ON 城市id = 城市金融产业.城市id WHERE 产业类型 = '第一产业'
medium gold: select T1.名称,T2.产业类型 from 城市 AS T1 JOIN 城市第一产业 AS T2 ON T1.城市id = T2.城市id

eval_err_num:342
medium pred: SELECT收入,收入增长率,产量,产量增长率,城市id,城市名称,所属省份,地区生产总值,生产总值增长率 FROM 城市 INNER JOIN 城市第一产业 ON 城市id = 城市第一产业.城市id INNER JOIN 城市贸易产业 ON 城市id = 城市贸易产业.城市id INNER JOIN 城市金融产业 ON 城市id = 城市金融产业.城市id WHERE 产业类型 = '第一产业' and 收入 > (SELECT 收入 FROM 城市 WHERE 城市id = 1)
medium gold: select T1.名称,T2.收入,T2.收入增长率 from 城市 AS T1 JOIN 城市第一产业 AS T2 ON T1.城市id = T2.城市id

eval_err_num:343
medium pred: SELECT 产量, 产量增长率 FROM 城市 INNER JOIN 城市第一产业 ON 城市id = 城市第一产业.城市id INNER JOIN 城市贸易产业 ON 城市id = 城市贸易产业.城市id INNER JOIN 城市金融产业 ON 城市id = 城市金融产业.城市id WHERE 产业类型 = '第一产业' and 收入 > (SELECT 收入 FROM 城市 WHERE 城市id = 1)
medium gold: select T1.名称,T2.产量,T2.产量增长率 from 城市 AS T1 JOIN 城市第一产业 AS T2 ON T1.城市id = T2.城市id

easy pred: SELECT * FROM 比赛 WHERE 名称 = '清华大学' AND 方向 = '北京'
easy gold: select 名称 from 比赛 where 举办单位 = "清华大学"

easy pred: SELECT * FROM 比赛 WHERE 方向 = '面向北京' LIMIT 1
easy gold: select 方向 from 比赛 where 举办单位 = "清华大学"

eval_err_num:344
easy pred: SELECT 奖金数 FROM 比赛 WHERE 奖金数 = (SELECT 奖金数 FROM 奖金表 WHERE 比赛id = 参加比赛id) LIMIT 1
easy gold: select 奖金数 from 比赛 where 举办单位 = "清华大学"

eval_err_num:345
hard pred: SELECT 成绩 FROM 学生参赛记录 WHERE 加入队伍id = (SELECT 加入队伍id FROM 学生参赛记录 WHERE 学生id = 学生id) LIMIT 1
hard gold: select T3.队名 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id where T2.举办单位 = "清华大学"

eval_err_num:346
hard pred: SELECT 成绩 FROM 学生参赛记录 WHERE 加入队伍id = (SELECT 加入队伍id FROM 学生参赛记录 WHERE 学生id = 学生id) LIMIT 1
hard gold: select T1.成绩 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id where T2.举办单位 = "清华大学"

eval_err_num:347
easy pred: CREATE TABLE 比赛 ( 比赛id TEXT PRIMARY KEY, 名称 TEXT, 方向 TEXT, 举办单位 TEXT, 单位性质 TEXT, 奖金数 number, 录取队伍数量 number, 比赛平台 TEXT ); CREATE TABLE 参赛队伍 ( 队伍id TEXT PRIMARY KEY, 队名 TEXT ); CREATE TABLE 参赛学生 ( 学生id TEXT PRIMARY KEY, 姓名 TEXT, 年龄 number, 学历 TEXT, 学校 TEXT ); CREATE TABLE 学生参赛记录 ( 队伍id TEXT REFERENCES 参赛队伍 (队伍id), 学生id TEXT REFERENCES 参赛学生 (学生id), 加入队伍日期 DATE ); CREATE TABLE 队伍参赛成绩 ( 加入队伍id number, 参加比赛id number, 成绩 text, FOREIGN KEY (加入队伍id) REFERENCES 参赛队伍 (队伍id), FOREIGN KEY (参加比赛id) REFERENCES 比赛 (比赛id) )
easy gold: select 名称 from 比赛 where 单位性质 = "企业"

eval_err_num:348
medium pred: SELECT * FROM 比赛 WHERE 奖金数 > (SELECT 奖金数 FROM 参赛队伍 WHERE 参赛队伍.队伍id = 比赛.比赛id)
medium gold: select 名称,奖金数 from 比赛 where 单位性质 = "企业"

eval_err_num:349
hard pred: SELECT 队伍.队伍id, 奖项.奖项名称 FROM 比赛 JOIN 奖项 ON 比赛.比赛id = 奖项.奖项id JOIN 参赛队伍 ON 比赛.比赛id = 参赛队伍.队伍id JOIN 学生 ON 参赛队伍.学生id = 学生.学生id WHERE 比赛.奖金数 > (SELECT 奖金数 FROM 参赛队伍 WHERE 参赛队伍.队伍id = 比赛.比赛id) ORDER BY 队伍id, 奖项名称 DESC
hard gold: select T2.名称,T3.队名,T1.成绩 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id where T2.单位性质 = "企业"

eval_err_num:350
medium pred: SELECT 学生.姓名, 学校.学校text FROM 参赛学生 JOIN 学生参赛记录 ON 学生.学生id = 学生参赛记录.学生id JOIN 学校 ON 学生.学校text = 学校.学校text WHERE 学生.加入队伍日期 = (SELECT 加入队伍日期 FROM 队伍参赛成绩 WHERE 加入队伍id = 加入队伍id)
medium gold: select 姓名,学校 from 参赛学生

eval_err_num:351
extra pred: SELECT s.姓名, s.加入队伍日期, r.比赛名称 FROM 参赛学生 s JOIN 学生参赛记录 r ON s.学生id = r.学生id JOIN 比赛 ON r.比赛id = r.比赛id WHERE s.加入队伍日期 = (SELECT 加入队伍日期 FROM 队伍参赛成绩 WHERE 加入队伍id = 加入队伍id)
extra gold: select t1.名称 from 比赛 as t1 join 队伍参赛成绩 as t2 on t1.比赛id = t2.参加比赛id join 学生参赛记录 as t3 on t2.加入队伍id = t3.队伍id join 参赛学生 as t4 on t3.学生id = t4.学生id where t4.姓名 = "张鲁一" and t4.学校 = "清华大学"

eval_err_num:352
hard pred: SELECT 获奖.获奖状态 FROM 获奖 JOIN 比赛参赛成绩 ON 获奖.比赛id = 比赛参赛成绩.比赛id JOIN 参赛队伍 ON 获奖.参赛队伍id = 参赛队伍.队伍id WHERE 参赛队伍.队名 = '清华大学' AND 比赛.比赛平台 = '微信公众平台' AND 参赛队伍.加入队伍id = 参赛队伍.加入队伍id
hard gold: select t1.成绩 from 队伍参赛成绩 as t1 join 学生参赛记录 as t2 on t1.加入队伍id = t2.队伍id join 参赛学生 as t3 on t2.学生id = t3.学生id where t3.姓名 = "张鲁一" and t3.学校 = "清华大学"

eval_err_num:353
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select 名称 from 比赛 where 奖金数 = (select max(奖金数) from 比赛)

eval_err_num:354
extra pred: SELECT t1.name, t1.direction, t1.举办单位, t1.单位性质, t2.奖金数, t2.录取队伍数量, t2.比赛平台 FROM 比赛 t1 INNER JOIN 参赛队伍 t2 ON t1.比赛id = t2.队伍id INNER JOIN 学生参赛记录 t3 ON t2.队伍id = t3.加入队伍id AND t3.学生id = t3.学生id WHERE t3.加入队伍日期 = '2021-01-01'
extra gold: select 名称,举办单位 from 比赛 where 奖金数 = (select max(奖金数) from 比赛)

eval_err_num:355
extra pred: SELECT * FROM 参赛记录 INNER JOIN 比赛 ON 参赛记录.加入队伍id = 比赛.比赛id INNER JOIN 参赛队伍 ON 参赛记录.加入队伍id = 参赛队伍.队伍id INNER JOIN 学生 ON 参赛记录.学生id = 学生.学生id WHERE 加入队伍日期 = '2021-01-01'
extra gold: select 名称,方向 from 比赛 where 奖金数 = (select max(奖金数) from 比赛) and 方向 = "模式识别"

eval_err_num:356
extra pred: SELECT 参赛队伍.name FROM 参赛记录 INNER JOIN 比赛 ON 参赛记录.加入队伍id = 比赛.比赛id INNER JOIN 参赛队伍 ON 参赛记录.加入队伍id = 参赛队伍.队伍id WHERE 比赛.比赛id = '2021_09'
extra gold: select t2.队名 from 队伍参赛成绩 AS T1 JOIN 参赛队伍 AS T2 ON T1.加入队伍id = T2.队伍id JOIN 比赛 AS T3 ON T1.参加比赛id = T3.比赛id where t3.奖金数 = (select max(奖金数) from 比赛) and t3.方向 = "模式识别"

eval_err_num:357
medium pred: SELECT 比赛.name, 参赛队伍.队名, 参赛学生.name, 参赛学生.age, 参赛学生.学历, 比赛.name, 比赛.方向 FROM 比赛 INNER JOIN 参赛队伍 ON 比赛.参赛队伍id = 参赛队伍.队伍id INNER JOIN 参赛学生 ON 比赛.参赛学生id = 参赛学生.学生id ON 参赛队伍.加入队伍id = 参赛学生.加入队伍id INNER JOIN 学生参赛记录 ON 参赛队伍.加入队伍id = 学生参赛记录.加入队伍id INNER JOIN 比赛 ON 学生参赛记录.加入队伍id = 比赛.比赛id WHERE 学生参赛记录.加入队伍id IN (SELECT 加入队伍id FROM 队伍参赛成绩) ORDER BY 成绩 DESC LIMIT 1
medium gold: select t2.队名 from 队伍参赛成绩 AS T1 JOIN 参赛队伍 AS T2 ON T1.加入队伍id = T2.队伍id where t1.成绩 = "冠军"

eval_err_num:358
hard pred: SELECT * FROM 参赛学生 INNER JOIN 学生参赛记录 ON 学生参赛记录.学生id = 学生.学生id INNER JOIN 比赛 ON 学生参赛记录.加入队伍id = 比赛.比赛id WHERE 学生.年龄 = (SELECT MAX(年龄) FROM 参赛学生) ORDER BY 学生.姓名 DESC, 学生.学历 DESC, 学生.学校 ASC
hard gold: select * from 参赛学生 as t1 join 学生参赛记录 as t2 on t1.学生id = t2.学生id join 队伍参赛成绩 as t3 on t2.队伍id = t3.加入队伍id where t3.成绩 = "冠军"

eval_err_num:359
medium pred: SELECT 比赛.name, 参赛队伍.队名, 参赛学生.name, 参赛学生.age, 参赛学生.学历, 比赛.name, 比赛.方向 FROM 比赛 INNER JOIN 参赛队伍 ON 比赛.比赛id = 参赛队伍.比赛id INNER JOIN 参赛学生 ON 比赛.参赛学生id = 参赛学生.学生id WHERE 参赛学生.年龄 = (SELECT MAX(年龄) FROM 参赛学生) ORDER BY 比赛.name DESC, 比赛.方向 DESC, 参赛队伍.队名 ASC, 参赛学生.name ASC, 参赛学生.学历 ASC
medium gold: select t2.名称 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id where t1.成绩 = "冠军"

eval_err_num:360
medium pred: SELECT举办单位.type_name FROM 举办单位 INNER JOIN 单位性质 ON 举办单位.type_name = 单位性质.type_name INNER JOIN 比赛 ON 比赛.比赛id = 举办单位.比赛id WHERE 举办单位.type_name IN ('政府机构', '企业', '学校', '非营利组织') ORDER BY 单位性质.type_name ASC, 比赛.比赛id ASC, 举办单位.type_name ASC, 比赛.比赛id ASC
medium gold: select t2.单位性质 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id where t1.成绩 = "冠军"

eval_err_num:361
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select 名称 from 比赛 where 单位性质 = (select t2.单位性质 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id where t1.成绩 = "冠军")

eval_err_num:362
easy pred: SELECT COUNT(DISTINCT 参赛队伍) FROM 学生参赛记录 WHERE 加入队伍id IN (SELECT 加入队伍id FROM 队伍参赛成绩 WHERE 比赛平台 = '阿里天池')
easy gold: select count(*) from 比赛 where 比赛平台 = "阿里天池"

easy pred: SELECT * FROM 比赛 WHERE 名称 = '阿里天池' AND 方向 = '男' AND 举办单位 = '阿里天池' AND 单位性质 = '国家' AND 奖金数 = '100' AND 录取队伍数量 = '1' AND 比赛平台 = '阿里天池'
easy gold: select 名称 from 比赛 where 比赛平台 = "阿里天池"

eval_err_num:363
hard pred: SELECT 参赛队伍, 比赛平台 FROM 学生参赛记录 WHERE 加入队伍id IN (SELECT 加入队伍id FROM 队伍参赛成绩 WHERE 比赛平台 = '阿里天池') AND 学生id = '123456'
hard gold: select t2.名称,t3.队名 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id where t2.比赛平台 = "阿里天池"

eval_err_num:364
hard pred: SELECT 成绩 FROM 队伍参赛成绩 WHERE 参加比赛id IN (SELECT 参加比赛id FROM 比赛 WHERE 比赛平台 = '阿里天池') AND 加入队伍id = '123456' AND 学生id = '123456'
hard gold: select t2.名称,t3.队名,t1.成绩 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id where t2.比赛平台 = "阿里天池"

eval_err_num:365
easy pred: SELECT * FROM比赛 WHERE名称 like '%模式识别%' ORDER BY奖金数 DESC LIMIT 10
easy gold: select 名称 from 比赛 where 方向 = "模式识别"

eval_err_num:366
medium pred: SELECT 举办单位, 平台 FROM 比赛 WHERE 名称 like '%模式识别%' ORDER BY 举办单位, 平台 DESC LIMIT 10
medium gold: select 举办单位, 比赛平台 from 比赛 where 方向 = "模式识别"

eval_err_num:367
extra pred: SELECT * FROM 参赛队伍 WHERE 加入队伍id not in (SELECT加入队伍id FROM 学生参赛记录) ORDER BY 加入队伍id DESC LIMIT 10
extra gold: select T3.队名 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id JOIN 学生参赛记录 AS T4 ON T3.队伍id = T4.队伍id where T2.方向 = "模式识别" group by T3.队名 HAVING count(distinct T4.学生id) < 2

eval_err_num:368
extra pred: SELECT * FROM 参赛队伍 WHERE 加入队伍id not in (SELECT加入队伍id FROM 学生参赛记录) ORDER BY 加入队伍id DESC LIMIT 10
extra gold: select T5.姓名 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id JOIN 学生参赛记录 AS T4 ON T3.队伍id = T4.队伍id JOIN 参赛学生 AS T5 ON T5.学生id = T4.学生id where T2.方向 = "模式识别" group by T3.队名 HAVING count(distinct T4.学生id) < 2

eval_err_num:369
extra pred: SELECT 姓名, 学校 FROM 学生 WHERE 学历 = 'X' ORDER BY 年龄 DESC, 学校 LIMIT 10
extra gold: select T5.学校 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id JOIN 学生参赛记录 AS T4 ON T3.队伍id = T4.队伍id JOIN 参赛学生 AS T5 ON T5.学生id = T4.学生id where T2.方向 = "模式识别" group by T3.队名 HAVING count(distinct T4.学生id) < 2

eval_err_num:370
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 公司名 from 餐饮公司 where 上市股市 = "港股"

eval_err_num:371
hard pred: SELECT COUNT(*) FROM "餐饮公司城市连锁" WHERE "城市id" = (SELECT "城市id" FROM "城市")
hard gold: select T2.公司名, sum(T1.分店数量) from 餐饮公司城市连锁 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id where T2.上市股市 = "港股" group by T2.公司名

eval_err_num:372
hard pred: SELECT COUNT(*) FROM "餐饮公司城市连锁" WHERE "员工数量" = (SELECT COUNT(*) FROM "餐饮公司城市消费" WHERE "公司id" = "公司id")
hard gold: select T2.公司名, sum(T1.员工数量) from 餐饮公司城市连锁 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id where T2.上市股市 = "港股" group by T2.公司名

eval_err_num:373
hard pred: SELECT SUM(人均消费额) AS total_人均消费额 FROM "餐饮公司城市消费" WHERE "公司id" = "公司id" AND "城市id" = (SELECT "城市id" FROM "城市")
hard gold: select T2.公司名, avg(T1.人均消费额) from 餐饮公司城市消费 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id where T2.上市股市 = "港股" group by T2.公司名

eval_err_num:374
extra pred: SELECT * FROM "餐饮公司城市消费" WHERE "城市id" = (SELECT MAX("城市id") FROM "城市")
extra gold: select T3.公司名 from 餐饮公司城市消费 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T2.城市id = T3.总部城市id where T2.名称 = "成都" order by 人气 desc limit 1

eval_err_num:375
extra pred: SELECT * FROM "餐饮公司城市连锁" WHERE "分店数量" = (SELECT "分店数量" FROM "餐饮公司城市消费" WHERE "公司id" = "12345") ORDER BY "总消费额" DESC LIMIT 1
extra gold: select T3.经营范围 from 餐饮公司城市消费 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T2.城市id = T3.总部城市id where T2.名称 = "成都" order by 人气 desc limit 1

eval_err_num:376
extra pred: SELECT * FROM "餐饮公司城市连锁" WHERE "分店数量" = (SELECT MAX("分店数量") FROM "餐饮公司城市消费" WHERE "公司id" = "12345") ORDER BY "总消费额" DESC LIMIT 1
extra gold: select T3.经营年数 from 餐饮公司城市消费 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T2.城市id = T3.总部城市id where T2.名称 = "成都" order by 人气 desc limit 1

eval_err_num:377
extra pred: SELECT * FROM "餐饮公司城市连锁" WHERE "分店数量" = (SELECT MAX("分店数量") FROM "餐饮公司城市消费" WHERE "公司id" = "12345") ORDER BY "总消费额" DESC LIMIT 1
extra gold: select T1.人均消费额 from 餐饮公司城市消费 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T2.城市id = T3.总部城市id where T2.名称 = "成都" order by 人气 desc limit 1

eval_err_num:378
extra pred: SELECT 餐厅名, 餐饮公司.总部城市id, COUNT(*) 分店数量 FROM 餐饮公司 INNER JOIN 城市 ON 餐饮公司.总部城市id = 城市.城市id GROUP BY 餐厅名, 餐饮公司.总部城市id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: select T3.公司名, T1.分店数量 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T2.城市id = T3.总部城市id where T2.名称 = "成都" order by 分店数量 desc limit 1

eval_err_num:379
extra pred: SELECT * FROM 餐饮公司 INNER JOIN 城市 ON 餐饮公司.总部城市id = 城市.城市id INNER JOIN 餐饮公司城市消费 ON 餐饮公司.总部城市id = 城市.城市id AND 餐饮公司.公司名称 = '成都' GROUP BY 餐饮公司.公司id, 城市.城市id, 餐饮公司.公司名称 ORDER BY COUNT(*) DESC LIMIT 1
extra gold: select T3.经营范围 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T2.城市id = T3.总部城市id where T2.名称 = "成都" order by 分店数量 desc limit 1

eval_err_num:380
extra pred: SELECT 日期 FROM 经营状况 WHERE 公司名称 = '餐饮公司' AND 公司id = ( SELECT MAX(公司id) FROM 经营状况 WHERE 公司名称 = '餐饮公司' ) AND 城市.城市id = 经营状况.城市id
extra gold: select T3.经营年数 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T2.城市id = T3.总部城市id where T2.名称 = "成都" order by 分店数量 desc limit 1

eval_err_num:381
extra pred: SELECT 股票代码 FROM 餐饮公司 INNER JOIN 上市股市 ON 餐饮公司.总部城市id = 上市股市.城市id WHERE 餐饮公司.公司id = ( SELECT MAX(公司id) FROM 上市股市 WHERE 上市股市.股票代码 = 'A股' )
extra gold: select T3.上市股市 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T2.城市id = T3.总部城市id where T2.名称 = "成都" order by 分店数量 desc limit 1

eval_err_num:382
medium pred: NO SQL FOUND
medium gold: select 公司名 from 餐饮公司 order by 经营年数 desc limit 1

eval_err_num:383
medium pred: NO SQL FOUND
medium gold: select 经营范围 from 餐饮公司 order by 经营年数 desc limit 1

eval_err_num:384
extra pred: NO SQL FOUND
extra gold: select sum(T1.分店数量) from 餐饮公司城市连锁 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id where T2.公司名 = (select T3.公司名 from 餐饮公司 AS T3 order by T3.经营年数 desc limit 1)

eval_err_num:385
extra pred: NO SQL FOUND
extra gold: select avg(T1.人均消费额) from 餐饮公司城市消费 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id where T2.公司名 = (select T3.公司名 from 餐饮公司 AS T3 order by T3.经营年数 desc limit 1)

eval_err_num:386
hard pred: SELECT * FROM "商家平台活动" WHERE 商家id IN (SELECT 商家id FROM "商家" WHERE 类型 = '外卖' ORDER BY 月售单数 DESC LIMIT 1)
hard gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 优惠活动 like ("%新客%")

eval_err_num:387
hard pred: SELECT 配送费 FROM "商家平台活动" WHERE 商家id IN (SELECT 商家id FROM "商家" WHERE 类型 = '外卖' ORDER BY 月售单数 DESC LIMIT 1) AND "起送价格" = (SELECT "起送价格" FROM "商家平台活动" WHERE 商家id = 商家id ORDER BY "起送价格" DESC LIMIT 1)
hard gold: select T1.起送价格 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 优惠活动 like ("%新客%")

eval_err_num:388
hard pred: SELECT 配送费 FROM "商家平台活动" WHERE 商家id IN (SELECT 商家id FROM "商家" WHERE 类型 = '外卖' ORDER BY 月售单数 DESC LIMIT 1) AND "起送价格" = (SELECT "起送价格" FROM "商家平台活动" WHERE 商家id = 商家id ORDER BY "起送价格" DESC LIMIT 1)
hard gold: select T1.配送费 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 优惠活动 like ("%新客%")

eval_err_num:389
hard pred: SELECT COUNT(*) FROM "订单" WHERE "订单类型" = '购买' AND "订单金额" <= (SELECT MAX("购买金额") FROM "商家平台活动" WHERE "商家id" = 商家id) AND "商家平台id" = (SELECT MAX("平台id") FROM "平台" WHERE "市场占比" = 1)
hard gold: select T1.配送费 + T1.起送价格 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 优惠活动 like ("%新客%")

eval_err_num:390
medium pred: SELECT 商家id FROM "商家平台活动" WHERE 配送费 = 0
medium gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T1.配送费 = "0"

eval_err_num:391
easy pred: SELECT 评分 FROM "商家平台活动" WHERE 配送费 = 0
easy gold: select 评分 from 商家平台活动 where 配送费 = "0"

eval_err_num:392
medium pred: SELECT 平台名 FROM "平台" WHERE 市场占比 = 1
medium gold: select T2.平台名 from 商家平台活动 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id where T1.配送费 = "0"

eval_err_num:393
medium pred: SELECT 市场占比 FROM "平台" WHERE 市场占比 = 1
medium gold: select T2.市场占比 from 商家平台活动 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id where T1.配送费 = "0"

eval_err_num:394
hard pred: SELECT 商家id, 平台id, 配送费, 评分, 月售单数 FROM "商家平台活动" WHERE (配送费, 配送费) NOT IN ((2,2), (4,4)) ORDER BY 评分 DESC, 月售单数 DESC LIMIT 1
hard gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id order by T1.起送价格 + T1.配送费 limit 1

eval_err_num:395
medium pred: SELECT * FROM "餐厅订单" WHERE 餐厅名称 LIKE '%美团%' ORDER BY 评分 DESC LIMIT 10
medium gold: select 评分 from 商家平台活动 order by 起送价格 + 配送费 limit 1

eval_err_num:396
hard pred: SELECT t1.text FROM 餐厅订单 t1 JOIN 商家平台活动 t2 ON t1.商家id = t2.商家id JOIN "商家" t3 ON t2.平台id = t3.平台id WHERE t1.text IN (SELECT text FROM 餐厅订单 WHERE restaurant = '张三') AND t2.平台id = '平台2' AND t2.配送费 = 2 ORDER BY t1.text DESC, t2.平台id DESC, t3.评分 DESC LIMIT 10
hard gold: select T2.类型 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id order by T1.起送价格 + T1.配送费 limit 1

eval_err_num:397
medium pred: CREATE TABLE篮球运动队 (id TEXT PRIMARY KEY, 队名 text, 所属国家 text, 成立时间 time, 现任主教练 text, 现在世界排名 number) CREATE TABLE奥运会成绩 (年份 INT, 奥运会名称 TEXT, 名次 INT, 运动队id INT REFERENCES 篮球运动队 (id), 主教练 TEXT) CREATE TABLE奥运会交手记录 (对手id number, 比分 number, 是否胜利 BOOLEAN, 球队id REFERENCES 篮球运动队 (id), 赛事类型 TEXT, 年份 INT, 奥运会 STRING, 比赛日期 DATE, FOREIGN KEY (对手id) REFERENCES 篮球运动队 (id))
medium gold: select T1.奥运会名称,T1.名次 from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where 队名 = "美国男篮国家队"

eval_err_num:398
medium pred: CREATE TABLE篮球运动队 (id TEXT PRIMARY KEY, 队名 text, 所属国家 text, 成立时间 time, 现任主教练 text, 现在世界排名 number) CREATE TABLE奥运会成绩 (年份 INT, 奥运会名称 TEXT, 名次 INT, 运动队id INT REFERENCES 篮球运动队 (id), 主教练 TEXT) CREATE TABLE奥运会交手记录 (对手id number, 比分 number, 是否胜利 BOOLEAN, 球队id REFERENCES 篮球运动队 (id), 赛事类型 TEXT, 年份 INT, 奥运会 STRING, 比赛日期 DATE, FOREIGN KEY (对手id) REFERENCES 篮球运动队 (id))
medium gold: select T1.奥运会名称,T1.主教练 from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where 队名 = "美国男篮国家队"

eval_err_num:399
medium pred: CREATE TABLE篮球运动队 (id TEXT PRIMARY KEY, 队名 text, 所属国家 text, 成立时间 time,现任主教练 text, 现在世界排名 number) CREATE TABLE奥运会成绩 (年份 INT, 奥运会名称 TEXT, 名次 INT, 运动队id INT REFERENCES 篮球运动队 (id), 主教练 TEXT) CREATE TABLE奥运会交手记录 (对手id number, 比分 number, 是否胜利 BOOLEAN, 球队id REFERENCES 篮球运动队 (id), 赛事类型 TEXT, 年份 INT, 奥运会 STRING, 比赛日期 DATE, FOREIGN KEY (对手id) REFERENCES 篮球运动队 (id))
medium gold: select T2.现任主教练 from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where 队名 = "美国男篮国家队"

eval_err_num:400
hard pred: CREATE TABLE篮球运动队 (id TEXT PRIMARY KEY, 队名 text, 所属国家 text, 成立时间 time,现任主教练 text, 现在世界排名 number) CREATE TABLE奥运会成绩 (年份 INT, 奥运会名称 TEXT, 名次 INT, 运动队id INT REFERENCES 篮球运动队 (id), 主教练 TEXT) CREATE TABLE奥运会交手记录 (对手id number, 比分 number, 是否胜利 BOOLEAN, 球队id REFERENCES 篮球运动队 (id), 赛事类型 TEXT, 年份 INT, 奥运会 STRING, 比赛日期 DATE, FOREIGN KEY (对手id) REFERENCES 篮球运动队 (id)) GO SELECT * FROM 奥运会成绩 WHERE 年份 = 2016 AND 奥运会 = '里约奥运会' AND 对手id = 1; GO SELECT * FROM 奥运会交手记录 WHERE 年份 = 2016 AND 比赛类型 = '八分之一决赛' AND 球队id = 1
hard gold: select T3.队名 from 奥运会交手记录 AS T1 JOIN 篮球运动队 AS T2 ON T1.球队id = T2.id JOIN 篮球运动队 AS T3 ON T1.对手id = T3.id where T2.队名 = "美国男篮国家队" and T1.奥运会 = "2016年里约奥运会" and T1.赛事类型 = "八分之一决赛"

eval_err_num:401
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T1.是否胜利,T1.比分 from 奥运会交手记录 AS T1 JOIN 篮球运动队 AS T2 ON T1.球队id = T2.id where T2.队名 = "美国男篮国家队" and T1.奥运会 = "2016年里约奥运会" and T1.赛事类型 = "八分之一决赛"

hard pred: SELECT * FROM 奥运会成绩 WHERE 年份 = 2012 AND 运动队id IN (SELECT 队名 FROM 篮球运动队 WHERE 所属国家 = 'GB' AND 现在世界排名 >= 2)
hard gold: select T2.队名,T3.队名 from 奥运会交手记录 AS T1 JOIN 篮球运动队 AS T2 ON T1.对手id = T2.id JOIN 篮球运动队 AS T3 ON T1.球队id = T3.id where T1.奥运会 = "2012年伦敦奥运会" and T1.赛事类型 = "半决赛"

hard pred: SELECT * FROM 奥运会成绩 WHERE 年份 = 2012 AND 运动队id IN (SELECT 队名 FROM 篮球运动队 WHERE 所属国家 = 'GB' AND 现在世界排名 <= 4)
hard gold: select T2.队名,T3.队名 from 奥运会交手记录 AS T1 JOIN 篮球运动队 AS T2 ON T1.对手id = T2.id JOIN 篮球运动队 AS T3 ON T1.球队id = T3.id where T1.奥运会 = "2012年伦敦奥运会" and T1.赛事类型 = "决赛"

medium pred: SELECT 赛事类型, 比赛日期 FROM 奥运会交手记录 WHERE 球队id IN (SELECT 队名 FROM 篮球运动队 WHERE 所属国家 = 'GB' AND 现在世界排名 <= 4)
medium gold: select T1.比赛日期 from 奥运会交手记录 AS T1 JOIN 篮球运动队 AS T2 ON T1.对手id = T2.id where T1.奥运会 = "2012年伦敦奥运会" and T1.赛事类型 = "决赛"

medium pred: SELECT 主教练 FROM 奥运会成绩 WHERE 年份 = 2016
medium gold: select T1.主教练 from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where T1.奥运会名称 = "2016年巴西奥运会" and T2.队名 = "阿根廷男篮国家队"

easy pred: SELECT * FROM 奥运会成绩 WHERE 运动队id = (SELECT id FROM 篮球运动队 WHERE 队名 = '阿根廷男篮国家队')
easy gold: select 现任主教练 from 篮球运动队 where 队名 = "阿根廷男篮国家队"

eval_err_num:402
easy pred: SELECT 世界排名 FROM 篮球运动队 WHERE id IN (SELECT id FROM 篮球运动队 WHERE 队名 = '阿根廷男篮国家队')
easy gold: select 现在世界排名 from 篮球运动队 where 队名 = "阿根廷男篮国家队"

hard pred: SELECT 队名, 成立时间 FROM 篮球运动队
hard gold: select 队名 from 篮球运动队 where 成立时间 = (select min(成立时间) from 篮球运动队)

eval_err_num:403
extra pred: SELECT 国家, 实力 FROM 奥运会成绩
extra gold: select 所属国家,现在世界排名 from 篮球运动队 where 成立时间 = (select min(成立时间) from 篮球运动队)

eval_err_num:404
hard pred: SELECT 主教练, 训练方式 FROM 奥运会交手记录
hard gold: select 现任主教练 from 篮球运动队 where 成立时间 = (select min(成立时间) from 篮球运动队)

extra pred: SELECT * FROM 奥运会交手记录
extra gold: select T1.奥运会名称 from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where T2.成立时间 = (select min(成立时间) from 篮球运动队)

easy pred: SELECT * FROM 产品销售 WHERE 季度 = '2022'
easy gold: select 名称 from 音箱产品

eval_err_num:405
medium pred: SELECT * FROM 音箱产品 WHERE 所属公司 = '中国'
medium gold: select T1.名称 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id where T2.所属国家 = "中国"

eval_err_num:406
extra pred: SELECT COUNT(*) as num, 音箱id, COUNT(*)-num as rank from 音箱产品 GROUP BY 音箱id order by rank DESC
extra gold: select T1.名称 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id where T2.所属国家 = "中国" order by T1.排名 limit 1

eval_err_num:407
extra pred: SELECT 音箱产品.名称 FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.音箱id WHERE 产品销售.季度 = (SELECT 季度 FROM 产品销售 WHERE 销售量 = (SELECT 销售量 FROM 产品销售 WHERE 产品id = 1234))
extra gold: select T2.名称 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where T1.销售量 = (select max(销售量) from 产品销售)

eval_err_num:408
extra pred: SELECT 音箱产品.名称, 销售量增长 FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.音箱id WHERE 产品销售.季度 = (SELECT 季度 FROM 产品销售 WHERE 销售量 = (SELECT 销售量 FROM 产品销售 WHERE 产品id = 1234))
extra gold: select T2.名称 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where T1.销售量 = (select max(销售量) from 产品销售) order by T1.销售量增长 desc limit 1

eval_err_num:409
extra pred: SELECT 音箱产品.名称, 销售量增长 FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.音箱id WHERE 产品销售.季度 = (SELECT 季度 FROM 产品销售 WHERE 销售量 = (SELECT 销售量 FROM 产品销售 WHERE 产品id = 1234))
extra gold: select T1.销售量增长 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where T1.销售量 = (select max(销售量) from 产品销售) order by T1.销售量增长 desc limit 1

eval_err_num:410
extra pred: SELECT 音箱产品.名称, 产品销售.排名, 产品销售.上升名次 FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.音箱id WHERE 产品销售.季度 = (SELECT 季度 FROM 产品销售 WHERE 销售量 = (SELECT 销售量 FROM 产品销售 WHERE 产品id = 1234)) ORDER BY 产品销售.上升名次, 产品销售.名称 LIMIT 10
extra gold: select T2.排名 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where T1.销售量 = (select max(销售量) from 产品销售) order by T1.销售量增长 desc limit 1

eval_err_num:411
extra pred: SELECT 音箱产品.名称, 公司.排名 FROM 音箱产品 INNER JOIN 公司 ON 音箱产品.所属公司id = 公司.id WHERE 公司.所属国家 = 'US' LIMIT 1
extra gold: select T3.名称 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id JOIN 公司 AS T3 ON T2.所属公司id = T3.id where T1.销售量 = (select max(销售量) from 产品销售) order by T1.销售量增长 desc limit 1

eval_err_num:412
hard pred: SELECT 音箱id, 价格 FROM 音箱产品 WHERE 所属公司id = 1
hard gold: select 名称 from 音箱产品 where 售价 = (select min(售价) from 音箱产品)

extra pred: SELECT * FROM 音箱产品 WHERE 所属公司id = 1
extra gold: select T1.销售量 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where T2.售价 = (select min(售价) from 音箱产品)

eval_err_num:413
hard pred: SELECT 排名 FROM 产品销售 WHERE 产品id = ( SELECT 音箱id FROM 音箱产品 WHERE 所属公司id = 1 )
hard gold: select 排名 from 音箱产品 where 售价 = (select min(售价) from 音箱产品)

eval_err_num:414
extra pred: SELECT 公司名称, 产品名称 FROM 公司 WHERE id = ( SELECT id FROM 音箱产品 WHERE 所属公司id = 1 )
extra gold: select T2.名称 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id where T1.售价 = (select min(售价) from 音箱产品)

eval_err_num:415
medium pred: SELECT * FROM "商家平台活动" WHERE "商家id" = 1 AND "平台id" = (SELECT MAX(平台id) FROM "平台")
medium gold: select 商家 from 商家 where 类型 like ("%快餐%")

eval_err_num:416
extra pred: SELECT * FROM "商家平台活动" ORDER BY "评分" DESC, "平台id" DESC LIMIT 10, 10
extra gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T2.类型 like ("%快餐%") order by T1.评分 desc

eval_err_num:417
extra pred: SELECT * FROM "商家平台活动" ORDER BY "月售单数" DESC, "评分" DESC LIMIT 10, 10
extra gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T2.类型 like ("%快餐%") order by T1.月售单数 desc limit 1

eval_err_num:418
easy pred: SELECT 球员id, 篮球运动员.中文名, 篮球运动员.参加选秀年, 篮球运动员.是否状元, 球队.夺冠次数 FROM 篮球运动员 JOIN 球队 ON 篮球运动员.球员id = 球队.球员id JOIN NBA总冠军 ON 球队.球队id = NBA总冠军.球队id WHERE NBA总冠军.赛季 = (SELECT 赛季 FROM NBA总冠军 WHERE 球队id = 1)
easy gold: select distinct T2.中文名 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id

eval_err_num:419
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select T2.中文名, count(*) from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id group by T2.中文名

eval_err_num:420
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select T1.赛季, T3.中文队名 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id JOIN 球队 AS T3 ON T1.所属球队 = T3.球队id where T2.中文名 = "库里"

eval_err_num:421
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select count(*) from NBA总冠军 AS T3 where T3.赛季 in (select T1.赛季 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id where T2.中文名 = "库里") AND T3.球队id in (select T4.所属球队 from MVP记录 AS T4 JOIN 篮球运动员 AS T5 ON T4.球员id = T5.球员id where T5.中文名 = "库里")

eval_err_num:422
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T3.总教练 from NBA总冠军 AS T3 where T3.赛季 in (select T1.赛季 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id where T2.中文名 = "库里") AND T3.球队id in (select T4.所属球队 from MVP记录 AS T4 JOIN 篮球运动员 AS T5 ON T4.球员id = T5.球员id where T5.中文名 = "库里")

eval_err_num:423
extra pred: SELECT 支球队.球队id, 篮球运动员.球员id, NBA总冠军.赛季 FROM 支球队, 篮球运动员, NBA总冠军 WHERE 篮球运动员.球员id IN ( SELECT 球员id FROMMVP记录 WHERE 赛季 = ( SELECT 赛季 FROM NBA总冠军 WHERE 球队id = ( SELECT 球队id FROM 球队 WHERE 中文队名 = '清华大学' LIMIT 1 ) ) ) GROUP BY 球队id, 中文队名 ORDER BY 冠军次数 DESC LIMIT 1
extra gold: select T2.毕业院校 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id group by T2.毕业院校 order by count(distinct T2.球员id) desc limit 1

eval_err_num:424
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select 毕业院校 from 篮球运动员 where 是否状元 = "是" group by 毕业院校 order by count(*) desc limit 1

eval_err_num:425
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select count(*) from 篮球运动员 where 是否状元 = "是" AND 毕业院校 like "杜克%"

hard pred: SELECT * FROM 商家 WHERE 商家id IN ( SELECT 商家id FROM 商家平台活动 WHERE 平台id = '平台' AND 优惠活动 = '优惠活动' )
hard gold: select T2.平台名 from 商家平台活动 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T1.商家id = T3.商家id where T3.商家 = "吉野家"

eval_err_num:426
hard pred: SELECT评分, SUM(月售单数) AS 销量 FROM 商家平台活动 WHERE 商家id IN ( SELECT 商家id FROM 商家 WHERE 类型 = '商家' ) AND 平台id IN ( SELECT 平台id FROM 平台 WHERE 市场占比 = '市场占比' )
hard gold: select T2.平台名, T1.评分, T1.月售单数 from 商家平台活动 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T1.商家id = T3.商家id where T3.商家 = "吉野家"

eval_err_num:427
hard pred: SELECT评分, 配送费 FROM 商家平台活动 WHERE 商家id IN ( SELECT 商家id FROM 商家 WHERE 类型 = '商家' ) AND 平台id IN ( SELECT 平台id FROM 平台 WHERE 市场占比 = '市场占比' )
hard gold: select T2.平台名, T1.配送费 from 商家平台活动 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T1.商家id = T3.商家id where T3.商家 = "吉野家"

eval_err_num:428
medium pred: SELECT * FROM "商家平台活动" WHERE "商家id" < 20
medium gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T1.起送价格 < 20

eval_err_num:429
hard pred: SELECT COUNT(*) FROM "商家平台活动" WHERE "商家id" < 20
hard gold: select count(T2.商家) from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T1.起送价格 < 20 and T2.类型 like ("%快餐%")

eval_err_num:430
extra pred: SELECT评分, COUNT(*) FROM "商家平台活动" GROUP BY评分 ORDER BY评分 ASC LIMIT 10
extra gold: select T2.商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T1.起送价格 < 20 and T2.类型 like ("%快餐%") order by T1.评分

eval_err_num:431
extra pred: SELECT "商家id", "平台id", "优惠活动", "配送费", "评分", "月售单数" FROM "商家平台活动" ORDER BY "商家id" ASC, "平台id" ASC, "优惠活动", "配送费", "评分", "月售单数" ASC LIMIT 10
extra gold: select T2.商家, T1.配送费 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T1.起送价格 < 20 and T2.类型 like ("%快餐%") order by T1.评分

eval_err_num:432
medium pred: SELECT * FROM "平台" WHERE市场占比 = (SELECT MAX(市场占比) FROM "商家") AND 平台名 = '外卖软件'
medium gold: select 平台名 from 平台 order by 市场占比 desc limit 1

eval_err_num:433
medium pred: SELECT * FROM "平台" WHERE市场占比 = (SELECT MIN(市场占比) FROM "商家") AND 平台名 = '外卖软件'
medium gold: select 平台名 from 平台 order by 市场占比 limit 1

eval_err_num:434
extra pred: SELECT * FROM "平台" WHERE 市场占比 = (SELECT COUNT(*) FROM "商家" WHERE 商家名 = '商家平台活动' AND 平台名 = '外卖软件') AND 平台名 = '外卖软件'
extra gold: select T3.商家 from 商家平台活动 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T1.商家id = T3.商家id where T2.平台名 = (select 平台名 from 平台 order by 市场占比 desc limit 1) or T2.平台名 = (select 平台名 from 平台 order by 市场占比 limit 1)

eval_err_num:435
extra pred: SELECT * FROM "商家平台活动" WHERE优惠活动 = (SELECT 优惠活动 FROM "商家" WHERE 商家名 = '商家平台活动' AND 平台名 = '外卖软件') AND 月份 = '2022'
extra gold: select T3.商家, T1.优惠活动 from 商家平台活动 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id JOIN 商家 AS T3 ON T1.商家id = T3.商家id where T2.平台名 = (select 平台名 from 平台 order by 市场占比 desc limit 1) or T2.平台名 = (select 平台名 from 平台 order by 市场占比 limit 1)

eval_err_num:436
medium pred: SELECT * FROM "台风影响的国家" WHERE "台风id" = (SELECT MAX("台风id") FROM "台风影响的国家")
medium gold: select 名称 from 台风 order by 经济损失 desc limit 1

eval_err_num:437
medium pred: SELECT * FROM "台风影响的国家" WHERE "台风id" IN (SELECT "台风id" FROM "台风影响的国家" WHERE "经济损失" > 0)
medium gold: select 死亡人数 from 台风 order by 经济损失 desc limit 1

eval_err_num:438
extra pred: SELECT * FROM "台风影响的国家" WHERE "台风id" IN (SELECT "台风id" FROM "台风影响的国家" WHERE "经济损失" > 0)
extra gold: select T1.国家 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T2.名称 = (select T3.名称 from 台风 AS T3 order by T3.经济损失 desc limit 1)

eval_err_num:439
extra pred: SELECT 经济损失 AS total_loss FROM "台风影响的国家" WHERE "台风id" IN (SELECT "台风id" FROM "台风影响的国家" WHERE "经济损失" > 0)
extra gold: select T1.国家, T1.经济损失 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T2.名称 = (select T3.名称 from 台风 AS T3 order by T3.经济损失 desc limit 1)

eval_err_num:440
extra pred: SELECT * FROM "台风影响的中国省份" AS a INNER JOIN "台风影响的国家" AS b ON a."台风id" = b."台风id" AND a."省份" = b."国家"
extra gold: select T1.省份, T1.死亡人数 + T1.失踪人数 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T2.名称 = (select T3.名称 from 台风 AS T3 order by T3.经济损失 desc limit 1)

eval_err_num:441
medium pred: SELECT COUNT(*) FROM "台风影响的中国省份" WHERE "台风id" IN ( SELECT "台风id" FROM "台风" WHERE "名称" = '广东' ) + SELECT COUNT(*) FROM "台风影响的国家" WHERE "台风id" IN ( SELECT "台风id" FROM "台风" WHERE "名称" = '广东' ) + SELECT COUNT(*) FROM "台风" WHERE "台风id" IN ( SELECT "台风id" FROM "台风" WHERE "名称" = '广东' )
medium gold: select count(*) from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T1.省份 = "广东" AND T2.登陆时间 > 1949

eval_err_num:442
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select sum(T1.死亡人数 + T1.失踪人数) from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T1.省份 = "广东" AND T2.登陆时间 > 1949

eval_err_num:443
extra pred: SELECT CASE WHEN "台风id" IN ( SELECT "台风id" FROM "台风影响的国家" WHERE "国家" = '中国' AND "名称" = '1949年以来' ) THEN 1 ELSE 2 END AS 最多次数 FROM "台风影响的中国省份" WHERE "台风id" = '广东'
extra gold: select T2.名称 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T1.省份 = "广东" AND T2.登陆时间 > 1949 order by T1.死亡人数 + T1.失踪人数 desc limit 1

eval_err_num:444
medium pred: SELECT SUM(CASE WHEN "玛琪" IN ( SELECT "玛琪" FROM "台风影响的国家" WHERE "国家" = '中国' AND "名称" = '1949年以来' ) THEN 10 ELSE 0 END) AS 经济损失 FROM "台风影响的国家" WHERE "国家" = '中国' AND "名称" = '1949年以来'
medium gold: select 经济损失 from 台风 where 名称 like "玛琪%"

eval_err_num:445
hard pred: SELECT COUNT(DISTINCT "玛琪" WHERE "国家" = '中国') AS 受影响的国家数量 FROM "台风影响的国家" WHERE "国家" = '中国'
hard gold: select T1.国家 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T2.名称 like "玛琪%" AND T1.国家 != "中国"

eval_err_num:446
hard pred: SELECT SUM(DISTINCT "玛琪" WHERE "国家" = '中国' AND "名称" = '1949年以来') AS 经济损失 FROM "台风影响的国家" WHERE "国家" = '中国' AND "名称" = '1949年以来'
hard gold: select sum(T1.经济损失) from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T2.名称 like "玛琪%" AND T1.国家 != "中国"

eval_err_num:447
extra pred: SELECT 音箱产品.名称 FROM 产品销售 WHERE (SELECT COUNT(*) FROM 产品销售 WHERE 产品id = 产品销售.产品id AND 季度 = 1) > (SELECT COUNT(*) FROM 产品销售 WHERE 产品id = 产品销售.产品id AND 季度 = 2)
extra gold: select T2.名称 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id group by T2.名称 order by avg(T1.销售量) desc limit 1

eval_err_num:448
extra pred: SELECT 公司.名称 FROM 公司 INNER JOIN 音箱产品 ON 公司.id = 音箱产品.所属公司id INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.产品id WHERE 产品销售.季度 = 1
extra gold: select T3.名称 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id JOIN 公司 AS T3 ON T2.所属公司id = T3.id group by T2.名称 order by avg(T1.销售量) desc limit 1

eval_err_num:449
extra pred: SELECT price FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.产品id WHERE 产品销售.季度 = 1
extra gold: select T2.售价 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id group by T2.名称 order by avg(T1.销售量) desc limit 1

eval_err_num:450
hard pred: SELECT 音箱产品.名称 FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.产品id WHERE 产品销售.季度 = 1 AND price < 10000
hard gold: select T4.名称 from 音箱产品 AS T4 where T4.售价 < (select T2.售价 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id group by T2.名称 order by avg(T1.销售量) desc limit 1)

eval_err_num:451
hard pred: NO SQL FOUND
hard gold: select T1.名称 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id where T2.名称 like "百度"

eval_err_num:452
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T1.名称, T3.销售量 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id JOIN 产品销售 AS T3 ON T1.音箱id = T3.产品id where T2.名称 like "百度" AND T3.季度 = 1

eval_err_num:453
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T1.名称, T3.销售量增长 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id JOIN 产品销售 AS T3 ON T1.音箱id = T3.产品id where T2.名称 like "百度" AND T3.季度 = 1

eval_err_num:454
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T1.名称 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id where T2.名称 like "百度" order by T1.售价 asc limit 1

eval_err_num:455
easy pred: NO SQL FOUND
easy gold: select avg(售价) from 音箱产品

eval_err_num:456
easy pred: NO SQL FOUND
easy gold: select 名称 from 音箱产品 where 售价 < 200

eval_err_num:457
medium pred: NO SQL FOUND
medium gold: select 名称, 售价 from 音箱产品 where 售价 < 200

eval_err_num:458
extra pred: NO SQL FOUND
extra gold: select T2.名称, sum(T1.销售量) from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where T2.名称 in (select T4.名称 from 音箱产品 AS T4 where T4.售价 < 200) AND T1.季度 <= 3 GROUP BY T2.名称

eval_err_num:459
easy pred: SELECT 型号 FROM 电视机平台售卖 JOIN 电视机型号 ON 型号id = 电视机型号.型号id WHERE 平台 = 'PC' AND 型号id IN (SELECT 型号id FROM 电视机品牌 WHERE 品牌名 = 'TV')
easy gold: select 型号 from 电视机型号 where 产品定位 = "小户型优选"

eval_err_num:460
medium pred: SELECT * FROM 电视机型号 JOIN 电视机平台售卖 ON 型号id = 电视机型号.型号id WHERE 平台 = 'PC' AND 性别 = '男性'
medium gold: select 屏幕尺寸, 屏幕比例,分辨率 from 电视机型号 where 产品定位 = "小户型优选"

eval_err_num:461
easy pred: SELECT price FROM 电视机平台售卖 JOIN 电视机型号 ON 型号id = 电视机型号.型号id WHERE 平台 = 'PC' AND 型号id IN (SELECT 型号id FROM 电视机品牌 WHERE 品牌名 = 'TV')
easy gold: select 定价 from 电视机型号 where 产品定位 = "小户型优选"

eval_err_num:462
hard pred: NO SQL FOUND
hard gold: select 型号 from 电视机型号 where 定价 = (select max(定价) from 电视机型号)

eval_err_num:463
hard pred: NO SQL FOUND
hard gold: select 定价 from 电视机型号 where 定价 = (select max(定价) from 电视机型号)

eval_err_num:464
extra pred: NO SQL FOUND
extra gold: select 屏幕尺寸,屏幕比例,分辨率 from 电视机型号 where 定价 = (select max(定价) from 电视机型号)

eval_err_num:465
medium pred: SELECT 电视品牌.品牌id, 电视品牌.品牌名, 各城市电视机销量.城市, 各城市电视机销量.省份, 各城市电视机销量.电视机售卖量, 电视机售卖量.观看电视日平均用时 FROM 电视机品牌 INNER JOIN 各城市电视机销量 ON 电视机品牌.品牌id = 各城市电视机销量.品牌id INNER JOIN 电视机平台售卖 ON 电视机品牌.品牌id = 电视机平台售卖.型号id INNER JOIN 电视机型号 ON 电视机平台售卖.型号id = 电视机型号.型号id WHERE 电视机型号.型号id = ( SELECT 型号id FROM 电视机型号 WHERE 产品定位 = '电视机' ) ORDER BY 观看电视日平均用时 DESC
medium gold: select 省份,观看电视日平均用时 from 各城市电视机销量

eval_err_num:466
easy pred: SELECT 电视品牌.品牌id, 电视品牌.品牌名, 各城市电视机销量.城市, 各城市电视机销量.省份, 各城市电视机销量.电视机售卖量, 电视机售卖量.观看电视日平均用时 FROM 电视品牌 INNER JOIN 各城市电视机销量 ON 电视品牌.品牌id = 各城市电视机销量.品牌id INNER JOIN 电视机平台售卖 ON 电视品牌.品牌id = 电视机平台售卖.型号id INNER JOIN 电视机型号 ON 电视机平台售卖.型号id = 电视机型号.型号id WHERE (SELECT 型号id FROM 电视机型号 WHERE 产品定位 = '电视机' ) = ( SELECT 型号id FROM 电视机型号 WHERE 产品定位 = '电视机' ) ORDER BY 观看电视日平均用时 DESC
easy gold: select 电视机售卖量 from 各城市电视机销量 where 省份 = "陕西"

eval_err_num:467
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 品牌名 from 电视机品牌

eval_err_num:468
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 品牌名,国家 from 电视机品牌

eval_err_num:469
medium pred: SELECT 型号id, 产品定位, 屏幕尺寸, 屏幕比例, 分辨率, 背光灯寿命, 定价 FROM 电视机平台售卖 JOIN 电视机型号 ON 电视机平台售卖.型号id = 电视机型号.型号id JOIN 电视机品牌 ON 电视机平台售卖.品牌id = 电视机品牌.品牌id WHERE 平台 = '拼多多' ORDER BY 售卖量 DESC
medium gold: select T2.型号 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where 平台 = "拼多多"

eval_err_num:470
medium pred: SELECT 定价 FROM 电视机平台售卖 WHERE 平台 = '拼多多' ORDER BY 售卖量 DESC
medium gold: select T1.当前售价 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where 平台 = "拼多多"

eval_err_num:471
medium pred: SELECT 定价 FROM 电视机平台售卖 WHERE 平台 = '拼多多' ORDER BY 售卖量 DESC, 定价 DESC
medium gold: select T1.当前售价,T1.最低价格 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where 平台 = "拼多多"

eval_err_num:472
easy pred: SELECT * FROM 电视机品牌 WHERE 品牌id IN ( SELECT 品牌id FROM 各城市电视机销量 WHERE 城市 = '北京' ORDER BY 售卖量 DESC LIMIT 1 ) SELECT * FROM 电视机平台售卖 WHERE 型号id IN ( SELECT 型号id FROM 电视机型号 WHERE 产品定位 = '游戏' ORDER BY 售卖量 DESC LIMIT 1 ) SELECT * FROM 电视机型号 WHERE 品牌id IN ( SELECT 品牌id FROM 电视机品牌 WHERE 国家 = '中国' ORDER BY 市场份额 DESC LIMIT 1 )
easy gold: select 型号 from 电视机型号 where 产品定位 = "3D超强体验"

medium pred: SELECT 屏幕尺寸, 分辨率 FROM 电视机型号 WHERE 品牌id IN ( SELECT 品牌id FROM 电视机品牌 WHERE 国家 = '中国' ORDER BY 市场份额 DESC LIMIT 1 )
medium gold: select 屏幕尺寸,分辨率 from 电视机型号 where 产品定位 = "3D超强体验"

eval_err_num:473
easy pred: SELECT 定价 FROM 电视机平台售卖 WHERE 型号id IN ( SELECT 型号id FROM 电视机型号 WHERE 产品定位 = '游戏' ORDER BY 售卖量 DESC LIMIT 1 )
easy gold: select 定价 from 电视机型号 where 产品定位 = "3D超强体验"

eval_err_num:474
medium pred: SELECT 平台, 当前售价, 最高价格, 最低价格, 售卖量, 用户评分 FROM 电视机平台售卖 WHERE 型号id IN ( SELECT 型号id FROM 电视机型号 WHERE 产品定位 = '游戏' ORDER BY 售卖量 DESC LIMIT 1 ) GO SELECT * FROM 电视机品牌 WHERE 品牌id IN ( SELECT 品牌id FROM 电视机品牌 WHERE 国家 = '中国' ORDER BY 市场份额 DESC LIMIT 1 )
medium gold: select T1.平台,T1.当前售价 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where T2.产品定位 = "3D超强体验"

eval_err_num:475
medium pred: SELECT 购买量, 用户评分 FROM 购买记录 WHERE 价格 IN ( SELECT 定价 FROM 价格表 WHERE 产品 = '电视机' ORDER BY 价格 DESC LIMIT 1 ) GO SELECT * FROM 购买记录 WHERE 购买量 IN ( SELECT 购买量 FROM 购买记录 WHERE 购买时间 = '2022-01-01' ORDER BY 购买时间 ASC LIMIT 1 )
medium gold: select T1.售卖量,T1.用户评分 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where T2.产品定位 = "3D超强体验"

eval_err_num:476
hard pred: SELECT 型号id, 屏幕尺寸, 屏幕比例, 分辨率, 背光灯寿命, 定价 FROM 电视机平台售卖 ORDER BY 屏幕尺寸 DESC LIMIT 1
hard gold: select 型号 from 电视机型号 where 屏幕尺寸 = (select max(屏幕尺寸) from 电视机型号)

eval_err_num:477
extra pred: SELECT 型号id, 屏幕尺寸, 屏幕比例, 分辨率, 背光灯寿命, 定价 FROM 电视机平台售卖 WHERE 屏幕尺寸 IN (SELECT 屏幕尺寸 FROM 电视机品牌 WHERE 品牌id = 20) ORDER BY 屏幕尺寸 DESC, 屏幕比例 DESC LIMIT 1
extra gold: select 屏幕尺寸,屏幕比例 from 电视机型号 where 屏幕尺寸 = (select max(屏幕尺寸) from 电视机型号)

eval_err_num:478
extra pred: SELECT 品牌名, 公司, 国家, 市场份额 FROM 各城市电视机销量 WHERE 城市 = '北京' FOREIGN KEY (城市) REFERENCES 各城市电视机销量 (城市) FOREIGN KEY (市场份额) REFERENCES 各城市电视机销量 (市场份额)
extra gold: select T2.品牌名 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id where T1.屏幕尺寸 = (select max(屏幕尺寸) from 电视机型号)

eval_err_num:479
extra pred: SELECT 品牌名, 公司, 国家, 市场份额 FROM 电视机品牌 WHERE 品牌名 = '国产' FOREIGN KEY (品牌名) REFERENCES 电视机品牌 (品牌名)
extra gold: select T2.国家 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id where T1.屏幕尺寸 = (select max(屏幕尺寸) from 电视机型号)

eval_err_num:480
extra pred: SELECT 品牌名, 公司, 国家, 市场份额 FROM 电视机品牌 WHERE 品牌名 = '国产' FOREIGN KEY (品牌名) REFERENCES 电视机品牌 (品牌名) ORDER BY 市场份额 DESC LIMIT 1
extra gold: select T2.市场份额 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id where T1.屏幕尺寸 = (select max(屏幕尺寸) from 电视机型号)

eval_err_num:481
easy pred: CREATE TABLE 电视机品牌 ( 品牌id TEXT PRIMARY KEY, 品牌名 TEXT, 公司 TEXT, 国家 TEXT, 市场份额 number ); CREATE TABLE 各城市电视机销量 ( 城市 TEXT, 省份 TEXT, 电视机售卖量 number, 观看电视日平均用时 number ); CREATE TABLE 电视机平台售卖 ( 型号id number, 平台 TEXT, 当前售价 number, 最高价格 number, 最低价格 number, 售卖量 number, 用户评分 number ); CREATE TABLE 电视机型号 ( 型号id TEXT PRIMARY KEY, 型号 text, 产品定位 text, 屏幕尺寸 number, 屏幕比例 text, 分辨率 number, 背光灯寿命 number, 定价 number, 品牌id number, FOREIGN KEY (品牌id) REFERENCES 电视机品牌 (品牌id), FOREIGN KEY (型号id) REFERENCES 电视机型号 (型号id) )
easy gold: select 品牌名 from 电视机品牌 where 国家 = "中国"

eval_err_num:482
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select 品牌名 from 电视机品牌 where 国家 = "中国" order by 市场份额 desc limit 1

extra pred: SELECT * FROM 电视机型号 WHERE 型号id IN ( SELECT 型号id FROM 电视机平台售卖 )
extra gold: select T1.型号 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id where T2.国家 = "中国" order by T2.市场份额 desc limit 1

eval_err_num:483
extra pred: SELECT price FROM 电视机平台售卖 WHERE 型号id IN ( SELECT 型号id FROM 电视机型号 )
extra gold: select T1.定价 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id where T2.国家 = "中国" order by T2.市场份额 desc limit 1

eval_err_num:484
easy pred: SELECT * FROM 电视机品牌 WHERE 品牌id IN (SELECT 品牌id FROM 电视机平台售卖 WHERE 型号id IN (SELECT 型号id FROM 电视机型号))
easy gold: select 型号 from 电视机型号 where 产品定位 = "超薄超轻"

eval_err_num:485
easy pred: SELECT price FROM 电视机品牌 WHERE brandid IN (SELECT brandid FROM 电视机平台售卖 WHERE 型号id IN (SELECT 型号id FROM 电视机型号))
easy gold: select 定价 from 电视机型号 where 产品定位 = "超薄超轻"

eval_err_num:486
medium pred: SELECT * FROM 在线平台售卖 WHERE 平台id IN (SELECT 平台id FROM 在线平台 WHERE 商品id IN (SELECT 商品id FROM 商品 WHERE 品牌id IN (SELECT 品牌id FROM 电视机品牌 WHERE 型号id IN (SELECT 型号id FROM 电视机型号)))))
medium gold: select T1.平台 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where T2.产品定位 = "超薄超轻"

medium pred: SELECT 品牌id, 市场份额 FROM 电视机品牌 ORDER BY 市场份额 DESC LIMIT 1
medium gold: select 品牌名 from 电视机品牌 order by 市场份额 desc limit 1

eval_err_num:487
hard pred: SELECT型号id, 型号 FROM 电视机型号 WHERE 品牌id = ( SELECT 品牌id FROM 电视机品牌 ORDER BY 市场份额 DESC LIMIT 1 )
hard gold: select 型号 from 电视机型号 where 品牌id = (select 品牌id from 电视机品牌 order by 市场份额 desc limit 1)

extra pred: SELECT 型号id, 当前售价 FROM 电视机平台售卖 WHERE 当前售价 = ( SELECT 定价 FROM 电视机型号 ORDER BY 定价 DESC LIMIT 1 )
extra gold: select 型号 from 电视机型号 where 品牌id = (select 品牌id from 电视机品牌 order by 市场份额 desc limit 1) order by 定价 asc limit 1

easy pred: SELECT * FROM 电视机型号
easy gold: select 型号 from 电视机型号

eval_err_num:488
medium pred: SELECT 品牌名, 公司, 国家, 市场份额, 各城市电视机销量, 电视机平台售卖, 型号id, 品牌id, 产品定位, 屏幕尺寸, 屏幕比例, 分辨率, 背光灯寿命, 定价 FROM 电视机品牌
medium gold: select t1.型号,t2.公司 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id

eval_err_num:489
medium pred: SELECT 品牌名, 公司, 国家, 市场份额, 各城市电视机销量, 电视机平台售卖, 型号id, 品牌id, 产品定位, 屏幕尺寸, 屏幕比例, 分辨率, 背光灯寿命, 定价 FROM 电视机品牌
medium gold: select t1.型号,t2.品牌名 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id

eval_err_num:490
medium pred: SELECT AVG(定价) AS avg_price FROM ( SELECT 定价, COUNT(*) AS num FROM 电视机平台售卖 GROUP BY 定价 ) t ORDER BY num DESC
medium gold: select avg(t1.定价),t2.品牌名 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id group by t2.品牌名

eval_err_num:491
hard pred: SELECT 商店名, 应用商店支持国家 FROM "应用商店" JOIN "应用商店支持国家" ON 商店id = 应用商店支持国家 id JOIN "软件" ON 软件id = 商店id WHERE 应用商店支持国家.用户是否可以购买应用程序 = 0 GROUP BY 商店名, 应用商店支持国家 ORDER BY下载量 DESC,好评数 DESC LIMIT 1
hard gold: select T2.商店名 from 软件下载 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id JOIN 软件 AS T3 ON T1.软件id = T3.软件id where T3.名称 = "滴滴打车"

eval_err_num:492
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select T1.用户是否可以购买应用程序 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id where T2.商店名 = "Google play"

eval_err_num:493
medium pred: SELECT 商店名, 应用商店支持国家 FROM "应用商店" JOIN "应用商店支持国家" ON 商店id = 应用商店支持国家 id JOIN "软件" ON 软件id = 商店id WHERE 应用商店支持国家.用户是否可以购买应用程序 = 1 GROUP BY 商店名, 应用商店支持国家 ORDER BY下载量 DESC,好评数 DESC LIMIT 1
medium gold: select T1.开发人员是否可以出售应用程序 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id where T2.商店名 = "Google play"

eval_err_num:494
hard pred: SELECT * FROM "应用商店" WHERE "应用软件数" = ( SELECT MAX(应用软件数) FROM "应用商店" GROUP BY "商店名" )
hard gold: select 商店名 from 应用商店 where 应用软件数 = (select max(应用软件数) from 应用商店)

eval_err_num:495
hard pred: SELECT "用户量" as user_count, "用户累计下载次数" as user_total_download_次数, COUNT(*) as user_count_total FROM "应用商店" WHERE "商店名" = ( SELECT "商店名" FROM "应用商店" GROUP BY "商店名" HAVING MAX(user_total_download_次数) = ( SELECT MAX(user_total_download_次数) FROM "应用商店" GROUP BY "商店名" ) )
hard gold: select 累计下载次数 from 应用商店 where 应用软件数 = (select max(应用软件数) from 应用商店)

eval_err_num:496
extra pred: SELECT "软件名称" FROM "应用商店支持国家" WHERE "应用商店id" = ( SELECT "商店id" FROM "应用商店" WHERE "应用软件数" > 0 LIMIT 1 )
extra gold: select T3.名称 from 软件下载 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id JOIN 软件 AS T3 ON T1.软件id = T3.软件id where T2.应用软件数 = (select max(应用软件数) from 应用商店)

eval_err_num:497
extra pred: SELECT "下载量" as "下载量_count", COUNT(*) as "下载量_total" FROM "软件下载" WHERE "应用商店id" = ( SELECT "商店id" FROM "应用商店" WHERE "应用软件数" > 0 LIMIT 1 )
extra gold: select T1.下载量 from 软件下载 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id JOIN 软件 AS T3 ON T1.软件id = T3.软件id where T2.应用软件数 = (select max(应用软件数) from 应用商店)

eval_err_num:498
easy pred: SELECT 软件下载, count(软件id) as download_count FROM "应用商店" GROUP BY 应用商店id HAVING count(软件id) > 0 LIMIT 1
easy gold: select 应用软件数 from 应用商店 where 商店名 = "酷安"

eval_err_num:499
easy pred: SELECT COUNT(DISTINCT 用户id) as user_count FROM "应用商店支持国家" WHERE 国家 = '中国' GROUP BY 应用商店id HAVING user_count > 0
easy gold: select 累计下载次数 from 应用商店 where 商店名 = "酷安"

eval_err_num:500
medium pred: SELECT 应用商店id, CASE WHEN 用户不可以购买应用程序 THEN '中国' ELSE '其他国家' END as 国家_pattern, count(DISTINCT 用户id) as user_count FROM "应用商店支持国家" WHERE 国家 = '中国' GROUP BY 应用商店id HAVING user_count > 0 LIMIT 1
medium gold: select 国家 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id where T2.商店名 = "酷安" and 用户是否可以购买应用程序 = "是"

eval_err_num:501
medium pred: SELECT 商店id, CASE WHEN 开发人员不可以出售应用程序 THEN '中国' ELSE '其他国家' END as 国家_pattern, '应用程序可以出售' as 是否_可以买 FROM "应用商店支持国家" WHERE 国家 = '中国' GROUP BY 商店id HAVING 是否_可以买 > 0 LIMIT 1
medium gold: select 国家 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id where T2.商店名 = "酷安" and 开发人员是否可以出售应用程序 = "是"

eval_err_num:502
easy pred: SELECT * FROM "应用商店" JOIN "应用商店支持国家" ON "应用商店id" = "应用商店id" JOIN "软件" ON "软件id" = "应用商店id" WHERE "商店名" = '美妆' ORDER BY "下载量" DESC
easy gold: select 名称 from 软件 where 用途 = "美妆"

eval_err_num:503
hard pred: SELECT * FROM "应用商店" JOIN "应用商店支持国家" ON "应用商店id" = "应用商店id" JOIN "软件" ON "软件id" = "应用商店id" WHERE "商店名" = '美妆' AND "软件名称" = '软件' ORDER BY "下载量" DESC
hard gold: select T3.商店名 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id JOIN 应用商店 AS T3 ON T1.应用商店id = T3.商店id where T2.用途 = "美妆"

eval_err_num:504
medium pred: SELECT COUNT(*) FROM "应用商店" JOIN "应用商店支持国家" ON "应用商店id" = "应用商店id" JOIN "软件" ON "软件id" = "应用商店id" WHERE "商店名" = '美妆' AND "软件名称" = '软件'
medium gold: select T1.下载量 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id where T2.用途 = "美妆"

eval_err_num:505
medium pred: SELECT COUNT(*) FROM "软件下载" JOIN "应用商店支持国家" ON "应用商店id" = "应用商店id" JOIN "软件" ON "软件id" = "应用商店id" WHERE "软件id" = '软件' GROUP BY "软件id" ORDER BY COUNT(*) DESC
medium gold: select T1.好评数 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id where T2.用途 = "美妆"

eval_err_num:506
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T3.商店名 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id JOIN 应用商店 AS T3 ON T1.应用商店id = T3.商店id where T2.用途 = "美妆" order by T3.累计下载次数 desc limit 1

eval_err_num:507
extra pred: SELECT软件id,下载量,评价人数,好评数, FROM "软件下载" WHERE下载量 = ( SELECT MAX(下载量) FROM "应用商店支持国家" WHERE "商店id" = '商店id' )
extra gold: select T2.名称 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id where 下载量 = (select max(下载量) from 软件下载)

eval_err_num:508
extra pred: SELECT 应用商店id,下载量,评价人数,好评数, FROM "应用商店支持国家" WHERE "商店id" = ( SELECT MAX(下载量) FROM "应用商店" WHERE "商店name" = '商店名' )
extra gold: select T3.商店名 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id JOIN 应用商店 AS T3 ON T1.应用商店id = T3.商店id where T1.下载量 = (select max(下载量) from 软件下载)

eval_err_num:509
extra pred: SELECT软件id, 应用类型, FROM "软件" WHERE 应用类型 = ( SELECT 类型 FROM "软件下载" WHERE "软件id" = '软件id' )
extra gold: select T2.用途 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id where T1.下载量 = (select max(下载量) from 软件下载)

eval_err_num:510
easy pred: SELECT * FROM "应用商店" WHERE "商店名" IN ('Google Play Store', 'App Store') AND "应用软件数" > 0 AND "累计下载次数" > 0 AND "用户是否可以购买应用程序" = '1' AND "开发人员是否可以出售应用程序" = '1'
easy gold: select 商店名 from 应用商店

eval_err_num:511
medium pred: SELECT * FROM "应用商店" WHERE "商店名" IN ('Google Play Store', 'App Store') AND "应用软件数" > 0 AND "累计下载次数" > 0 AND "用户是否可以购买应用程序" = '1' AND "开发人员是否可以出售应用程序" = '1'
medium gold: select 商店名,应用软件数 from 应用商店

eval_err_num:512
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 商店名 from 应用商店 order by 应用软件数 desc limit 1

eval_err_num:513
medium pred: SELECT COUNT(*) FROM "应用商店" WHERE "商店名" IN ('Google Play Store', 'App Store') AND "应用软件数" > 0 AND "累计下载次数" = (SELECT 累计下载次数 FROM "应用商店" WHERE "商店名" = 'Google Play Store' ORDER BY 下载量 DESC LIMIT 1)
medium gold: select 累计下载次数 from 应用商店 order by 应用软件数 desc limit 1

eval_err_num:514
easy pred: CREATE TABLE 中国地铁 ( 年份 time, 总里程 number, 开通城市数量 number ); CREATE TABLE 城市 ( 城市id text PRIMARY KEY, 城市名称 text, 所属省份 text ); CREATE TABLE 城市地铁票价 ( 城市id number PRIMARY KEY, 列_2元可乘坐里程 number, 列_3元可乘坐里程 number, 列_4元可乘坐里程 number, 列_5元可乘坐里程 number ); CREATE TABLE 城市地铁里程 ( 城市id number PRIMARY KEY, 地铁运营里程 number, 在建里程 number, 规划里程 number, 已运营线路数 number, FOREIGN KEY (城市id) REFERENCES 城市 (城市id) ); CREATE TABLE 城市地铁日均客运量 ( 城市id number PRIMARY KEY, 日均客运量 number, 每日每公里客运量 number, 每公里运营成本 number, 每公里运营收入 number, FOREIGN KEY (城市id) REFERENCES 城市 (城市id) )
easy gold: select * from 中国地铁

eval_err_num:515
medium pred: SELECT 省份, 城市 FROM 中国地铁 WHERE 年份 = '2020'
medium gold: select 城市名称,所属省份 from 城市

eval_err_num:516
extra pred: SELECT 城市, 地铁运营里程 FROM 城市地铁里程表 WHERE 年份 = '2020'
extra gold: select T2.城市名称 from 城市地铁里程 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T1.地铁运营里程 = (select max(地铁运营里程) from 城市地铁里程)

eval_err_num:517
extra pred: SELECT 城市, 线路数 FROM 城市地铁线路表 WHERE 年份 = '2020'
extra gold: select T2.城市名称 from 城市地铁里程 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T1.已运营线路数 = (select max(已运营线路数) from 城市地铁里程)

eval_err_num:518
medium pred: CREATE TABLE 中国地铁 ( 年份 time , 总里程 number , 开通城市数量 number ) CREATE TABLE 城市 ( 城市id text PRIMARY KEY, 城市名称 text, 所属省份 text ) CREATE TABLE 城市地铁票价 ( 城市id number PRIMARY KEY, 列_2元可乘坐里程 number, 列_3元可乘坐里程 number, 列_4元可乘坐里程 number, 列_5元可乘坐里程 number ) CREATE TABLE 城市地铁里程 ( 城市id number PRIMARY KEY, 地铁运营里程 number, 在建里程 number, 规划里程 number, 已运营线路数 number ) CREATE TABLE 城市地铁日均客运量 ( 城市id number PRIMARY KEY, 日均客运量 number, 每日每公里客运量 number, 每公里运营成本 number, 每公里运营收入 number )
medium gold: select T1.已运营线路数 from 城市地铁里程 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.城市名称 = "广州"

eval_err_num:519
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select T1.在建里程 + T1.规划里程 from 城市地铁里程 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.城市名称 = "广州"

eval_err_num:520
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select T1.日均客运量 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.城市名称 = "广州"

eval_err_num:521
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select T2.城市名称 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T1.每公里运营收入 > T1.每公里运营成本

eval_err_num:522
medium pred: SELECT cityid, 每天每公里客运量, 每公里运营成本, 每公里运营收入 FROM 城市地铁日均客运量 INNER JOIN 城市地铁票价 ON cityid = 票价.城市id INNER JOIN 城市 ON cityid = 城市.城市id INNER JOIN 城市地铁里程 ON cityid = 里程.城市id INNER JOIN 城市地铁日均客运量 ON cityid = 日均客运量.城市id WHERE 城市.城市名称 = '中国地铁' AND 日期 = '2021-01-01' ORDER BY 每天每公里客运量 DESC LIMIT 10
medium gold: select T2.城市名称,T1.每公里运营成本,T1.每公里运营收入 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id

eval_err_num:523
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select T2.城市名称, T1.每日每公里客运量 * T1.每公里运营成本, T1.每日每公里客运量 * T1.每公里运营收入 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id

eval_err_num:524
medium pred: SELECT 城市id, MAX(列_2元可乘坐里程) as 列_2元可乘坐里程, MAX(列_3元可乘坐里程) as 列_3元可乘坐里程, MAX(列_4元可乘坐里程) as 列_4元可乘坐里程, MAX(列_5元可乘坐里程) as 列_5元可乘坐里程 FROM 城市地铁票价 GROUP BY 城市id ORDER BY MAX(列_2元可乘坐里程) DESC, MAX(列_3元可乘坐里程) DESC, MAX(列_4元可乘坐里程) DESC, MAX(列_5元可乘坐里程) DESC LIMIT 1
medium gold: select T2.城市名称 from 城市地铁票价 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T1.列_2元可乘坐里程 > "0"

eval_err_num:525
medium pred: SELECT 站名 as 站名, COUNT(*) as 站名数量 FROM 城市地铁里程 WHERE 列_2元可乘坐里程 = 2 GROUP BY 站名 ORDER BY 站名数量 DESC LIMIT 1
medium gold: select T1.列_2元可乘坐里程 from 城市地铁票价 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T1.列_2元可乘坐里程 > "0"

eval_err_num:526
extra pred: SELECT 城市 as 城市, 列_5元可乘坐里程 as 列_5元可乘坐里程, COUNT(*) as 列_5元可乘坐里程数量 FROM 城市地铁票价 WHERE 列_5元可乘坐里程 = 5 GROUP BY 城市 ORDER BY 列_5元可乘坐里程数量 DESC LIMIT 1
extra gold: select T2.城市名称 from 城市地铁票价 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T1.列_5元可乘坐里程 = (select min(列_5元可乘坐里程) from 城市地铁票价)

eval_err_num:527
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select T1.每公里运营成本 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.城市名称 = "武汉"

eval_err_num:528
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select T1.每公里运营成本 * T1.每日每公里客运量 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.城市名称 = "武汉"

eval_err_num:529
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 节日 from 民俗节日 where 时间 like '农历%'

eval_err_num:530
medium pred: CREATE TABLE 民俗节日 ( 节日 text, 民族id number, 时间 time, 纪念 text, FOREIGN KEY (民族id) REFERENCES 民族(词条id)) CREATE TABLE "民族" ( "民族id" text, "名称" text, "人口" number, "语言" text, "宗教信仰" text, PRIMARY KEY ("民族id") ) CREATE TABLE "民族城市" ( "民族id" number, "城市名称" text, "人口" number, "比例" number, FOREIGN KEY (民族id) REFERENCES "民族" ("民族id"), ON DELETE NOACTION ON UPDATE NOACTION )
medium gold: select 节日 ,纪念 from 民俗节日 where 时间 like '农历%'

eval_err_num:531
hard pred: CREATE TABLE 民俗节日 ( 节日 text, 民族id number, 时间 time, 纪念 text, FOREIGN KEY (民族id) REFERENCES 民族(词条id)) CREATE TABLE "民族城市" ( "民族id" number, "城市名称" text, "人口" number, "比例" number, FOREIGN KEY (民族id) REFERENCES "民族" ("民族id"), ON DELETE NOACTION ON UPDATE NOACTION )
hard gold: select T1.节日 ,T1.时间 ,T2.名称 from 民俗节日 AS T1 JOIN 民族 AS T2 ON T1.民族id = T2.民族id where 时间 like '农历%'

eval_err_num:532
easy pred: SELECT * FROM "民族" WHERE 语言 = '汉语'
easy gold: select 名称 from 民族 where 语言 = '汉语'

eval_err_num:533
medium pred: SELECT人口,比例 FROM "民族城市" WHERE 城市名称 = '北京'
medium gold: select 名称 ,人口 from 民族 where 语言 = '汉语'

eval_err_num:534
medium pred: SELECT 城市名称,人口比例 FROM "民族城市" WHERE 城市名称 = '北京' AND 民族id = '1'
medium gold: select T2.名称 ,T1.城市名称 ,比例 from 民族城市 AS T1 JOIN 民族 AS T2 ON T1.民族id = T2.民族id where 语言 = '汉语'

eval_err_num:535
medium pred: SELECT 节日名称, 民族id, 时间, 纪念 FROM "民俗节日" WHERE 节日 = '春节' AND 民族id = '1' AND 时间 = '2023-02-18'
medium gold: select T2.名称 ,T1.节日 from 民俗节日 AS T1 JOIN 民族 AS T2 ON T1.民族id = T2.民族id where 语言 = '汉语'

medium pred: SELECT * FROM 动物 WHERE 食性 = '草'
medium gold: select 学名 ,食性 from 动物 where 食性 = '食草'

medium pred: SELECT * FROM 动物 WHERE 是否是人类朋友 = '0'
medium gold: select 学名 ,是否是人类朋友 from 动物 where 食性 = '食草'

medium pred: SELECT * FROM 动物 WHERE 理由 = '人类的朋友'
medium gold: select 学名 ,是否是人类朋友 ,理由 from 动物 where 食性 = '食草'

eval_err_num:536
easy pred: SELECT * FROM 奥运会冠亚军 INNER JOIN 冠军国家 ON 奥运会冠亚军.赛事id = 冠军国家.赛事id INNER JOIN 球员夺冠次数 ON 运动员.球员id = 冠军次数.球员id WHERE 奥运会冠亚军.比赛名称 = '羽毛球比赛'
easy gold: select 赛事名称 from 重要赛事

eval_err_num:537
medium pred: SELECT * FROM 奥运会冠亚军 INNER JOIN 冠军国家 ON 奥运会冠亚军.赛事id = 冠军国家.赛事id INNER JOIN 球员夺冠次数 ON 运动员.球员id = 冠军次数.球员id WHERE 奥运会冠亚军.比赛名称 = '羽毛球比赛' and 冠军国家.成立时间 = '1950' and 球员夺冠次数.冠军次数 = 1
medium gold: select 赛事名称 ,成立时间 from 重要赛事

eval_err_num:538
medium pred: SELECT * FROM 奥运会冠亚军 INNER JOIN 冠军国家 ON 奥运会冠亚军.赛事id = 冠军国家.赛事id INNER JOIN 球员夺冠次数 ON 运动员.球员id = 冠军次数.球员id WHERE 奥运会冠亚军.比赛名称 = '羽毛球比赛' and 冠军国家.成立时间 = '1950' and 球员.冠军次数 = 1
medium gold: select 赛事名称 ,比赛间隔年 from 重要赛事

eval_err_num:539
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 赛事名称 ,人群 from 重要赛事

eval_err_num:540
hard pred: SELECT * FROM "医院排名" WHERE 年份 = ( SELECT MAX(年份) FROM "医院" WHERE 医院名 = '未知' AND 所属城市id = '未知' )
hard gold: select T2.医院名 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id order by T1.排名 asc limit 1

eval_err_num:541
hard pred: SELECT COUNT(*) FROM "医院" WHERE "院士数量" = ( SELECT COUNT(*) FROM "院士数量" WHERE "医院名" = '未知' AND "所属城市id" = '未知' )
hard gold: select T2.院士数量 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id order by T1.排名 asc limit 1

eval_err_num:542
hard pred: SELECT COUNT(*) FROM "医院" GROUP BY "科室数量" HAVING COUNT(*) > 1
hard gold: select T2.科室数量 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id order by T1.排名 asc limit 1

eval_err_num:543
extra pred: SELECT * FROM "医院" WHERE 是否重点 = 0 AND "科室数量" = ( SELECT COUNT(*) FROM "特色科室" WHERE "医院id" = '未知' GROUP BY "科室" HAVING COUNT(*) > 0 )
extra gold: select T1.科室 from 特色科室 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id JOIN 医院排名 AS T3 ON T2.医院id = T3.医院id order by T3.排名 asc limit 1

eval_err_num:544
medium pred: SELECT 球员id, AGE(出生日期) AS 年龄 FROM 羽毛球球员 ORDER BY AGE(出生日期) DESC
medium gold: select 球员姓名 ,出生日期 from 羽毛球球员 order by 出生日期

eval_err_num:545
medium pred: SELECT 球员id, 球员姓名, 国籍, 出生日期, 身高, 性别, SELECT COUNT(*) FROM 重要赛事 WHERE 赛事id IN (SELECT 赛事id FROM 奥运会冠亚军) ON DELETE NOACTION ON UPDATE NOACTION FROM 羽毛球球员
medium gold: select 球员姓名 ,国籍 from 羽毛球球员

eval_err_num:546
hard pred: SELECT 球员id, 赛事id, 运动员姓名, 性别, 冠军次数, 亚军次数, 季军次数 FROM 重要赛事 WHERE 赛事id IN (SELECT 赛事id FROM 奥运会冠亚军) ORDER BY 冠军次数 DESC, 亚军次数 DESC, 季军次数 DESC
hard gold: select T2.球员姓名 ,T3.赛事名称 ,T1.冠军次数 from 球员夺冠次数 AS T1 JOIN 羽毛球球员 AS T2 ON T1.球员id = T2.球员id JOIN 重要赛事 AS T3 ON T1.赛事id = T3.赛事id where 冠军次数>1

eval_err_num:547
medium pred: SELECT 球员id, 运动员姓名, 性别, 身高, SELECT MAX(身高) AS max_height FROM 羽毛球球员 WHERE 球员id IN (SELECT 球员id FROM 羽毛球球员) GROUP BY 球员id, 运动员姓名, 性别 FROM 羽毛球球员
medium gold: select T2.球员姓名 ,T2.身高 from 球员夺冠次数 AS T1 JOIN 羽毛球球员 AS T2 ON T1.球员id = T2.球员id where 冠军次数>1

eval_err_num:548
medium pred: SELECT 冠军数量 FROM 奥运会冠亚军 WHERE 国家名称 = '中国'
medium gold: select 国家名称 ,冠军数量 from 冠军国家 where 国家名称 = '中国'

eval_err_num:549
easy pred: SELECT球员id,球员姓名,性别,国籍,出生日期,身高 FROM 羽毛球球员 WHERE 球员id NOT IN (SELECT 球员id FROM 重要赛事)
easy gold: select 球员姓名 from 羽毛球球员 where 国籍 = '中国'

eval_err_num:550
hard pred: SELECT 赛事名称, 冠军数量 FROM 奥运会冠亚军 WHERE 国家名称 = '中国'
hard gold: select T3.球员姓名 ,T2.赛事名称 ,T1.冠军次数 from 球员夺冠次数 AS T1 JOIN 重要赛事 AS T2 ON T1.赛事id = T2.赛事id JOIN 羽毛球球员 AS T3 ON T1.球员id = T3.球员id where 国籍 = '中国'

eval_err_num:551
medium pred: SELECT * FROM 医院 WHERE 医院id IN (SELECT 医院id FROM 医院排名 WHERE 年份=2022)
medium gold: select 医院名 , 医院等级 from 医院 where 医院等级 = "三级甲等"

eval_err_num:552
medium pred: SELECT COUNT(*) AS科室数量, SUM(科室数量) AS重点专科数量 FROM 医院
medium gold: select 医院名 ,科室数量 ,重点专科数量 from 医院 where 医院等级 = "三级甲等"

eval_err_num:553
medium pred: SELECT接待病患数量,手术数量 FROM 医院
medium gold: select T2.医院名 ,T1.接待病患数量 ,T1.手术数量 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where 医院等级 = "三级甲等"

eval_err_num:554
medium pred: SELECT科室名称, '是研究中心' AS 科室类型 FROM 特色科室
medium gold: select T2.医院名 ,T1.科室 ,T1.是否研究中心 from 特色科室 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where 医院等级 = "三级甲等"

eval_err_num:555
medium pred: NO SQL FOUND
medium gold: select 医院名 ,院士数量 from 医院 where 院士数量 > 0

eval_err_num:556
medium pred: SELECT * FROM医院 ORDER BY职工数量 DESC LIMIT 10
medium gold: select 医院名 ,职工数量 from 医院 order by 职工数量 desc

medium pred: SELECT * FROM 医院 WHERE 所属城市id = '哈尔滨'
medium gold: select T2.医院名 ,T1.名称 from 城市 AS T1 JOIN 医院 AS T2 ON T1.城市id = T2.所属城市id where 名称 = '哈尔滨'

eval_err_num:557
extra pred: SELECT 人口数量, 老年人口占比 FROM 城市, 特色科室 WHERE 城市id = '哈尔滨'
extra gold: select 名称 ,人口数量 ,老年人口占比 from 城市 where 名称 = (select T1.名称 from 城市 AS T1 JOIN 医院 AS T2 ON T1.城市id = T2.所属城市id where 名称 = '哈尔滨')

eval_err_num:558
medium pred: SELECT * FROM "医院" "a" LEFT JOIN "医院排名" "b" ON "a"."医院id" = "b"."医院id" WHERE "b"."年份" = (SELECT 年份 FROM "城市" WHERE 城市id = 12345 AND "词条id" = "洛阳")
medium gold: select T1.医院名 from 医院 AS T1 JOIN 城市 AS T2 ON T1.所属城市id = T2.城市id where 名称 = '洛阳'

eval_err_num:559
extra pred: SELECT * FROM "医院" "a" LEFT JOIN "医院排名" "b" ON "a"."医院id" = "b"."医院id" WHERE "b"."等级" = (SELECT 等级 FROM "医院" WHERE 医院id = 1)
extra gold: select 医院名 ,医院等级 from 医院 where 医院名 in (select T1.医院名 from 医院 AS T1 JOIN 城市 AS T2 ON T1.所属城市id = T2.城市id where 名称 = '洛阳')

eval_err_num:560
extra pred: SELECT * FROM "科室" "c" JOIN "医院" "a" ON "a"."科室id" = "c"."科室id" JOIN "医院排名" "b" ON "b"."医院id" = "a"."医院id" WHERE "b"."医院id" = (SELECT 医院id FROM "医院" WHERE 医院id = 1)
extra gold: select T1.医院名 ,T2.科室 from 医院 AS T1 JOIN 特色科室 AS T2 ON T1.医院id = T2.医院id where 医院名 in (select 医院名 from 医院 AS T1 JOIN 城市 AS T3 ON T1.所属城市id = T3.城市id where 名称 = '洛阳')

eval_err_num:561
extra pred: SELECT * FROM "科室" "c" JOIN "医院" "a" ON "a"."科室id" = "c"."科室id" JOIN "医院排名" "b" ON "b"."医院id" = "a"."医院id" WHERE "b"."是否重点" = 1
extra gold: select 科室 ,是否重点 from 医院 AS T1 JOIN 特色科室 AS T2 ON T1.医院id = T2.医院id where 医院名 in (select 医院名 from 医院 AS T1 JOIN 城市 AS T3 ON T1.所属城市id = T3.城市id where 名称 = '洛阳')

eval_err_num:562
medium pred: SELECT * FROM "城市" AS t1 INNER JOIN "医院" AS t2 ON t1."城市id" = t2."所属城市id" INNER JOIN "医院排名" AS t3 ON t2."医院id" = t3."医院id" ON t1."人口数量" = (SELECT MAX(人口数量) FROM "城市" WHERE 所属省份 = t1."国家") WHERE t3."年份" = t1."年份" AND t3."排名" = t1."排名" ORDER BY t1."人口数量" DESC
medium gold: select 名称 ,人口数量 from 城市 order by 人口数量 desc

eval_err_num:563
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 名称 ,老年人口占比 from 城市

eval_err_num:564
medium pred: SELECT * FROM "医院" AS t1 INNER JOIN "医院排名" AS t2 ON t1."医院id" = t2."医院id" INNER JOIN "城市" AS t3 ON t1."城市id" = t3."城市id" WHERE t2."医院id" IN (SELECT "二甲医院id" FROM "医院" WHERE "医院等级" = 1 AND "职工数量" > 100) ORDER BY t1."医院等级" DESC, t2."医院id" DESC, t3."人口数量" DESC
medium gold: select T2.名称 ,T1.医院名 from 医院 AS T1 JOIN 城市 AS T2 ON T1.所属城市id = T2.城市id where 医院等级 = '二级甲等'

eval_err_num:565
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T2.年份 ,T1.医院名 ,T2.接待病患数量 from 医院 AS T1 JOIN 医院排名 AS T2 ON T1.医院id = T2.医院id where 医院名 in (select T1.医院名 from 医院 AS T1 JOIN 城市 AS T3 ON T1.所属城市id = T3.城市id where 医院等级 = '二级甲等' )

eval_err_num:566
medium pred: SELECT 日均客运量,每日每公里客运量, 每公里运营成本,每公里运营收入 FROM 城市地铁日均客运量 WHERE 城市 = '成都'
medium gold: select 城市名称 ,日均客运量 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 城市名称 = '成都'

eval_err_num:567
medium pred: SELECT * FROM 城市地铁日均客运量 WHERE 城市 = '成都'
medium gold: select 城市名称 ,每公里运营收入 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 城市名称 = '成都'

eval_err_num:568
medium pred: SELECT * FROM 城市地铁日均客运量 WHERE 城市 = '成都' AND 列_4元可乘坐里程 > 0
medium gold: select 城市名称 ,每公里运营成本 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 城市名称 = '成都'

eval_err_num:569
easy pred: SELECT * FROM "医院" WHERE "医院等级" = 3 AND "职工数量" = 1 AND "院士数量" = 1
easy gold: select 医院名 from 医院 where 医院等级 = "三级甲等"

eval_err_num:570
medium pred: SELECT * FROM "医院排名" WHERE "年份" = '2022' AND "医院id" = '1' AND "排名" = '1'
medium gold: select 医院名,排名 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where 医院等级 = "三级甲等"

eval_err_num:571
extra pred: SELECT * FROM "医院排名" WHERE "年份" = '2022' AND "医院id" = '1' AND "排名" < '20'
extra gold: select 医院名,排名 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where 医院等级 = "三级甲等" and 排名<20

eval_err_num:572
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 球员姓名 from 羽毛球球员 where 国籍 = "中国"

eval_err_num:573
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select T1.奥运会名称 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id where T2.球员姓名 = "林丹"

eval_err_num:574
hard pred: SELECT * FROM 运动员 JOIN 重要赛事 ON 运动员.球员id = 重要赛事.赛事id JOIN 奥运会冠亚军 ON 运动员.球员id = 奥运会冠亚军.金牌获得者id JOIN 冠军国家 ON 运动员.球员id = 冠军国家.赛事id JOIN 比赛夺冠次数 ON 运动员.球员id = 比赛夺冠次数.球员id WHERE 冠军国家.赛事id = '20120820' AND 奥运会冠亚军.比赛名称 = '奥运会' AND 冠军国家.赛事名称 = '奥运会' AND 运动员.性别 = '男' AND 运动员.国籍 = '中国'
hard gold: select T3.赛事名称 from 球员夺冠次数 AS T1 JOIN 羽毛球球员 AS T2 ON T1.球员id = T2.球员id JOIN 重要赛事 AS T3 ON T1.赛事id = T3.赛事id where T2.球员姓名 = "鲍春来"

eval_err_num:575
hard pred: SELECT 冠军数量 FROM 冠军国家 JOIN 重要赛事 ON 冠军国家.赛事id = 重要赛事.赛事id JOIN 奥运会冠亚军 ON 冠军国家.赛事id = 奥运会冠亚军.金牌获得者id JOIN 球员夺冠次数 ON 冠军国家.赛事id = 球员夺冠次数.球员id WHERE 奥运会冠亚军.比赛名称 = '奥运会' AND 冠军国家.赛事名称 = '奥运会' AND 运动员.性别 = '男' AND 运动员.国籍 = '中国'
hard gold: select sum(T1.冠军次数) from 球员夺冠次数 AS T1 JOIN 羽毛球球员 AS T2 ON T1.球员id = T2.球员id JOIN 重要赛事 AS T3 ON T1.赛事id = T3.赛事id where T2.球员姓名 = "鲍春来"

eval_err_num:576
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select sum(T1.亚军次数),sum(T1.季军次数) from 球员夺冠次数 AS T1 JOIN 羽毛球球员 AS T2 ON T1.球员id = T2.球员id JOIN 重要赛事 AS T3 ON T1.赛事id = T3.赛事id where T2.球员姓名 = "鲍春来"

eval_err_num:577
medium pred: SELECT t1.运动员name, t2.奥运会名称, t3.项目名称, t4.金牌获得者id, t5.银牌获得者id, t6.铜牌获得者id FROM "羽毛球球员" t1 JOIN "重要赛事" t2 ON t1.球员id = t2.赛事id JOIN "奥运会冠亚军" t3 ON t2.赛事id = t3.奥运会名称 JOIN "球员夺冠次数" t4 ON t3.球员id = t4.球员id JOIN "冠军国家" t5 ON t4.冠军数量 = t5.国家名称 WHERE t3.奥运会名称 = '2008北京奥运会' ORDER BY t5.冠军数量 DESC
medium gold: select T2.球员姓名 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id where T1.奥运会名称 = "2008年北京奥运会"

eval_err_num:578
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select T2.国籍 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id where T1.奥运会名称 = "2008年北京奥运会"

eval_err_num:579
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select T2.球员姓名,T2.国籍 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.银牌获得者id = T2.球员id where T1.奥运会名称 = "2008年北京奥运会"

eval_err_num:580
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select T2.球员姓名,T2.国籍 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.铜牌获得者id = T2.球员id where T1.奥运会名称 = "2008年北京奥运会"

eval_err_num:581
extra pred: SELECT 国家名称, 赛事id, 冠军数量, (SELECT COUNT(*) FROM 冠军国家) AS 冠军数量_list, FROM 冠军国家 GROUP BY 赛事id ORDER BY 冠军数量 DESC LIMIT 1
extra gold: select T1.国家名称,T2.赛事名称 from 冠军国家 AS T1 JOIN 重要赛事 AS T2 ON T1.赛事id = T2.赛事id where T1.冠军数量 = (select max(冠军数量) from 冠军国家)

eval_err_num:582
easy pred: SELECT 赛事id, 冠军数量, (SELECT COUNT(*) FROM 冠军国家) AS 冠军数量_list, FROM 冠军国家 GROUP BY 赛事id ORDER BY 冠军数量 DESC LIMIT 1
easy gold: select max(冠军数量) from 冠军国家

eval_err_num:583
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T2.人群 from 冠军国家 AS T1 JOIN 重要赛事 AS T2 ON T1.赛事id = T2.赛事id where T1.冠军数量 = (select max(冠军数量) from 冠军国家)

eval_err_num:584
extra pred: SELECT 赛事id, 比赛数量, (SELECT COUNT(*) FROM 冠军国家) AS 冠军数量_list, FROM 冠军国家 WHERE 比赛间隔年 like '%1990%' ORDER BY 比赛数量 DESC LIMIT 1
extra gold: select T2.比赛间隔年,T2.比赛项目数量 from 冠军国家 AS T1 JOIN 重要赛事 AS T2 ON T1.赛事id = T2.赛事id where T1.冠军数量 = (select max(冠军数量) from 冠军国家)

eval_err_num:585
medium pred: SELECT 城市id FROM 医院 WHERE 医院名 = ( SELECT 词条id FROM 城市 WHERE 名称 = '北京' )
medium gold: select 医院名,T2.名称 from 医院 AS T1 join 城市 AS T2 on T1.所属城市id = T2.城市id

eval_err_num:586
medium pred: SELECT 医院id FROM 医院 WHERE 医院名 NOT IN ( SELECT 词条id FROM 城市 WHERE 名称 = '哈尔滨' )
medium gold: select 医院名,T2.名称 from 医院 AS T1 join 城市 AS T2 on T1.所属城市id = T2.城市id where 名称 != "哈尔滨"

eval_err_num:587
medium pred: SELECT 医院id, 城市id, COUNT(*) AS院士数量 FROM 医院 INNER JOIN 医院排名 ON 医院id = 医院排名.医院id INNER JOIN 城市 ON 城市id = 医院排名.城市id INNER JOIN 特色科室 ON 特色科室id = 医院排名.科室id WHERE 城市.名称 = '哈尔滨' GROUP BY 医院id, 城市id HAVING COUNT(*) > 1
medium gold: select 医院名,T1.院士数量 from 医院 AS T1 join 城市 AS T2 on T1.所属城市id = T2.城市id where 名称 != "哈尔滨"

eval_err_num:588
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select 医院名,T1.院士数量 from 医院 AS T1 join 城市 AS T2 on T1.所属城市id = T2.城市id where 名称 != "哈尔滨" order by T1.院士数量

easy pred: SELECT * FROM 羽毛球球员 WHERE 性别 = '男性' LIMIT 0, 1
easy gold: select 赛事名称 from 重要赛事 where 人群 = "男子"

eval_err_num:589
medium pred: SELECT 赛事成立时间, 比赛间隔年 FROM 重要赛事 WHERE 赛事名称 = '奥运会冠亚军' ORDER BY 赛事成立时间 DESC
medium gold: select 成立时间,比赛间隔年 from 重要赛事 where 人群 = "男子"

eval_err_num:590
easy pred: SELECT COUNT(*) FROM 羽毛球球员 WHERE 球员id NOT IN ( SELECT 球员id FROM 重要赛事 WHERE 赛事id NOT IN ( SELECT 赛事id FROM 羽毛球球员 ORDER BY 赛事id DESC LIMIT 0, 1 ) )
easy gold: select 比赛项目数量 from 重要赛事 where 人群 = "男子"

eval_err_num:591
hard pred: SELECT 运动员id, 奥运会名称, 项目名称, 冠军次数 FROM 奥运会冠亚军 WHERE 比赛名称 = '羽毛球比赛' GROUP BY 运动员id, 奥运会名称, 项目名称 HAVING 冠军次数 > 0 ORDER BY 冠军次数 DESC
hard gold: select T2.球员姓名 from 球员夺冠次数 AS T1 JOIN 羽毛球球员 AS T2 ON T1.球员id = T2.球员id JOIN 重要赛事 AS T3 ON T1.赛事id = T3.赛事id where T3.人群 = "男子"

hard pred: SELECT * FROM 球员夺冠次数 WHERE 赛事id = '羽毛球比赛' ORDER BY 冠军次数 DESC LIMIT 0, 1
hard gold: select T2.球员姓名,T1.冠军次数,T1.亚军次数,T1.季军次数 from 球员夺冠次数 AS T1 JOIN 羽毛球球员 AS T2 ON T1.球员id = T2.球员id JOIN 重要赛事 AS T3 ON T1.赛事id = T3.赛事id where T3.人群 = "男子"

medium pred: SELECT 地铁运营里程 FROM 城市地铁里程 WHERE 城市id = '广东'
medium gold: select 所属省份 ,城市名称 ,地铁运营里程 from 城市地铁里程 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 所属省份 = '广东'

eval_err_num:592
medium pred: SELECT 地铁规划里程 FROM 城市地铁规划里程 WHERE 城市id = '广东'
medium gold: select 城市名称 ,规划里程 from 城市地铁里程 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 所属省份 = '广东'

eval_err_num:593
medium pred: SELECT 地铁运营里程, 地铁在建里程, 地铁规划里程, 地铁已运营线路数, 地铁日均客运量 FROM 城市地铁日均客运量 WHERE 城市id = '广东'
medium gold: select 城市名称 ,在建里程 ,已运营线路数 from 城市地铁里程 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 所属省份 = '广东'

easy pred: SELECT * FROM 动物 WHERE 是否是人类朋友 = 1
easy gold: select 学名 from 动物 where 是否是人类朋友 = "是"

eval_err_num:594
extra pred: SELECT * FROM 动物朋友 WHERE 是否是人类朋友 = 1
extra gold: select T2.学名,T3.学名 from 动物朋友 AS T1 JOIN 动物 AS T2 ON T1.动物id = T2.动物id join 动物 AS T3 on T1.朋友id = T3.动物id where T2.学名 in (select 学名 from 动物 where 是否是人类朋友 = "是")

extra pred: SELECT * FROM 动物的天敌 WHERE 天敌id = (SELECT 动物id FROM 动物 WHERE 是否是人类朋友 = 0)
extra gold: select T2.学名,T3.学名 from 动物的天敌 AS T1 JOIN 动物 AS T2 ON T1.动物id = T2.动物id join 动物 AS T3 on T1.天敌id = T3.动物id where T2.学名 in (select 学名 from 动物 where 是否是人类朋友 = "是")

eval_err_num:595
easy pred: SELECT * FROM "奥运会冠亚军" WHERE "奥运会名称" = '2016北京奥运会' FOREIGN KEY ("金牌获得者id") REFERENCES "羽毛球球员" ("球员id") ON DELETE NOACTION ON UPDATE NOACTION, "奥运会名称" = '2016北京奥运会' FOREIGN KEY ("银牌获得者id") REFERENCES "羽毛球球员" ("球员id") ON DELETE NOACTION ON UPDATE NOACTION, "奥运会名称" = '2016北京奥运会' FOREIGN KEY ("铜牌获得者id") REFERENCES "羽毛球球员" ("球员id") ON DELETE NOACTION ON UPDATE NOACTION, "运动员姓名" = '张三' FOREIGN KEY ("性别") REFERENCES '男' ("性别") ON DELETE NOACTION ON UPDATE NOACTION, "运动员姓名" = '李四' FOREIGN KEY ("国籍") REFERENCES '中国' ("国籍") ON DELETE NOACTION ON UPDATE NOACTION, "出生日期" = '1990-01-01' FOREIGN KEY ("身高") REFERENCES ("身高") ON DELETE NOACTION ON UPDATE NOACTION
easy gold: select T2.球员姓名 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id

eval_err_num:596
medium pred: SELECT * FROM "运动员夺冠次数" WHERE "运动员姓名" = '张三' FOREIGN KEY ("国籍") REFERENCES '中国' ("国籍") ON DELETE NOACTION ON UPDATE NOACTION, "运动员姓名" = '李四' FOREIGN KEY ("国籍") REFERENCES '中国' ("国籍") ON DELETE NOACTION ON UPDATE NOACTION, "运动员姓名" = '王五' FOREIGN KEY ("国籍") REFERENCES '中国' ("国籍") ON DELETE NOACTION ON UPDATE NOACTION, "运动员姓名" = '赵六' FOREIGN KEY ("国籍") REFERENCES '中国' ("国籍") ON DELETE NOACTION ON UPDATE NOACTION, "运动员姓名" = '钱七' FOREIGN KEY ("国籍") REFERENCES '中国' ("国籍") ON DELETE NOACTION ON UPDATE NOACTION
medium gold: select T2.球员姓名,T2.国籍 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id

eval_err_num:597
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select T2.球员姓名,T4.赛事名称 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id JOIN 球员夺冠次数 AS T3 ON T2.球员id = T3.球员id JOIN 重要赛事 AS T4 ON T3.赛事id = T4.赛事id

eval_err_num:598
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select T2.球员姓名,T3.冠军次数,T3.亚军次数,T3.季军次数 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id JOIN 球员夺冠次数 AS T3 ON T2.球员id = T3.球员id JOIN 重要赛事 AS T4 ON T3.赛事id = T4.赛事id

eval_err_num:599
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 学名 from 动物 where 食性 = "食草"

eval_err_num:600
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select count(*) from 动物 where 食性 = "食草"

eval_err_num:601
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T2.学名,T3.学名 from 动物的天敌 AS T1 JOIN 动物 AS T2 ON T1.动物id = T2.动物id join 动物 AS T3 on T1.天敌id = T3.动物id where T2.学名 in (select 学名 from 动物 where 食性 = "食草")

eval_err_num:602
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T2.学名,T3.学名,T1.克星原因 from 动物的天敌 AS T1 JOIN 动物 AS T2 ON T1.动物id = T2.动物id join 动物 AS T3 on T1.天敌id = T3.动物id where T2.学名 in (select 学名 from 动物 where 食性 = "食草")

eval_err_num:603
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 开通城市数量 from 中国地铁 where 年份 = '2019'

eval_err_num:604
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select 年份 ,开通城市数量 ,总里程 from 中国地铁 where 年份 = '2019' OR 年份 = '1999'

eval_err_num:605
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 城市名称 ,地铁运营里程 from 城市地铁里程 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 城市名称 = '武汉'

eval_err_num:606
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 城市名称 ,日均客运量 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 城市名称 = '武汉'

eval_err_num:607
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 城市名称 ,每日每公里客运量 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 城市名称 = '武汉'

eval_err_num:608
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 城市名称 ,每公里运营收入 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 城市名称 = '武汉'

eval_err_num:609
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select 城市名称 ,日均客运量 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id order by 日均客运量 desc limit 1

eval_err_num:610
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select 城市名称 ,列_2元可乘坐里程 from 城市地铁票价 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 城市名称 = (select 城市名称 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id order by 日均客运量 desc limit 1)

eval_err_num:611
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select 城市名称 ,列_5元可乘坐里程 from 城市地铁票价 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 城市名称 = (select 城市名称 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id order by 日均客运量 desc limit 1)

eval_err_num:612
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 名称 from 民族

eval_err_num:613
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 名称,语言,宗教信仰 from 民族

eval_err_num:614
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select T1.名称,T2.节日 from 民族 AS T1 JOIN 民俗节日 AS T2 ON T1.民族id = T2.民族id

eval_err_num:615
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 名称,人口 from 民族 order by 人口 asc limit 1

eval_err_num:616
hard pred: SELECT * FROM "民族城市" WHERE "民族id" = ( SELECT "民族id" FROM "民族" ORDER BY "人口" DESC LIMIT 10 ) ORDER BY "比例" DESC
hard gold: select T1.名称,T2.城市名称,T2.比例 from 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id order by T1.人口 asc limit 1

eval_err_num:617
medium pred: SELECT * FROM "民族城市" WHERE "民族id" = ( SELECT "民族id" FROM "民族" ORDER BY "人口" DESC LIMIT 10 ) ORDER BY "宗教信仰" DESC
medium gold: select T1.宗教信仰 from 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id where T2.城市名称 = "宁夏"

eval_err_num:618
medium pred: SELECT * FROM "民族城市" WHERE "民族id" = ( SELECT "民族id" FROM "民族" ORDER BY "人口" DESC LIMIT 10 ) ORDER BY "人口" DESC, "语言" DESC, "宗教信仰" DESC
medium gold: select T1.语言 from 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id where T2.城市名称 = "宁夏"

eval_err_num:619
easy pred: SELECT 日期 FROM 民俗节日 WHERE 民族id = 1
easy gold: select 时间 from 民俗节日 where 节日 = "端午节"

eval_err_num:620
medium pred: SELECT 人口 FROM "民族城市" WHERE 民族id = 1
medium gold: select T2.人口 from 民俗节日 AS T1 JOIN 民族 AS T2 ON T1.民族id = T2.民族id where T1.节日 = "端午节"

eval_err_num:621
hard pred: SELECT 比例 FROM "民族城市" WHERE 民族id = 1
hard gold: select T3.城市名称 from 民俗节日 AS T1 JOIN 民族 AS T2 ON T1.民族id = T2.民族id JOIN 民族城市 AS T3 ON T2.民族id = T3.民族id where T1.节日 = "端午节"

eval_err_num:622
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select T1.名称 from 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id where T2.城市名称 = "内蒙古" and T2.比例 >= "10%"

eval_err_num:623
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 中文名 from 篮球运动员

eval_err_num:624
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 中文名 from 篮球运动员 where 国籍 = "美国"

eval_err_num:625
hard pred: SELECT * FROM "篮球运动员" WHERE "参加选秀年" = '1984' ORDER BY "参加选秀年" DESC LIMIT 1
hard gold: select 中文名 from 篮球运动员 where 国籍 = "美国" order by 参加选秀年 limit 1

eval_err_num:626
extra pred: SELECT * FROM "篮球运动员" WHERE "参加选秀年" = '1984' ORDER BY "参加选秀年" DESC LIMIT 1
extra gold: select distinct 中文队名 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id JOIN 球队 AS T3 ON T1.所属球队 = T3.球队id where 中文名 = (select 中文名 from 篮球运动员 where 国籍 = "美国" order by 参加选秀年 limit 1 )

eval_err_num:627
extra pred: SELECT SUM(num_MVP) FROM "MVP记录" WHERE "球员id" = 'your_player_id' GROUP BY "球员id" ORDER BY SUM(num_MVP) DESC LIMIT 1
extra gold: select count(*) from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id JOIN 球队 AS T3 ON T1.所属球队 = T3.球队id where 中文名 = (select 中文名 from 篮球运动员 where 国籍 = "美国" order by 参加选秀年 limit 1 )

eval_err_num:628
easy pred: SELECT * FROM "民族" WHERE 民族id IN (SELECT 民族id FROM "民族城市") ON DELETE NOACTION ON UPDATE NOACTION
easy gold: select 名称 from 民族

eval_err_num:629
medium pred: SELECT 语言, 宗教信仰 FROM "民族" WHERE 民族id IN (SELECT 民族id FROM "民族城市") ON DELETE NOACTION ON UPDATE NOACTION
medium gold: select 名称, 语言, 宗教信仰 from 民族

eval_err_num:630
medium pred: SELECT人口, COUNT(*) FROM "民族" GROUP BY人口ORDER BY COUNT(*) DESC LIMIT 1
medium gold: select 名称, 语言, 宗教信仰 from 民族 order by 人口 desc

eval_err_num:631
hard pred: SELECT a.艺人, a.综艺节目, a.身份, a.参加期数 FROM "艺人" a INNER JOIN "综艺节目" b ON a.经纪公司 = b.制作公司 INNER JOIN "平台" c ON b.平台id = c.词条id INNER JOIN "节目阵容" d ON a.综艺节目id = d.节目id WHERE b.播出状态 = '已播' AND d.参加期数 = 1 AND a.id = d.艺人id AND a.id NOT IN (SELECT id FROM 节目阵容 WHERE 期数 = 0) AND a.姓名 = '明星' AND a.民族 = '汉'
hard gold: select T2.姓名 from 节目阵容 AS T1 JOIN 艺人 AS T2 ON T1.艺人id = T2.id JOIN 综艺节目 AS T3 ON T1.综艺节目id = T3.节目id where T3.综艺名称 = "妻子的浪漫旅行"

eval_err_num:632
hard pred: SELECT c.参加期数 FROM "节目阵容" d INNER JOIN "综艺节目" e ON d.综艺节目id = e.节目id INNER JOIN "艺人" a ON e.艺人id = a.id INNER JOIN "平台" b ON a.平台id = b.平台id WHERE b.平台名称 = '妻子的浪漫旅行' AND e.播出状态 = '已播' AND a.id = b.艺人id AND a.姓名 = '明星' AND a.民族 = '汉'
hard gold: select T1.身份, T1.参加期数 from 节目阵容 AS T1 JOIN 艺人 AS T2 ON T1.艺人id = T2.id JOIN 综艺节目 AS T3 ON T1.综艺节目id = T3.节目id where T3.综艺名称 = "妻子的浪漫旅行"

eval_err_num:633
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T2.综艺名称 from 节目阵容 AS T1 JOIN 综艺节目 AS T2 ON T1.综艺节目id = T2.节目id where T1.艺人id = (select T1.艺人id from 节目阵容 AS T1 JOIN 综艺节目 AS T2 ON T1.综艺节目id = T2.节目id where T2.综艺名称 = "妻子的浪漫旅行")

eval_err_num:634
medium pred: SELECT 电视剧id,首播平台id FROM 电视剧收视 WHERE 时间段 = '2022-01-01' AND 平台id = '2' AND 首播平台id = '1'
medium gold: select T2.名称 from 电视剧 AS T1 JOIN 电视台 AS T2 ON T1.首播平台id = T2.电视台id where T1.剧名 = "庆余年"

eval_err_num:635
medium pred: SELECT 的电视剧id, 的合成时间 FROM 电视剧收视 WHERE 时间段 = '2022-01-01' AND 的合成时间 = '2022-01-19'
medium gold: select T1.时间段 from 电视剧收视 AS T1 JOIN 电视剧 AS T2 ON T1.电视剧id = T2.电视剧编号 where T2.剧名 = "庆余年"

eval_err_num:636
medium pred: SELECT 收视率 FROM 电视剧收视 WHERE 时间段 = '2022-01-01' AND 合成时间 = '2022-01-19'
medium gold: select T1.收视率 from 电视剧收视 AS T1 JOIN 电视剧 AS T2 ON T1.电视剧id = T2.电视剧编号 where T2.剧名 = "庆余年"

easy pred: SELECT * FROM 电视剧 WHERE 剧名 = '自制剧'
easy gold: select 剧名 from 电视剧 where 出品公司 = "北京爱奇艺科技有限公司"

medium pred: SELECT * FROM 电视剧 WHERE 剧名 = '教育意义'; SELECT * FROM 电视剧收视 WHERE 平台id = '当时'
medium gold: select T1.收视率 from 电视剧收视 AS T1 JOIN 电视剧 AS T2 ON T1.电视剧id = T2.电视剧编号 where T2.出品公司 = "北京爱奇艺科技有限公司"

eval_err_num:637
hard pred: SELECT 电视台id, 电视剧id, 收视率 FROM 电视剧收视 WHERE 平台id = '2022'
hard gold: select T3.名称,T1.收视率 from 电视剧收视 AS T1 JOIN 电视剧 AS T2 ON T1.电视剧id = T2.电视剧编号 JOIN 电视台 AS T3 ON T1.平台id = T3.电视台id where T2.出品公司 = "北京爱奇艺科技有限公司"

eval_err_num:638
hard pred: SELECT 电视台id, 电视剧id, 收视率 FROM 电视剧收视 WHERE 首播平台id = '2016' AND 时间段 = '19:00'
hard gold: select T3.名称,T1.时间段,T1.收视率 from 电视剧收视 AS T1 JOIN 电视剧 AS T2 ON T1.电视剧id = T2.电视剧编号 JOIN 电视台 AS T3 ON T1.平台id = T3.电视台id where T2.出品公司 = "北京爱奇艺科技有限公司"

easy pred: SELECT * FROM 电视剧 WHERE 出品时间 = '2022-01-01' AND 出品公司 = '正午阳光' AND 发行公司 = 'ABC'
easy gold: select 剧名 from 电视剧 where 出品公司 = "东阳正午阳光影视有限公司"

easy pred: SELECT 剧名, 出品时间 FROM 电视剧 WHERE 出品时间 = '2022-01-01' AND 出品公司 = '正午阳光' AND 发行公司 = 'ABC'
easy gold: select 出品时间 from 电视剧 where 出品公司 = "东阳正午阳光影视有限公司"

eval_err_num:639
medium pred: SELECT 电视剧收视.剧名, 电视剧收视.出品公司, 电视剧收视.发行公司 FROM 电视剧收视 INNER JOIN 电视剧 ON 电视剧收视.首播平台id = 电视剧收视.平台id INNER JOIN 电视台 ON 电视剧收视.电视台id = 电视台.电视台id WHERE 电视剧收视.出品时间 = '2022-01-01' AND 电视剧收视.发行公司 = '正午阳光' AND 电视台.隶属机构 = 'ABC'
medium gold: select T2.名称 from 电视剧 AS T1 JOIN 电视台 AS T2 ON T1.首播平台id = T2.电视台id where T1.出品公司 = "东阳正午阳光影视有限公司"

eval_err_num:640
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select T3.时间段 from 电视剧 AS T1 JOIN 电视台 AS T2 ON T1.首播平台id = T2.电视台id JOIN 电视剧收视 AS T3 ON T1.电视剧编号 = T3.电视剧id where T1.出品公司 = "东阳正午阳光影视有限公司"

eval_err_num:641
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select T3.收视率 from 电视剧 AS T1 JOIN 电视台 AS T2 ON T1.首播平台id = T2.电视台id JOIN 电视剧收视 AS T3 ON T1.电视剧编号 = T3.电视剧id where T1.出品公司 = "东阳正午阳光影视有限公司"

eval_err_num:642
easy pred: SELECT * FROM 电视台 WHERE name = 'CCTV'; SELECT * FROM 电视剧 WHERE剧名 = '三国演义'; SELECT * FROM 电视剧收视 WHERE电视剧id = 1
easy gold: select 名称 from 电视台

eval_err_num:643
medium pred: SELECT 隶属机构 FROM 电视台 WHERE name = 'CCTV'; SELECT 隶属机构 FROM 电视剧 WHERE 剧名 = '三国演义'; SELECT 隶属机构 FROM 电视剧收视 WHERE 电视剧id = 1
medium gold: select 名称,隶属机构 from 电视台

eval_err_num:644
medium pred: SELECT 上线时间,开播时间 FROM 电视台 WHERE name = 'CCTV'; SELECT 上线时间,开播时间 FROM 电视剧 WHERE 剧名 = '三国演义'; SELECT 上线时间,开播时间 FROM 电视剧收视 WHERE 电视剧id = 1
medium gold: select 名称,上线时间,开播时间 from 电视台

medium pred: SELECT 剧名 FROM 电视剧 WHERE 首播平台id = 1 AND 出品公司 = 'ABC'; SELECT 剧名 FROM 电视剧 WHERE 首播平台id = 1 AND 出品公司 = 'XYZ'; SELECT 剧名 FROM 电视剧收视 WHERE 电视剧id = 1 AND 平台id = 'CCTV' AND 时间段 = '2022-01-01 10:00:00'
medium gold: select T2.名称,T1.剧名 from 电视剧 AS T1 JOIN 电视台 AS T2 ON T1.首播平台id = T2.电视台id

eval_err_num:645
medium pred: SELECT * FROM "平台" WHERE "平台id" NOT IN (SELECT "平台id" FROM "艺人") AND "平台id" NOT IN (SELECT "平台id" FROM "综艺节目")
medium gold: select T1.平台名称 from 平台 AS T1 JOIN 综艺节目 AS T2 ON T1.平台id = T2.平台id where T2.综艺名称 = "创造101"

eval_err_num:646
medium pred: SELECT COUNT(*) FROM "综艺节目" WHERE "节目id" = (SELECT "节目id" FROM "节目阵容" WHERE "参加期数" > 1 AND "平台id" = '平台id' AND "年会费" > 0)
medium gold: select T2.期数 from 平台 AS T1 JOIN 综艺节目 AS T2 ON T1.平台id = T2.平台id where T2.综艺名称 = "创造101"

eval_err_num:647
medium pred: SELECT 的时光 AS 播放时间 FROM "综艺节目" AS t1 JOIN "节目阵容" AS t2 ON t1."平台id" = t2."节目id" AND t1."期数" = t2."期数" WHERE t2."每周播出时间" = '时间' AND t1."播出状态" = '播放'
medium gold: select T2.每周播出时间 from 平台 AS T1 JOIN 综艺节目 AS T2 ON T1.平台id = T2.平台id where T2.综艺名称 = "创造101"

eval_err_num:648
medium pred: SELECT SUM(的时光) AS 月会费 FROM "综艺节目" AS t1 JOIN "节目阵容" AS t2 ON t1."平台id" = t2."节目id" AND t1."期数" = t2."期数" WHERE t2."每周播出时间" = '时间' AND t1."播出状态" = '播放' AND t1."参加期数" > 1 AND t1."平台id" = '平台id' AND t1."年会费" > 0 GROUP BY t1."平台id" ORDER BY 月会费 DESC LIMIT 3
medium gold: select T1.季度会费 from 平台 AS T1 JOIN 综艺节目 AS T2 ON T1.平台id = T2.平台id where T2.综艺名称 = "创造101"

eval_err_num:649
hard pred: SELECT * FROM "妻子的浪漫旅行" WHERE "夫妻" IN (SELECT "夫妻id" FROM "节目阵容")
hard gold: select T3.姓名 from 节目阵容 AS T1 JOIN 综艺节目 AS T2 ON T1.综艺节目id = T2.节目id JOIN 艺人 AS T3 ON T1.艺人id = T3.id where T2.综艺名称 = "妻子的浪漫旅行"

eval_err_num:650
hard pred: SELECT * FROM "嘉宾" WHERE "姓名" = (SELECT "姓名" FROM "艺人")
hard gold: select T3.职业 from 节目阵容 AS T1 JOIN 综艺节目 AS T2 ON T1.综艺节目id = T2.节目id JOIN 艺人 AS T3 ON T1.艺人id = T3.id where T2.综艺名称 = "妻子的浪漫旅行"

eval_err_num:651
medium pred: SELECT * FROM "综艺节目" WHERE "平台id" = (SELECT "平台id" FROM "平台") ORDER BY "首播时间" DESC LIMIT 1
medium gold: select T1.平台名称 from 平台 AS T1 JOIN 综艺节目 AS T2 ON T1.平台id = T2.平台id where T2.综艺名称 = "妻子的浪漫旅行"

eval_err_num:652
hard pred: SELECT * FROM "平台" WHERE (年费 < 1000)
hard gold: select 平台名称 from 平台 where 年会费 = (select min(年会费) from 平台)

eval_err_num:653
hard pred: SELECT SUM(年会费) as 年会费用 FROM "平台" WHERE (年费 < 1000)
hard gold: select distinct 年会费 from 平台 where 年会费 = (select min(年会费) from 平台)

eval_err_num:654
hard pred: SELECT 季度会费 as 季度会费 FROM "平台" WHERE (季度会费 < 500)
hard gold: select 平台名称 from 平台 where 季度会费 = (select min(季度会费) from 平台)

eval_err_num:655
hard pred: SELECT 预算 as 预算 FROM ( SELECT SUM(年费) as 年费, COUNT(*) as 人数 FROM "平台" WHERE (年费 < 1000) ) subquery WHERE (预算 < 50000)
hard gold: select distinct 季度会费 from 平台 where 季度会费 = (select min(季度会费) from 平台)

eval_err_num:656
extra pred: SELECT的口碑 AS口碑, 综艺节目的期数 FROM "平台" WHERE (口碑 < 50)
extra gold: select T1.口碑,T2.综艺名称 from 平台 AS T1 JOIN 综艺节目 AS T2 ON T1.平台id = T2.平台id where T1.季度会费 = (select min(季度会费) from 平台)

eval_err_num:657
hard pred: SELECT * FROM "艺人" WHERE id IN (SELECT id FROM "综艺节目" WHERE name = '奇葩说') ORDER BY id DESC
hard gold: select T2.综艺名称 from 节目阵容 AS T1 JOIN 综艺节目 AS T2 ON T1.综艺节目id = T2.节目id JOIN 艺人 AS T3 ON T1.艺人id = T3.id where T3.姓名 = "傅首尔"

eval_err_num:658
hard pred: SELECT * FROM "综艺节目" WHERE id IN (SELECT id FROM "艺人" WHERE name = '傅首尔') ORDER BY id DESC
hard gold: select T2.播出状态 from 节目阵容 AS T1 JOIN 综艺节目 AS T2 ON T1.综艺节目id = T2.节目id JOIN 艺人 AS T3 ON T1.艺人id = T3.id where T3.姓名 = "傅首尔"

eval_err_num:659
extra pred: SELECT * FROM "平台" WHERE id IN (SELECT id FROM "综艺节目" WHERE name = '奇葩说') ORDER BY id DESC
extra gold: select T4.平台名称 from 节目阵容 AS T1 JOIN 艺人 AS T2 ON T1.艺人id = T2.id JOIN 综艺节目 AS T3 ON T1.综艺节目id = T3.节目id JOIN 平台 AS T4 ON T4.平台id = T3.平台id where T2.姓名 = "傅首尔"

eval_err_num:660
easy pred: SELECT * FROM "综艺节目" WHERE "期数" = (SELECT "节目id" FROM "艺人" WHERE "姓名" = "妻子") AND "首播时间" = (SELECT "时间" FROM "平台" WHERE "平台id" = "妻子" AND "口碑" = '1' AND "每周播出时间" = '2022-02-18' )
easy gold: select 播出状态 from 综艺节目 where 综艺名称 = "妻子的浪漫旅行"

eval_err_num:661
easy pred: SELECT * FROM "综艺节目" WHERE "期数" = (SELECT "节目id" FROM "艺人" WHERE "姓名" = "妻子") AND "首播时间" = (SELECT "时间" FROM "平台" WHERE "平台id" = "妻子" AND "口碑" = '1' AND "每周播出时间" = '2022-02-18' AND "首播时间" > '2022-02-18' )
easy gold: select 首播时间 from 综艺节目 where 综艺名称 = "妻子的浪漫旅行"

eval_err_num:662
easy pred: SELECT * FROM "综艺节目" WHERE "期数" = (SELECT "节目id" FROM "艺人" WHERE "姓名" = "妻子") AND "首播时间" = (SELECT "时间" FROM "平台" WHERE "平台id" = "妻子" AND "口碑" = '1' AND "每周播出时间" = '2022-02-18' AND "首播时间" > '2022-02-18' AND "首播时间" < '2022-02-21' AND "每周播出时间" = '2022-02-24' AND "平台id" ≠ '妻子' AND "平台id" ≠ '妻子' AND "平台id" ≠ '妻子' AND "口碑" ≠ '0' AND "平台id" ≠ '妻子' AND "平台id" ≠ '妻子' AND "口碑" ≠ '1' AND "平台id" ≠ '妻子' AND "平台id" ≠ '妻子')
easy gold: select 每周播出时间 from 综艺节目 where 综艺名称 = "妻子的浪漫旅行"

eval_err_num:663
easy pred: SELECT COUNT(*) as 期数 FROM "综艺节目" WHERE "期数" = (SELECT COUNT(*) FROM "艺人" WHERE "姓名" = "妻子") + '期' AND "首播时间" = (SELECT '2022-02-18' AS 首播时间) + '期' AND "每周播出时间" = '2022-02-24'
easy gold: select 期数 from 综艺节目 where 综艺名称 = "妻子的浪漫旅行"

eval_err_num:664
easy pred: SELECT * FROM "综艺节目" WHERE首播时间 = '2022-05-15 19:00' AND每周播出时间 = '2022-05-15 21:00'
easy gold: select 综艺名称 from 综艺节目 where 每周播出时间 = "周五22:00"

eval_err_num:665
hard pred: SELECT * FROM "综艺节目" WHERE 首播时间 = '2022-05-15' AND 每周播出时间 = '2022-05-16'
hard gold: select T3.姓名 from 节目阵容 AS T1 JOIN 综艺节目 AS T2 ON T1.综艺节目id = T2.节目id JOIN 艺人 AS T3 ON T1.艺人id = T3.id where T2.综艺名称 = "奇葩说第六季"

eval_err_num:666
hard pred: SELECT * FROM "综艺节目" WHERE 首播时间 = '2022-05-15' AND 每周播出时间 = '2022-05-16'
hard gold: select T1.身份 from 节目阵容 AS T1 JOIN 综艺节目 AS T2 ON T1.综艺节目id = T2.节目id JOIN 艺人 AS T3 ON T1.艺人id = T3.id where T2.综艺名称 = "奇葩说第六季" and T3.姓名 = "李诞"

eval_err_num:667
easy pred: SELECT * FROM "艺人" WHERE id IN (SELECT id FROM "平台" WHERE name = '嘉行天下')
easy gold: select 姓名 from 艺人 where 经纪公司 = "嘉行天下"

eval_err_num:668
medium pred: SELECT 字段1, 字段2, 字段3 FROM "艺人" WHERE id IN (SELECT id FROM "平台" WHERE name = '艺人平台' AND xpath = '//text()' AND class = ''))
medium gold: select 姓名,职业 from 艺人 where 经纪公司 = "嘉行天下"

eval_err_num:669
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select T2.姓名,T3.综艺名称 from 节目阵容 AS T1 JOIN 艺人 AS T2 ON T1.艺人id = T2.id JOIN 综艺节目 AS T3 ON T1.综艺节目id = T3.节目id where T2.经纪公司 = "嘉行天下"

eval_err_num:670
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select T1.参加期数 from 节目阵容 AS T1 JOIN 艺人 AS T2 ON T1.艺人id = T2.id JOIN 综艺节目 AS T3 ON T1.综艺节目id = T3.节目id where T2.经纪公司 = "嘉行天下"

eval_err_num:671
hard pred: NO SQL FOUND
hard gold: select 名称 from 城市 where 老年人口占比 in (select max(老年人口占比) from 城市)

eval_err_num:672
hard pred: NO SQL FOUND
hard gold: select 人口数量 * 老年人口占比 from 城市 where 老年人口占比 in (select max(老年人口占比) from 城市)

eval_err_num:673
extra pred: NO SQL FOUND
extra gold: select T1.医院名 from 医院 AS T1 JOIN 城市 AS T2 ON T1.所属城市id = T2.城市id where T2.老年人口占比 in (select max(老年人口占比) from 城市)

eval_err_num:674
extra pred: NO SQL FOUND
extra gold: select T1.职工数量,T1.科室数量 from 医院 AS T1 JOIN 城市 AS T2 ON T1.所属城市id = T2.城市id where T2.老年人口占比 in (select max(老年人口占比) from 城市)

eval_err_num:675
medium pred: NO SQL FOUND
medium gold: select T2.医院名 from 特色科室 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where T1.科室 = "肿瘤科" and T1.是否重点 = "是"

eval_err_num:676
medium pred: NO SQL FOUND
medium gold: select T2.医院等级 from 特色科室 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where T1.科室 = "肿瘤科" and T1.是否重点 = "是"

eval_err_num:677
medium pred: NO SQL FOUND
medium gold: select T2.院士数量 from 特色科室 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where T1.科室 = "肿瘤科" and T1.是否重点 = "是"

eval_err_num:678
hard pred: NO SQL FOUND
hard gold: select 医院名 from 医院 where 院士数量 = (select max(院士数量) from 医院)

eval_err_num:679
hard pred: NO SQL FOUND
hard gold: select 医院等级 from 医院 where 院士数量 = (select max(院士数量) from 医院)

eval_err_num:680
extra pred: NO SQL FOUND
extra gold: select T1.名称 from 城市 AS T1 JOIN 医院 AS T2 ON T1.城市id = T2.所属城市id where T2.院士数量 = (select max(院士数量) from 医院)

eval_err_num:681
medium pred: SELECT * FROM 医院 WHERE 所属城市id = (SELECT 词条id FROM 城市 ON DELETE NOACTION ON UPDATE NOACTION)
medium gold: select T1.医院名 from 医院 AS T1 JOIN 城市 AS T2 ON T1.所属城市id = T2.城市id where T2.所属省份 = "内蒙古"

medium pred: SELECT * FROM 医院 WHERE 医院等级 = '三甲医院'
medium gold: select T1.医院等级 from 医院 AS T1 JOIN 城市 AS T2 ON T1.所属城市id = T2.城市id where T2.所属省份 = "内蒙古"

hard pred: SELECT * FROM 医院 WHERE 科室数量 = 1 AND 重点专科数量 = 1
hard gold: select T3.是否重点 from 医院 AS T1 JOIN 城市 AS T2 ON T1.所属城市id = T2.城市id JOIN 特色科室 AS T3 ON T3.医院id = T1.医院id where T2.所属省份 = "内蒙古"

eval_err_num:682
medium pred: SELECT * FROM "医院" WHERE 医院名 = '吉林大学白求恩第一医院'
medium gold: select T1.排名 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where T2.医院名 = "吉林大学白求恩第一医院"

eval_err_num:683
medium pred: SELECT * FROM "医院排名" WHERE 年份 = '2022' AND 医院id IN ( SELECT 医院id FROM "医院" WHERE 城市名 = '长春' )
medium gold: select T1.接待病患数量 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where T2.医院名 = "吉林大学白求恩第一医院"

eval_err_num:684
medium pred: SELECT手术数量 FROM "医院排名" WHERE 年份 = '2022' AND 医院id IN ( SELECT 医院id FROM "医院" WHERE 城市名 = '长春' )
medium gold: select T1.手术数量 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where T2.医院名 = "吉林大学白求恩第一医院"

eval_err_num:685
easy pred: SELECT职工数量 FROM "医院" WHERE 医院id IN ( SELECT 医院id FROM "医院" WHERE 城市名 = '长春' )
easy gold: select 职工数量 from 医院 where 医院名 = "吉林大学白求恩第一医院"

eval_err_num:686
medium pred: SELECT 城市名, 城市id FROM "城市" WHERE 城市id IN ( SELECT 城市id FROM "城市" WHERE 省份 = '辽宁省' )
medium gold: select T1.名称 from 城市 AS T1 JOIN 医院 AS T2 ON T1.城市id = T2.所属城市id where T2.医院名 = "吉林大学白求恩第一医院"

eval_err_num:687
hard pred: SELECT 城市名, MAX(人口数量) AS max_population FROM 城市 GROUP BY 城市名
hard gold: select 名称 from 城市 where 人口数量 = (select max(人口数量) from 城市)

eval_err_num:688
hard pred: SELECT 老年人口占比, MAX(人口数量) AS max_population FROM 城市 GROUP BY 城市名
hard gold: select 老年人口占比 from 城市 where 人口数量 = (select max(人口数量) from 城市)

eval_err_num:689
hard pred: SELECT 老年人数量, COUNT(*) AS total_population FROM 城市 GROUP BY 老年人数量
hard gold: select 老年人口占比 * 人口数量 from 城市 where 人口数量 = (select max(人口数量) from 城市)

eval_err_num:690
extra pred: SELECT 医院名, 医院排名 FROM 医院排名 GROUP BY 医院名
extra gold: select T2.医院名,T1.排名 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id JOIN 城市 AS T3 ON T3.城市id = T2.所属城市id where T3.人口数量 = (select max(人口数量) from 城市)

eval_err_num:691
hard pred: SELECT t2.科室数量, t3.排名, COUNT(DISTINCT t1.医院id) as 医院数量 FROM "医院" t1 INNER JOIN "特色科室" t2 ON t1.科室 = t2.科室 INNER JOIN "城市" t3 ON t2.城市id = t3.城市id WHERE t2.重点 = 1 AND t3.城市id = ( SELECT MAX(城市id) FROM "城市" ) GROUP BY t1.医院id, t2.科室数量, t3.排名 ORDER BY 医院数量 DESC
hard gold: select 医院名 from 医院 where 重点专科数量 = (select max(重点专科数量) from 医院)

eval_err_num:692
hard pred: SELECT COUNT(DISTINCT t1.医院id) as 医院数量 FROM "医院" t1 INNER JOIN "特色科室" t2 ON t1.科室 = t2.科室 INNER JOIN "城市" t3 ON t2.城市id = t3.城市id WHERE t2.重点 = 1 AND t3.城市id = ( SELECT MAX(城市id) FROM "城市" ) GROUP BY t1.医院id, t2.科室数量, t3.排名 ORDER BY 医院数量 DESC
hard gold: select 重点专科数量 from 医院 where 重点专科数量 = (select max(重点专科数量) from 医院)

eval_err_num:693
extra pred: SELECT t1.科室, COUNT(DISTINCT t1.医院id) as 医院数量 FROM "医院" t1 INNER JOIN "特色科室" t2 ON t1.科室 = t2.科室 INNER JOIN "城市" t3 ON t2.城市id = t3.城市id WHERE t2.重点 = 1 AND t3.城市id = ( SELECT MAX(城市id) FROM "城市" ) GROUP BY t1.科室, t2.科室数量, t3.城市id ORDER BY 医院数量 DESC
extra gold: select T1.科室 from 特色科室 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where T1.是否重点 = "是" and T2.重点专科数量 = (select max(重点专科数量) from 医院)

eval_err_num:694
hard pred: SELECT t1.name AS 城市名, t1.人口数量, t1.老年人口占比, (SELECT COUNT(*) FROM "城市" t2 WHERE t2.城市id = t1.城市id AND t2.老年人口占比 = (SELECT MIN(老年人口占比) FROM "城市" t3 WHERE t3.城市id = t1.城市id)) AS 最小老年人占比 FROM "医院" t1 JOIN "医院排名" t2 ON t1.医院id = t2.医院id JOIN "城市" t3 ON t2.城市id = t3.城市id WHERE t3.老年人口占比 = 0
hard gold: select 名称 from 城市 where 老年人口占比 = (select min(老年人口占比) from 城市)

eval_err_num:695
extra pred: SELECT * FROM "医院" t1 JOIN "医院排名" t2 ON t1.医院id = t2.医院id JOIN "城市" t3 ON t2.城市id = t3.城市id WHERE t3.老年人口占比 = 0
extra gold: select T1.医院名 from 医院 AS T1 JOIN 城市 AS T2 ON T1.所属城市id = T2.城市id where T2.老年人口占比 = (select min(老年人口占比) from 城市)

eval_err_num:696
extra pred: SELECT COUNT(*) FROM "医院" t1 JOIN "医院排名" t2 ON t1.医院id = t2.医院id JOIN "城市" t3 ON t2.城市id = t3.城市id WHERE t3.老年人口占比 = 0
extra gold: select T3.排名 from 医院 AS T1 JOIN 城市 AS T2 ON T1.所属城市id = T2.城市id JOIN 医院排名 AS T3 ON T3.医院id = T1.医院id where T2.老年人口占比 = (select min(老年人口占比) from 城市)

eval_err_num:697
easy pred: SELECT * FROM "医院排名" WHERE "医院id" IN ( SELECT "医院id" FROM "医院" ORDER BY "排名" DESC LIMIT 10 ) AND "城市id" = ( SELECT "城市id" FROM "城市" ORDER BY "人口数量" DESC LIMIT 10 )
easy gold: select 医院名 from 医院 where 医院等级 = "三级甲等"

eval_err_num:698
medium pred: SELECT * FROM "医院排名" WHERE ("接待病患数量" + "手术数量") = ( SELECT SUM(接待病患数量) + SUM(手术数量) FROM "医院排名" GROUP BY "医院id" ORDER BY "排名" DESC LIMIT 10 ) AND "城市id" = ( SELECT "城市id" FROM "城市" GROUP BY "城市id" ORDER BY "人口数量" DESC LIMIT 10 )
medium gold: select T2.医院名,T2.职工数量,T1.接待病患数量 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where T2.医院等级 = "三级甲等"

eval_err_num:699
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select T2.医院名,T1.手术数量 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id where T2.医院等级 = "三级甲等"

eval_err_num:700
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 名称,级别 from 旅行社 order by 亚洲排名 desc limit 3

eval_err_num:701
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 名称,级别 from 旅行社 order by 接待海外游客数量 desc limit 3

eval_err_num:702
medium pred: SELECT 地球的经纬度, 地球的重力加速度, 地球公转周期 FROM 地球的磁记录 WHERE 地球的磁场方向 = 'N'
medium gold: select 国内游城市数量,出境游国家数量 from 旅行社 where 名称 = "中国国旅"

eval_err_num:703
medium pred: SELECT 出境游路线.路线名称, 出境游路线.景点数 FROM出境游路线 JOIN 国内游路线 ON 出境游路线.路线名称 = 国内游路线.路线名称 JOIN 邮轮路线 ON 出境游路线.路线名称 = 邮轮路线.路线名称 JOIN 旅行社 ON 邮轮路线.旅行社id = 旅行社.旅行社id WHERE 邮轮路线.旅行天数 = ?
medium gold: select T2.路线名称,T2.景点数 from 旅行社 AS T1 JOIN 国内游路线 AS T2 ON T1.旅行社id = T2.旅行社id where T1.名称 = "中国国旅"

eval_err_num:704
medium pred: SELECT 出境游路线.路线名称, 出境游路线.景点数 FROM出境游路线 JOIN 国内游路线 ON 出境游路线.路线名称 = 国内游路线.路线名称 JOIN 邮轮路线 ON 出境游路线.路线名称 = 邮轮路线.路线名称 JOIN 旅行社 ON 邮轮路线.旅行社id = 旅行社.旅行社id WHERE 邮轮路线.旅行天数 = (?)
medium gold: select T2.路线名称,T2.景点数 from 旅行社 AS T1 JOIN 出境游路线 AS T2 ON T1.旅行社id = T2.旅行社id where T1.名称 = "中国国旅"

eval_err_num:705
medium pred: SELECT 旅行社.name FROM 旅行社 JOIN出境游所含国家 ON 出境游路线.旅行社id = 旅行社.id JOIN国内游路线 ON国内游路线.旅行社id = 旅行社.id JOIN 邮轮路线 ON 邮轮路线.旅行社id = 旅行社.id JOIN 出境游路线 ON 出境游路线.旅行社id = 邮轮路线.旅行社id WHERE 免税店.id = ( SELECT COUNT(*) FROM 免税店 WHERE 旅行社.id = ( SELECT 旅行社id FROM 旅行社 WHERE 名称 = '旅行社' ORDER BY 免税店数量 DESC LIMIT 1 ) ) GROUP BY 旅行社.name ORDER BY 免税店数量 DESC LIMIT 1
medium gold: select 名称 from 旅行社 order by 免税店数量 desc limit 1

eval_err_num:706
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 名称 from 旅行社 order by 免税店数量 asc limit 1

eval_err_num:707
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 级别,亚洲排名 from 旅行社 order by 免税店数量 asc limit 1

eval_err_num:708
easy pred: SELECT 出境游路线.路线名称, 邮轮路线.邮轮路线名称, COUNT(DISTINCTDISTINCT 出境游路线.旅行社id) as 旅行社id_count FROM 出境游路线 INNER JOIN 邮轮路线 ON 出境游路线.路线id = 邮轮路线.邮轮路线id INNER JOIN 旅行社 ON 邮轮路线.旅行社id = 旅行社.旅行社id GROUP BY 出境游路线.路线名称, 邮轮路线.邮轮路线名称 HAVING COUNT(DISTINCTDISTINCT 旅行社id) > 0
easy gold: select T1.路线名称 from 出境游路线 AS T1 JOIN 邮轮路线 AS T2 ON T1.路线名称 = T2.路线名称

eval_err_num:709
easy pred: SELECT 出境游路线.路线名称, 邮轮路线.邮轮路线名称, COUNT(DISTINCTDISTINCT 出境游路线.旅行社id) as 旅行社id_count FROM 出境游路线 INNER JOIN 邮轮路线 ON 出境游路线.路线id = 邮轮路线.邮轮路线id INNER JOIN 国内游路线 ON 邮轮路线.旅行社id = 国内游路线.旅行社id GROUP BY 出境游路线.路线名称, 邮轮路线.邮轮路线名称 HAVING COUNT(DISTINCTDISTINCT 旅行社id) > 0
easy gold: select T1.路线名称 from 国内游路线 AS T1 JOIN 邮轮路线 AS T2 ON T1.路线名称 = T2.路线名称

eval_err_num:710
medium pred: SELECT 邮轮路线.路线名称, 邮轮路线.邮轮路线名称, 邮轮路线.海景房价格, MIN(阳台房价格) as 阳台房价格 FROM 邮轮路线 INNER JOIN (SELECT 邮轮路线id, MAX(阳台房价格) as阳台房价格 FROM 邮轮路线 GROUP BY 邮轮路线id) 阳台价格 ON 邮轮路线.邮轮路线id = 阳台价格.邮轮路线id INNER JOIN (SELECT 邮轮路线id, MAX(海景房价格) as海景房价格 FROM 邮轮路线 GROUP BY 邮轮路线id) 海景价格 ON 邮轮路线.邮轮路线id = 海景价格.邮轮路线id GROUP BY 邮轮路线.路线名称, 邮轮路线.邮轮路线名称 HAVING MIN(阳台房价格) > MAX(海景房价格)
medium gold: select 路线名称 from 邮轮路线 order by 海景房价格 desc limit 1

eval_err_num:711
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 内舱房价格,阳台房价格 from 邮轮路线 order by 海景房价格 desc limit 1

eval_err_num:712
easy pred: NO SQL FOUND
easy gold: select 名称 from 旅行社 where 级别 = "5A"

eval_err_num:713
medium pred: NO SQL FOUND
medium gold: select 名称,境外公司数量 from 旅行社 where 级别 = "5A"

eval_err_num:714
easy pred: NO SQL FOUND
easy gold: select 路线名称 from 国内游路线 where 出发城市 = "北京"

eval_err_num:715
medium pred: NO SQL FOUND
medium gold: select 个人价格,景点数 from 国内游路线 where 出发城市 = "北京"

eval_err_num:716
medium pred: SELECT * FROM出境游路线 WHERE 路线id IN ( SELECT 路线id FROM出境游所含国家 WHERE 国家 = '中国' )
medium gold: select T1.路线名称 from 出境游路线 AS T1 JOIN 出境游所含国家 AS T2 ON T1.出境游路线id = T2.路线id where T2.国家 = "中国"

eval_err_num:717
medium pred: SELECT * FROM邮轮路线 WHERE 路线id IN ( SELECT 路线id FROM邮轮路线表 WHERE 出发城市 = '上海' )
medium gold: select T1.出发城市 from 出境游路线 AS T1 JOIN 出境游所含国家 AS T2 ON T1.出境游路线id = T2.路线id where T2.国家 = "中国"

eval_err_num:718
medium pred: SELECT 成人价格,儿童价格 FROM出境游路线 WHERE 路线id IN ( SELECT 路线id FROM出境游所含国家 WHERE 国家 = '中国' )
medium gold: select T1.成人价格,T1.儿童价格 from 出境游路线 AS T1 JOIN 出境游所含国家 AS T2 ON T1.出境游路线id = T2.路线id where T2.国家 = "中国"

eval_err_num:719
medium pred: SELECT 门票总价格 FROM出境游路线 WHERE 路线id IN ( SELECT 路线id FROM出境游所含国家 WHERE 国家 = '中国' )
medium gold: select T1.门票总价格 from 出境游路线 AS T1 JOIN 出境游所含国家 AS T2 ON T1.出境游路线id = T2.路线id where T2.国家 = "中国"

eval_err_num:720
hard pred: SELECT 旅行社id, 亚洲排名 FROM 旅行社 WHERE 旅行社id IN ( SELECT 旅行社id FROM 旅行社表 WHERE 亚洲排名 = 1 )
hard gold: select T3.名称,T3.亚洲排名 from 出境游路线 AS T1 JOIN 出境游所含国家 AS T2 ON T1.出境游路线id = T2.路线id JOIN 旅行社 AS T3 ON T3.旅行社id = T1.旅行社id where T2.国家 = "中国"

eval_err_num:721
medium pred: SELECT 路线id, 天数, COUNT(*) as num_days FROM "国内游路线" GROUP BY 路线id ORDER BY num_days DESC LIMIT 1
medium gold: select 路线名称 from 国内游路线 order by 天数 desc limit 1

eval_err_num:722
hard pred: SELECT路线id, 天数, COUNT(*) as num_days FROM "出境游路线" GROUP BY 路线id ORDER BY num_days DESC LIMIT 1
hard gold: select T1.路线名称 from 出境游路线 AS T1 JOIN 邮轮路线 AS T2 ON T1.路线名称 = T2.路线名称 order by T2.天数 desc limit 1

eval_err_num:723
hard pred: SELECT邮轮公司, 邮轮路线 FROM "邮轮路线" JOIN "旅行社" ON邮轮路线."旅行社id" = "旅行社id" WHERE邮轮路线."天数" > (SELECT MAX(天数) FROM "邮轮路线")
hard gold: select T2.邮轮公司 from 出境游路线 AS T1 JOIN 邮轮路线 AS T2 ON T1.路线名称 = T2.路线名称 order by T2.天数 desc limit 1

eval_err_num:724
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T3.名称 from 出境游路线 AS T1 JOIN 邮轮路线 AS T2 ON T1.路线名称 = T2.路线名称 JOIN 旅行社 AS T3 ON T3.旅行社id = T1.旅行社id order by T2.天数 desc limit 1

eval_err_num:725
medium pred: NO SQL FOUND
medium gold: select 平台名称 from 平台 order by 年会费 limit 1

eval_err_num:726
medium pred: NO SQL FOUND
medium gold: select 平台名称 from 平台 order by 月会费 limit 1

eval_err_num:727
hard pred: NO SQL FOUND
hard gold: select 口碑 from 平台 where 平台名称 = (select 平台名称 from 平台 order by 月会费 limit 1)

eval_err_num:728
medium pred: SELECT * FROM "音箱产品" WHERE price between 100 and 200
medium gold: select 名称 ,售价 from 音箱产品 where 售价 between 100 and 200

eval_err_num:729
medium pred: SELECT * FROM "音箱产品" WHERE name in (SELECT name FROM "公司" WHERE id between 1 and 2)
medium gold: select 名称 ,排名 from 音箱产品 where 售价 between 100 and 200

eval_err_num:730
medium pred: SELECT * FROM "音箱产品" WHERE price between 100 and 200 AND name in (SELECT name FROM "公司" WHERE id between 1 and 2)
medium gold: select 名称 ,排名 ,上升名次 from 音箱产品 where 售价 between 100 and 200

eval_err_num:731
medium pred: SELECT 季度, SELECT_VALUE(销售量增长), "产品名称" FROM "产品销售" WHERE id in (SELECT id FROM "公司")
medium gold: select T2.名称 ,T1.季度 ,T1.销售量 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where 售价 between 100 and 200

medium pred: SELECT * FROM 产品销售 WHERE 季度 = '2022' AND 产品id = 1
medium gold: select T1.名称 ,T2.名称 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id where T1.名称 = '天猫精灵'

medium pred: SELECT * FROM 公司 WHERE id = '1'
medium gold: select T2.名称 ,T2.所属国家 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id where T1.名称 = '天猫精灵'

medium pred: SELECT COUNT(*) FROM 公司 WHERE id = '1'
medium gold: select T2.名称 ,T2.排名 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id where T1.名称 = '天猫精灵'

eval_err_num:732
hard pred: SELECT * FROM "公司" WHERE id IN (SELECT 所属公司id FROM "音箱产品" WHERE 名称 = '百度')
hard gold: select T1.名称 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id where T2.名称 like '%百度%'

eval_err_num:733
extra pred: SELECT 音箱id, COUNT(*) as 销售量 FROM "音箱产品" WHERE 名称 = '百度' GROUP BY 音箱id
extra gold: select T1.名称 ,T3.销售量 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id JOIN 产品销售 AS T3 ON T1.音箱id = T3.产品id where T2.名称 like '%百度%'

eval_err_num:734
extra pred: SELECT COUNT(*) as 销售量, 季度, SUM(CASE WHEN 销售量增长 THEN 1 ELSE -1 END) as 销售量增长 FROM "产品销售" WHERE 季度 = (SELECT MAX(季度) FROM "产品销售") AND 产品id IN (SELECT 音箱id FROM "音箱产品" WHERE 名称 = '百度')
extra gold: select T1.名称 ,T3.销售量增长 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id JOIN 产品销售 AS T3 ON T1.音箱id = T3.产品id where T2.名称 like '%百度%'

eval_err_num:735
extra pred: SELECT音箱产品, 产品销售, COUNT(*) as 销售量 FROM 产品销售 JOIN 音箱产品 ON 产品销售.音箱id = 音箱产品.音箱id GROUP BY音箱产品, 产品销售 ORDER BY 销售量 DESC LIMIT 3
extra gold: select T1.名称 ,T3.销售量 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id JOIN 产品销售 AS T3 ON T1.音箱id = T3.产品id where 季度 = '1' order by T3.销售量 desc limit 3

eval_err_num:736
extra pred: SELECT 公司.id as 公司id, 公司.名称 as 公司名称, 音箱产品.名称 as 音箱产品名称 FROM 公司 JOIN 音箱产品 ON 公司.id = 音箱产品.所属公司id GROUP BY 公司, 音箱产品 ORDER BY 公司id DESC, 名称 ASC LIMIT 3
extra gold: select T1.名称 ,T2.名称 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id JOIN 产品销售 AS T3 ON T1.音箱id = T3.产品id where 季度 = '1' order by T3.销售量 desc limit 3

eval_err_num:737
extra pred: SELECT 音箱产品.售价 as 音箱售价, 产品销售.季度, COUNT(*) as 销售量 FROM 音箱产品 JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.音箱id GROUP BY 音箱产品, 产品销售 ORDER BY 音箱售价 DESC, 季度 ASC LIMIT 3
extra gold: select T1.名称 ,T1.售价 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id JOIN 产品销售 AS T3 ON T1.音箱id = T3.产品id where 季度 = '1' order by T3.销售量 desc limit 3

medium pred: SELECT * FROM 动物 WHERE 学名 = '人类的朋友' AND 食性 = '食肉'
medium gold: select 学名 from 动物 where 是否是人类朋友 = "是" and 食性 = "食肉"

hard pred: SELECT * FROM 动物 WHERE 学名 = '人类的朋友' AND 理由 = '因为它是人类的朋友'
hard gold: select 理由 from 动物 where 学名 in (select 学名 from 动物 where 是否是人类朋友 = "是" and 食性 = "食肉")

easy pred: SELECT COUNT(*) FROM 动物朋友 WHERE 朋友id = '动物的天敌'
easy gold: select count(学名) from 动物 where 食性 = "食草"

eval_err_num:738
easy pred: SELECT 学名, 食性, 是否是人类朋友, 理由, 学名 + 食性 + 是否是人类朋友 + 理由 AS 理由_text FROM 动物 WHERE 学名 = '人类的天敌' AND 理由 = '它们是食草动物'
easy gold: select 学名 from 动物 where 食性 = "食草"

medium pred: SELECT * FROM 商家 WHERE 商家id IN (SELECT 商家id FROM 商家平台活动)
medium gold: select 商家 from 商家 where 类型 like "%麻辣烫%"

eval_err_num:739
extra pred: SELECT配送费 FROM 商家平台活动 WHERE 商家id IN (SELECT 商家id FROM 商家)
extra gold: select T2.商家,T1.配送费 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T2.商家 = (select 商家 from 商家 where 类型 like "%麻辣烫%")

extra pred: SELECT 起送价格 FROM 商家平台活动 WHERE 商家id IN (SELECT 商家id FROM 商家)
extra gold: select T2.商家,T1.起送价格 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where T2.商家 = (select 商家 from 商家 where 类型 like "%麻辣烫%")

eval_err_num:740
medium pred: SELECT 商家id, 平台id, 配送费, 评分 FROM "商家平台活动" WHERE 配送费 = 0
medium gold: select 商家 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 配送费 = 0

eval_err_num:741
medium pred: SELECT 商家id, 类型, 配送费, 评分 FROM "商家" WHERE 商家id = 1
medium gold: select 商家,类型 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 配送费 = 0

eval_err_num:742
medium pred: SELECT 评分 FROM "商家平台活动" WHERE 商家id = 1 AND 平台id = '平台名'
medium gold: select 商家,评分 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 配送费 = 0

eval_err_num:743
medium pred: SELECT 商家id, 月售单数 FROM "商家平台活动" WHERE 商家id IN ( SELECT 商家id FROM "商家" GROUP BY 商家id ORDER BY 月售单数 DESC LIMIT 10 )
medium gold: select 商家,月售单数 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id

eval_err_num:744
medium pred: SELECT 商家id, 月售单数 FROM "商家平台活动" ORDER BY 月售单数 DESC LIMIT 10
medium gold: select 商家,月售单数 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id order by 月售单数 desc

eval_err_num:745
extra pred: SELECT * FROM "商家平台活动" WHERE 月售单数 = ( SELECT MAX(月售单数) FROM "商家平台活动" GROUP BY 商家id ) ORDER BY 月售单数 DESC LIMIT 1
extra gold: select 商家,优惠活动 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 月售单数 = (select 月售单数 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id order by 月售单数 desc)

eval_err_num:746
extra pred: SELECT 配送费 FROM "商家平台活动" WHERE 商家id IN ( SELECT 商家id FROM "商家" GROUP BY 商家id ORDER BY 月售单数 DESC LIMIT 10 ) ORDER BY 配送费 DESC LIMIT 1
extra gold: select 商家,起送价格 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 月售单数 = (select 月售单数 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id order by 月售单数 desc)

eval_err_num:747
hard pred: SELECT 平台.平台名, 平台.市场占比 FROM 平台 INNER JOIN 商家 ON 商家.商家id =平台.平台id INNER JOIN "商家平台活动" ON 商家.商家id = "商家平台活动"."商家id" WHERE "商家平台活动"."配送费" > (SELECT MAX(配送费) FROM "商家平台活动" GROUP BY "商家平台活动"."配送费") GROUP BY 平台.平台名, 平台.市场占比 ORDER BY 市场占比 DESC LIMIT 1
hard gold: select 平台名 from 平台 where 市场占比 = (select max(市场占比) from 平台)

eval_err_num:748
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select 平台名,市场占比 from 平台 where 市场占比 = (select max(市场占比) from 平台)

eval_err_num:749
extra pred: SELECT 平台.平台名, 商家.商家name, 商家.合作商家数量 FROM 平台 INNER JOIN 商家 ON 商家.商家id =平台.商家id INNER JOIN "商家平台活动" ON 商家.商家id = "商家平台活动"."商家id" WHERE 商家.合作商家数量 > (SELECT COUNT(*) FROM 商家 WHERE 商家id = 商家.商家id) ORDER BY 平台.平台名, 商家.合作商家数量 DESC LIMIT 1
extra gold: select 平台名,count(*) from 商家平台活动 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id where 平台名 in (select 平台名 from 平台 where 市场占比 = (select max(市场占比) from 平台)) group by 平台名

eval_err_num:750
extra pred: SELECT COUNT(*) AS 商家数量 FROM 商家 WHERE 商家id = ( SELECT 商家id FROM 商家 GROUP BY 商家id HAVING COUNT(*) > 1 )
extra gold: select count(*) from 商家平台活动 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id where 平台名 in (select 平台名 from 平台 where 市场占比 = (select max(市场占比) from 平台))

easy pred: SELECT * FROM 图书
easy gold: select 书名 from 图书

eval_err_num:751
medium pred: SELECT作者 FROM 图书
medium gold: select 书名,作者 from 图书

eval_err_num:752
medium pred: SELECT 小说类型, 书名, 作者, 平台id, 年营业额, 是否自营, 会员费 FROM 图书与平台
medium gold: select 书名,作者 from 图书 where 类型 = '小说'

hard pred: SELECT 售价 FROM 图书与平台
hard gold: select 售价 from 图书与平台 where 书名id in (select 图书id from 图书 where 类型 = "小说")

medium pred: SELECT * FROM 餐饮公司城市消费 WHERE 人均消费额 < 500
medium gold: select 公司名 from 餐饮公司城市消费 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id where 人均消费额 < 500

eval_err_num:753
medium pred: SELECT 公司名, 所属集团 FROM 餐饮公司 WHERE 总部城市id = ( SELECT 总部城市id FROM 餐饮公司城市消费 WHERE 总消费额 < 500 )
medium gold: select 公司名,所属集团 from 餐饮公司城市消费 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id where 人均消费额 < 500

medium pred: SELECT 经营年数 FROM 餐饮公司 WHERE 公司id = ( SELECT 公司id FROM 餐饮公司城市消费 WHERE 总消费额 < 500 )
medium gold: select 公司名,经营年数 from 餐饮公司城市消费 AS T1 JOIN 餐饮公司 AS T2 ON T1.公司id = T2.公司id where 人均消费额 < 500

eval_err_num:754
hard pred: SELECT 城市名 FROM 城市 WHERE 公司名称 in ( SELECT 公司名称 FROM 餐饮公司城市消费 WHERE 总消费额 < 500 )
hard gold: select 公司名,名称 from 餐饮公司 AS T1 JOIN 城市 AS T2 ON T1.总部城市id = T2.城市id JOIN 餐饮公司城市消费 AS T3 ON T1.公司id = T3.公司id where 人均消费额 < 500

eval_err_num:755
medium pred: SELECT 球员id FROM 篮球运动员 WHERE 姓名 = '公牛队'
medium gold: select 中文队名 from 球队 where 中文队名 like '%公牛%'

eval_err_num:756
hard pred: SELECT 夺冠次数 FROM NBA总冠军 WHERE 总教练 = '公牛队'
hard gold: select 夺冠次数 from 球队 where 中文队名 = (select 中文队名 from 球队 where 中文队名 like '%公牛%')

eval_err_num:757
medium pred: SELECT 赛区,所属联盟 FROM 篮球运动员 WHERE 球员id = '公牛队'
medium gold: select 赛区 ,所属联盟 from 球队 where 中文队名 like '%公牛%'

hard pred: SELECT 总教练 FROM NBA总冠军 WHERE 球队id = '公牛队'
hard gold: select T1.总教练 from NBA总冠军 AS T1 JOIN 球队 AS T2 ON T1.球队id = T2.球队id where 中文队名 like '%公牛%'

eval_err_num:758
hard pred: SELECT 年份,时间, 赛季,球员id,所属球队 FROM 篮球运动员 WHERE 姓名 = '公牛队'
hard gold: select T1.赛季 ,T1.总教练 from NBA总冠军 AS T1 JOIN 球队 AS T2 ON T1.球队id = T2.球队id where 中文队名 like '%公牛%'

eval_err_num:759
easy pred: SELECT * FROM "篮球运动员" WHERE 性别 = '男' AND 国籍 = '美国'
easy gold: select 国籍 from 篮球运动员 where 中文名 = '库里'

eval_err_num:760
medium pred: SELECT * FROM "篮球运动员" WHERE 参加选秀年 = '1996' AND 是否状元 = '是'
medium gold: select 参加选秀年 ,是否状元 from 篮球运动员 where 中文名 = '库里'

eval_err_num:761
easy pred: SELECT * FROM "NBA总冠军" WHERE 赛季 = '2016' AND 球队id = ( SELECT 球队id FROM "篮球运动员" WHERE 参加选秀年 = '1996' AND 是否状元 = '是' )
easy gold: select 获得球队 from 篮球运动员 where 中文名 = '库里'

eval_err_num:762
medium pred: SELECT * FROM "篮球运动员" WHERE "球员id" = ( SELECT "球员id" FROM "MVP记录" WHERE "赛季" = 1 LIMIT 1 )
medium gold: select 国籍 ,毕业院校 from 篮球运动员 where 中文名 = '杜兰特'

eval_err_num:763
medium pred: SELECT * FROM "篮球运动员" WHERE "球员id" IN ( SELECT "球员id" FROM "MVP记录" WHERE "赛季" = 1 LIMIT 1 )
medium gold: select T1.赛季 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id where T2.中文名 = '杜兰特'

eval_err_num:764
hard pred: SELECT * FROM "篮球运动员" WHERE "球员id" IN ( SELECT "球员id" FROM "MVP记录" WHERE "赛季" = 1 LIMIT 1 )
hard gold: select T3.中文队名 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id JOIN 球队 AS T3 ON T1.所属球队 = T3.球队id where T2.中文名 = '杜兰特'

eval_err_num:765
hard pred: SELECT * FROM "球队" WHERE "赛区" = ( SELECT "赛区" FROM "篮球运动员" WHERE "球员id" = ( SELECT "球员id" FROM "MVP记录" WHERE "赛季" = 1 LIMIT 1 ) LIMIT 1 )
hard gold: select T3.赛区 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id JOIN 球队 AS T3 ON T1.所属球队 = T3.球队id where T2.中文名 = '杜兰特'

eval_err_num:766
hard pred: SELECT COUNT(*) FROM "NBA总冠军" WHERE "赛季" = 1 GROUP BY "球队id" ORDER BY COUNT(*) DESC
hard gold: select T3.夺冠次数 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id JOIN 球队 AS T3 ON T1.所属球队 = T3.球队id where T2.中文名 = '杜兰特'

eval_err_num:767
easy pred: SELECT * FROM "NBA总冠军" WHERE "赛区" = "西部"
easy gold: select 中文队名 from 球队 where 所属联盟 = '西部'

eval_err_num:768
medium pred: SELECT * FROM "篮球运动员" WHERE "参加选秀年" = "1996" AND "是否状元" = "0" AND "所属球队" = "爵士"
medium gold: select 中文队名 ,赛区 from 球队 where 所属联盟 = '西部'

eval_err_num:769
medium pred: SELECT * FROM "NBA总冠军" WHERE "赛季" = "2010" AND "球队id" = "太阳" AND "总教练" = "科比"
medium gold: select T2.中文队名 ,T1.赛季 ,T1.总教练 from NBA总冠军 AS T1 JOIN 球队 AS T2 ON T1.球队id = T2.球队id where 所属联盟 = '西部'

easy pred: SELECT * FROM 平台
easy gold: select 平台名 from 平台

eval_err_num:770
medium pred: SELECT成立时间 AS 成立时间 FROM 平台
medium gold: select 平台名,成立时间 from 平台

eval_err_num:771
medium pred: SELECT 年营业额 AS 营业额, COUNT(*) as 总营业额 FROM 平台 ORDER BY 营业额 DESC LIMIT 10
medium gold: select 平台名,成立时间 from 平台 order by 年营业额 desc

eval_err_num:772
medium pred: SELECT 会员费 AS 会员费 FROM 平台 WHERE 年营业额 = (SELECT MAX(年营业额) FROM 平台)
medium gold: select 平台名,会员费 from 平台 order by 年营业额 desc limit 1

eval_err_num:773
medium pred: SELECT 作者, 题目 FROM 图书; SELECT 作者, 题目 FROM 平台
medium gold: select 作者,类型 from 图书 where 书名 = "平凡的世界"

eval_err_num:774
hard pred: SELECT 书名, 售价 FROM 图书; SELECT 书名, 售价 FROM 平台
hard gold: select 售价 from 图书与平台 where 书名id = (select 图书id from 图书 where 书名 = "平凡的世界")

hard pred: SELECT 平台名, 成立时间 FROM 平台; SELECT 平台名, 成立时间 FROM 平台
hard gold: select T3.平台名 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T2.书名 = "平凡的世界"

hard pred: SELECT 平台名, 年营业额 FROM 平台
hard gold: select T3.平台名,T3.年营业额 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T2.书名 = "平凡的世界"

extra pred: SELECT 平台名, 年营业额 FROM 平台; ORDER BY 年营业额 DESC; SELECT 平台名, 年营业额 FROM 平台; ORDER BY 年营业额 DESC
extra gold: select T3.平台名,T3.年营业额 from 图书与平台 AS T1 JOIN 图书 AS T2 ON T1.书名id = T2.图书id JOIN 平台 AS T3 ON T1.平台id = T3.平台id where T2.书名 = "平凡的世界" order by T3.年营业额 desc

eval_err_num:775
easy pred: SELECT 出境游所含国家.* FROM 出境游所含国家 INNER JOIN 出境游路线 ON 出境游所含国家.路线id = 出境游路线.出境游路线id INNER JOIN 国内游路线 ON 出境游路线.国内游路线id = 国内游路线.国内游路线id INNER JOIN 邮轮路线 ON 出境游路线.邮轮路线id = 邮轮路线.邮轮路线id INNER JOIN 旅行社 ON 邮轮路线.旅行社id = 旅行社.旅行社id WHERE 旅行社.名称 = '旅行社' AND 出境游所含国家.旅行天数 > 0
easy gold: select 国家 from 出境游所含国家

eval_err_num:776
medium pred: SELECT 出境游路线.旅行天数, 出境游所含国家.景点数量, 出境游路线.邮轮路线名称, 国内游路线.国内游路线名称, 邮轮路线.航行区域, 旅行社.旅行社名称, COUNT(*) FROM 出境游所含国家 INNER JOIN 出境游路线 ON 出境游所含国家.路线id = 出境游路线.出境游路线id INNER JOIN 国内游路线 ON 出境游路线.国内游路线id = 国内游路线.国内游路线id INNER JOIN 邮轮路线 ON 出境游路线.邮轮路线id = 邮轮路线.邮轮路线id INNER JOIN 旅行社 ON 邮轮路线.旅行社id = 旅行社.旅行社id WHERE 旅行社.名称 = '旅行社' GROUP BY 出境游路线.旅行天数, 出境游所含国家.景点数量, 出境游路线.邮轮路线名称, 国内游路线.国内游路线名称, 邮轮路线.航行区域, 旅行社.旅行社名称
medium gold: select 国家,旅行天数 from 出境游所含国家

eval_err_num:777
easy pred: SELECT 景点数量, COUNT(*) FROM 出境游所含国家 INNER JOIN 出境游路线 ON 出境游所含国家.路线id = 出境游路线.出境游路线id INNER JOIN 国内游路线 ON 出境游路线.国内游路线id = 国内游路线.国内游路线id INNER JOIN 邮轮路线 ON 出境游路线.邮轮路线id = 邮轮路线.邮轮路线id INNER JOIN 旅行社 ON 邮轮路线.旅行社id = 旅行社.旅行社id WHERE 旅行社.名称 = '旅行社' GROUP BY 景点数量, COUNT(*) ORDER BY COUNT(*) DESC
easy gold: select 国家 from 出境游所含国家 order by 景点数量 desc

eval_err_num:778
easy pred: CREATE TABLE出境游路线 ( 出境游路线id text, 路线名称 text, 旅行社id text, 出发城市 text, 成人价格 number, 儿童价格 number, 景点数 number, 门票总价格 number, PRIMARY KEY (出境游路线id), FOREIGN KEY (旅行社id) REFERENCES 旅行社(旅行社id) ON DELETE NOACTION ON UPDATE NOACTION )
easy gold: select 路线名称 from 出境游路线

medium pred: SELECT 出发城市, 旅行社id, COUNT(*) FROM 出境游路线 GROUP BY 旅行社id, 出发城市 ORDER BY 旅行社id DESC
medium gold: select 路线名称,出发城市 from 出境游路线

eval_err_num:779
medium pred: SELECT成人价格, COUNT(*) FROM出境游路线 GROUP BY成人价格 ORDER BY COUNT(*) DESC LIMIT 1
medium gold: select 路线名称,成人价格 from 出境游路线 order by 成人价格 desc

eval_err_num:780
medium pred: SELECT 出境游路线id, 路线名称, 旅行社id, 成人价格, 儿童价格, COUNT(*) FROM出境游路线 GROUP BY 出境游路线id, 路线名称, 旅行社id ORDER BY 成人价格 DESC, 儿童价格 DESC, 旅行社id DESC LIMIT 1
medium gold: select 路线名称,儿童价格 from 出境游路线 order by 儿童价格 desc

eval_err_num:781
extra pred: SELECT 出境游路线id, COUNT(*) as 景点数 from 出境游路线 WHERE 成人价格 = (SELECT MAX(成人价格) FROM 出境游路线) GROUP BY 出境游路线id ORDER BY 景点数 DESC LIMIT 1
extra gold: select 路线名称,景点数 from 出境游路线 where 成人价格 = (select 成人价格 from 出境游路线 order by 成人价格 desc limit 1)

eval_err_num:782
easy pred: SELECT * FROM 电视剧 WHERE 出品时间 >= '2019-01-01' AND 出品时间 <= '2020-01-01' AND 首播平台id REFERENCES 电视台 (电视台id)
easy gold: select 剧名 from 电视剧

easy pred: SELECT 剧名 FROM 电视剧 WHERE 出品时间 >= '2019-01-01' AND 出品时间 <= '2020-01-01'
easy gold: select 剧名 from 电视剧

easy pred: SELECT 剧名 FROM 电视剧 WHERE 出品时间 >= '2018-01-01'
easy gold: select 剧名 from 电视剧 where 出品时间 = "2018年"

eval_err_num:783
hard pred: SELECT 剧名, 出品公司, 发行公司 FROM 电视剧 WHERE 首播平台id REFERENCES 电视台 (电视台id) AND 出品时间 >= '2018-01-01'
hard gold: select 剧名 from 电视剧 where 出品时间 in (select min(出品时间) from 电视剧)

eval_err_num:784
hard pred: SELECT 剧名, 出品公司, 发行公司 FROM 电视剧 WHERE 首播平台id REFERENCES 电视台 (电视台id) AND 首播平台id REFERENCES 电视台 (电视台id) ORDER BY 出品时间 DESC LIMIT 1
hard gold: select 剧名 from 电视剧 where 出品时间 in (select max(出品时间) from 电视剧)

eval_err_num:785
medium pred: NO SQL FOUND
medium gold: select 名称,人口 from 民族

eval_err_num:786
medium pred: SELECT 民族id, 人口 FROM "民族" order by 人口 DESC
medium gold: select 名称,人口 from 民族 order by 人口 desc

eval_err_num:787
easy pred: CREATE TABLE 发行公司 (公司id TEXT PRIMARY KEY, 名称 text, 开播时间 time, 上线时间 time, 隶属机构 text) CREATE TABLE 电视剧发行 (电视剧编号 TEXT PRIMARY KEY, 剧名 text, 出品时间 time, 出品公司 text, 发行公司 text, 首播平台id number,FOREIGN KEY (首播平台id) REFERENCES 电视台 (电视台id)) CREATE TABLE 电视剧收视 (电视剧id TEXT, 平台id TEXT REFERENCES 电视台 (电视台id), 时间段 text, 收视率 number,FOREIGN KEY (电视剧id) REFERENCES 电视剧 (电视剧编号),FOREIGN KEY (平台id) REFERENCES 电视台 (词条id))
easy gold: select 发行公司 from 电视剧 where 剧名 = "甄嬛传"

eval_err_num:788
easy pred: CREATE TABLE 电视剧 (电视剧编号 TEXT PRIMARY KEY, 剧名 text, 出品时间 time, 出品公司 text, 发行公司 text, 首播平台id number,FOREIGN KEY (首播平台id) REFERENCES 电视台 (电视台id)) CREATE TABLE 发行公司 (公司id TEXT PRIMARY KEY, 名称 text, 开播时间 time, 上线时间 time, 隶属机构 text) CREATE TABLE 电视剧发行 (电视剧编号 TEXT, 剧名 text, 出品时间 time, 出品公司 text, 发行公司 text, 首播平台id number,FOREIGN KEY (首播平台id) REFERENCES 电视台 (电视台id)) CREATE TABLE 收视率 (电视剧id TEXT, 平台id TEXT, 时间段 text, 收视率 number)
easy gold: select 剧名 from 电视剧 where 发行公司 = "北京电视艺术中心"

eval_err_num:789
medium pred: SELECT 电视台.name, 发行公司.name, 电视剧.name, 首播平台.name AS 首播平台, 平台.name AS 平台 FROM 电视剧 INNER JOIN 发行公司 ON 电视剧.首播平台id = 发行公司.id INNER JOIN 电视台 ON 电视剧.首播平台id = 电视台.id WHERE 出版时间 = (SELECT MAX(出版时间) FROM 电视剧)
medium gold: select T1.名称 from 电视台 AS T1 JOIN 电视剧 AS T2 ON T1.电视台id = T2.首播平台id where 剧名 = "甄嬛传"

eval_err_num:790
medium pred: SELECT 电视台.name, 发行公司.name, 电视剧.name, 首播平台.name AS 首播平台, 平台.name AS 平台 FROM 电视剧 INNER JOIN 发行公司 ON 电视剧.首播平台id = 发行公司.id INNER JOIN 电视台 ON 电视剧.首播平台id = 电视台.id WHERE 出版时间 = (SELECT MAX(出版时间) FROM 电视剧)
medium gold: select T1.开播时间 from 电视台 AS T1 JOIN 电视剧 AS T2 ON T1.电视台id = T2.首播平台id where 剧名 = "甄嬛传"

eval_err_num:791
medium pred: SELECT 电视台.name, 发行公司.name, 电视剧.name, 首播平台.name AS 首播平台, 平台.name AS 平台 FROM 电视剧 INNER JOIN 发行公司 ON 电视剧.首播平台id = 发行公司.id INNER JOIN 电视台 ON 电视剧.首播平台id = 电视台.id WHERE 上线时间 = (SELECT MAX(上线时间) FROM 电视剧)
medium gold: select T1.上线时间 from 电视台 AS T1 JOIN 电视剧 AS T2 ON T1.电视台id = T2.首播平台id where 剧名 = "甄嬛传"

eval_err_num:792
easy pred: SELECT * FROM "民族城市" WHERE "人口" > 10
easy gold: select 城市名称 from 民族城市 where 比例 > "10%"

eval_err_num:793
easy pred: SELECT COUNT(*) FROM "民族城市" WHERE "人口" > 10
easy gold: select count(*) from 民族城市 where 比例 > "10%"

eval_err_num:794
medium pred: SELECT人口数量 FROM "民族城市" WHERE 比例 > 10
medium gold: select 城市名称,人口 from 民族城市 where 比例 > "10%"

eval_err_num:795
medium pred: SELECT人口数量, COUNT(*) as 总人数 FROM "民族城市" WHERE 比例 > 10 GROUP BY 民族id ORDER BY COUNT(*) DESC LIMIT 10
medium gold: select 城市名称,人口 from 民族城市 where 比例 > "10%" order by 人口 desc

eval_err_num:796
hard pred: SELECT 城市名称, 民族id FROM "民族城市" WHERE 比例 > 10
hard gold: select 城市名称,count(*) from 民族城市 AS T1 JOIN 民族 AS T2 ON T1.民族id = T2.民族id where 比例 > "10%" group by 城市名称

eval_err_num:797
medium pred: SELECT * FROM "民俗节日" WHERE "节日" = '春节' AND "民族id" = '汉族'
medium gold: select 名称 from 民俗节日 AS T1 join 民族 AS T2 on T1.民族id = T2.民族id where 节日 = "春节"

eval_err_num:798
medium pred: SELECT * FROM "民族" WHERE "人口" = () AND "民族id" = '汉族'
medium gold: select 人口 from 民俗节日 AS T1 join 民族 AS T2 on T1.民族id = T2.民族id where 节日 = "春节"

eval_err_num:799
hard pred: SELECT COUNT(*) FROM "民族" WHERE "人口" < (SELECT COUNT(*) FROM "民族" AS x WHERE x."民族id" = '汉族')
hard gold: select count(*) from 民族 where 人口 < (select 人口 from 民俗节日 AS T1 join 民族 AS T2 on T1.民族id = T2.民族id where 节日 = "春节" )

eval_err_num:800
hard pred: SELECT 民族id, 名称 FROM "民族" ORDER BY 名称 DESC
hard gold: select 名称 from 民族 where 人口 < (select 人口 from 民俗节日 AS T1 join 民族 AS T2 on T1.民族id = T2.民族id where 节日 = "春节" )

eval_err_num:801
easy pred: SELECT COUNT(1) FROM 电视剧收视
easy gold: select count(名称) from 电视台

eval_err_num:802
easy pred: SELECT 名称, 开播时间, 上线时间, 隶属机构, 首播平台id, 电视剧编号, 剧名, 出品时间, 出品公司, 发行公司, 首播平台id, 时间段, 收视率 FROM 电视台
easy gold: select 名称 from 电视台

eval_err_num:803
hard pred: SELECT 隶属机构, 首播平台id, 电视剧编号, 剧名, 出品时间, 出品公司, 发行公司 FROM 电视剧
hard gold: select 隶属机构 from 电视台 where 名称 in (select 名称 from 电视台)

eval_err_num:804
medium pred: SELECT 剧名, 出品时间, 发行公司 FROM 电视剧收视 WHERE 平台id = 1
medium gold: select 剧名 from 电视剧 AS T1 JOIN 电视台 AS T2 ON T1.首播平台id = T2.电视台id where t2.名称 = "北京卫视"

eval_err_num:805
extra pred: NO SQL FOUND
extra gold: select 剧名 from 电视剧 where 剧名 in (select 剧名 from 电视剧 AS T1 JOIN 电视台 AS T2 ON T1.首播平台id = T2.电视台id where t2.名称 = "北京卫视") and 出品公司 = "中央电视台文艺中心影视部"

eval_err_num:806
easy pred: NO SQL FOUND
easy gold: select 名称 from 民族 where 语言 = "汉语"

eval_err_num:807
medium pred: NO SQL FOUND
medium gold: select 名称,宗教信仰 from 民族 where 语言 = "汉语"

eval_err_num:808
medium pred: NO SQL FOUND
medium gold: select 名称,城市名称 from 民族城市 AS T1 JOIN 民族 AS T2 ON T1.民族id = T2.民族id where 语言 = "汉语"

eval_err_num:809
medium pred: NO SQL FOUND
medium gold: select sum(T1.人口) from 民族城市 AS T1 JOIN 民族 AS T2 ON T1.民族id = T2.民族id where 语言 = "汉语"

eval_err_num:810
hard pred: SELECT 电视剧.剧名, 电视剧收视.时间段, 电视剧收视.收视率 FROM 电视剧 INNER JOIN 电视剧收视 ON 电视剧.首播平台id = 电视剧收视.平台id INNER JOIN 电视台 ON 电视剧.电视台id = 电视台.电视台id WHERE 电视剧收视.时间段 = '20:00:00' AND 电视台.开播时间 = '20:00:00' AND 电视台.上线时间 = '21:00:00'
hard gold: select t1.剧名 from 电视剧 AS T1 JOIN 电视剧收视 AS T2 ON T1.电视剧编号 = T2.电视剧id JOIN 电视台 AS T3 ON T2.平台id = T3.电视台id where T2.时间段 = "20:00~21:00"

eval_err_num:811
easy pred: SELECT 电视剧收视.收视率 FROM 电视剧收视 INNER JOIN 电视台 ON 电视剧收视.平台id = 电视台.电视台id INNER JOIN 电视剧 ON 电视剧.电视剧编号 = 电视剧收视.电视剧编号 WHERE 电视剧.出品时间 = '2022' AND 电视剧.出品公司 = 'ABC' AND 电视剧.发行公司 = 'ABC'
easy gold: select 收视率 from 电视剧收视 where 时间段 = "20:00~21:00"

eval_err_num:812
easy pred: SELECT 电视剧.剧名, 电视剧收视.时间段, 电视剧收视.收视率 FROM 电视剧 INNER JOIN 电视剧收视 ON 电视剧.首播平台id = 电视剧收视.平台id INNER JOIN 电视台 ON 电视剧.电视台id = 电视台.电视台id WHERE 电视剧.出品时间 = '2022' AND 电视剧.出品公司 = 'ABC' AND 电视剧.发行公司 = 'ABC' ORDER BY 收视率 DESC LIMIT 10
easy gold: select * from 电视剧 where 剧名 = "庆余年"

eval_err_num:813
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 名称 from 电视台 AS T1 JOIN 电视剧 AS T2 ON T1.电视台id = T2.首播平台id where 剧名 = "庆余年"

easy pred: SELECT * FROM 动物 WHERE 学名 = '猫' AND 食性 = '流浪'
easy gold: select 学名 from 动物 where 是否是人类朋友 = "是"

easy pred: SELECT * FROM 动物 WHERE 学名 = '狗' AND 食性 = '家畜'
easy gold: select 学名 from 动物 where 是否是人类朋友 = "否"

medium pred: SELECT * FROM 动物 WHERE 学名 = '鼠' AND 食性 = '啮齿'
medium gold: select 学名,食性 from 动物 where 是否是人类朋友 = "否"

eval_err_num:814
hard pred: SELECT * FROM 动物 WHERE 学名 = '狮子' AND 天敌原因 = '扑猎'
hard gold: select T2.学名,T3.学名 from 动物的天敌 AS T1 JOIN 动物 AS T2 ON T1.动物id = T2.动物id join 动物 AS T3 on T3.动物id = T1.天敌id where T2.是否是人类朋友 = "否"

eval_err_num:815
easy pred: SELECT * FROM 比赛 WHERE 名称 = '模式识别' FOREIGN KEY (名称) REFERENCES 比赛 (比赛id)
easy gold: select 名称 from 比赛 where 方向 = '模式识别'

eval_err_num:816
medium pred: SELECT 举办单位 FROM 比赛 WHERE 举办单位 = '单位性质' FOREIGN KEY (举办单位) REFERENCES 单位性质 (单位性质)
medium gold: select 举办单位 ,单位性质 from 比赛 where 方向 = '模式识别'

eval_err_num:817
hard pred: SELECT * FROM 参赛队伍 WHERE 队名 = '模式识别' FOREIGN KEY (队名) REFERENCES 参赛队伍 (队伍id) SELECT * FROM 学生 WHERE 学生id = '1' FOREIGN KEY (学生id) REFERENCES 学生 (学生id) SELECT * FROM 学生参赛记录 WHERE 加入队伍id = '1' FOREIGN KEY (加入队伍id) REFERENCES 参赛队伍 (队伍id) SELECT * FROM 队伍参赛成绩 WHERE 参加比赛id = '1' FOREIGN KEY (参加比赛id) REFERENCES 比赛 (比赛id)
hard gold: select T2.名称 ,T3.队名 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id where 方向 = '模式识别'

eval_err_num:818
hard pred: SELECT 成绩 FROM 队伍参赛成绩 WHERE 参加比赛id = '1' FOREIGN KEY (参加比赛id) REFERENCES 比赛 (比赛id)
hard gold: select T3.队名 ,T1.成绩 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id where 方向 = '模式识别'

hard pred: SELECT * FROM 动物 WHERE 学名 = '汪汪' AND 食性 = '狗' AND 是否是人类朋友 = '1' AND 理由 = '狗狗是人类的好朋友'
hard gold: select T2.学名 from 动物朋友 AS T1 JOIN 动物 AS T2 ON T1.朋友id = T2.动物id JOIN 动物 AS T3 ON T1.动物id = T3.动物id where T3.学名 = "狗"

eval_err_num:819
hard pred: SELECT * FROM 动物天敌 WHERE 动物id = '汪汪' AND 天敌id = '喵喵' AND 克星原因 = '猫咪是狗狗的天敌'
hard gold: select T2.学名 from 动物的天敌 AS T1 JOIN 动物 AS T2 ON T1.天敌id = T2.动物id JOIN 动物 AS T3 ON T1.动物id = T3.动物id where T3.学名 = "狗"

eval_err_num:820
hard pred: SELECT * FROM 动物天敌 WHERE 动物id = '汪汪' AND 天敌id = '喵喵' AND 克星原因 = '狗狗是猫的天敌'
hard gold: select T2.学名,T1.克星原因 from 动物的天敌 AS T1 JOIN 动物 AS T2 ON T1.天敌id = T2.动物id JOIN 动物 AS T3 ON T1.动物id = T3.动物id where T3.学名 = "狗"

easy pred: SELECT * FROM 动物 WHERE 学名 = '汪汪' AND 食性 = '狗' AND 是否是人类朋友 = '1' AND 理由 = '狗狗是人类的好朋友'
easy gold: select 是否是人类朋友 from 动物 where 学名 = "狗"

easy pred: SELECT * FROM 动物 WHERE 学名 = '汪汪' AND 食性 = '狗' AND 是否是人类朋友 = '1' AND 理由 = '狗狗是人类的好朋友'
easy gold: select 理由 from 动物 where 学名 = "狗"

easy pred: SELECT * FROM 动物 WHERE 学名 = '人类'
easy gold: select 学名 from 动物 where 理由 = "人类忠实的朋友"

medium pred: SELECT * FROM 动物 WHERE 学名 = '草食'
medium gold: select 学名,食性 from 动物 where 理由 = "人类忠实的朋友"

hard pred: SELECT * FROM 动物 WHERE 学名 = '除了人类以外的朋友'
hard gold: select T3.学名,T2.学名 from 动物朋友 AS T1 JOIN 动物 AS T2 ON T1.朋友id = T2.动物id JOIN 动物 AS T3 ON T1.动物id = T3.动物id where T3.理由 = "人类忠实的朋友"

eval_err_num:821
hard pred: SELECT * FROM 动物, 天敌 WHERE 动物id =动物id AND 天敌id = 天敌id
hard gold: select T3.学名,T2.学名 from 动物的天敌 AS T1 JOIN 动物 AS T2 ON T1.天敌id = T2.动物id JOIN 动物 AS T3 ON T1.动物id = T3.动物id where T3.理由 = "人类忠实的朋友"

eval_err_num:822
hard pred: SELECT * FROM 动物, 天敌 WHERE 动物id =动物id AND 天敌id = 天敌id
hard gold: select T3.学名,T2.学名,T1.克星原因 from 动物的天敌 AS T1 JOIN 动物 AS T2 ON T1.天敌id = T2.动物id JOIN 动物 AS T3 ON T1.动物id = T3.动物id where T3.理由 = "人类忠实的朋友"

eval_err_num:823
easy pred: SELECT * FROM 动物 JOIN 动物朋友 ON 动物.动物id = 动物朋友.动物id JOIN 动物的天敌 ON 动物.动物id = 天敌.动物id WHERE 动物朋友.动物id IS NULL AND 天敌.动物id IS NULL AND 动物.食用性 = '人类朋友' AND 动物.是否是人类朋友 = '是' AND 天敌.天敌原因 = '捕食对人类有害的昆虫'
easy gold: select 学名 from 动物 where 理由 = "捕食对人类有害的昆虫"

eval_err_num:824
hard pred: SELECT * FROM 动物 JOIN 动物朋友 ON 动物.动物id = 动物朋友.动物id JOIN 动物的天敌 ON 动物.动物id = 天敌.动物id WHERE 动物朋友.动物id IS NULL AND 天敌.动物id IS NULL AND 动物.食用性 = '人类朋友' AND 动物.是否是人类朋友 = '是' AND 动物.学名 = '猫' AND 动物朋友.学名 = '猫' AND 动物朋友.食性 = '人类朋友' AND 天敌.天敌原因 = '捕食对人类有害的昆虫'
hard gold: select T3.学名,T2.学名 from 动物朋友 AS T1 JOIN 动物 AS T2 ON T1.朋友id = T2.动物id JOIN 动物 AS T3 ON T1.动物id = T3.动物id where T3.理由 = "捕食对人类有害的昆虫"

eval_err_num:825
hard pred: SELECT * FROM 动物 JOIN 动物朋友 ON 动物.动物id = 动物朋友.动物id JOIN 动物的天敌 ON 动物.动物id = 天敌.动物id WHERE 动物朋友.动物id IS NULL AND 天敌.动物id IS NULL AND 动物.食用性 = '人类朋友' AND 动物.是否是人类朋友 = '是' AND 动物.学名 = '猫' AND 动物朋友.学名 = '猫' AND 动物朋友.食性 = '人类朋友' AND 天敌.天敌原因 = '捕食对人类有害的昆虫' AND 天敌.天敌原因 = '捕食对人类有害的昆虫'
hard gold: select T2.学名,T3.学名 from 动物的天敌 AS T1 JOIN 动物 AS T2 ON T1.天敌id = T2.动物id JOIN 动物 AS T3 ON T1.动物id = T3.动物id where T2.理由 = "捕食对人类有害的昆虫"

eval_err_num:826
easy pred: CREATE TABLE "公司" ( "id" text, "名称" text, "所属国家" text, "排名" number, PRIMARY KEY ("id") ) CREATE TABLE "音箱产品" ( "音箱id" text, "名称" text, "所属公司id" number, "售价" number, "排名" number, "上升名次" number, PRIMARY KEY ("音箱id"), FOREIGN KEY ("所属公司id") REFERENCES "公司" ("id") ON DELETE NOACTION ON UPDATE NOACTION ) CREATE TABLE "产品销售" ( "产品id" number, "季度" text, "销售量" number, "销售量增长" number, FOREIGN KEY ("产品id") REFERENCES "音箱产品" ("音箱id") ON DELETE NOACTION ON UPDATE NOACTION )
easy gold: select 名称 from 公司

eval_err_num:827
medium pred: SELECT 所属国家 FROM "公司" LEFT JOIN "音箱产品" ON "公司"."id" = "音箱产品"."所属公司id" WHERE 所在国家不在"国家"列中
medium gold: select 名称,所属国家 from 公司

eval_err_num:828
medium pred: SELECT 排名 FROM "公司" ORDER BY 排名 DESC LIMIT 10 FROM "音箱产品" WHERE 所属公司id = ( SELECT MAX(所属公司id) FROM "公司" GROUP BY 所属国家 )
medium gold: select 名称,所属国家 from 公司 order by 排名 desc

eval_err_num:829
easy pred: SELECT * FROM "音箱产品" WHERE名称 = '音箱产品的名称'
easy gold: select 名称 from 音箱产品

eval_err_num:830
medium pred: SELECT 排名 FROM "音箱产品" WHERE id IN (SELECT 音箱id FROM "产品销售") AND上升名次 = 1
medium gold: select 名称,排名 from 音箱产品

eval_err_num:831
extra pred: SELECT * FROM "音箱产品" WHERE 售价 > 300 AND上升名次 > 0
extra gold: select 名称,排名 from 音箱产品 where 售价>300 or 售价 = 300

eval_err_num:832
hard pred: SELECT 所属公司id FROM "音箱产品" WHERE 名称 = '音箱产品的名称' AND上升名次 = 1
hard gold: select 名称 from 公司 where id in (select 所属公司id from 音箱产品 where 名称 in (select 名称 from 音箱产品 where 售价>300 or 售价 = 300))

eval_err_num:833
easy pred: SELECT 排名 FROM "音箱产品" WHERE 名称 = '音箱产品的名称' AND 所属公司id = '百度公司' AND 售价 > 300
easy gold: select 排名 from 公司 where 名称 = "百度"

eval_err_num:834
easy pred: SELECT 名称 FROM 音箱产品 WHERE 所属公司id = ( SELECT 所属公司id FROM 公司 WHERE id = ? )
easy gold: select 名称 from 音箱产品

eval_err_num:835
medium pred: SELECT 音箱id, 售价 FROM 音箱产品 WHERE 所属公司id = ( SELECT 所属公司id FROM 公司 WHERE id = ? )
medium gold: select 名称,售价 from 音箱产品

medium pred: SELECT 音箱id, 售价 FROM 音箱产品 ORDER BY 售价 DESC LIMIT 10
medium gold: select 名称,售价 from 音箱产品 order by 售价 desc

eval_err_num:836
hard pred: SELECT 公司名称, 售价 FROM 音箱产品 WHERE 所属公司id = ( SELECT 所属公司id FROM 公司 WHERE id = ? ) ORDER BY 售价 DESC LIMIT 1
hard gold: select 名称 from 公司 where id = (select 所属公司id from 音箱产品 where 名称 = (select 名称 from 音箱产品 order by 售价 desc limit 1))

eval_err_num:837
medium pred: SELECT 音箱产品.售价, 产品销售.季度, COUNT(音箱产品.音箱id) 销售量 FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.产品id WHERE 所属公司id = 1 GROUP BY 音箱产品.名称, 产品销售.季度, COUNT(音箱产品.音箱id)
medium gold: select 名称,售价 from 音箱产品 where 名称 = "小爱"

eval_err_num:838
medium pred: SELECT COUNT(*) as 排名 FROM 公司 WHERE id = 1 FOREIGN KEY (排名) REFERENCES 公司(id) ON DELETE NOACTION ON UPDATE NOACTION
medium gold: select 名称,排名 from 音箱产品 where 名称 = "小爱"

eval_err_num:839
hard pred: SELECT 公司名称, 公司所在国家 FROM 公司 WHERE 公司id = 1 FOREIGN KEY (公司名称) REFERENCES 公司(id) ON DELETE NOACTION ON UPDATE NOACTION
hard gold: select 名称 from 公司 where id = (select 所属公司id from 音箱产品 where 名称 = "小爱" )

eval_err_num:840
hard pred: SELECT 销售数量, 季度, SUM(销售数量) as 总销售量 FROM 产品销售 INNER JOIN 音箱产品 ON 产品销售.产品id = 音箱产品.音箱id WHERE 产品id = 1 GROUP BY 销售数量, 季度, SUM(销售数量)
hard gold: select 销售量 from 产品销售 where 产品id = (select 音箱id from 音箱产品 where 名称 = "小爱")

eval_err_num:841
medium pred: NO SQL FOUND
medium gold: select 名称 from 比赛 where 举办单位 like '%京东%'

eval_err_num:842
medium pred: NO SQL FOUND
medium gold: select 方向 from 比赛 where 举办单位 like '%京东%'

eval_err_num:843
medium pred: NO SQL FOUND
medium gold: select 比赛平台 from 比赛 where 举办单位 like '%京东%'

eval_err_num:844
easy pred: SELECT * FROM 参赛学生 INNER JOIN 学生参赛记录 ON 学生id = 学生参赛记录.学生id INNER JOIN 队伍参赛成绩 ON 加入队伍id = 队伍参赛成绩.加入队伍id INNER JOIN 比赛 ON 比赛id = 比赛.比赛id WHERE 加入队伍id = 1 AND 参加比赛id = 2
easy gold: select 姓名 from 参赛学生 where 学校 = '北京理工大学'

medium pred: SELECT 姓名, 年龄, 学历 FROM 参赛学生 WHERE 年龄 = 20 AND 学历 = '本科'
medium gold: select 姓名 ,学历 ,年龄 from 参赛学生 where 学校 = '北京理工大学'

eval_err_num:845
hard pred: SELECT 加入队伍id, 参加比赛id FROM 参赛学生 INNER JOIN 学生参赛记录 ON 学生id = 学生参赛记录.学生id INNER JOIN 队伍参赛成绩 ON 加入队伍id = 队伍参赛成绩.加入队伍id INNER JOIN 比赛 ON 比赛id = 比赛.比赛id WHERE 加入队伍id = 1 AND 参加比赛id = 2
hard gold: select T3.队名 from 学生参赛记录 AS T1 JOIN 参赛学生 AS T2 ON T1.学生id = T2.学生id JOIN 参赛队伍 AS T3 ON T1.队伍id = T3.队伍id where 学校 = '北京理工大学'

eval_err_num:846
hard pred: SELECT 加入日期 FROM 学生参赛记录 INNER JOIN 学生 ON 学生记录.学生id = 学生参赛记录.学生id INNER JOIN 队伍 ON 学生记录.加入队伍id = 队伍参赛成绩.加入队伍id INNER JOIN 比赛 ON 队伍.队名 = 比赛.比赛平台 WHERE 加入队伍id = 1 AND 参加比赛id = 2
hard gold: select T1.加入队伍日期 from 学生参赛记录 AS T1 JOIN 参赛学生 AS T2 ON T1.学生id = T2.学生id JOIN 参赛队伍 AS T3 ON T1.队伍id = T3.队伍id where 学校 = '北京理工大学'

eval_err_num:847
extra pred: SELECT 成绩 FROM 队伍参赛成绩 INNER JOIN 比赛 ON 比赛.比赛id = 比赛.比赛id WHERE 加入队伍id = 1 AND 参加比赛id = 2
extra gold: select T4.成绩 from 学生参赛记录 AS T1 JOIN 参赛学生 AS T2 ON T1.学生id = T2.学生id JOIN 参赛队伍 AS T3 ON T1.队伍id = T3.队伍id JOIN 队伍参赛成绩 AS T4 ON T3.队伍id = T4.加入队伍id where 学校 = '北京理工大学'

eval_err_num:848
medium pred: SELECT * FROM 比赛 WHERE 奖金数额排名前三 ORDER BY 奖金数额 DESC LIMIT 3
medium gold: select 名称 ,奖金数 from 比赛 order by 奖金数 desc limit 3

eval_err_num:849
medium pred: SELECT COUNT(*) FROM 学生参赛记录 WHERE 加入队伍id IN (SELECT 加入队伍id FROM 学生参赛记录 WHERE 学生id IN (SELECT 学生id FROM 学生 WHERE 姓名 = '小明' ORDER BY 年龄 DESC LIMIT 10))
medium gold: select 名称 ,录取队伍数量 from 比赛 order by 奖金数 desc limit 3

eval_err_num:850
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T3.队名,T2.名称 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id order by 奖金数 desc limit 3

eval_err_num:851
extra pred: SELECT 成绩 FROM 队伍参赛成绩 WHERE 加入队伍id IN (SELECT 加入队伍id FROM 学生参赛记录 WHERE 学生id IN (SELECT 学生id FROM 学生 WHERE 姓名 = '小明' ORDER BY 年龄 DESC LIMIT 10))
extra gold: select T3.队名 ,T2.名称 ,T1.成绩 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id order by 奖金数 desc limit 3

eval_err_num:852
easy pred: SELECT 麦当劳.公司名称, 麦当劳.总部城市id, 麦当劳.所属集团, '餐饮' AS 集团类型 FROM 餐饮公司 麦当劳 JOIN 城市 城市 ON 麦当劳.总部城市id = 城市.城市id JOIN 集团 集团 ON 城市.集团id = 集团.集团id WHERE 集团.集团名 = '餐饮'
easy gold: select 所属集团 from 餐饮公司 where 公司名 = '麦当劳'

eval_err_num:853
easy pred: SELECT 麦当劳.公司名称, 麦当劳.总部城市id, 麦当劳.所属集团, MAX(麦当劳.经营范围) AS 经营范围 FROM 餐饮公司 麦当劳 JOIN 城市 城市 ON 麦当劳.总部城市id = 城市.城市id JOIN 集团 集团 ON 城市.集团id = 集团.集团id GROUP BY 麦当劳.公司名称, 麦当劳.总部城市id, 麦当劳.所属集团 HAVING MAX(麦当劳.经营范围) = (SELECT MAX(经营范围) FROM 餐饮公司 WHERE 公司id = 麦当劳.公司id)
easy gold: select 经营范围 from 餐饮公司 where 公司名 = '麦当劳'

eval_err_num:854
easy pred: SELECT 麦当劳.公司名称, 麦当劳.总部城市id, 麦当劳.经营年数 FROM 餐饮公司 麦当劳 JOIN 城市 城市 ON 麦当劳.总部城市id = 城市.城市id JOIN 集团 集团 ON 城市.集团id = 集团.集团id WHERE 集团.集团名 = '餐饮' GROUP BY 麦当劳.公司名称, 麦当劳.总部城市id, 麦当劳.经营年数 HAVING COUNT(麦当劳.经营年数) = (SELECT COUNT(*) FROM 餐饮公司 WHERE 公司id = 麦当劳.公司id)
easy gold: select 经营年数 from 餐饮公司 where 公司名 = '麦当劳'

eval_err_num:855
hard pred: SELECT 麦当劳.公司名称, 麦当劳.总部城市id, 麦当劳.经营年数, COUNT(*) AS 人气 FROM 餐饮公司 麦当劳 JOIN 城市 城市 ON 麦当劳.总部城市id = 城市.城市id JOIN 集团 集团 ON 城市.集团id = 集团.集团id WHERE 集团.集团名 = '餐饮' GROUP BY 麦当劳.公司名称, 麦当劳.总部城市id, 麦当劳.经营年数 HAVING COUNT(*) > (SELECT COUNT(*) FROM 城市 WHERE 城市id = 城市.城市id)
hard gold: select T1.人气 from 餐饮公司城市消费 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T3.公司id = T1.公司id where T3.公司名 = '麦当劳' AND T2.名称 = '杭州'

eval_err_num:856
easy pred: SELECT * FROM "城市" WHERE 城市id = ( SELECT 城市id FROM "餐饮公司" WHERE 公司id = 12345 )
easy gold: select 餐饮收入 from 城市 where 名称 = '成都'

eval_err_num:857
easy pred: SELECT增长率 FROM "城市" JOIN "餐饮公司" ON "城市"."城市id" = "餐饮公司"."总部城市id" JOIN "餐饮公司城市消费" ON "餐饮公司"."公司id" = "餐饮公司城市消费"."公司id" JOIN "餐饮公司城市连锁" ON "餐饮公司城市消费"."城市id" = "餐饮公司城市连锁"."城市id" WHERE "城市"."城市id" = ( SELECT MAX("城市"."同比增长") FROM "城市" GROUP BY "城市"."城市id" )
easy gold: select 同比增长 from 城市 where 名称 = '成都'

eval_err_num:858
extra pred: SELECT 公司名称,分店数量 FROM "餐饮公司城市连锁" JOIN "城市" ON "餐饮公司城市连锁"."城市id" = "城市"."城市id" WHERE "餐饮公司城市连锁"."分店数量" = ( SELECT COUNT(*) FROM "餐饮公司城市消费" WHERE "餐饮公司城市消费"."公司id" = "餐饮公司城市连锁"."公司id" )
extra gold: select T1.分店数量 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where 名称 = '成都' order by 分店数量 desc limit 1

eval_err_num:859
easy pred: SELECT 公司名称, 上市股市 FROM 餐饮公司 t1 联合 join 城市 t2 on t1.城市id = t2.城市id
easy gold: select 公司名 from 餐饮公司 where 上市股市 = 'A股'

eval_err_num:860
hard pred: SELECT 公司名称, 分店数量 FROM 餐饮公司城市连锁 t3 联合 join 城市 t2 on t3.城市id = t2.城市id
hard gold: select T3.公司名 ,T2.名称 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where 上市股市 = 'A股'

eval_err_num:861
hard pred: SELECT 占地面积 FROM 餐饮公司城市连锁 t4 联合 join 城市 t2 on t4.城市id = t2.城市id
hard gold: select T1.占地面积 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where 上市股市 = 'A股'

eval_err_num:862
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T2.名称 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where T3.公司名 = '麦当劳' order by T1.员工数量 desc limit 1

eval_err_num:863
extra pred: SELECT t2.餐位数量 FROM 餐饮公司城市连锁 t1 join 餐饮公司城市消费 t2 on t1.城市id = t2.城市id and t1.公司id = t2.公司id WHERE t1.公司名称 = '麦当劳'
extra gold: select T1.餐位数量 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where T3.公司名 = '麦当劳' order by T1.员工数量 desc limit 1

eval_err_num:864
extra pred: SELECT t2.员工数量 FROM 餐饮公司城市连锁 t1 join 餐饮公司城市消费 t2 on t1.城市id = t2.城市id and t1.公司id = t2.公司id WHERE t1.公司名称 = '麦当劳'
extra gold: select T1.员工数量 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where T3.公司名 = '麦当劳' order by T1.员工数量 desc limit 1

extra pred: SELECT COUNT(*) FROM 餐饮公司城市连锁 WHERE 城市id = 'New York'
extra gold: select T1.分店数量 from 餐饮公司城市连锁 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T1.公司id = T3.公司id where T3.公司名 = '麦当劳' order by T1.员工数量 desc limit 1

easy pred: SELECT * FROM 民俗节日; SELECT * FROM "民族" WHERE "民族id" = (SELECT "词条id" FROM "民族"); SELECT * FROM "民族城市" WHERE "民族id" = (SELECT "词条id" FROM "民族")
easy gold: select 节日 from 民俗节日

eval_err_num:865
medium pred: SELECT 时间 AS 时间 FROM 民俗节日; SELECT 时间 AS 时间 FROM "民族" WHERE "民族id" = (SELECT "词条id" FROM "民族"); SELECT 时间 AS 时间 FROM "民族城市" WHERE "民族id" = (SELECT "词条id" FROM "民族")
medium gold: select 节日,时间 from 民俗节日

eval_err_num:866
medium pred: SELECT 纪念 AS 纪念 FROM 民俗节日; SELECT 纪念 AS 纪念 FROM "民族" WHERE "民族id" = (SELECT "词条id" FROM "民族"); SELECT 纪念 AS 纪念 FROM "民族城市" WHERE "民族id" = (SELECT "词条id" FROM "民族")
medium gold: select 节日,纪念 from 民俗节日

eval_err_num:867
hard pred: SELECT * FROM "民族" WHERE "民族id" = (SELECT "词条id" FROM "民族") AND "节日" = '端午节'
hard gold: select 名称 from 民族 where 民族id = (select 民族id from 民俗节日 where 节日 = "端午节")

eval_err_num:868
extra pred: SELECT 人口 AS 人口 FROM "民族" WHERE "民族id" = (SELECT "词条id" FROM "民族") AND "节日" = '端午节'
extra gold: select 名称,人口 from 民族 where 民族id = (select 民族id from 民俗节日 where 节日 = "端午节")

eval_err_num:869
easy pred: SELECT * FROM "民族"
easy gold: select 名称 from 民族

eval_err_num:870
medium pred: SELECT Language FROM "民族"
medium gold: select 名称,语言 from 民族

eval_err_num:871
medium pred: SELECT人口, COUNT(*) FROM "民族" GROUP BY人口 ORDER BY COUNT(*) DESC
medium gold: select 名称,人口 from 民族 order by 人口 desc

eval_err_num:872
medium pred: SELECT 宗教信仰 FROM "民族" WHERE population = ( SELECT COUNT(*) FROM "民族" WHERE 民族id = ( SELECT 民族id FROM "民族" ) AND Language = '中文' )
medium gold: select 名称,宗教信仰 from 民族 order by 人口 desc limit 1

eval_err_num:873
easy pred: NO SQL FOUND
easy gold: select 城市名称 from 民族城市

eval_err_num:874
medium pred: SELECT人口,比例 FROM "民族城市" WHERE 城市名称 = '北京'
medium gold: select 城市名称,人口,比例 from 民族城市

eval_err_num:875
medium pred: SELECT人口,比例 FROM "民族城市" ORDER BY人口数量 DESC
medium gold: select 城市名称,人口,比例 from 民族城市 order by 人口 desc

eval_err_num:876
extra pred: SELECT 民族,人口数量 FROM "民族城市" WHERE 城市名称 = '上海' ORDER BY人口数量 DESC
extra gold: select 名称 from 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id where T2.城市名称 = (select 城市名称 from 民族城市 order by 人口 desc limit 1)

eval_err_num:877
extra pred: SELECT 宗教信仰 FROM "民族城市" WHERE 城市名称 = '上海' ORDER BY 宗教信仰 DESC
extra gold: select 名称,宗教信仰 from 民族 AS T1 JOIN 民族城市 AS T2 ON T1.民族id = T2.民族id where T2.城市名称 = (select 城市名称 from 民族城市 order by 人口 desc limit 1)

eval_err_num:878
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 中文队名 from 球队

eval_err_num:879
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 中文队名,赛区 from 球队

eval_err_num:880
medium pred: SELECT 夺冠次数 FROM "NBA总冠军" ORDER BY 夺冠次数 DESC LIMIT 1
medium gold: select 中文队名,赛区 from 球队 order by 夺冠次数 desc

eval_err_num:881
extra pred: SELECT 总教练 FROM "NBA总冠军" WHERE 夺冠次数 = ( SELECT 夺冠次数 FROM "NBA总冠军" ORDER BY 夺冠次数 DESC LIMIT 1 )
extra gold: select 总教练 from NBA总冠军 AS T1 JOIN 球队 AS T2 ON T1.球队id = T2.球队id where T2.中文队名 = (select 中文队名 from 球队 order by 夺冠次数 desc limit 1)

eval_err_num:882
easy pred: CREATE TABLE "篮球运动员" ( "球员id" text, "中文名" text, "参加选秀年" time, "是否状元" binary, "获得球队" text, "毕业院校" text, "国籍" TEXT, PRIMARY KEY ("球员id") ) CREATE TABLE "NBA总冠军" ( "赛季" number, "球队id" number, "总教练" text, FOREIGN KEY ("球队id") REFERENCES "球队" ("球队id") ON DELETE NOACTION ON UPDATE NOACTION ) CREATE TABLE "MVP记录" ( "赛季" number, "球员id" number, "所属球队" TEXT, FOREIGN KEY ("球员id") REFERENCES "篮球运动员" ("球员id") ON DELETE NOACTION ON UPDATE NOACTION, FOREIGN KEY ("所属球队") REFERENCES "球队" ("球队id") )
easy gold: select 中文名 from 篮球运动员

eval_err_num:883
medium pred: CREATE TABLE "篮球运动员" ( "球员id" text, "中文名" text, "参加选秀年" time, "是否状元" binary, "获得球队" text, "毕业院校" text, "国籍" TEXT, PRIMARY KEY ("球员id") ) CREATE TABLE "NBA总冠军" ( "赛季" number, "球队id" number, "总教练" text, FOREIGN KEY ("球队id") REFERENCES "球队" ("球队id") ON DELETE NOACTION ON UPDATE NOACTION ) CREATE TABLE "MVP记录" ( "赛季" number, "球员id" number, "所属球队" TEXT, FOREIGN KEY ("球员id") REFERENCES "篮球运动员" ("球员id") ON DELETE NOACTION ON UPDATE NOACTION, FOREIGN KEY ("所属球队") REFERENCES "球队" ("球队id") )
medium gold: select 中文名,参加选秀年 from 篮球运动员

eval_err_num:884
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 中文名,参加选秀年 from 篮球运动员 where 是否状元 = "是"

eval_err_num:885
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 中文名,获得球队 from 篮球运动员 where 是否状元 = "是"

eval_err_num:886
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 国籍 from 篮球运动员 where 是否状元 = "是"

eval_err_num:887
easy pred: CREATE TABLE 电视剧 ( 电视剧编号 TEXT PRIMARY KEY, 剧名 text, 出品时间 time, 出品公司 text, 发行公司 text, 首播平台id number, FOREIGN KEY (首播平台id) REFERENCES 电视台 (电视台id), FOREIGN KEY (剧名) REFERENCES 电视剧 (电视剧编号) )
easy gold: select 剧名 from 电视剧

eval_err_num:888
medium pred: CREATE TABLE 电视剧收视 ( 电视剧id TEXT, 平台id TEXT, 时间段 text, 收视率 number, FOREIGN KEY (电视剧id) REFERENCES 电视剧 (电视剧编号), FOREIGN KEY (平台id) REFERENCES 电视台 (电视台id), FOREIGN KEY (时间段) REFERENCES 时间 (时间) )
medium gold: select 剧名,出品时间 from 电视剧

eval_err_num:889
medium pred: CREATE TABLE 出品公司 ( 公司名称 TEXT, 隶属机构 text, 开办时间 time, 上线时间 time, 出品公司text, 发行公司text, 首播平台id number, FOREIGN KEY (公司名称) REFERENCES 公司 (公司名称) ON DELETE CASCADE, FOREIGN KEY (隶属机构) REFERENCES 机构 (隶属机构) ON DELETE CASCADE, FOREIGN KEY (开办时间) REFERENCES 时间 (时间) ON DELETE CASCADE, FOREIGN KEY (上线时间) REFERENCES 时间 (时间) ON DELETE CASCADE )
medium gold: select 剧名,出品公司 from 电视剧

eval_err_num:890
medium pred: CREATE TABLE 甄嬛传 ( 剧名 TEXT, 出品公司 text, 发行公司 text, 首播平台id number, FOREIGN KEY (剧名) REFERENCES 电视剧 (剧名), FOREIGN KEY (出品公司) REFERENCES 出品公司 (公司名称), FOREIGN KEY (发行公司) REFERENCES 发行公司 (公司名称) ON DELETE CASCADE, PRIMARY KEY (剧名, 出品公司, 发行公司) )
medium gold: select 剧名,发行公司 from 电视剧 where 剧名 = "甄嬛传"

eval_err_num:891
medium pred: CREATE TABLE 收视率 ( 收视率 number, 时间段 text, 电视剧id number, FOREIGN KEY (收视率) REFERENCES 电视剧收视 (电视剧编号), PRIMARY KEY (收视率, 时间段, 电视剧编号) )
medium gold: select 收视率 from 电视剧收视 AS T1 JOIN 电视剧 AS T2 ON T1.电视剧id = T2.电视剧编号 where T2.剧名 = "甄嬛传"

eval_err_num:892
medium pred: SELECT 出品公司, 发行公司, 首播平台id, 时间段, 收视率 FROM 电视剧 WHERE 出品时间 = '2022' AND 发行公司 = '中国' AND 首播平台id = '1'
medium gold: select 剧名,出品时间 from 电视剧 where 剧名 = "破冰行动"

eval_err_num:893
hard pred: SELECT 出品公司, 发行公司, 首播平台id, 时间段, 收视率 FROM 电视剧 WHERE 首播平台id = '1' AND 出品时间 = '2021'
hard gold: select 名称 from 电视台 where 电视台id =(select 首播平台id from 电视剧 where 剧名 = "破冰行动")

eval_err_num:894
extra pred: SELECT 电视台,隶属机构 FROM 电视台 WHERE隶属机构 = '中国'
extra gold: select 名称,隶属机构 from 电视台 where 电视台id =(select 首播平台id from 电视剧 where 剧名 = "破冰行动")

eval_err_num:895
extra pred: SELECT 开播时间, 上线时间 FROM 电视剧 WHERE 首播平台id = '1' AND 出品时间 = '2021' AND 上线时间 = '2021-01-01'
extra gold: select 名称,开播时间,上线时间 from 电视台 where 电视台id =(select 首播平台id from 电视剧 where 剧名 = "破冰行动")

easy pred: SELECT 出品公司, 发行公司 FROM 电视剧 WHERE 出品公司 = '中国' AND 发行公司 = '毒蛇行动'
easy gold: select 出品公司 from 电视剧 where 剧名 = "破冰行动"

eval_err_num:896
easy pred: SELECT * FROM 公司 WHERE id IN (SELECT id FROM音箱产品 WHERE 所属公司id = 1)
easy gold: select 名称 from 公司 where 所属国家 = "中国"

eval_err_num:897
medium pred: SELECT * FROM音箱产品 WHERE名称='音箱' AND 所属公司id NOT IN (SELECT 所属公司id FROM 公司)
medium gold: select T2.名称 from 公司 AS T1 JOIN 音箱产品 AS T2 ON T1.id = T2.所属公司id where T1.所属国家 = "中国"

eval_err_num:898
medium pred: SELECT 排名,上升名次 FROM 音箱产品 WHERE 音箱id IN (SELECT音箱id FROM 音箱产品 WHERE 名称='音箱' AND 所属公司id NOT IN (SELECT 所属公司id FROM 公司))
medium gold: select T2.排名,T2.上升名次 from 公司 AS T1 JOIN 音箱产品 AS T2 ON T1.id = T2.所属公司id where T1.所属国家 = "中国"

eval_err_num:899
hard pred: SELECT 产品销售情况 FROM 产品销售 WHERE 季度='春季' AND 销售量同比增长大于等于 0
hard gold: select T3.销售量 from 公司 AS T1 JOIN 音箱产品 AS T2 ON T1.id = T2.所属公司id JOIN 产品销售 AS T3 ON T3.产品id = T2.音箱id where T1.所属国家 = "中国" and T3.季度 = "春季"

eval_err_num:900
medium pred: SELECT 音箱产品.名称 as 产品名称, 产品销售.销售量 as 销售量, COUNT(*) as 排名 FROM 音箱产品 JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.产品id GROUP BY 音箱产品.名称, 产品销售.销售量 ORDER BY COUNT(*) DESC, 产品名称 ASC LIMIT 1
medium gold: select 名称 from 音箱产品 order by 排名 desc limit 1

eval_err_num:901
medium pred: SELECT 音箱产品.名称 as 产品名称, 产品销售.销售量 as 销售量, COUNT(*) as 排名 FROM 音箱产品 JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.产品id GROUP BY 音箱产品.名称, 产品销售.销售量 ORDER BY COUNT(*) DESC, 产品名称 ASC LIMIT 1
medium gold: select 售价 from 音箱产品 order by 排名 desc limit 1

eval_err_num:902
extra pred: SELECT 产品销售.销售量 as 销售量, 产品销售.销售量增长 as 销售量增长 FROM 产品销售 JOIN 音箱产品 ON 音箱产品.音箱id = 产品销售.产品id WHERE 季度 = '2' GROUP BY 产品销售.销售量, 产品销售.销售量增长 ORDER BY 销售量增长 DESC, 产品销售.销售量增长 ASC LIMIT 1
extra gold: select T2.销售量增长 from 音箱产品 AS T1 JOIN 产品销售 AS T2 ON T1.音箱id = T2.产品id where T2.季度 = "春季" order by 排名 desc limit 1

eval_err_num:903
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 姓名 from 作者

eval_err_num:904
medium pred: SELECT age FROM作者 WHERE作者id IN (SELECT作者id FROM出版图书 WHERE书名='小说名称' AND 出版图书id NOT IN (SELECT作者id FROM 网络小说 WHERE 书名='小说名称' AND 网络图书id NOT IN (SELECT 网络小说id FROM畅销榜 WHERE 周排名 NOT IN (SELECT 周排名 FROM 收藏榜 WHERE 收藏榜id NOT IN (SELECT 网络小说id FROM 网络小说 WHERE 书名='小说名称' AND 类型='小说类型'))) ) )
medium gold: select 姓名,年龄 from 作者

eval_err_num:905
medium pred: ORDER BY age DESC
medium gold: select 姓名,年龄 from 作者 order by 年龄 desc

eval_err_num:906
medium pred: NO SQL FOUND
medium gold: select 姓名,年龄 from 作者 order by 年龄 desc limit 1

eval_err_num:907
extra pred: NO SQL FOUND
extra gold: select 书名 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.作者id = (select 作者id from 作者 order by 年龄 desc limit 1)

eval_err_num:908
extra pred: NO SQL FOUND
extra gold: select 书名,字数,类型 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.作者id = (select 作者id from 作者 order by 年龄 desc limit 1)

eval_err_num:909
extra pred: NO SQL FOUND
extra gold: select 书名,评分 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.作者id = (select 作者id from 作者 order by 年龄 desc limit 1) and T1.评分 = (select max(评分) from 出版图书)

eval_err_num:910
extra pred: NO SQL FOUND
extra gold: select 书名,点击数 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id where T2.作者id = (select 作者id from 作者 order by 年龄 desc limit 1) and T1.评分 = (select max(评分) from 出版图书)

eval_err_num:911
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 公司名 from 餐饮公司

eval_err_num:912
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 公司名,所属集团 from 餐饮公司

eval_err_num:913
medium pred: SELECT 股票代码, 上市股市 FROM 餐饮公司 WHERE 总部城市id = ( SELECT 城市id FROM 城市 WHERE 所属省份 = '香港' )
medium gold: select 公司名,所属集团 from 餐饮公司 where 上市股市 = "港股"

eval_err_num:914
medium pred: SELECT COUNT(*) as 经营年数, 股票代码 FROM 餐饮公司 WHERE 总部城市id = ( SELECT 城市id FROM 城市 WHERE 所属省份 = '香港' ) ORDER BY 经营年数 DESC
medium gold: select 公司名,所属集团,经营年数 from 餐饮公司 where 上市股市 = "港股" order by 经营年数 desc

eval_err_num:915
medium pred: SELECT COUNT(*) as 经营年数, 股票代码 FROM 餐饮公司 WHERE 总部城市id = ( SELECT 城市id FROM 城市 WHERE 所属省份 = '香港' ) ORDER BY 经营年数 DESC
medium gold: select 公司名,所属集团,经营年数 from 餐饮公司 where 上市股市 = "港股" order by 经营年数 asc

eval_err_num:916
easy pred: SELECT * FROM "城市" t1 LEFT JOIN "餐饮公司" t2 ON t1.城市id = t2.总部城市id LEFT JOIN "餐饮公司城市消费" t3 ON t2.城市id = t3.城市id LEFT JOIN "餐饮公司城市连锁" t4 ON t3.城市id = t4.城市id WHERE t1.名称 = '城市名称'
easy gold: select 名称 from 城市

eval_err_num:917
medium pred: SELECT 省份, COUNT(*) as 总消费 FROM "城市" t1 LEFT JOIN "餐饮公司城市消费" t2 ON t1.城市id = t2.城市id WHERE t2.城市id IN ( SELECT 城市id FROM "餐饮公司" t3 GROUP BY 城市id HAVING COUNT(*) > 0 ) GROUP BY 省份 HAVING COUNT(*) > 0
medium gold: select 名称,所属省份 from 城市

eval_err_num:918
medium pred: SELECT 餐饮收入 FROM "城市" t1 INNER JOIN "餐饮公司城市消费" t2 ON t1.城市id = t2.城市id INNER JOIN "餐饮公司城市连锁" t3 ON t2.城市id = t3.城市id ON t2.城市id = t3.城市id ORDER BY 餐饮收入 DESC LIMIT 10
medium gold: select 名称,所属省份,餐饮收入 from 城市 order by 餐饮收入 desc

eval_err_num:919
medium pred: SELECT COUNT(*) as同比增长 FROM "城市" t1 LEFT JOIN "餐饮公司城市消费" t2 ON t1.城市id = t2.城市id LEFT JOIN "餐饮公司城市连锁" t3 ON t2.城市id = t3.城市id ON t2.城市id = t3.城市id WHERE t1.名称 = '城市名称' GROUP BY t1.城市id HAVING COUNT(*) > 0 ORDER BY COUNT(*) DESC LIMIT 10
medium gold: select 名称,所属省份,餐饮收入,同比增长 from 城市 order by 餐饮收入 desc

eval_err_num:920
medium pred: NO SQL FOUND
medium gold: select 公司名 from 餐饮公司 order by 经营年数 desc limit 1

eval_err_num:921
medium pred: NO SQL FOUND
medium gold: select 公司名,经营范围 from 餐饮公司 order by 经营年数 desc limit 1

eval_err_num:922
extra pred: NO SQL FOUND
extra gold: select 名称 from 城市 AS T1 JOIN 餐饮公司 AS T2 ON T2.总部城市id = T1.城市id where T2.公司名 = (select 公司名 from 餐饮公司 order by 经营年数 desc limit 1 )

eval_err_num:923
extra pred: SELECT t1.公司名称, t1.城市名称, t1.总消费额, COUNT(*) AS 人均消费额 FROM "餐饮公司城市消费" t1 INNER JOIN "城市" t2 ON t1.城市id = t2.城市id INNER JOIN "餐饮公司" t3 ON t1.公司id = t3.公司id INNER JOIN "查询" t4 ON t3.公司id = t4.公司id AND t3.城市id = t4.城市id GROUP BY t1.公司名称, t1.城市名称, t1.总消费额 ORDER BY 人均消费额 DESC LIMIT 1
extra gold: select 公司名 from 餐饮公司 AS T1 JOIN 餐饮公司城市消费 AS T2 ON T1.公司id = T2.公司id where T2.人均消费额 = (select max(人均消费额) from 餐饮公司城市消费)

eval_err_num:924
medium pred: SELECT t1.公司名称, t1.城市名称, t1.总消费额, t1.人气, t1.排名 FROM "餐饮公司城市消费" t1 INNER JOIN "城市" t2 ON t1.城市id = t2.城市id INNER JOIN "餐饮公司" t3 ON t1.公司id = t3.公司id INNER JOIN "查询" t4 ON t3.公司id = t4.公司id AND t3.城市id = t4.城市id GROUP BY t1.公司名称, t1.城市名称, t1.总消费额, t1.人气, t1.排名 HAVING COUNT(*) = (SELECT COUNT(*) FROM "餐饮公司城市消费" WHERE 城市id = t2.城市id AND 公司id = t3.公司id)
medium gold: select 总消费额,人气 from 餐饮公司城市消费 order by 人均消费额 desc limit 1

eval_err_num:925
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 排名 from 餐饮公司城市消费 order by 人均消费额 desc limit 1

eval_err_num:926
extra pred: SELECT t1.城市名称 FROM "餐饮公司城市消费" t1 INNER JOIN "城市" t2 ON t1.城市id = t2.城市id INNER JOIN "餐饮公司" t3 ON t1.公司id = t3.公司id INNER JOIN "查询" t4 ON t3.公司id = t4.公司id AND t3.城市id = t4.城市id GROUP BY t1.城市名称 HAVING COUNT(*) = (SELECT COUNT(*) FROM "餐饮公司城市消费" WHERE 城市id = t2.城市id AND 公司id = t3.公司id)
extra gold: select distinct 名称 from 城市 AS T1 JOIN 餐饮公司城市消费 AS T2 ON T1.城市id = T2.城市id where T1.城市id = (select 城市id from 餐饮公司城市消费 order by 人均消费额 desc limit 1)

eval_err_num:927
extra pred: SELECT t1.省份名称 FROM "城市" t1 INNER JOIN "省份" t2 ON t1.省份名称 = t2.省份名称 INNER JOIN "餐饮公司城市消费" t3 ON t1.城市id = t3.城市id INNER JOIN "省份" t4 ON t3.省份名称 = t4.省份名称 WHERE t4.城市id = (SELECT COUNT(*) FROM "餐饮公司城市消费" WHERE 城市id = t2.城市id AND 公司id = t3.公司id)
extra gold: select distinct 所属省份 from 城市 AS T1 JOIN 餐饮公司城市消费 AS T2 ON T1.城市id = T2.城市id where T2.城市id = (select 城市id from 餐饮公司城市消费 order by 人均消费额 desc limit 1)

hard pred: SELECT * FROM 餐饮公司城市连锁 ORDER BY 员工数量 DESC LIMIT 1
hard gold: select 公司名 from 餐饮公司 AS T1 JOIN 餐饮公司城市连锁 AS T2 ON T1.公司id = T2.公司id order by T2.员工数量 desc limit 1

medium pred: SELECT 占地面积 FROM 餐饮公司城市连锁 ORDER BY 占地面积 DESC LIMIT 1
medium gold: select 占地面积 from 餐饮公司城市连锁 order by 员工数量 desc limit 1

eval_err_num:928
medium pred: SELECT max(占地面积) as max_占地面积 FROM 餐饮公司城市连锁 WHERE 公司id = ( SELECT 公司id FROM 餐饮公司城市消费 WHERE 城市id = ( SELECT 城市id FROM 城市 FROM 餐饮公司城市消费 ) )
medium gold: select 占地面积 from 餐饮公司城市连锁 order by 占地面积 desc limit 1

eval_err_num:929
hard pred: NO SQL FOUND
hard gold: select 公司名 from 餐饮公司 AS T1 JOIN 餐饮公司城市连锁 AS T2 ON T1.公司id = T2.公司id order by 分店数量 desc limit 1

eval_err_num:930
hard pred: NO SQL FOUND
hard gold: select 名称 from 城市 AS T1 JOIN 餐饮公司城市连锁 AS T2 ON T1.城市id = T2.城市id order by 分店数量 desc limit 1

eval_err_num:931
hard pred: NO SQL FOUND
hard gold: select 所属集团 from 餐饮公司 AS T1 JOIN 餐饮公司城市连锁 AS T2 ON T1.公司id = T2.公司id order by 分店数量 desc limit 1

eval_err_num:932
hard pred: NO SQL FOUND
hard gold: select 所属集团,上市股市 from 餐饮公司 AS T1 JOIN 餐饮公司城市连锁 AS T2 ON T1.公司id = T2.公司id order by 分店数量 desc limit 1

eval_err_num:933
easy pred: CREATE TABLE "应用商店" ( "商店id" text, "商店名" text, "应用软件数" number, "累计下载次数" number, PRIMARY KEY ("商店id") ) CREATE TABLE "应用商店支持国家" ( "应用商店id" text, "国家" text, "用户是否可以购买应用程序" binary, "开发人员是否可以出售应用程序" binary, FOREIGN KEY ("应用商店id") REFERENCES "应用商店" ("商店id") ON DELETE NO ACTION ON UPDATE NO ACTION ) CREATE TABLE "软件" ( "软件id" text, "名称" text, "用途" text, PRIMARY KEY ("软件id") ) CREATE TABLE "软件下载" ( "软件id" text, "应用商店id" text, "下载量" number, "评价人数" number, "好评数" number, FOREIGN KEY ("软件id") REFERENCES "软件" ("软件id") ON DELETE NOACTION ON UPDATE NOACTION, FOREIGN KEY ("应用商店id") REFERENCES "应用商店" ("商店id") ON DELETE NOACTION ON UPDATE NOACTION )
easy gold: select 商店名 from 应用商店

eval_err_num:934
medium pred: SELECT 应用商店.应用软件数量,软件.名称, 软件下载.下载量, 软件下载.评价人数, 软件下载.好评数 FROM "应用商店" 应用商店 JOIN "软件" 软件 ON 软件.软件id = 应用商店.应用软件数 JOIN "软件下载" 软件下载 ON 软件下载.软件id = 软件.软件id WHERE 应用商店.商店名 = '商店名' GROUP BY 应用商店.应用商店名, 软件.软件id, 软件下载.下载量, 软件下载.评价人数, 软件下载.好评数 ORDER BY 应用软件数量 DESC
medium gold: select 商店名,应用软件数 from 应用商店

eval_err_num:935
medium pred: SELECT * FROM "应用商店" 应用商店 JOIN "应用商店支持国家" 应用商店支持 ON 应用商店支持.应用商店id = 应用商店.商店id JOIN "软件" 软件 ON 软件.软件id = 应用商店支持.应用软件数 JOIN "软件下载" 软件下载 ON 软件下载.软件id = 软件.软件id WHERE 应用商店支持.国家 = '国家' GROUP BY 应用商店.应用商店名, 应用商店支持.应用软件数 ORDER BY 应用软件数量 DESC LIMIT 10
medium gold: select 商店名,应用软件数 from 应用商店 order by 应用软件数 desc

eval_err_num:936
medium pred: SELECT 商店.商店名, 应用商店.应用软件数, 累计下载次数 FROM "应用商店" 应用商店 JOIN "应用商店支持国家" 应用商店支持 ON 应用商店支持.应用商店id = 应用商店.商店id JOIN "软件" 软件 ON 软件.软件id = 应用商店.应用软件数 JOIN "软件下载" 软件下载 ON 软件下载.软件id = 软件.软件id WHERE 应用商店支持.国家 = '国家' GROUP BY 商店.商店名, 应用商店.应用软件数, 累计下载次数 ORDER BY 累计下载次数 DESC LIMIT 10
medium gold: select 商店名,应用软件数,累计下载次数 from 应用商店 order by 应用软件数 desc

eval_err_num:937
medium pred: SELECT 软件id, 下载量, COUNT(*) AS 评价人数, SUM(好评数) AS 好评数 FROM "应用商店" LEFT JOIN "应用商店支持国家" ON "应用商店"."商店id" = "应用商店支持国家"."商店id" LEFT JOIN "软件" ON "软件"."软件id" = "应用商店"."软件id" WHERE "应用商店"."商店name" = 'Google Play' GROUP BY 软件id, 下载量 ORDER BY 下载量 DESC
medium gold: select 名称,下载量 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id

eval_err_num:938
medium pred: SELECT 软件id, 下载量 FROM "应用商店" LEFT JOIN "应用商店支持国家" ON "应用商店"."商店id" = "应用商店支持国家"."商店id" LEFT JOIN "软件" ON "软件"."软件id" = "应用商店"."软件id" WHERE "应用商店"."商店name" = 'Google Play' GROUP BY 软件id, 下载量 ORDER BY 下载量 DESC LIMIT 10
medium gold: select 名称,下载量 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id order by 下载量 desc

eval_err_num:939
medium pred: SELECT 软件id, 下载量 FROM "应用商店" LEFT JOIN "应用商店支持国家" ON "应用商店"."商店id" = "应用商店支持国家"."商店id" LEFT JOIN "软件" ON "软件"."软件id" = "应用商店"."软件id" WHERE "应用商店"."商店name" = 'Google Play' GROUP BY 软件id, 下载量 ORDER BY 下载量 ASC LIMIT 10
medium gold: select 名称,下载量 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id order by 下载量 asc

eval_err_num:940
medium pred: CREATE TABLE "应用商店" ( "商店id" text PRIMARY KEY, "商店名" text, "应用软件数" number, "累计下载次数" number, FOREIGN KEY ("商店id") REFERENCES "应用商店" ("商店id") ON DELETE NOACTION ON UPDATE NOACTION ) CREATE TABLE "应用商店支持国家" ( "应用商店id" text PRIMARY KEY, "国家" text, "用户是否可以购买应用程序" binary, "开发人员是否可以出售应用程序" binary, FOREIGN KEY ("应用商店id") REFERENCES "应用商店" ("商店id") ON DELETE NOACTION ON UPDATE NOACTION ) CREATE TABLE "软件" ( "软件id" text PRIMARY KEY, "名称" text, "用途" text, FOREIGN KEY ("软件id") REFERENCES "软件" ("软件id") ON DELETE NOACTION ON UPDATE NOACTION ) CREATE TABLE "软件下载" ( "软件id" text PRIMARY KEY, "应用商店id" text, "下载量" number, "评价人数" number, "好评数" number, FOREIGN KEY ("软件id") REFERENCES "软件" ("软件id") ON DELETE NOACTION ON UPDATE NOACTION, FOREIGN KEY ("应用商店id") REFERENCES "应用商店" ("商店id") ON DELETE NOACTION ON UPDATE NOACTION )
medium gold: select 商店名,国家 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id

eval_err_num:941
medium pred: SELECT * FROM "应用商店支持国家" WHERE "国家" = ( SELECT "国家" FROM "应用商店" WHERE "商店id" = ( SELECT "商店id" FROM "应用商店" ) )
medium gold: select 商店名,国家,用户是否可以购买应用程序 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id

eval_err_num:942
medium pred: SELECT * FROM "应用商店支持国家" WHERE "国家" = ( SELECT "国家" FROM "应用商店" WHERE "商店id" = ( SELECT "商店id" FROM "应用商店" ) )
medium gold: select 商店名,国家,开发人员是否可以出售应用程序 from 应用商店支持国家 AS T1 JOIN 应用商店 AS T2 ON T1.应用商店id = T2.商店id

eval_err_num:943
medium pred: SELECT 商店名, 累计下载次数 FROM "应用商店" GROUP BY 商店名 ORDER BY 累计下载次数 DESC LIMIT 1
medium gold: select 商店名 from 应用商店 order by 累计下载次数 desc limit 1

eval_err_num:944
medium pred: SELECT count(应用软件数) FROM "应用商店" WHERE 商店id = ( SELECT商店id FROM "应用商店" GROUP BY 商店id ORDER BY COUNT(*) DESC LIMIT 1 )
medium gold: select 商店名,应用软件数 from 应用商店 order by 累计下载次数 desc limit 1

eval_err_num:945
medium pred: SELECT 软件id, AVG(下载量) AS AVG_下载量, COUNT(*) AS COUNT_下载量 FROM "应用商店" AS app INNER JOIN "应用商店支持国家" AS app_to_的国家 ON app.商店id = app_to_的国家.商店id INNER JOIN "软件" AS app ON app.软件id = app_to_的国家.软件id WHERE app_to_的国家.用户是否可以购买应用程序 = 'binary' GROUP BY app.软件id, app_to_的国家.国家, app.用途 ORDER BY COUNT_下载量 DESC
medium gold: select 名称,下载量 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id

eval_err_num:946
hard pred: SELECT评价人数 FROM "软件下载" WHERE下载量 = ( SELECT AVG(下载量) AS AVG_下载量 FROM "应用商店" AS app JOIN "应用商店支持国家" AS app_to_的国家 ON app.商店id = app_to_的国家.商店id JOIN "软件" AS app ON app.软件id = app_to_的国家.软件id WHERE app_to_的国家.用户是否可以购买应用程序 = 'binary' GROUP BY app.软件id, app_to_的国家.国家, app.用途 ORDER BY AVG_下载量 DESC LIMIT 1 )
hard gold: select 名称,下载量,评价人数 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id order by 下载量 asc limit 1

eval_err_num:947
hard pred: SELECT 好评数 FROM "软件下载" WHERE 下载量 = ( SELECT AVG(下载量) AS AVG_下载量 FROM "应用商店" AS app JOIN "应用商店支持国家" AS app_to_的国家 ON app.商店id = app_to_的国家.商店id JOIN "软件" AS app ON app.软件id = app_to_的国家.软件id WHERE app_to_的国家.用户是否可以购买应用程序 = 'binary' GROUP BY app.软件id, app_to_的国家.国家, app.用途 ORDER BY AVG_下载量 DESC LIMIT 1 )
hard gold: select 名称,评价人数,好评数 from 软件下载 AS T1 JOIN 软件 AS T2 ON T1.软件id = T2.软件id order by 下载量 asc limit 1

eval_err_num:948
medium pred: SELECT * FROM 动物 WHERE 学名 = '猫' AND 食性 = '肉' AND 是否是人类忠实朋友 = '是' AND 理由 = '人类喜欢吃肉'
medium gold: select 学名 from 动物 where 食性 = "食肉" and 理由 = "人类忠实的朋友"

eval_err_num:949
hard pred: NO SQL FOUND
hard gold: select 学名 from 动物 where 动物id = (select 朋友id from 动物朋友 where 动物id = (select 动物id from 动物 where 学名 = "狗"))

eval_err_num:950
hard pred: SELECT * FROM 动物的天敌 WHERE 学名 = '猫' AND 食性 = '肉' AND 是否是人类忠实天敌 = '是' AND 理由 = '人类喜欢吃肉'
hard gold: select 学名 from 动物 where 动物id = (select 天敌id from 动物的天敌 where 动物id = (select 动物id from 动物 where 学名 = "狗"))

eval_err_num:951
hard pred: SELECT * FROM 动物的天敌 WHERE 学名 = '狗' AND 食性 = '肉' AND 是否是人类忠实天敌 = '是' AND 害怕的原因 = '人类不喜欢狗'
hard gold: select 克星原因 from 动物的天敌 where 动物id = (select 动物id from 动物 where 学名 = "狗")

eval_err_num:952
easy pred: CREATE TABLE "台风影响的国家" ( "台风id" number, "国家" text, "经济损失" number, FOREIGN KEY ("台风id") REFERENCES "台风" ("台风id") ON DELETE NO ACTION ON UPDATE NOACTION ); CREATE TABLE "台风" ( "台风id" text, "名称" text, "登陆地点" text, "登陆时间" time, "登陆强度" number, "持续天数" number, "死亡人数" number, "经济损失" number, PRIMARY KEY ("台风id") ); CREATE TABLE "台风影响的中国省份" ( "台风id" text, "省份" text, "登陆强度" number, "死亡人数" number, "失踪人数" number, FOREIGN KEY ("台风id") REFERENCES "台风" ("台风id") ON DELETE NOACTION ON UPDATE NOACTION )
easy gold: select 名称 from 台风

eval_err_num:953
medium pred: CREATE TABLE "台风影响的国家" ( "台风id" number, "国家" text, "经济损失" number, FOREIGN KEY ("台风id") REFERENCES "台风" ("台风id") ON DELETE NOACTION ON UPDATE NOACTION ); CREATE TABLE "台风" ( "台风id" text, "名称" text, "登陆地点" text, "登陆时间" time, "登陆强度" number, "持续天数" number, "死亡人数" number, "经济损失" number, PRIMARY KEY ("台风id") ); CREATE TABLE "台风影响的中国省份" ( "台风id" text, "省份" text, "登陆强度" number, "死亡人数" number, "失踪人数" number, FOREIGN KEY ("台风id") REFERENCES "台风" ("台风id") ON DELETE NOACTION ON UPDATE NOACTION )
medium gold: select 名称,登陆地点,登陆时间 from 台风

eval_err_num:954
medium pred: SELECT 台风id, 登陆强度, COUNT(*) as num FROM "台风影响的国家" INNER JOIN "台风" ON 台风id = "台风"."台风id" WHERE 名称 = "台风"."名称" GROUP BY 台风id, 登陆强度 ORDER BY num DESC
medium gold: select 名称,登陆强度 from 台风 order by 登陆强度 desc

eval_err_num:955
medium pred: SELECT COUNT(*) as num, 死亡人数 from "台风影响的国家" INNER JOIN "台风" ON 台风id = "台风"."台风id" WHERE 名称 = "台风"."名称" GROUP BY 死亡人数 ORDER BY num DESC
medium gold: select 名称,死亡人数 from 台风 order by 死亡人数 desc

eval_err_num:956
medium pred: SELECT * FROM "台风影响的国家" t1 INNER JOIN "台风" t2 ON t1."台风id" = t2."台风id" WHERE t2."经济损失" = ( SELECT MAX(经济损失) FROM "台风影响的国家" t3 WHERE t3."国家" = t1."国家" ) ON DELETE NO ACTION ON UPDATE NO ACTION
medium gold: select 名称,经济损失 from 台风

eval_err_num:957
medium pred: SELECT * FROM "台风影响的国家" t1 INNER JOIN "台风" t2 ON t1."台风id" = t2."台风id" ORDER BY t2."经济损失" DESC LIMIT 10
medium gold: select 名称,经济损失 from 台风 order by 经济损失 desc

eval_err_num:958
medium pred: SELECT * FROM "台风影响的中国省份" t1 INNER JOIN "台风影响的国家" t2 ON t1."台风id" = t2."台风id" INNER JOIN "台风" t3 ON t1."台风id" = t3."台风id" WHERE t2."经济损失" = t3."经济损失" GROUP BY t1."省份" HAVING COUNT(DISTINCT t1."省份") = ( SELECT COUNT(DISTINCT t3."省份") FROM "台风影响的国家" t3 WHERE t3."国家" = t1."国家" ) ON DELETE NOACTION ON UPDATE NOACTION
medium gold: select 名称,省份 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id

eval_err_num:959
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 名称,省份,T1.登陆强度 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id

eval_err_num:960
easy pred: CREATE TABLE "台风影响的国家" ( "台风id" number, "国家" text, "经济损失" number, FOREIGN KEY ("台风id") REFERENCES "台风" ("台风id") ON DELETE NOACTION ON UPDATE NOACTION )
easy gold: select 国家 from 台风影响的国家

eval_err_num:961
medium pred: CREATE TABLE "台风影响的国家" ( "台风id" number, "国家" text, "经济损失" number, FOREIGN KEY ("台风id") REFERENCES "台风" ("台风id") ON DELETE NOACTION ON UPDATE NOACTION )
medium gold: select 名称,国家 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id

eval_err_num:962
medium pred: CREATE TABLE "台风影响的国家" ( "台风id" number, "国家" text, "经济损失" number, FOREIGN KEY ("台风id") REFERENCES "台风" ("台风id") ON DELETE NOACTION ON UPDATE NOACTION ); SELECT * FROM "台风影响的国家" WHERE "台风id" IN ( SELECT "台风id" FROM "台风" WHERE "name" = 'Dodo' )
medium gold: select 名称,国家,T1.经济损失 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id

eval_err_num:963
medium pred: CREATE TABLE "台风影响的国家" ( "台风id" number, "国家" text, "经济损失" number, PRIMARY KEY ("台风id") ); SELECT * FROM "台风影响的国家" order by "经济损失" DESC LIMIT 1
medium gold: select 名称,国家,T1.经济损失 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id order by T1.经济损失 asc

eval_err_num:964
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 名称,国家,T1.经济损失,死亡人数 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id order by T1.经济损失 desc

easy pred: SELECT * FROM 商家 WHERE 商家id IN ( SELECT 商家id FROM 商家平台活动 WHERE 平台id IN ( SELECT 平台id FROM 平台 ORDER BY 市场占比 DESC LIMIT 10 ) )
easy gold: select 商家 from 商家 where 类型 = "西式快餐"

eval_err_num:965
medium pred: SELECT * FROM "商家平台活动" WHERE "平台id" IN ( SELECT "平台id" FROM "平台" ORDER BY "市场占比" DESC LIMIT 10 )
medium gold: select 商家,优惠活动 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 类型 = "西式快餐"

eval_err_num:966
medium pred: SELECT评分 FROM "商家平台活动" WHERE "平台id" IN ( SELECT "平台id" FROM "平台" ORDER BY "市场占比" DESC LIMIT 10 )
medium gold: select 商家,评分 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 类型 = "西式快餐"

eval_err_num:967
hard pred: SELECT MAX(评分) FROM "商家平台活动" WHERE "平台id" IN ( SELECT "平台id" FROM "平台" ORDER BY "市场占比" DESC LIMIT 10 )
hard gold: select 商家,评分 from 商家平台活动 AS T1 JOIN 商家 AS T2 ON T1.商家id = T2.商家id where 类型 = "西式快餐" order by 评分 desc

eval_err_num:968
easy pred: CREATE TABLE 篮球运动队 (id TEXT PRIMARY KEY, 队名 text, 所属国家 text, 成立时间 time, 现任主教练 text, 现在世界排名 number) CREATE TABLE 奥运会成绩 (年份 INT, 奥运会名称 TEXT, 名次 INT, 运动队id INT REFERENCES 篮球运动队 (id), 主教练 TEXT) CREATE TABLE 奥运会交手记录 (对手id number, 比分 number, 是否胜利 BOOLEAN, 球队id REFERENCES 篮球运动队 (id), 赛事类型 TEXT, 年份 INT, 奥运会 STRING, 比赛日期 DATE, FOREIGN KEY (对手id) REFERENCES 篮球运动队 (id))
easy gold: select 队名 from 篮球运动队

eval_err_num:969
medium pred: CREATE TABLE 篮球运动队 (id TEXT PRIMARY KEY, 队名 text, 所属国家 text, 成立时间 time, 现任主教练 text, 现在世界排名 number) CREATE TABLE 奥运会成绩 (年份 INT, 奥运会名称 TEXT, 名次 INT, 运动队id INT REFERENCES 篮球运动队 (id), 主教练 TEXT) CREATE TABLE 奥运会交手记录 (对手id number, 比分 number, 是否胜利 BOOLEAN, 球队id REFERENCES 篮球运动队 (id), 赛事类型 TEXT, 年份 INT, 奥运会 STRING, 比赛日期 DATE, FOREIGN KEY (对手id) REFERENCES 篮球运动队 (id))
medium gold: select 队名,所属国家 from 篮球运动队

eval_err_num:970
medium pred: NO SQL FOUND
medium gold: select 队名,成立时间 from 篮球运动队

eval_err_num:971
medium pred: ORDER BY 成立时间 DESC, 世界排名 ASC GO SELECT * FROM 篮球运动队, 奥运会成绩, 奥运会交手记录 ORDER BY 成立时间 DESC, 世界排名 ASC
medium gold: select 队名,成立时间 from 篮球运动队 order by 成立时间 asc

eval_err_num:972
easy pred: NO SQL FOUND
easy gold: select 现任主教练 from 篮球运动队 where 队名 = "美国男篮国家队"

medium pred: SELECT 名次 FROM 奥运会成绩 WHERE 年份 = 2012 AND 运动队id = (SELECT id FROM 篮球运动队 WHERE 队名 = '伦敦奥运会')
medium gold: select 名次 from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where 队名 = "美国男篮国家队" and 奥运会名称 = "2012年伦敦奥运会"

medium pred: SELECT 主教练 FROM 奥运会成绩 WHERE 运动队id = (SELECT id FROM 篮球运动队 WHERE 队名 = '美国男篮') AND 年份 = 2012
medium gold: select 主教练 from 奥运会成绩 AS T1 JOIN 篮球运动队 AS T2 ON T1.运动队id = T2.id where 队名 = "美国男篮国家队" and 奥运会名称 = "2012年伦敦奥运会"

medium pred: SELECT 地区生产总值, 生产总值增长率, 第一产业总值, 第二产业总值, 第三产业总值 FROM 城市 WHERE 名称 = '四川成都'
medium gold: select 第一产业总值 , 第二产业总值 , 第三产业总值 from 城市 where 名称 = "成都"

eval_err_num:973
extra pred: SELECT service_ trade_产业的进口额, service_ trade_产业的进口额增长率 FROM 城市 WHERE 城市id = '42'
extra gold: select 进口额 , 进口额增长率 from 城市贸易产业 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 名称 = "成都" and 行业 = "服务贸易"

eval_err_num:974
extra pred: SELECT service_ trade_产业的出口额, service_ trade_产业的出口额增长率 FROM 城市 WHERE 城市id = '42'
extra gold: select 出口额 , 出口额增长率 from 城市贸易产业 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where 名称 = "成都" and 行业 = "服务贸易"

eval_err_num:975
hard pred: SELECT 城市id, MAX(地铁运营里程) as max_地铁运营里程, MAX(在建里程) as max_在建里程, MAX(规划里程) as max_规划里程, MAX(已运营线路数) as max_已运营线路数 FROM 城市地铁里程 GROUP BY 城市id ORDER BY max_地铁运营里程 DESC, max_在建里程 DESC, max_规划里程 DESC, max_已运营线路数 DESC
hard gold: select T2.城市名称 from 城市地铁里程 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id order by T1.地铁运营里程 desc limit 1

eval_err_num:976
extra pred: SELECT 日均客运量,每日每公里客运量,每公里运营成本,每公里运营收入 FROM 城市地铁日均客运量 WHERE 城市id = ( SELECT 城市id FROM 城市 ORDER BY 每公里客运量 DESC,每日每公里客运量 DESC,每公里运营成本 DESC,每公里运营收入 DESC LIMIT 1 )
extra gold: select T1.日均客运量 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.城市名称 = (select T2.城市名称 from 城市地铁里程 AS T3 JOIN 城市 AS T2 ON T3.城市id = T2.城市id order by T3.地铁运营里程 desc limit 1)

eval_err_num:977
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T2.城市名称, T1.日均客运量 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T1.日均客运量 > ( select T1.日均客运量 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.城市名称 = (select T2.城市名称 from 城市地铁里程 AS T3 JOIN 城市 AS T2 ON T3.城市id = T2.城市id order by T3.地铁运营里程 desc limit 1))

eval_err_num:978
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T2.城市名称, T2.所属省份 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T1.日均客运量 > ( select T1.日均客运量 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.城市名称 = (select T2.城市名称 from 城市地铁里程 AS T3 JOIN 城市 AS T2 ON T3.城市id = T2.城市id order by T3.地铁运营里程 desc limit 1))

medium pred: SELECT COUNT(*) FROM 城市地铁里程 WHERE 城市id IN (SELECT 城市id FROM 城市)
medium gold: select T1.已运营线路数 from 城市地铁里程 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.城市名称 = "广州"

eval_err_num:979
medium pred: SELECT 运营成本 FROM 城市地铁日均客运量 WHERE 城市id IN (SELECT 城市id FROM 城市)
medium gold: select T1.每公里运营成本 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.城市名称 = "广州"

medium pred: SELECT 列_5元可乘坐里程 FROM 城市地铁票价 WHERE 城市id IN (SELECT 城市id FROM 城市)
medium gold: select T1.列_5元可乘坐里程 from 城市地铁票价 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id where T2.城市名称 = "广州"

eval_err_num:980
easy pred: CREATE TABLE 学生参赛记录 ( 学生id TEXT REFERENCES 参赛学生 (学生id), 加入队伍日期 DATE, 成绩 text )
easy gold: select 姓名 from 参赛学生

eval_err_num:981
medium pred: CREATE TABLE 学生参赛记录 ( 学生id TEXT REFERENCES 参赛学生 (学生id), 加入队伍日期 DATE, 成绩 text, FOREIGN KEY (学生id) REFERENCES 参赛学生 (学生id) )
medium gold: select 姓名,年龄,学历,学校 from 参赛学生

eval_err_num:982
medium pred: SELECT * FROM 学生参赛记录 ORDER BY age DESC,学历 DESC,学校 DESC
medium gold: select 姓名,年龄,学历,学校 from 参赛学生 order by 年龄 asc

eval_err_num:983
easy pred: CREATE TABLE 比赛 ( 比赛id TEXT PRIMARY KEY, 名称 TEXT, 方向 TEXT, 举办单位 TEXT, 单位性质 TEXT, 奖金数 number, 录取队伍数量 number, 比赛平台 text ); CREATE TABLE 参赛队伍 ( 队伍id TEXT PRIMARY KEY, 队名 TEXT ); CREATE TABLE 学生参赛记录 ( 学生id TEXT PRIMARY KEY, 加入队伍日期 DATE ); CREATE TABLE 队伍参赛成绩 ( 加入队伍id number, 参加比赛id number, 成绩 TEXT, FOREIGN KEY (加入队伍id) REFERENCES 参赛队伍 (队伍id), FOREIGN KEY (参加比赛id) REFERENCES 比赛 (比赛id) )
easy gold: select 名称 from 比赛

medium pred: SELECT 方向 FROM 比赛
medium gold: select 名称,方向 from 比赛

medium pred: SELECT 举办单位, 单位性质 FROM 比赛
medium gold: select 名称,举办单位,单位性质 from 比赛

medium pred: SELECT 奖金数, COUNT(*) FROM 比赛 WHERE 方向 = 'A' GROUP BY 奖金数 HAVING COUNT(*) > 1 order by 奖金数 limit 1
medium gold: select 名称,奖金数 from 比赛 order by 奖金数 asc

eval_err_num:984
medium pred: SELECT 队伍id, 队伍名 FROM 参赛队伍
medium gold: select 名称,队名 from 队伍参赛成绩 AS T1 JOIN 比赛 AS T2 ON T1.参加比赛id = T2.比赛id JOIN 参赛队伍 AS T3 ON T1.加入队伍id = T3.队伍id

eval_err_num:985
easy pred: SELECT 队伍id, 加入队伍日期 FROM 学生参赛记录 JOIN 比赛 ON 学生参赛记录.加入队伍id = 比赛.比赛id JOIN 参赛队伍 ON 学生参赛记录.加入队伍id = 参赛队伍.队伍id
easy gold: select 队名 from 参赛队伍

eval_err_num:986
medium pred: SELECT 学生id, 学生姓名, 年龄, 学历, 学校 FROM 学生参赛记录 JOIN 比赛 ON 学生参赛记录.加入队伍id = 比赛.比赛id JOIN 参赛队伍 ON 学生参赛记录.加入队伍id = 参赛队伍.队伍id WHERE 比赛.奖金数 = (SELECT 奖金数 FROM 比赛 WHERE 名称 = '奖金数' AND 方向 = '奖金数')
medium gold: select 队名,姓名 from 学生参赛记录 AS T1 JOIN 参赛队伍 AS T2 ON T1.队伍id = T2.队伍id JOIN 参赛学生 AS T3 ON T1.学生id = T3.学生id

eval_err_num:987
medium pred: SELECT 学生id, 学校 FROM 学生参赛记录 JOIN 比赛 ON 学生参赛记录.加入队伍id = 比赛.比赛id JOIN 参赛队伍 ON 学生参赛记录.加入队伍id = 参赛队伍.队伍id WHERE 比赛.奖金数 = (SELECT 奖金数 FROM 比赛 WHERE 名称 = '奖金数' AND 方向 = '奖金数')
medium gold: select 队名,姓名,学校 from 学生参赛记录 AS T1 JOIN 参赛队伍 AS T2 ON T1.队伍id = T2.队伍id JOIN 参赛学生 AS T3 ON T1.学生id = T3.学生id

eval_err_num:988
medium pred: SELECT 加入队伍日期 FROM 学生参赛记录 JOIN 比赛 ON 学生参赛记录.加入队伍id = 比赛.比赛id JOIN 参赛队伍 ON 学生参赛记录.加入队伍id = 参赛队伍.队伍id GROUP BY 加入队伍日期 ORDER BY 加入队伍日期 ASC LIMIT 10
medium gold: select 队名,姓名,加入队伍日期 from 学生参赛记录 AS T1 JOIN 参赛队伍 AS T2 ON T1.队伍id = T2.队伍id JOIN 参赛学生 AS T3 ON T1.学生id = T3.学生id

easy pred: SELECT * FROM 比赛 WHERE 名称 = 'NBA 2K18'
easy gold: select 名称 from 比赛

eval_err_num:989
medium pred: SELECT 平台 FROM 比赛平台 WHERE 名称 = 'YouTube'
medium gold: select 名称,比赛平台 from 比赛

eval_err_num:990
medium pred: SELECT * FROM 学术会议 WHERE 名称 = '2022年国际学术会议'
medium gold: select 名称,比赛平台 from 比赛 where 比赛平台 = "学术会议"

eval_err_num:991
medium pred: SELECT COUNT(*) as num FROM ( SELECT COUNT(*) as num FROM 比赛 WHERE 名称 = '2022年国际学术会议' ) 子查询 order by num DESC
medium gold: select 名称,录取队伍数量 from 比赛 where 比赛平台 = "学术会议" order by 录取队伍数量 desc

eval_err_num:992
easy pred: SQL SELECT * FROM 城市地铁里程 WHERE 城市id = ?
easy gold: select 城市名称 from 城市

eval_err_num:993
medium pred: SQL SELECT 省份, 地铁运营里程, 地铁运营成本, 地铁运营收入 FROM 城市地铁日均客运量 WHERE 城市id = ?
medium gold: select 城市名称,所属省份 from 城市

eval_err_num:994
medium pred: SQL SELECT 日均客运量 FROM 城市地铁日均客运量 WHERE 城市id = ?
medium gold: select 城市名称,日均客运量 from 城市地铁日均客运量 AS T1 JOIN 城市 AS T2 ON T1.城市id = T2.城市id

eval_err_num:995
medium pred: NO SQL FOUND
medium gold: select 名称 from 电视台 order by 开播时间 desc limit 1

eval_err_num:996
medium pred: NO SQL FOUND
medium gold: select 隶属机构 from 电视台 order by 开播时间 desc limit 1

eval_err_num:997
easy pred: NO SQL FOUND
easy gold: select 名称 from 电视台 where 隶属机构 = "上海电视台"

eval_err_num:998
easy pred: NO SQL FOUND
easy gold: select 上线时间 from 电视台 where 隶属机构 = "上海电视台"

eval_err_num:999
hard pred: SELECT 电视剧.剧名,电视剧收视.时间段,电视剧收视.收视率 FROM 电视剧 INNER JOIN 电视剧收视 ON 电视剧.电视剧编号 = 电视剧收视.电视剧编号 INNER JOIN 电视台 ON 电视剧.首播平台id = 电视剧收视.平台id WHERE 电视台.名称 = '东方卫视' AND 电视剧收视.时间段 = '2018-01-01'
hard gold: select T3.剧名 from 电视台 AS T1 JOIN 电视剧收视 AS T2 ON T1.电视台id = T2.平台id JOIN 电视剧 AS T3 ON T3.电视剧编号 = T2.电视剧id where T1.名称 = "东方卫视"

eval_err_num:1000
extra pred: SELECT电视剧.剧名,电视剧收视.时间段,电视剧收视.收视率 FROM 电视剧 INNER JOIN 电视剧收视 ON 电视剧.电视剧编号 = 电视剧收视.电视剧编号 INNER JOIN 电视台 ON 电视剧.首播平台id = 电视剧收视.平台id WHERE 电视台.名称 = '东方卫视' AND 电视剧收视.时间段 = '2018-01-01' ORDER BY 收视率 DESC LIMIT 1
extra gold: select T3.剧名 from 电视台 AS T1 JOIN 电视剧收视 AS T2 ON T1.电视台id = T2.平台id JOIN 电视剧 AS T3 ON T3.电视剧编号 = T2.电视剧id where T1.名称 = "东方卫视" order by T2.收视率 desc limit 1

eval_err_num:1001
extra pred: SELECT 出品公司.公司名称, 发行公司.公司名称, 出品公司.出品时间, 发行公司.发行时间 FROM 出品公司 INNER JOIN 发行公司 ON 出品公司.公司名称 = 发行公司.公司名称 INNER JOIN 电视剧 ON 出品公司.电视剧编号 = 电视剧.电视剧编号 WHERE 出品公司.出品时间 = '2018-01-01' AND 发行公司.发行时间 = '2018-01-01' ORDER BY 出品公司.公司名称, 发行公司.公司名称 LIMIT 1
extra gold: select T3.出品公司,T3.发行公司 from 电视台 AS T1 JOIN 电视剧收视 AS T2 ON T1.电视台id = T2.平台id JOIN 电视剧 AS T3 ON T3.电视剧编号 = T2.电视剧id where T1.名称 = "东方卫视" order by T2.收视率 desc limit 1

eval_err_num:1002
easy pred: SELECT 电视剧id, 剧名, 出品公司, 发行公司, 首播平台id, 时间段, 是否出品过 FROM 电视剧收视 WHERE 平台id = (SELECT 电视台id FROM 电视台 WHERE 名称 = '腾讯影业') GROUP BY 电视剧id, 剧名, 出品公司, 发行公司, 首播平台id, 时间段 ORDER BY 收视率 DESC
easy gold: select 剧名 from 电视剧 where 出品公司 = "腾讯影业"

eval_err_num:1003
easy pred: SELECT 时间段 FROM 电视剧收视 WHERE 首播平台id = (SELECT 电视台id FROM 电视台 WHERE 名称 = '腾讯影业') GROUP BY 电视剧id, 剧名, 出品公司, 发行公司 ORDER BY 时间段 DESC
easy gold: select 出品时间 from 电视剧 where 出品公司 = "腾讯影业"

eval_err_num:1004
hard pred: SELECT 电视台id, 时间段, 是否在电视台播出 FROM 电视剧收视 WHERE 首播平台id = (SELECT 电视台id FROM 电视台 WHERE 名称 = '腾讯影业') GROUP BY 电视台id, 时间段 HAVING COUNT(*) = (SELECT COUNT(*) FROM 电视台 WHERE 名称 = '腾讯影业')
hard gold: select T1.名称 from 电视台 AS T1 JOIN 电视剧收视 AS T2 ON T1.电视台id = T2.平台id JOIN 电视剧 AS T3 ON T3.电视剧编号 = T2.电视剧id where T3.出品公司 = "腾讯影业"

easy pred: SELECT * FROM 图书 WHERE 类型 = 'text' LIMIT 1
easy gold: select 类型 from 图书

easy pred: SELECT * FROM 图书 WHERE 作者 = '少儿' LIMIT 1
easy gold: select 作者 from 图书 where 类型 = "少儿"

eval_err_num:1005
hard pred: SELECT 平台id FROM 图书 WHERE 作者 = '少儿' LIMIT 1
hard gold: select T3.平台名 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id where T1.类型 = "少儿"

medium pred: SELECT 书名, 平台id FROM 图书 JOIN 平台 ON 图书id = 平台id WHERE 成立时间 = (SELECT MAX(成立时间) FROM 平台)
medium gold: select 平台名 from 平台 order by 成立时间 desc limit 1

medium pred: SELECT 平台id, 年营业额, 是否自营 FROM 平台 WHERE 成立时间 = (SELECT MAX(成立时间) FROM 平台)
medium gold: select 年营业额,会员费 from 平台 order by 成立时间 desc limit 1

extra pred: SELECT 书名, 类型 FROM 图书 JOIN 平台 ON 图书id = 平台id WHERE 类型 = (SELECT 类型 FROM 图书 WHERE 书名 = '小说')
extra gold: select T3.类型 from 平台 AS T1 JOIN 图书与平台 AS T2 ON T1.平台id = T2.平台id JOIN 图书 AS T3 ON T3.图书id = T2.书名id order by T1.成立时间 desc limit 1

eval_err_num:1006
hard pred: SELECT 平台名, 平台成立时间, 年营业额, 是否自营, 会员费 FROM 平台 WHERE 年营业额 IN (SELECT 年营业额 FROM 平台 WHERE 平台名 = '京东' AND 成立时间 = '2010-01-01')
hard gold: select T3.平台名 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id where T1.书名 = "平凡的世界"

eval_err_num:1007
extra pred: SELECT 书名, 平台名, 售价 FROM 图书_平台 WHERE 售价 DESC LIMIT 1
extra gold: select T3.平台名 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id where T1.书名 = "平凡的世界" order by T2.售价 asc limit 1

eval_err_num:1008
extra pred: SELECT 书名, 平台名, 售价, 评分 FROM 图书_平台
extra gold: select T2.售价,T2.评分 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id where T1.书名 = "平凡的世界" order by T2.售价 asc limit 1

eval_err_num:1009
extra pred: SELECT 平台名, 是否缺货 FROM 平台 WHERE 是否自营 = '1' AND 成立时间 = '2010-01-01'
extra gold: select T2.缺货 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id where T1.书名 = "平凡的世界" order by T2.售价 asc limit 1

eval_err_num:1010
extra pred: SELECT MAX(评分) AS max_评分 FROM 图书与平台 WHERE 书名id IN (SELECT 书名id FROM 图书) AND 平台id IN (SELECT 平台id FROM 平台) GROUP BY 书名id, 平台id
extra gold: select T1.书名,T2.评分 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id order by T2.评分 desc limit 1

eval_err_num:1011
extra pred: SELECT 平台name AS平台名, COUNT(*) AS销售量 FROM 平台 GROUP BY 平台name; SELECT书名id, 平台id, COUNT(*) AS购买人数 FROM 图书与平台 WHERE 书名id IN (SELECT 书名id FROM 图书) AND 平台id IN (SELECT 平台id FROM 平台) GROUP BY 书名id, 平台id
extra gold: select T3.平台名 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id order by T2.评分 desc limit 1

eval_err_num:1012
extra pred: SELECT加入购物车人数, 收藏人数 AS收藏人数 FROM 图书与平台 WHERE 书名id IN (SELECT 书名id FROM 图书) AND 平台id IN (SELECT 平台id FROM 平台) GROUP BY 书名id, 平台id
extra gold: select T2.加入购物车人数,T2.收藏人数 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id order by T2.评分 desc limit 1

eval_err_num:1013
extra pred: SELECT 电子书售价 AS电子书售价, COUNT(*) AS销售量 FROM 图书与平台 WHERE 书名id IN (SELECT 书名id FROM 图书) AND 平台id IN (SELECT 平台id FROM 平台) GROUP BY 书名id, 平台id
extra gold: select T4.电子书售价 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id JOIN 电子书 AS T4 ON T4.书名id = T1.图书id order by T2.评分 desc limit 1

eval_err_num:1014
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T4.会员价格 from 图书 AS T1 JOIN 图书与平台 AS T2 ON T1.图书id = T2.书名id JOIN 平台 AS T3 ON T3.平台id = T2.平台id JOIN 电子书 AS T4 ON T4.书名id = T1.图书id order by T2.评分 desc limit 1

eval_err_num:1015
medium pred: SELECT * FROM "应用商店" WHERE "商店名" IN ('Google Play', 'Apple App Store', 'Amazon App Store', 'Microsoft Store')
medium gold: select 商店名 from 应用商店 order by 应用软件数 desc limit 1

eval_err_num:1016
hard pred: SELECT 哪个国家的, "应用商店支持国家" "用户是否可以购买应用程序" "开发人员是否可以出售应用程序" FROM "应用商店" "软件" "软件下载" WHERE "应用商店支持国家" IN ('US', 'UK', 'PNG', 'SEPNG') AND "商店id" IN ('1', '2', '3', '4')
hard gold: select T2.国家 from 应用商店 AS T1 JOIN 应用商店支持国家 AS T2 ON T1.商店id = T2.应用商店id order by T1.应用软件数 desc limit 1

eval_err_num:1017
hard pred: SELECT 用户, 是否购买应用程序, "应用商店支持国家" "用户是否可以购买应用程序" "开发人员是否可以出售应用程序" FROM "应用商店" "软件" "软件下载" WHERE "应用商店支持国家" IN ('US', 'UK', 'PNG', 'SEPNG') AND "软件id" IN ('1', '2', '3', '4')
hard gold: select T2.用户是否可以购买应用程序 from 应用商店 AS T1 JOIN 应用商店支持国家 AS T2 ON T1.商店id = T2.应用商店id order by T1.应用软件数 desc limit 1

eval_err_num:1018
hard pred: SELECT * FROM "应用商店" WHERE "应用商店"."应用软件数" = ( SELECT MAX("应用软件数") FROM "应用商店" GROUP BY "应用商店"."商店名" ); SELECT * FROM "软件" WHERE "软件"."软件id" = ( SELECT MAX("软件id") FROM "软件" GROUP BY "软件"."软件id" ); SELECT * FROM "软件下载" WHERE "应用商店"."商店id" = ( SELECT MAX("应用商店"."商店名")."商店id" FROM "应用商店" WHERE "应用商店"."应用商店支持国家"."用户是否可以购买应用程序" = '0' GROUP BY "应用商店"."商店名", "应用商店"."商店支持国家", "软件"."软件id", "软件下载"."应用商店id" HAVING MAX("软件下载"."下载量") = MAX("应用商店"."商店名")."商店id" ORDER BY "软件下载"."下载量" DESC )
hard gold: select T1.名称 from 软件 AS T1 JOIN 软件下载 AS T2 ON T1.软件id = T2.软件id order by T2.下载量 desc limit 1

eval_err_num:1019
hard pred: SELECT * FROM "软件下载" WHERE "应用商店"."商店id" = '0' AND "应用商店"."应用商店支持国家"."用户是否可以购买应用程序" = '0' AND "软件下载"."软件id" = '软件id' ORDER BY "软件下载"."下载量" DESC
hard gold: select T1.用途 from 软件 AS T1 JOIN 软件下载 AS T2 ON T1.软件id = T2.软件id order by T2.下载量 desc limit 1

eval_err_num:1020
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T3.商店名 from 软件 AS T1 JOIN 软件下载 AS T2 ON T1.软件id = T2.软件id JOIN 应用商店 AS T3 ON T3.商店id = T2.应用商店id order by T2.下载量 desc limit 1

eval_err_num:1021
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select T1.名称 from 软件 AS T1 JOIN 软件下载 AS T2 ON T1.软件id = T2.软件id order by T2.好评数 desc limit 1

eval_err_num:1022
extra pred: SELECT * FROM "应用商店" WHERE "商店名" = '应用商店支持国家' LIMIT 1
extra gold: select T3.商店名 from 软件 AS T1 JOIN 软件下载 AS T2 ON T1.软件id = T2.软件id JOIN 应用商店 AS T3 ON T3.商店id = T2.应用商店id order by T2.下载量 desc limit 1

eval_err_num:1023
extra pred: SELECT 累计下载次数 FROM "应用商店" WHERE 商店名 = '应用商店支持国家' LIMIT 1
extra gold: select T2.下载量 from 软件 AS T1 JOIN 软件下载 AS T2 ON T1.软件id = T2.软件id JOIN 应用商店 AS T3 ON T3.商店id = T2.应用商店id order by T2.下载量 desc limit 1

eval_err_num:1024
extra pred: NO SQL FOUND
extra gold: select T1.姓名 from 作者 AS T1 JOIN 网络小说 AS T2 ON T1.作者id = T2.作者id JOIN 畅销榜 AS T3 ON T3.网络小说id = T2.网络图书id order by T3.总排名 desc limit 1

eval_err_num:1025
extra pred: NO SQL FOUND
extra gold: select T1.姓名 from 作者 AS T1 JOIN 网络小说 AS T2 ON T1.作者id = T2.作者id JOIN 畅销榜 AS T3 ON T3.网络小说id = T2.网络图书id order by T3.周排名 desc limit 1

eval_err_num:1026
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T2.书名 from 作者 AS T1 JOIN 网络小说 AS T2 ON T1.作者id = T2.作者id JOIN 畅销榜 AS T3 ON T3.网络小说id = T2.网络图书id order by T3.周排名 desc limit 1

eval_err_num:1027
medium pred: SELECT评分 as low_评分,书名,作者id,评价人数,字数,点击数,类型,PRIMARY KEY (评分) as评分_key,FROM 出版图书 GROUP BY 书名,作者id ORDER BY low_评分 DESC LIMIT 1
medium gold: select 书名 from 出版图书 order by 评分 asc limit 1

eval_err_num:1028
medium pred: SELECT评价人数 as num_评价,点击数 as num_点击, COUNT(*) as num_评价s, COUNT(1) as num_点击s, PRIMARY KEY (评价人数,点击数) as评价_num_点击_key, FROM 出版图书 GROUP BY评价人数,点击数 ORDER BY评价_num_点击_key DESC,点击数 DESC LIMIT 1
medium gold: select 评价人数,点击数 from 出版图书 order by 评分 asc limit 1

eval_err_num:1029
hard pred: SELECT 作者id as author_id, 书名 as book_name, 出版日期 as publication_date, 出版社 as company, 封面图片 as cover_image, 出版图书id as book_id, PRIMARY KEY (作者id, 书名, 出版日期, 出版社, 封面图片) as author_book_key, FROM 出版图书 ORDER BY author_book_key DESC, 书名, 出版日期, 出版社, cover_image LIMIT 10
hard gold: select T2.姓名 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id order by T1.评分 asc limit 1

eval_err_num:1030
hard pred: SELECT age as age, PRIMARY KEY (age) as age_key, FROM users
hard gold: select T2.年龄 from 出版图书 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id order by T1.评分 asc limit 1

hard pred: SELECT * FROM 出版图书 WHERE 书名 = '小说' AND 作者id = '梁夜白' AND 类型 = '书籍'
hard gold: select T2.书名,T3.书名 from 作者 AS T1 JOIN 出版图书 AS T2 ON T1.作者id = T2.作者id JOIN 网络小说 AS T3 ON T3.作者id = T1.作者id where T1.姓名 = "梁夜白"

eval_err_num:1031
easy pred: SELECT age FROM users WHERE username = '梁夜白'
easy gold: select 年龄 from 作者 where 姓名 = "梁夜白"

eval_err_num:1032
hard pred: SELECT COUNT(*) AS total_排名 FROM "收藏榜" WHERE 网络小说id = '梁夜白'
hard gold: select T3.总排名 from 作者 AS T1 JOIN 网络小说 AS T2 ON T1.作者id = T2.作者id JOIN 收藏榜 AS T3 ON T3.网络小说id = T2.网络图书id where T1.姓名 = "梁夜白"

eval_err_num:1033
medium pred: NO SQL FOUND
medium gold: select 书名,价格 from 网络小说 order by 价格 desc limit 1

eval_err_num:1034
medium pred: NO SQL FOUND
medium gold: select 类型,状态 from 网络小说 order by 价格 desc limit 1

eval_err_num:1035
hard pred: NO SQL FOUND
hard gold: select T2.总排名 from 网络小说 AS T1 JOIN 畅销榜 AS T2 ON T1.网络图书id = T2.网络小说id order by T1.价格 desc limit 1

eval_err_num:1036
hard pred: NO SQL FOUND
hard gold: select T2.姓名 from 网络小说 AS T1 JOIN 作者 AS T2 ON T1.作者id = T2.作者id order by T1.价格 desc limit 1

eval_err_num:1037
medium pred: SELECT 平台.平台id, 平台.平台名称, 年会费.年会费, 季度会费.季度会费, 月会费.月会费, 口碑.口碑 FROM 平台 INNER JOIN 艺人 ON 平台.平台id =艺人.id INNER JOIN 综艺节目 ON 平台.平台id =综艺节目.平台id INNER JOIN 节目阵容 ON 艺人.综艺节目id =节目阵容.艺人id ON 年会费.年会费 = 季度会费.季度会费 + 月会费.月会费 WHERE 月会费 > (SELECT MAX(月会费) FROM 月会费)
medium gold: select 平台名称 from 平台 order by 月会费 desc limit 1

eval_err_num:1038
medium pred: SELECT a.id, a.name, 的口碑.口碑 FROM 店铺 a INNER JOIN 评价 ON a.店铺id =评价.店铺id INNER JOIN 评价_店铺 ON评价.评价id =评价_店铺.评价id INNER JOIN 口碑 ON评价_店铺.店铺id =口碑.店铺id WHERE 口碑.口碑 > (SELECT MAX(口碑) FROM 口碑)
medium gold: select 口碑 from 平台 order by 月会费 desc limit 1

eval_err_num:1039
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T1.综艺名称 from 综艺节目 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id where T1.播出状态 = '正在播出' AND T2.平台名称 = (select 平台名称 from 平台 order by 月会费 desc limit 1)

eval_err_num:1040
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T1.制作公司 from 综艺节目 AS T1 JOIN 平台 AS T2 ON T1.平台id = T2.平台id where T1.播出状态 = '正在播出' AND T2.平台名称 = (select 平台名称 from 平台 order by 月会费 desc limit 1)

eval_err_num:1041
easy pred: SELECT 路线id, 国家, 旅行天数, 景点数量 FROM出境游所含国家 JOIN国内游路线 ON出境游所含国家.路线id=国内游路线.路线id JOIN 邮轮路线 ON出境游所含国家.路线id=邮轮路线.路线id JOIN 旅行社 ON国内游路线.旅行社id=旅行社.旅行社id WHERE 旅行社.名称='中国旅行社' GROUP BY 路线id, 国家, 旅行天数, 景点数量 ORDER BY 旅行天数 DESC LIMIT 1
easy gold: select 国家 from 出境游所含国家

eval_err_num:1042
easy pred: SELECT 路线id, 意大利旅游的天数 FROM出境游所含国家 JOIN国内游路线 ON出境游所含国家.路线id=国内游路线.路线id JOIN 邮轮路线 ON出境游所含国家.路线id=邮轮路线.路线id JOIN 旅行社 ON国内游路线.旅行社id=旅行社.旅行社id WHERE 旅行社.名称='中国旅行社' GROUP BY 路线id, 意大利旅游的天数 ORDER BY 意大利旅游的天数 DESC LIMIT 1
easy gold: select 旅行天数 from 出境游所含国家 where 国家 = "意大利"

eval_err_num:1043
easy pred: SELECT 景点数量 FROM 出境游路线 JOIN 国内游路线 ON 出境游路线.路线id=国内游路线.路线id JOIN 邮轮路线 ON 出境游路线.路线id=邮轮路线.路线id JOIN 旅行社 ON 国内游路线.旅行社id=旅行社.旅行社id WHERE 旅行社.名称='中国旅行社' GROUP BY 景点数量 ORDER BY 景点数量 DESC LIMIT 1
easy gold: select 景点数量 from 出境游所含国家 where 国家 = "意大利"

eval_err_num:1044
medium pred: SELECT 路线名称 FROM 出境游路线 JOIN 国内游路线 ON 出境游路线.路线id=国内游路线.路线id JOIN 邮轮路线 ON 出境游路线.路线id=邮轮路线.路线id JOIN 旅行社 ON 国内游路线.旅行社id=旅行社.旅行社id WHERE 旅行社.名称='中国旅行社' GROUP BY 路线名称 ORDER BY 路线名称 DESC LIMIT 1
medium gold: select 路线名称 from 出境游路线 AS T1 JOIN 出境游所含国家 AS T2 ON T1.出境游路线id = T2.路线id where 国家 = "意大利"

eval_err_num:1045
easy pred: SELECT * FROM "出境游路线" WHERE (路线id, 旅行社id) IN ( SELECT 路线id, 旅行社id FROM "出境游所含国家" JOIN "国内游路线" ON 出境游路线id = 国内游路线id JOIN "邮轮路线" ON 邮轮路线id = 邮轮路线id JOIN "出境游路线" ON 出境游路线id = 出境游路线id JOIN "旅行社" ON 旅行社id = 旅行社id WHERE 国家 = '英国' AND 旅行天数 > 1 ORDER BY 旅行天数 DESC LIMIT 1, 1 )
easy gold: select 出发城市 from 出境游路线 where 路线名称 = "英国+爱尔兰+威尔士精选之旅"

eval_err_num:1046
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 成人价格,儿童价格 from 出境游路线 where 路线名称 = "英国+爱尔兰+威尔士精选之旅"

eval_err_num:1047
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 景点数 from 出境游路线 where 路线名称 = "英国+爱尔兰+威尔士精选之旅"

eval_err_num:1048
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 门票总价格 from 出境游路线 where 路线名称 = "英国+爱尔兰+威尔士精选之旅"

eval_err_num:1049
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 名称 from 旅行社 AS T1 JOIN 出境游路线 AS T2 ON T1.旅行社id = T2.旅行社id where 路线名称 = "悦选意大利经典大城小镇书香之旅"

eval_err_num:1050
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 出发城市 from 出境游路线 where 路线名称 = "悦选意大利经典大城小镇书香之旅"

eval_err_num:1051
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 级别 from 旅行社 where 名称 = "中旅总社"

eval_err_num:1052
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T1.公司名 from 餐饮公司 AS T1 JOIN 餐饮公司城市消费 AS T2 ON T1.公司id = T2.公司id JOIN 城市 AS T3 ON T3.城市id = T2.城市id where T3.名称 = "上海" order by T2.总消费额 desc limit 1

eval_err_num:1053
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T4.名称 from 餐饮公司 AS T1 JOIN 餐饮公司城市消费 AS T2 ON T1.公司id = T2.公司id JOIN 城市 AS T3 ON T3.城市id = T2.城市id JOIN 城市 AS T4 ON T4.城市id = T1.总部城市id where T3.名称 = "上海" order by T2.总消费额 desc limit 1

eval_err_num:1054
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T1.经营范围,T1.经营年数 from 餐饮公司 AS T1 JOIN 餐饮公司城市消费 AS T2 ON T1.公司id = T2.公司id JOIN 城市 AS T3 ON T3.城市id = T2.城市id where T3.名称 = "上海" order by T2.总消费额 desc limit 1

eval_err_num:1055
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 公司名 from 餐饮公司 where 上市股市 = "美股"

eval_err_num:1056
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select T1.名称 from 城市 AS T1 JOIN 餐饮公司城市连锁 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T3.公司id = T2.公司id where T3.上市股市 = "美股"

eval_err_num:1057
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T1.名称 from 城市 AS T1 JOIN 餐饮公司城市连锁 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T3.公司id = T2.公司id where T3.上市股市 = "美股" order by T2.分店数量 desc limit 1

eval_err_num:1058
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 餐饮收入 from 城市 where 名称 = "上海"

eval_err_num:1059
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T3.公司名 from 城市 AS T1 JOIN 餐饮公司城市消费 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T3.公司id = T2.公司id where T1.名称 = "上海" order by T2.人气 desc limit 1

eval_err_num:1060
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select T3.公司名 from 城市 AS T1 JOIN 餐饮公司城市消费 AS T2 ON T1.城市id = T2.城市id JOIN 餐饮公司 AS T3 ON T3.公司id = T2.公司id where T1.名称 = "上海" order by T2.排名 desc limit 1

eval_err_num:1061
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 品牌名 from 电视机品牌

eval_err_num:1062
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select 品牌名 from 电视机品牌 where 国家 = '中国'

eval_err_num:1063
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 品牌名 ,市场份额 from 电视机品牌 where 国家 = '中国'

eval_err_num:1064
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 品牌名 ,公司 from 电视机品牌 where 国家 = '中国'

eval_err_num:1065
easy pred: SELECT * FROM 公司 WHERE id = ( SELECT id FROM音箱产品 WHERE名称 = '智能音箱' AND 所属公司 = '中国' )
easy gold: select 名称 from 公司

eval_err_num:1066
easy pred: SELECT * FROM 公司 WHERE id = ( SELECT id FROM音箱产品 WHERE名称 = '智能音箱' AND 所属公司 = '中国' )
easy gold: select 名称 from 公司 where 所属国家 = "中国"

eval_err_num:1067
easy pred: SELECT COUNT(*) as 排名 FROM 公司 WHERE id = ( SELECT id FROM音箱产品 WHERE名称 = '智能音箱' AND 所属公司 = '中国' )
easy gold: select 排名 from 公司 where 名称 = "百度"

eval_err_num:1068
medium pred: SELECT 音箱产品.名称 FROM 音箱产品 INNER JOIN 公司 ON 音箱产品.所属公司id = 公司.id WHERE 公司.id = ( SELECT id FROM音箱产品 WHERE名称 = '智能音箱' AND 所属公司 = '中国' )
medium gold: select T1.名称 from 音箱产品 AS T1 JOIN 公司 AS T2 ON T1.所属公司id = T2.id where t2.名称 = "百度"

eval_err_num:1069
easy pred: SELECT音箱产品.售价 FROM 音箱产品 INNER JOIN 产品销售 ON音箱产品.音箱id = 产品销售.产品id INNER JOIN 公司 ON 产品销售.公司id = 公司.id WHERE 公司.名称 = '天猫精灵'
easy gold: select 售价 from 音箱产品 where 名称 = "天猫精灵"

eval_err_num:1070
medium pred: SELECT音箱产品.产品名称,音箱产品.售价 FROM音箱产品 INNER JOIN 产品销售 ON音箱产品.音箱id = 产品销售.产品id INNER JOIN 公司 ON 产品销售.公司id = 公司.id WHERE 公司.名称 = '天猫精灵' AND 产品销售.季度 = '第四季度'
medium gold: select 销售量 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where 名称 = "天猫精灵" and t1.季度 = "4"

eval_err_num:1071
medium pred: SELECT 产品销售.销售量, 产品销售.销售量增长 FROM 产品销售 INNER JOIN 产品销售 ON 产品销售.产品id = 产品销售.产品id INNER JOIN 公司 ON 产品销售.公司id = 公司.id WHERE 公司.名称 = '天猫精灵' AND 产品销售.季度 = '第四季度'
medium gold: select 销售量增长 from 产品销售 AS T1 JOIN 音箱产品 AS T2 ON T1.产品id = T2.音箱id where 名称 = "天猫精灵" and t1.季度 = "4"

eval_err_num:1072
hard pred: SELECT * FROM "音箱产品" WHERE 售价 = (SELECT MAX(售价) FROM "音箱产品" WHERE 所属公司 = 'your_company_name')
hard gold: select 名称 from 音箱产品 where 售价 in (select max(售价) from 音箱产品)

eval_err_num:1073
hard pred: SELECT * FROM "音箱产品" WHERE 售价 < (SELECT MIN(售价) FROM "音箱产品" WHERE 所属公司 = 'your_company_name')
hard gold: select 名称 from 音箱产品 where 售价 in (select min(售价) from 音箱产品)

eval_err_num:1074
hard pred: SELECT 售价, COUNT(*) as rank FROM "音箱产品" WHERE 售价 > (SELECT MAX(售价) FROM "音箱产品" WHERE 所属公司 = 'your_company_name') AND 所属公司 = 'your_company_name' GROUP BY 售价 ORDER BY rank DESC LIMIT 1
hard gold: select 排名 from 音箱产品 where 名称 in (select 名称 from 音箱产品 where 售价 in (select max(售价) from 音箱产品))

eval_err_num:1075
hard pred: SELECT COUNT(*) as num, 售价 as rank FROM "音箱产品" WHERE 售价 > (SELECT MAX(售价) FROM "音箱产品" WHERE 所属公司 = 'your_company_name') AND 所属公司 = 'your_company_name' GROUP BY 售价 ORDER BY num DESC LIMIT 1
hard gold: select 上升名次 from 音箱产品 where 名称 in (select 名称 from 音箱产品 where 售价 in (select max(售价) from 音箱产品))

eval_err_num:1076
easy pred: SELECT * FROM 民俗节日 WHERE 民族id IN (SELECT 民族id FROM "民族" WHERE 人口 = (SELECT 人口 FROM "民族城市" WHERE "民族id" = 民族id))
easy gold: select 节日 from 民俗节日

eval_err_num:1077
easy pred: SELECT 日期 FROM 民俗节日 WHERE 节日 = '端午节'
easy gold: select 时间 from 民俗节日 where 节日 = "端午节"

eval_err_num:1078
easy pred: NO SQL FOUND
easy gold: select 纪念 from 民俗节日 where 节日 = "端午节"

eval_err_num:1079
medium pred: SELECT 民族id, 名称 FROM "民族" WHERE 人口 = (SELECT 人口 FROM "民族城市" WHERE "民族id" = 民族id)
medium gold: select 名称 from 民族 AS T1 JOIN 民俗节日 AS T2 ON T1.民族id = T2.民族id where 节日 = "端午节"

eval_err_num:1080
easy pred: SELECT * FROM "民族" WHERE "民族id" NOT IN (SELECT "民族id" FROM "民俗节日") ON DELETE NOACTION ON UPDATE NOACTION
easy gold: select 名称 from 民族

eval_err_num:1081
easy pred: SELECT COUNT(*) FROM "民族" WHERE "民族id" = '汉族'
easy gold: select 人口 from 民族 where 名称 = "汉族"

eval_err_num:1082
easy pred: SELECT 语言 FROM "民族" WHERE "民族id" = '汉族' AND "语言" = '中文'
easy gold: select 语言 from 民族 where 名称 = "汉族"

eval_err_num:1083
easy pred: SELECT 宗教信仰 FROM "民族" WHERE "民族id" = '汉族' AND "宗教信仰" = '汉族文化'
easy gold: select 宗教信仰 from 民族 where 名称 = "汉族"

eval_err_num:1084
medium pred: SELECT 节日 FROM "民俗节日" WHERE 节日 = '春节' AND 民族id = '汉族'
medium gold: select 节日 from 民俗节日 AS T1 JOIN 民族 AS T2 ON T1.民族id = T2.民族id where 名称 = "汉族"

eval_err_num:1085
easy pred: SELECT * FROM "篮球运动员" WHERE 姓名 > '乔丹' AND 出生年份 > '1980'
easy gold: select 中文名 from 篮球运动员

eval_err_num:1086
easy pred: SELECT * FROM "篮球运动员" WHERE 姓名 > '乔丹' AND 毕业院校 = '德克萨斯大学''
easy gold: select 中文名 from 篮球运动员 where 毕业院校 = "德克萨斯大学"

eval_err_num:1087
hard pred: SELECT 球员id, 球员中文名, 参加选秀年份, 是否状元, 获得球队, 毕业院校, 国籍 FROM "篮球运动员" WHERE 姓名 > '乔丹' AND 毕业院校 = '德克萨斯大学' AND 出生年份 > '1980' AND 是否状元 > '0'
hard gold: select 国籍 from 篮球运动员 where 中文名 in (select 中文名 from 篮球运动员 where 毕业院校 = "德克萨斯大学")

eval_err_num:1088
hard pred: SELECT 球员id, 参加选秀年份 FROM "篮球运动员" WHERE 姓名 > '乔丹' AND 出生年份 > '1980' AND 参加选秀年份 = '1984'
hard gold: select 参加选秀年 from 篮球运动员 where 中文名 in (select 中文名 from 篮球运动员 where 毕业院校 = "德克萨斯大学")

eval_err_num:1089
extra pred: SELECT 球员id, 球队 FROM "篮球运动员" WHERE 球员id > '乔丹' AND 球队id IN ('公牛', '热火', '国王', '爵士', '马刺', '勇士')
extra gold: select 中文队名 from 球队 AS T1 JOIN MVP记录 AS T2 ON T1.球队id = T2.所属球队 JOIN 篮球运动员 AS T3 ON T2.球员id = T3.球员id where 中文名 in (select 中文名 from 篮球运动员 where 毕业院校 = "德克萨斯大学")

easy pred: SELECT 球员id FROM 篮球运动员 WHERE 是否状元 = 1
easy gold: select 中文名 from 篮球运动员 where 是否状元 = "是"

eval_err_num:1090
easy pred: SELECT 球员id, 院校名称 FROM 篮球运动员 WHERE 参加选秀年 = '2014' AND 毕业院校 = '威廉姆斯学院'
easy gold: select 毕业院校 from 篮球运动员 where 中文名 = "库里"

eval_err_num:1091
hard pred: SELECT 球员id, 球队id, 是否状元, 是否状元 + 是否冠军 = 是否总教练 FROM NBA总冠军 WHERE 赛季 = '2021' AND 球队id = 5
hard gold: select 获得球队 from 篮球运动员 where 毕业院校 in (select 毕业院校 from 篮球运动员 where 中文名 = "库里")

eval_err_num:1092
medium pred: SELECT 球员id, 赛季 FROMMVP记录 WHERE 赛季 = '2021' AND 球员id = 5
medium gold: select 赛季 from MVP记录 AS T1 JOIN 篮球运动员 AS T2 ON T1.球员id = T2.球员id where 中文名 = "库里"

eval_err_num:1093
hard pred: SELECT 球队id FROM "球队" WHERE 球队id = 5
hard gold: select distinct 中文队名 from 球队 AS T1 JOIN MVP记录 AS T2 ON T1.球队id = T2.所属球队 JOIN 篮球运动员 AS T3 ON T2.球员id = T3.球员id where 中文名 = "库里"

eval_err_num:1094
easy pred: SELECT * FROM "球队" WHERE 球队id NOT NULL; SELECT * FROM "篮球运动员" WHERE 球员id NOT NULL; SELECT * FROM "NBA总冠军" WHERE 球队id NOT NULL; SELECT * FROM "MVP记录" WHERE 球员id NOT NULL
easy gold: select 中文队名 from 球队

eval_err_num:1095
easy pred: SELECT SELECT_DISTINCT(球队id) AS 球队id, "西南赛区" AS赛区, "球队名称" AS 球队名称, "夺冠次数" AS 夺冠次数, PRIMARY KEY(球队id) FROM "球队" WHERE 球队id NOT NULL
easy gold: select 中文队名 from 球队 where 赛区 = "西南赛区"

eval_err_num:1096
hard pred: SELECT 联盟名称 as 联盟, "NBA" as 联盟名称, PRIMARY KEY(联盟名称) FROM "联盟" WHERE 联盟名称 NOT NULL
hard gold: select 所属联盟 from 球队 where 中文队名 in (select 中文队名 from 球队 where 赛区 = "西南赛区")

eval_err_num:1097
hard pred: SELECT 夺冠次数 as 夺冠次数, "NBA总冠军" as 夺冠次数, PRIMARY KEY(夺冠次数) FROM "NBA总冠军" WHERE 夺冠次数 NOT NULL
hard gold: select 夺冠次数 from 球队 where 中文队名 in (select 中文队名 from 球队 where 赛区 = "西南赛区")

eval_err_num:1098
hard pred: SELECT 球队id FROM "NBA总冠军" WHERE 赛季 = '2021' AND 球队id = ( SELECT MAX(夺冠次数) FROM "球队" )
hard gold: select 中文队名 from 球队 where 夺冠次数 in (select max(夺冠次数) from 球队)

eval_err_num:1099
hard pred: SELECT 赛区 FROM "球队" WHERE 球队id IN ( SELECT MAX(夺冠次数) FROM "NBA总冠军" )
hard gold: select 赛区 from 球队 where 中文队名 in (select 中文队名 from 球队 where 夺冠次数 in (select max(夺冠次数) from 球队))

eval_err_num:1100
hard pred: SELECT 夺冠次数 FROM "NBA总冠军" WHERE 赛季 = '2021' AND 球队id IN ( SELECT MAX(夺冠次数) FROM "球队" )
hard gold: select 夺冠次数 from 球队 where 中文队名 in (select 中文队名 from 球队 where 夺冠次数 in (select max(夺冠次数) from 球队))

eval_err_num:1101
easy pred: SELECT t2.总教练 FROM "NBA总冠军" t1 INNER JOIN "MVP记录" t2 ON t1.赛季 = t2.赛季 WHERE t1.球队id = ( SELECT 球队id FROM "球队" WHERE 年份 = 2005 LIMIT 1 )
easy gold: select 总教练 from NBA总冠军 where 赛季 = "2005-06赛季"

eval_err_num:1102
extra pred: SELECT t3.球员id FROM "篮球运动员" t1 INNER JOIN "NBA总冠军" t2 ON t1.球员id = t2.球员id INNER JOIN "MVP记录" t3 ON t2.赛季 = t3.赛季 WHERE t2.球队id = ( SELECT 球队id FROM "球队" WHERE 年份 = 2005 LIMIT 1 )
extra gold: select 中文队名 from 球队 AS T1 JOIN NBA总冠军 AS T2 ON T1.球队id = T2.球队id where 总教练 in (select 总教练 from NBA总冠军 where 赛季 = "2005-06赛季")

eval_err_num:1103
hard pred: SELECT t4.联盟名称, t3.球员id FROM "篮球运动员" t1 INNER JOIN "NBA总冠军" t2 ON t1.球员id = t2.球员id INNER JOIN "MVP记录" t3 ON t2.赛季 = t3.赛季 INNER JOIN "球队" t4 ON t4.球队id = t3.所属球队 WHERE t2.联盟名称 = ( SELECT 联盟名称 FROM "联盟" WHERE 地区 = ( SELECT 地区 FROM "地区" WHERE 年份 = t1.年份 LIMIT 1 ) LIMIT 1 ) ORDER BY t3.球员id DESC, t4.联盟名称 ASC
hard gold: select 所属联盟 from 球队 where 中文队名 in (select 中文队名 from 球队 AS T1 JOIN NBA总冠军 AS T2 ON T1.球队id = T2.球队id where 总教练 in (select 总教练 from NBA总冠军 where 赛季 = "2005-06赛季"))

eval_err_num:1104
easy pred: SELECT * FROM "篮球运动员" WHERE "球员id" = '1' AND "是否状元" = '0'
easy gold: select 是否状元 from 篮球运动员 where 获得球队 = "勇士"

eval_err_num:1105
easy pred: SELECT * FROM "篮球运动员" WHERE "球员id" = '1' AND "是否状元" = '0'
easy gold: select 中文名 from 篮球运动员 where 获得球队 = "勇士"

eval_err_num:1106
hard pred: SELECT date(column1, column2, column3) AS选秀年份 FROM "篮球运动员" WHERE column1 = '1' AND column2 = '参加选秀年' AND column3 = '时间' AND column4 = '是否状元' AND column5 = '二进制'
hard gold: select 参加选秀年 from 篮球运动员 where 中文名 in (select 中文名 from 篮球运动员 where 获得球队 = "勇士")

eval_err_num:1107
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 名称 from 台风 order by 经济损失 desc limit 1

eval_err_num:1108
medium pred: SELECT * FROM "台风" WHERE "台风id" IN ( SELECT "台风id" FROM "台风影响的中国省份" WHERE "省份" = '中国' UNION SELECT "台风id" FROM "台风影响的国家" WHERE "国家" = '国家' UNION SELECT "台风id" FROM "台风" WHERE "登陆地点" = '地点' )
medium gold: select 登陆地点 from 台风 order by 经济损失 desc limit 1

eval_err_num:1109
extra pred: SELECT * FROM "台风" WHERE "台风id" IN ( SELECT "台风id" FROM "台风影响的国家" WHERE "国家" = '中国' UNION SELECT "台风id" FROM "台风影响的国家" WHERE "国家" = '国家' UNION SELECT "台风id" FROM "台风" WHERE "登陆地点" = '地点' )
extra gold: select T1.国家 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T2.名称 = (select 名称 from 台风 order by 经济损失 desc limit 1)

eval_err_num:1110
medium pred: SELECT * FROM "台风" WHERE id IN (SELECT 台风id FROM "台风影响的国家" WHERE country = '海南') AND 死亡 = 0 AND 失踪 = 0
medium gold: select T2.名称 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T1.省份 = "海南"

eval_err_num:1111
medium pred: SELECT 台风id, 登陆时间 FROM "台风" WHERE id = '号' AND 登陆地点 = '海南'
medium gold: select T2.登陆时间 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T1.省份 = "海南"

eval_err_num:1112
medium pred: SELECT SUM(经济损失) AS total_经济损失 FROM "台风影响的国家" WHERE country = '海南' AND 经济损失 = 0
medium gold: select T2.经济损失 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where T1.省份 = "海南"

easy pred: SELECT 品牌id, 品牌名, 公司, 国家, 市场份额 FROM 电视机品牌
easy gold: select 品牌名 from 电视机品牌

easy pred: SELECT 品牌id, 品牌名, 公司, 国家, 市场份额 FROM 电视机品牌
easy gold: select 品牌名 from 电视机品牌 where 国家 = "中国"

eval_err_num:1113
medium pred: SELECT 品牌id, 品牌名, 公司, 国家, 市场份额, SUM(市场份额) AS total_市场份额 FROM 电视机品牌
medium gold: select 品牌名, 市场份额 from 电视机品牌 where 国家 = "中国"

hard pred: SELECT * FROM 电视机平台售卖 WHERE 当前售价 = (SELECT MAX(定价) FROM 电视机型号 WHERE 品牌id = (SELECT 品牌id FROM 电视机品牌))
hard gold: select T2.型号 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id order by T1.当前售价 desc limit 1

eval_err_num:1114
extra pred: SELECT 品牌名, 品牌名, 公司名, 国家名, 市场份额 FROM 电视机品牌 WHERE 品牌id = (SELECT 品牌id FROM 电视机平台售卖)
extra gold: select T3.品牌名 from 电视机型号 AS T2 JOIN 电视机品牌 AS T3 ON T2.品牌id = T3.品牌id where T2.型号 = (select T2.型号 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id order by T1.当前售价 desc limit 1)

eval_err_num:1115
extra pred: SELECT定价 FROM 电视机型号 WHERE 品牌id = (SELECT 品牌id FROM 电视机品牌)
extra gold: select T2.定价 from 电视机型号 AS T2 JOIN 电视机品牌 AS T3 ON T2.品牌id = T3.品牌id where T2.型号 = (select T2.型号 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id order by T1.当前售价 desc limit 1)

extra pred: SELECT 平台, 售卖量 FROM 电视机平台售卖 WHERE 型号id = (SELECT 型号id FROM 电视机型号)
extra gold: select T1.平台 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where T2.型号 = (select T2.型号 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id order by T1.当前售价 desc limit 1)

eval_err_num:1116
extra pred: SELECT 评分 FROM 电视机平台售卖 WHERE 型号id = (SELECT 型号id FROM 电视机型号)
extra gold: select T1.平台, T1.用户评分 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where T2.型号 = (select T2.型号 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id order by T1.当前售价 desc limit 1)

eval_err_num:1117
easy pred: SELECT * FROM "医院" WHERE "医院名" = '医院名'
easy gold: select 医院名 from 医院

eval_err_num:1118
medium pred: SELECT * FROM "医院" WHERE "医院等级" = '等级' ORDER BY "医院等级" DESC
medium gold: select 医院名,医院等级 from 医院

eval_err_num:1119
medium pred: SELECT * FROM "医院" WHERE "医院等级" = '三级甲等' ORDER BY "医院等级" DESC
medium gold: select 医院名,医院等级 from 医院 where 医院等级 = "三级甲等"

eval_err_num:1120
medium pred: SELECT 城市id, 词条id FROM "城市" t1, "医院" t2 WHERE t1.词条id = t2.词条id ORDER BY 城市id DESC, 词条id ASC
medium gold: select 医院名,名称 from 医院 AS T1 JOIN 城市 AS T2 ON T1.所属城市id = T2.城市id where 医院等级 = "三级甲等"

eval_err_num:1121
medium pred: SELECT t1.职工数量, t2.科室数量, t3.重点专科数量 FROM "医院" t1 JOIN "特色科室" t2 ON t1.科室 = t2.科室 JOIN "城市" t3 ON t1.城市 = t3.城市id WHERE t3.年份 = ( SELECT 年份 FROM "医院排名" WHERE 医院id = t1.医院id )
medium gold: select 医院名,职工数量 from 医院

eval_err_num:1122
medium pred: SELECT 院士数量 FROM "院士" t1 WHERE 院士id = ( SELECT 院士数量 FROM "医院" t1 JOIN "特色科室" t2 ON t1.科室 = t2.科室 JOIN "城市" t3 ON t1.城市 = t3.城市id WHERE t3.年份 = ( SELECT 年份 FROM "医院排名" t3 JOIN "城市" t4 ON t3.城市id = t4.城市id WHERE t4.名称 = '北京' AND t3.所属城市id = t4.所属城市id ) )
medium gold: select 医院名,职工数量,院士数量 from 医院

eval_err_num:1123
medium pred: SELECT职工数量 FROM "医院" t1 ORDER BY职工数量 DESC LIMIT 10
medium gold: select 医院名,职工数量,院士数量 from 医院 order by 职工数量 desc

eval_err_num:1124
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select 医院名,排名 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id order by 职工数量 desc limit 1

eval_err_num:1125
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select 医院名,排名 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id order by 院士数量 desc limit 1

eval_err_num:1126
hard pred: NO SQL FOUND
hard gold: select 医院名 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id order by 排名 asc limit 1

eval_err_num:1127
hard pred: NO SQL FOUND
hard gold: select 医院名,接待病患数量 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id order by 排名 asc limit 1

eval_err_num:1128
hard pred: NO SQL FOUND
hard gold: select 医院名,手术数量 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id order by 排名 asc limit 1

eval_err_num:1129
hard pred: NO SQL FOUND
hard gold: select 医院名 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id order by 手术数量 desc limit 1

eval_err_num:1130
hard pred: SELECT COUNT(*) as手术数量 FROM "医院" WHERE "医院id" in ( SELECT "医院id" FROM "医院排名" GROUP BY "年份" ORDER BY COUNT(*) DESC LIMIT 1 )
hard gold: select 医院名,年份,手术数量 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id order by 手术数量 desc limit 1

eval_err_num:1131
extra pred: SELECT * FROM "特色科室" WHERE "医院id" in ( SELECT "医院id" FROM "医院" GROUP BY "科室" ORDER BY COUNT(*) DESC LIMIT 1 )
extra gold: select 医院名,科室 from 医院排名 AS T1 JOIN 医院 AS T2 ON T1.医院id = T2.医院id JOIN 特色科室 AS T3 ON T2.医院id = T3.医院id order by 手术数量 desc limit 1

eval_err_num:1132
easy pred: SELECT 品牌名, 公司, 国家, 市场份额, 型号id, 产品定位, 屏幕尺寸, 屏幕比例, 分辨率, 背光灯寿命, 定价 FROM 电视机品牌 JOIN 各城市电视机销量 ON 电视机品牌.品牌id = 各城市电视机销量.品牌id JOIN 电视机平台售卖 ON 电视机品牌.品牌id = 电视机平台售卖.型号id JOIN 电视机型号 ON 电视机品牌.品牌id = 电视机型号.品牌id WHERE 电视机型号.型号id in ((SELECT 型号id FROM 电视机型号 WHERE 产品定位 = '中国' AND 屏幕比例 = '16:9'))
easy gold: select 品牌名 from 电视机品牌 where 国家 = '中国'

eval_err_num:1133
medium pred: SELECT 市场份额 FROM 电视机品牌 JOIN 各城市电视机销量 ON 电视机品牌.品牌id = 各城市电视机销量.品牌id JOIN 电视机平台售卖 ON 电视机品牌.品牌id = 电视机平台售卖.型号id JOIN 电视机型号 ON 电视机品牌.品牌id = 电视机型号.品牌id WHERE 电视机型号.型号id in ((SELECT 型号id FROM 电视机型号 WHERE 产品定位 = '中国' AND 屏幕比例 = '16:9'))
medium gold: select 品牌名 ,市场份额 from 电视机品牌 where 国家 = '中国'

eval_err_num:1134
medium pred: SELECT 型号id, 型号text FROM 电视机型号 WHERE 品牌定位 = '中国' AND 屏幕比例 = '16:9'
medium gold: select T2.品牌名 ,T1.型号 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id where T2.国家 = '中国'

eval_err_num:1135
easy pred: SELECT 品牌名, 公司, 国家, 市场份额 FROM 电视机品牌 WHERE 品牌id IN ( SELECT 品牌id FROM 电视机平台售卖 ORDER BY 当前售价 DESC LIMIT 1 )
easy gold: select 公司 from 电视机品牌 where 品牌名 = '海信'

eval_err_num:1136
medium pred: SELECT 型号id, 型号 text, 产品定位, 屏幕尺寸, 屏幕比例, 分辨率, 背光灯寿命, 定价 FROM 电视机型号 WHERE 型号id IN ( SELECT 型号id FROM 电视机平台售卖 ORDER BY 当前售价 DESC LIMIT 1 )
medium gold: select T1.型号 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id where T2.品牌名 = '海信'

medium pred: SELECT 屏幕尺寸, 屏幕比例, 分辨率 FROM 电视机型号 ORDER BY 屏幕尺寸 DESC, 屏幕比例 DESC, 分辨率 DESC LIMIT 10
medium gold: select T1.型号 ,T1.屏幕尺寸 ,T1.屏幕比例 ,T1.分辨率 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id where T2.品牌名 = '海信'

eval_err_num:1137
hard pred: SELECT 平台 text FROM 电视机平台售卖 WHERE 平台 IN ( SELECT 平台 FROM 电视机品牌 ORDER BY 当前售价 DESC LIMIT 1 )
hard gold: select T1.型号 ,T3.平台 from 电视机型号 AS T1 JOIN 电视机品牌 AS T2 ON T1.品牌id = T2.品牌id JOIN 电视机平台售卖 AS T3 ON T1.型号id = T3.型号id where T2.品牌名 = '海信'

eval_err_num:1138
hard pred: SELECT * FROM 电视机平台售卖 WHERE 型号 = 'XXXXX' AND 平台 = 'XX' AND 当前售价 = 'XXXX' AND 售卖量 = 'XXXX'
hard gold: select T2.型号 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where T1.平台 like '%天猫商城%'

hard pred: SELECT 型号, 屏幕尺寸, 背光灯寿命, 定价 FROM 电视机型号 WHERE 品牌id = 'XXX'
hard gold: select T2.型号 ,T1.当前售价 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where T1.平台 like '%天猫商城%'

hard pred: SELECT COUNT(*) FROM 电视机平台售卖 WHERE 型号id = 'XXXXX' AND 平台 = 'XX' AND 当前售价 = 'XXXX' AND 售卖量 = 'XXXX'
hard gold: select T2.型号 ,T1.售卖量 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where T1.平台 like '%天猫商城%'

hard pred: SELECT 用户评分 FROM 电视机平台售卖 WHERE 型号id = 'XXXXX' AND 平台 = 'XX' AND 当前售价 = 'XXXX' AND 售卖量 = 'XXXX'
hard gold: select T2.型号 ,T1.用户评分 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id where T1.平台 like '%天猫商城%'

eval_err_num:1139
hard pred: SELECT 型号id, MAX(用户评分) AS max_评分 FROM 电视机平台售卖 GROUP BY 型号id ORDER BY MAX(用户评分) DESC LIMIT 1
hard gold: select T2.型号 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id order by T1.用户评分 desc limit 1

eval_err_num:1140
hard pred: SELECT 最高价, 最低价 FROM 电视机平台售卖 WHERE 型号id IN ( SELECT 型号id FROM 电视机品牌 WHERE 品牌id IN ( SELECT 品牌id FROM 各城市电视机销量 WHERE 城市 IN ( SELECT城市 FROM 电视机城市销量 FROM 电视机平台售卖 ) ) )
hard gold: select T2.型号 ,T1.最高价格 ,T1.最低价格 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id order by T1.用户评分 desc limit 1

eval_err_num:1141
hard pred: SELECT 产品定位 FROM 电视机型号 WHERE 品牌id IN ( SELECT 品牌id FROM 电视机品牌 WHERE 品牌id IN ( SELECT 品牌id FROM 各城市电视机销量 WHERE 城市 IN ( SELECT 省份 FROM 电视机城市销量 FROM 电视机平台售卖 ) ) )
hard gold: select T2.型号 ,T2.产品定位 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id order by T1.用户评分 desc limit 1

eval_err_num:1142
hard pred: SELECT 背光灯寿命 FROM 电视机型号 WHERE 品牌id IN ( SELECT 品牌id FROM 电视机品牌 WHERE 品牌id IN ( SELECT 品牌id FROM 各城市电视机销量 WHERE 城市 IN ( SELECT 省份 FROM 电视机城市销量 FROM 电视机平台售卖 ) ) )
hard gold: select T2.型号 ,T2.背光灯寿命 from 电视机平台售卖 AS T1 JOIN 电视机型号 AS T2 ON T1.型号id = T2.型号id order by T1.用户评分 desc limit 1

eval_err_num:1143
hard pred: SELECT player.球员姓名, 重要赛事.赛事名称, 重要赛事.比赛间隔年, 重要赛事.比赛项目数量, 冠军国家.国家名称, 冠军国家.冠军数量 FROM 羽毛球球员, 重要赛事, 冠军国家 WHERE 运动员id IN ( SELECT 球员id FROM 羽毛球球员 FROM 重要赛事 FROM 冠军国家 )
hard gold: select 赛事名称 from 球员夺冠次数 AS T1 JOIN 重要赛事 AS T2 ON T1.赛事id = T2.赛事id JOIN 羽毛球球员 AS T3 ON T1.球员id = T3.球员id where 球员姓名 = "李敬元"

eval_err_num:1144
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 奥运会名称 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id where 球员姓名 = "李敬元"

eval_err_num:1145
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 奥运会名称 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.银牌获得者id = T2.球员id where 球员姓名 = "李敬元"

eval_err_num:1146
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: select 国家名称 from 冠军国家 AS T1 JOIN 重要赛事 AS T2 ON T1.赛事id = T2.赛事id where 赛事名称 = "苏迪曼杯"

eval_err_num:1147
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select 球员姓名 from 球员夺冠次数 AS T1 JOIN 羽毛球球员 AS T2 ON T1.球员id = T2.球员id JOIN 重要赛事 AS T3 ON T1.赛事id = T3.赛事id where 赛事名称 = "苏迪曼杯"

eval_err_num:1148
hard pred: SELECT t1.运动员国籍, t2.重要赛事, t3.冠军国家, t4.球员夺冠次数 FROM "羽毛球球员" t1 INNER JOIN "重要赛事" t2 ON t1.赛事id = t2.赛事id INNER JOIN "奥运会冠亚军" t3 ON t2.比赛名称 = t3.项目名称 INNER JOIN "冠军国家" t4 ON t3.赛事id = t4.赛事id WHERE t4.冠军数量 > 0
hard gold: select 球员姓名,国籍 from 球员夺冠次数 AS T1 JOIN 羽毛球球员 AS T2 ON T1.球员id = T2.球员id JOIN 重要赛事 AS T3 ON T1.赛事id = T3.赛事id where 赛事名称 = "苏迪曼杯"

eval_err_num:1149
hard pred: SELECT t1.球员身高, t2.重要赛事, t3.冠军国家, t4.球员夺冠次数 FROM "羽毛球球员" t1 INNER JOIN "重要赛事" t2 ON t1.赛事id = t2.赛事id INNER JOIN "奥运会冠亚军" t3 ON t2.比赛名称 = t3.项目名称 INNER JOIN "冠军国家" t4 ON t3.赛事id = t4.赛事id WHERE t4.冠军数量 > 0
hard gold: select 球员姓名,身高 from 球员夺冠次数 AS T1 JOIN 羽毛球球员 AS T2 ON T1.球员id = T2.球员id JOIN 重要赛事 AS T3 ON T1.赛事id = T3.赛事id where 赛事名称 = "苏迪曼杯"

eval_err_num:1150
extra pred: SELECT t1.球员身高, t2.重要赛事, t3.冠军国家, t4.球员夺冠次数 FROM "羽毛球球员" t1 INNER JOIN "重要赛事" t2 ON t1.赛事id = t2.赛事id INNER JOIN "奥运会冠亚军" t3 ON t2.比赛名称 = t3.项目名称 INNER JOIN "冠军国家" t4 ON t3.赛事id = t4.赛事id ORDER BY t1.球员身高 DESC
extra gold: select 球员姓名,身高 from 球员夺冠次数 AS T1 JOIN 羽毛球球员 AS T2 ON T1.球员id = T2.球员id JOIN 重要赛事 AS T3 ON T1.赛事id = T3.赛事id where 赛事名称 = "苏迪曼杯" order by 身高 desc

eval_err_num:1151
hard pred: SELECT 球员id, 项目名称 FROM 羽毛球球员 JOIN 重要赛事 ON 球员id = 赛事id JOIN 奥运会冠亚军 ON 赛事id = 奥运会冠亚军.赛事id WHERE 奥运会冠亚军.项目名称 = '悉尼' ORDER BY 球员id DESC LIMIT 1
hard gold: select 球员姓名 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id where 奥运会名称 like "%悉尼奥运会%"

eval_err_num:1152
extra pred: SELECT 运动员id, 奥运会冠亚军.奥运会名称, 奥运会冠亚军.项目名称 FROM 羽毛球球员 JOIN 重要赛事 ON 球员id = 赛事id JOIN 奥运会冠亚军 ON 赛事id = 奥运会冠亚军.赛事id WHERE 奥运会冠亚军.奥运会名称 = '雅典' ORDER BY 运动员id DESC, 奥运会冠亚军.奥运会名称 LIMIT 1
extra gold: select 奥运会名称 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.银牌获得者id = T2.球员id where 球员姓名 in (select 球员姓名 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id where 奥运会名称 like "%悉尼奥运会%")

eval_err_num:1153
extra pred: SELECT 球员id, 赛事id FROM 羽毛球球员 JOIN 重要赛事 ON 球员id = 赛事id JOIN 奥运会冠亚军 ON 赛事id = 奥运会冠亚军.赛事id WHERE 奥运会冠亚军.赛事id IN ('悉尼', '伦敦', '北京', '巴黎', '纽约', '上海') ORDER BY 球员id DESC, 赛事id DESC LIMIT 1
extra gold: select 赛事名称 from 球员夺冠次数 AS T4 JOIN 羽毛球球员 AS T2 ON T4.球员id = T2.球员id JOIN 重要赛事 AS T5 ON T4.赛事id = T5.赛事id where 球员姓名 in (select 球员姓名 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id where 奥运会名称 like "%悉尼奥运会%")

eval_err_num:1154
extra pred: SELECT 冠军数量 FROM 冠军国家 JOIN 重要赛事 ON 冠军国家.赛事id = 重要赛事.赛事id JOIN 奥运会冠亚军 ON 奥运会冠亚军.赛事id = 冠军国家.奥运会冠亚军id WHERE 冠军国家.奥运会冠亚军id IN ('08-04-2008', '09-11-2009', '12-18-2012', '15-22-2015', '21-29-2021') GROUP BY 冠军国家.奥运会冠亚军id ORDER BY 冠军数量 DESC LIMIT 10
extra gold: select count(*) from 球员夺冠次数 AS T4 JOIN 羽毛球球员 AS T2 ON T4.球员id = T2.球员id JOIN 重要赛事 AS T5 ON T4.赛事id = T5.赛事id where 球员姓名 in (select 球员姓名 from 奥运会冠亚军 AS T1 JOIN 羽毛球球员 AS T2 ON T1.金牌获得者id = T2.球员id where 奥运会名称 like "%悉尼奥运会%")

eval_err_num:1155
easy pred: SELECT 台风名称 FROM "台风" 台风 LEFT JOIN "台风影响的国家" 国家 ON 台风.台风id = 国家.台风id WHERE 国家.经济损失 = 0
easy gold: select 名称 from 台风

eval_err_num:1156
medium pred: SELECT 台风.台风id, 台风.登陆强度 FROM "台风" 台风 LEFT JOIN "台风影响的国家" 国家 ON 台风.台风id = 国家.台风id WHERE 国家.经济损失 = 0 ORDER BY 台风.登陆强度 DESC LIMIT 1
medium gold: select 名称,登陆强度 from 台风

eval_err_num:1157
medium pred: SELECT 台风.台风id, 台风.登陆强度 FROM "台风" 台风 LEFT JOIN "台风影响的国家" 国家 ON 台风.台风id = 国家.台风id WHERE 国家.经济损失 = 0 ORDER BY 台风.登陆强度 DESC LIMIT 1
medium gold: select 名称,登陆强度 from 台风 order by 登陆强度 desc

eval_err_num:1158
medium pred: SELECT * FROM "台风" WHERE 登陆地点 = '广东'
medium gold: select 名称 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where 省份 = "广东"

eval_err_num:1159
extra pred: SELECT * FROM "台风" WHERE 登陆地点 = '广东' AND 经济损失 = '海量'
extra gold: select 国家 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where 名称 = (select 名称 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where 省份 = "广东")

eval_err_num:1160
extra pred: SELECT * FROM "台风" WHERE 登陆地点 = '广东' AND 经济损失 = '海量'
extra gold: select 国家,T3.经济损失 from 台风影响的国家 AS T3 JOIN 台风 AS T2 ON T3.台风id = T2.台风id where 名称 = (select 名称 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id where 省份 = "广东")

eval_err_num:1161
medium pred: SELECT 死亡人数 FROM "台风" WHERE 台风id IN (SELECT 台风id FROM "台风影响的国家") ON DELETE NOACTION ON UPDATE NOACTION
medium gold: select 名称,死亡人数 from 台风

eval_err_num:1162
medium pred: SELECT name,登陆地点,死亡人数,登陆强度,持续时间,经济损失 FROM "台风影响的国家" WHERE 台风id IN (SELECT 台风id FROM "台风") ON DELETE NOACTION ON UPDATE NOACTION
medium gold: select 登陆地点 from 台风 order by 死亡人数 desc limit 1

eval_err_num:1163
medium pred: SELECT 登陆时间 FROM "台风" WHERE 台风id IN (SELECT 台风id FROM "台风影响的国家") ON DELETE NOACTION ON UPDATE NOACTION
medium gold: select 登陆时间 from 台风 order by 死亡人数 desc limit 1

eval_err_num:1164
easy pred: SELECT * FROM "台风影响的中国省份" AS d INNER JOIN "台风" AS t ON d.台风id = t.台风id INNER JOIN "台风影响的国家" AS 的国家 ON t.台风id = 国家.台风id WHERE t.名称 = '台风'
easy gold: select 省份 from 台风影响的中国省份

eval_err_num:1165
medium pred: SELECT 省份 FROM "台风影响的中国省份" AS d INNER JOIN "台风" AS t ON d.台风id = t.台风id INNER JOIN "台风影响的国家" AS 的国家 ON t.台风id = 国家.台风id WHERE t.登陆强度 = ( SELECT MAX(登陆强度) FROM "台风影响的国家" AS d2 WHERE d2.台风id = t.台风id )
medium gold: select 省份 from 台风影响的中国省份 order by 登陆强度 desc limit 1

eval_err_num:1166
medium pred: SELECT 死亡人数,失踪人数 FROM "台风影响的中国省份" AS d INNER JOIN "台风" AS t ON d.台风id = t.台风id INNER JOIN "台风影响的国家" AS 的国家 ON t.台风id = 国家.台风id WHERE t.名称 = '台风'
medium gold: select 死亡人数,失踪人数 from 台风影响的中国省份 order by 登陆强度 desc limit 1

eval_err_num:1167
hard pred: SELECT * FROM "台风影响的中国省份" AS d INNER JOIN "台风" AS t ON d.台风id = t.台风id INNER JOIN "台风影响的国家" AS 的国家 ON t.台风id = 国家.台风id WHERE t.名称 = '台风' AND 国家.经济损失 = '多少'
hard gold: select T2.名称 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id order by T1.登陆强度 desc limit 1

eval_err_num:1168
hard pred: SELECT 天数 FROM "台风影响的中国省份" AS d INNER JOIN "台风" AS t ON d.台风id = t.台风id INNER JOIN "台风影响的国家" AS 的国家 ON t.台风id = 国家.台风id WHERE t.名称 = '台风' AND 国家.经济损失 = '多少'
hard gold: select T2.持续天数 from 台风影响的中国省份 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id order by T1.登陆强度 desc limit 1

eval_err_num:1169
hard pred: SELECT 该国 FROM "台风影响的国家" 该国 JOIN "台风" 台风 ON 台风.台风id = 该国.台风id WHERE 台风.名称 = '最强台风'
hard gold: select T1.国家 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id order by T2.登陆强度 desc limit 1

eval_err_num:1170
hard pred: SELECT 经济损失 FROM "台风影响的国家" 该国 JOIN "台风" 台风 ON 台风.台风id = 该国.台风id WHERE 台风.名称 = '最强台风' AND 该国.国家 = '中国'
hard gold: select T1.经济损失 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id order by T2.登陆强度 desc limit 1

eval_err_num:1171
hard pred: SELECT 台风.登陆地点 FROM "台风影响的国家" 该国 JOIN "台风" 台风 ON 台风.台风id = 该国.台风id JOIN "台风影响的国家" 该国2 ON 该国2.省份 = 该国.省份 AND 该国2.台风id = 该国.台风id WHERE 台风.登陆时间 = ( SELECT MAX(登陆时间) AS max_登陆时间 FROM "台风影响的国家" 该国2 WHERE 该国2.省份 = 该国.省份 AND 该国2.台风id = 该国.台风id )
hard gold: select T2.登陆时间,T2.登陆地点 from 台风影响的国家 AS T1 JOIN 台风 AS T2 ON T1.台风id = T2.台风id order by T2.登陆强度 desc limit 1

eval_err_num:1172
hard pred: SELECT 城市id, COUNT(*) AS 金融机构数量 FROM 城市金融产业 GROUP BY 城市id ORDER BY COUNT(*) DESC LIMIT 1
hard gold: select t1.名称 from 城市 as t1 join 城市金融产业 as t2 on t1.城市id = t2.城市id order by t2.金融机构数量 desc limit 1

eval_err_num:1173
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select t1.名称 from 城市 as t1 join 城市金融产业 as t2 on t1.城市id = t2.城市id order by t2.金融机构数量 asc limit 1

eval_err_num:1174
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select t1.名称,t1.所属省份 from 城市 as t1 join 城市金融产业 as t2 on t1.城市id = t2.城市id where t2.金融机构数量 in (select max(金融机构数量) from 城市金融产业 union select min(金融机构数量) from 城市金融产业)

eval_err_num:1175
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: select t1.第三产业总值,t1.所属省份 from 城市 as t1 join 城市金融产业 as t2 on t1.城市id = t2.城市id where t2.金融机构数量 in (select max(金融机构数量) from 城市金融产业 union select min(金融机构数量) from 城市金融产业)

                     easy                 medium               hard                 extra                all                  joint_all           
count                242                  482                  314                  253                  1291                 333                 
=====================   EXECUTION ACCURACY     =====================
execution            0.017                0.000                0.000                0.000                0.000                0.000               

====================== EXACT MATCHING ACCURACY =====================
exact match          0.017                0.002                0.000                0.000                0.004                0.000               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.158                0.211                0.115                0.143                0.164                0.000               
select(no AGG)       0.158                0.211                0.115                0.143                0.164                0.000               
where                0.107                0.133                0.000                0.000                0.079                0.000               
where(no OP)         0.143                0.133                0.000                0.000                0.090                0.000               
group(no Having)     0.000                0.000                0.000                0.000                0.000                0.000               
group                0.000                0.000                0.000                0.000                0.000                0.000               
order                0.000                0.167                0.333                0.000                0.222                0.000               
and/or               1.000                0.956                0.948                0.858                0.942                0.000               
IUEN                 0.000                0.000                0.000                0.000                0.000                0.000               
keywords             0.643                0.657                0.455                0.250                0.557                0.000               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.025                0.017                0.010                0.008                0.015                0.000               
select(no AGG)       0.025                0.017                0.010                0.008                0.015                0.000               
where                0.019                0.015                0.000                0.000                0.008                0.000               
where(no OP)         0.025                0.015                0.000                0.000                0.009                0.000               
group(no Having)     0.000                0.000                0.000                0.000                0.000                0.000               
group                0.000                0.000                0.000                0.000                0.000                0.000               
order                0.000                0.010                0.012                0.000                0.007                0.000               
and/or               0.955                0.991                0.973                1.000                0.981                0.000               
IUEN                 0.000                0.000                0.000                0.000                0.000                0.000               
keywords             0.113                0.061                0.032                0.012                0.049                0.000               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.043                0.031                0.018                0.015                0.027                1.000               
select(no AGG)       0.043                0.031                0.018                0.015                0.027                1.000               
where                0.032                0.026                1.000                1.000                0.014                1.000               
where(no OP)         0.043                0.026                1.000                1.000                0.016                1.000               
group(no Having)     1.000                1.000                1.000                1.000                1.000                1.000               
group                1.000                1.000                1.000                1.000                1.000                1.000               
order                1.000                0.018                0.024                1.000                0.014                1.000               
and/or               0.977                0.973                0.960                0.923                0.961                1.000               
IUEN                 1.000                1.000                1.000                1.000                1.000                1.000               
keywords             0.193                0.111                0.060                0.023                0.090                1.000               


                     turn 1               turn 2               turn 3               turn 4               turn >4             
count                333                  333                  333                  210                  82                  
=====================   TRUN XECUTION ACCURACY     =====================
execution            0.009                0.000                0.003                0.000                0.000               

====================== TRUN EXACT MATCHING ACCURACY =====================
exact match          0.012                0.003                0.000                0.000                0.000               
