eval_err_num:1
medium pred: SELECTMaker, COUNT(*) as count FROM("car_makers")t GROUP BYMaker ORDER BY count DESC
medium gold: SELECT Count ( * )  ,  T2.FullName  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id

eval_err_num:2
extra pred: SELECT Model FROM("car_names")t GROUP BY Model ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id order by count ( * )  desc limit 1

eval_err_num:3
medium pred: SELECT Company, COUNT(*) as count FROM("car_makers")t GROUP BY Company HAVING COUNT(*) >= 3
medium gold: SELECT Count ( * )  ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id having count ( * )   >=  3

eval_err_num:4
easy pred: 请列出所有singers,包括他们的名称。 | 意思是列出所有singers的信息,包括他们的名字。 | ---|---|--- select * fromsinger; ```
easy gold: SELECT name FROM singer

eval_err_num:5
medium pred: 当然可以,您还可以为每个singer列出其所有 concerts 的数量。 | 意思是您还可以为每个singer列出其所有 concerts 的数量。 | ---|---|--- select *, count(DISTINCT concert_id) as num_ concerts fromsinger
medium gold: SELECT T2.name ,  count ( * )  FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id   =   T2.singer_id GROUP BY T2.singer_id

easy pred: SELECT COUNT(DISTINCT Template_ID) FROM Templates
easy gold: SELECT count ( distinct template_id )  FROM Documents

eval_err_num:6
easy pred: SELECT COUNT(DISTINCT Document_ID) AS used_templates, COUNT(DISTINCT Template_ID) AS used_template_ids FROM Documents
easy gold: SELECT count ( template_id )  FROM Documents GROUP BY template_id HAVING count ( * )   >  1

eval_err_num:7
easy pred: SELECT Document_ID, Template_ID FROM ( SELECT Document_ID, COUNT(DISTINCT Template_ID) AS used_template_ids, COUNT(DISTINCT Document_ID) AS used_documents FROM Documents GROUP BY Document_ID, Template_ID ) 大明 JOIN Templates t ON 大明.Template_ID = t.Template_ID WHERE 大明.used_documents > 0
easy gold: SELECT document_id FROM Documents GROUP BY template_id HAVING count ( * )   >  1

eval_err_num:8
medium pred: SELECT t1.first_name FROMstudents t1 INNER JOIN addresses t2 ON t1.permanent_address_id = t2.address_id INNER JOIN courses t3 ON t1.current_address_id = t3.course_id INNER JOIN departments t4 ON t3.department_id = t4.department_id INNER JOIN生活费用 t5 ON t4.address_id = t5.address_id AND t5.city = 'Haiti' GROUP BY t1.student_id HAVING COUNT(DISTINCT t5.city) > 1
medium gold: SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id   =   T2.address_id WHERE T2.country   =   'Haiti'

eval_err_num:9
easy pred: SELECT t1.first_name FROM students t1 INNER JOIN addresses t2 ON t1.Permanent_address_id = t2.address_id INNER JOIN courses t3 ON t1.current_address_id = t3.course_id INNER JOIN departments t4 ON t3.department_id = t4.department_id INNER JOIN生活费用 t5 ON t4.address_id = t5.address_id AND t5.phone = '09700166582' GROUP BY t1.student_id HAVING COUNT(DISTINCT t5.phone) > 1
easy gold: SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'

eval_err_num:10
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: SELECT T1.last_name, * FROM Students as T1 join addresses as T2 on T1.current_address_id  =  T2.address_id WHERE T1.cell_mobile_number  =  '09700166582'

eval_err_num:11
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: SELECT email_address FROM Students where cell_mobile_number  =  '09700166582'

hard pred: SELECT Name from Stadium where Stadium_ID not in (SELECT Stadium_ID from concert where year = 2014)
hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.year   =   2014

eval_err_num:12
medium pred: SELECT主题 from Stadium where Name = 'Balmoor'
medium gold: select T2.Theme from stadium as T1 join concert as T2 on T1.Stadium_ID  =  T2.Stadium_ID where T1.Name  =  'Balmoor'

eval_err_num:13
hard pred: SELECT COUNT(*) AS num_female_dogs_through_treatment FROM treatments
hard gold: SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

hard pred: SELECT name, age FROM dogs
hard gold: SELECT age FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

eval_err_num:14
hard pred: SELECT MAX(weight) AS highest_weight FROM dogs WHERE age >= 2
hard gold: SELECT weight FROM Dogs WHERE age = 2 ORDER BY weight DESC LIMIT 1

eval_err_num:15
easy pred: SELECT COUNT(*) as num_teachers FROM "teacher"
easy gold: SELECT COUNT ( * )  FROM teacher

eval_err_num:16
easy pred: SELECT COUNT(*) as num_courses FROM "course"
easy gold: SELECT COUNT ( * )  FROM course_arrange

eval_err_num:17
medium pred: SELECT name, COUNT(*) as num_courses FROM "teacher" WHERE teacher_id >= 1
medium gold: SELECT T2.Name , COUNT ( * )  FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

eval_err_num:18
medium pred: SELECT name, age FROM "teacher" WHERE teacher_id >= 1
medium gold: SELECT Name , age FROM teacher

easy pred: SELECT name FROM battle WHERE bulgarian_commander = ' Baldwin 1'
easy gold: SELECT name FROM battle WHERE latin_commander  =  "Baldwin I"

eval_err_num:19
easy pred: SELECT COUNT(*) FROM "TV_Channel"
easy gold: SELECT count ( * )  FROM TV_Channel

eval_err_num:20
easy pred: SELECT language FROM "TV_Channel" WHERE series_name = 'Sky Music'
easy gold: SELECT language FROM TV_Channel where series_name = 'Sky Music'

eval_err_num:21
easy pred: SELECT Title FROM "TV_Series" WHERE id = 2.0
easy gold: SELECT title FROM Cartoon where id = 2.0

eval_err_num:22
medium pred: SELECT MAX( Horsepower) FROM "cars_data"
medium gold: SELECT Horsepower FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

eval_err_num:23
easy pred: SELECT COUNT(*) FROM "cars_data"
easy gold: SELECT count ( * )  FROM CARS_DATA

eval_err_num:24
easy pred: SELECT Cylinders FROM "cars_data"
easy gold: SELECT sum ( cylinders )  FROM CARS_DATA

eval_err_num:25
medium pred: SELECT district FROM "shop" GROUP BY district ORDER BY COUNT(*) DESC LIMIT 1
medium gold: SELECT district FROM shop ORDER BY number_products DESC LIMIT 1

eval_err_num:26
medium pred: SELECT t1.Manager_name FROM "shop" t1 JOIN LATERAL ON t1.Shop_ID = t2.Shop_ID WHERE t2.Name = 'ABC Company'
medium gold: SELECT manager_name FROM shop ORDER BY number_products DESC LIMIT 1

eval_err_num:27
medium pred: SELECT shop.Number_products FROM "shop" Shop JOIN LATERAL ( SELECT COUNT(*) as Number_products FROM "employee" Employee WHERE Employee.Shop_ID = Shop.Shop_ID ) Employee ON Shop.Manager_name = Employee.Employee_ID
medium gold: SELECT number_products FROM shop ORDER BY number_products DESC LIMIT 1

eval_err_num:28
medium pred: SELECT " District", "Location" FROM "shop" JOIN LATERAL ( SELECT distinct "Location" FROM "employee" WHERE "Employee"."Shop_ID" = "shop"."Shop_ID" ) LATERAL ON "shop"."Manager_name" = LATERAL."Employee"."Employee_ID"
medium gold: SELECT location FROM shop ORDER BY number_products DESC LIMIT 1

eval_err_num:29
medium pred: SELECT Shop.Shop_ID FROM "shop" Shop JOIN "hiring" Hiring ON Shop.Shop_ID = Hiring.Shop_ID JOIN "employee" Employee ON Hiring.Employee_ID = Employee.Employee_ID WHERE Employee.Name = 'John Doe'
medium gold: SELECT shop_ID FROM shop ORDER BY number_products DESC LIMIT 1

hard pred: SELECT District, AVG(population) FROM city GROUP BY District HAVING AVG(population) > 1
hard gold: SELECT District FROM city WHERE Population  >   ( SELECT avg ( Population )  FROM city ) 

eval_err_num:30
extra pred: SELECT District, COUNT(DISTINCT city) AS count_of_cities FROM ( SELECT District, AVG(population) FROM city GROUP BY District HAVING AVG(population) > 1 ) t GROUP BY District
extra gold: SELECT count ( * )  ,  District FROM city WHERE Population  >   ( SELECT avg ( Population )  FROM city )  GROUP BY District

eval_err_num:31
easy pred: SELECT * FROM `country` WHERE `Code` = 'US' AND `Is Official` = 'T'
easy gold: SELECT Name FROM country WHERE GovernmentForm   =   "US Territory"

eval_err_num:32
medium pred: SELECT (`city`).*, (`Country`).(`Code`) AS `Code`, (`Country`).(`Name`) AS `Name`, (`Country`).(`Continent`) AS `Continent`, (`Country`).(`Region`) AS `Region`, (`Country`).(`SurfaceArea`) AS `SurfaceArea`, (`Country`).(`IndepYear`) AS `IndepYear`, (`Country`).(`Population`) AS `Population`, (`Country`).(`LifeExpectancy`) AS `LifeExpectancy`, (`Country`).(`GNP`) AS `GNP`, (`Country`).(`GNPOld`) AS `GNPOld`, (`Country`).(`LocalName`) AS `LocalName`, (`Country`).(` GovernmentForm`) AS `GovernmentForm`, (`Country`).(`HeadOfState`) AS `HeadOfState`, (`Country`).(`Capital`) AS `Capital`, (`Country`).(`Code2`) AS `Code2 FROM `city` JOIN `country` ON `city`.`ID` = `country`.`ID` JOIN `countrylanguage` ON `city`.`CountryCode` = `countrylanguage`.`CountryCode` WHERE `Country`.`Code` = 'US'
medium gold: SELECT GNP, population FROM country WHERE GovernmentForm   =   "US Territory"

eval_err_num:33
medium pred: SELECT (`city`.`Code2`) AS `Code2`, (`Country`.`Name`) AS `Name`, (`Country`.`Continent`) AS `Continent`, (`Country`.`Region`) AS `Region`, (`Country`.`SurfaceArea`) AS `SurfaceArea`, (`Country`.`IndepYear`) AS `IndepYear`, (`Country`.`Population`) AS `Population`, (`Country`.`LifeExpectancy`) AS `LifeExpectancy`, (`Country`.`GNP`) AS `GNP`, (`Country`.`GNPOld`) AS `GNPOld`, (`Country`.`LocalName`) AS `LocalName`, (`Country`.`GovernmentForm`) AS `GovernmentForm`, (`Country`.`HeadOfState`) AS `HeadOfState`, (`Country`.`Capital`) AS `Capital`, (`Country`.`Code2`) AS `Code2 FROM `city` JOIN `country` ON `city`.`ID` = `country`.`ID` JOIN `countrylanguage` ON `city`.`CountryCode` = `countrylanguage`.`CountryCode` WHERE `Country`.`Code2` = 'US' GROUP BY `city`.`Code2`, `Country`.`Code2` ORDER BY `GNP` DESC, `Population` DESC
medium gold: SELECT avg ( GNP )  ,  sum ( population )  FROM country WHERE GovernmentForm   =   "US Territory"

eval_err_num:34
easy pred: SELECT SUM(float('0.00' * 'Asia'::text::float)) AS total_surface_area FROM country
easy gold: SELECT sum ( SurfaceArea )  FROM country WHERE Continent  =  "Asia"

eval_err_num:35
easy pred: SELECT t1.LocalName FROM city t1, country t2 WHERE t1.ID = t2.City_ID AND t2.Continent = 'Asia'
easy gold: SELECT LocalName FROM country

eval_err_num:36
easy pred: select count(*) from "shop" where "Shop_ID" in (select "Shop_ID" from "employee") and "Shop_ID" in (select "Shop_ID" from "hiring")
easy gold: SELECT count ( * )  FROM shop

eval_err_num:37
easy pred: select name from "employee" where age > 30
easy gold: SELECT * FROM shop

eval_err_num:38
medium pred: select shop_id, count(*) as num_employees from "hiring" group by shop_id
medium gold: SELECT count ( * )  FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t2.name

eval_err_num:39
easy pred: SELECT Name, Country, Song_Name, Song_release_year, Age, Is_male FROMsinger
easy gold: SELECT name from singer

eval_err_num:40
medium pred: SELECT Song_release_year FROMsinger WHERE Name='Joe Sharp'
medium gold: SELECT song_release_year from singer where Name  =  "Joe Sharp" and Song_Name  =  "You"

eval_err_num:41
hard pred: SELECT COUNT(*) as num_concert FROM concert
hard gold: SELECT count ( * )  FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id   =   T2.singer_id where T2.name  =  "Joe Sharp" GROUP BY T2.singer_id

eval_err_num:42
easy pred: ```sql SELECT Country FROM singer WHERE Name='Joe Sharp'
easy gold: SELECT country from singer where name  =  "Joe Sharp"

eval_err_num:43
easy pred: select * fromcontinents; ```
easy gold: SELECT Continent FROM CONTINENTS

eval_err_num:44
medium pred: select t1.Continent, count(*) as Num countries, t1.ContinentId as continentId fromcontinents t1 join countries t2 on t1.Continent = t2.ContinentId group by t1.Continent, t1.ContinentId; ```
medium gold: SELECT T1.ContId ,  T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.Continent GROUP BY T1.ContId

extra pred: SELECT Model FROM car_names WHERE Model < 3500
extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model   =   T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker   =   T4.Id WHERE T3.weight  <  3500

eval_err_num:45
extra pred: SELECT weight FROM cars_data WHERE Model = 'BMW'
extra gold: SELECT DISTINCT T3.Weight FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model   =   T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker   =   T4.Id WHERE T1.Model = "bmw"

eval_err_num:46
easy pred: SELECT name FROM table WHERE id = 2
easy gold: SELECT Model FROM car_names WHERE MakeId = 2

eval_err_num:47
easy pred: SELECT COUNT(*) FROM `country`
easy gold: SELECT count ( * )  from country

eval_err_num:48
easy pred: SELECT COUNT(DISTINCT `Code`) FROM `country`
easy gold: SELECT count ( distinct GovernmentForm )  from country

eval_err_num:49
easy pred: SELECT DISTINCT `Code` FROM `country`
easy gold: SELECT distinct GovernmentForm from country

eval_err_num:50
easy pred: SELECT COUNT(1) AS num FROM `country` WHERE `Code` = '共和国'
easy gold: SELECT count ( * )  from country where GovernmentForm  =  "Republic"

eval_err_num:51
easy pred: SELECT t1.Name AS country_name FROM `city` t1 INNER JOIN `country` t2 ON t1.ID = t2.City_ID AND t2.Code = '共和国'
easy gold: SELECT name from country where GovernmentForm  =  "Republic"

eval_err_num:52
medium pred: SELECT Language FROM `country` WHERE Code = 'Latvia'
medium gold: SELECT T2.language from country as T1 join countrylanguage as T2 on T1.Code  =  T2.CountryCode where  T1.name  =  "Latvia"

eval_err_num:53
easy pred: SELECT AIRLINE || ' United States of America' AS AIRLINE || ' (USA)' AS Airlines FROM airlines
easy gold: SELECT Airline FROM AIRLINES WHERE Airline = "United Airlines"

eval_err_num:54
easy pred: SELECT abbreviation || ' air' AS abbreviation FROM airports
easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline = "US Airways"

eval_err_num:55
easy pred: SELECT COUNT(*) as num FROM "singer"
easy gold: SELECT count ( * )  from singer

eval_err_num:56
easy pred: SELECT Citizenship from "singer"
easy gold: SELECT citizenship from singer where name  =  "Alice Walton"

eval_err_num:57
easy pred: SELECT Sales from "song" WHERE Song_ID = 3
easy gold: SELECT Sales from song where song_id  =  3

eval_err_num:58
easy pred: SELECT DestAirport FROM Flights WHEREFlightNo = '44'
easy gold: SELECT DestAirport FROM flights where FlightNo  =  44

extra pred: SELECT airline FROM Flights ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:59
easy pred: SELECT COUNT(DISTINCT course_id) AS total_courses FROM courses
easy gold: SELECT  count ( distinct course_id )  from courses

eval_err_num:60
extra pred: SELECT course_name, COUNT(*) AS total_students FROM students GROUP BY course_name ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name ORDER BY count ( * )  LIMIT 1

eval_err_num:61
easy pred: select count(*) from "concert"
easy gold: SELECT  count ( * )  FROM concert

eval_err_num:62
medium pred: select体育场名称, count(*) from "concert" group by体育场名称
medium gold: SELECT T2.name , count ( * )  FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id

eval_err_num:63
easy pred: select体育场名称, Capacity from "stadium" where 体育场名称 = " Stark's Park"
easy gold: SELECT capacity from stadium where name  =  "Stark s Park"

eval_err_num:64
easy pred: select concert_name from "concert" where year = 2022
easy gold: SELECT concert_name from concert

easy pred: SELECT COUNT(DISTINCT treatment_type_code) FROM Treatments
easy gold: select count ( * )  from  ( SELECT distinct treatment_type_code from treatments ) 

eval_err_num:65
medium pred: SELECT treatment_type_description, MAX(cost_of_Treatment) FROM Treatments GROUP BY treatment_type_description
medium gold: SELECT * FROM Treatments ORDER BY cost_of_treatment DESC LIMIT 1

eval_err_num:66
medium pred: SELECT date_of_ Treatment, cost_of_ treatment FROM Treatments ORDER BY date_of_ treatment DESC LIMIT 1
medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1

eval_err_num:67
medium pred: SELECT airline FROM airports WHERE AirportCode < 200
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline HAVING count ( * )   <  200

eval_err_num:68
hard pred: SELECT AirportCode, COUNT(*) FROM Flights GROUP BY AirportCode HAVING COUNT(*) >= 3
hard gold: SELECT T1.Airline, T2.DestAirport FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline HAVING count ( * )   <  200 limit 3

eval_err_num:69
easy pred: SELECT nationality FROM "poker_player" GROUP BY nationality HAVING COUNT(DISTINCT " People_ID") > 1
easy gold: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT ( * )   >  1

eval_err_num:70
easy pred: SELECT People_ID FROM "people" WHERE nationality = 'Russia'
easy gold: SELECT People_ID FROM people WHERE Nationality  =  'Russia'

eval_err_num:71
medium pred: SELECT Name FROM "poker_player" AS p1 JOIN "people" AS p2 ON p1. People_ID = p2. People_ID
medium gold: SELECT People_ID, name FROM people WHERE Nationality  =  'Russia'

eval_err_num:72
easy pred: SELECT AVG(LOSER_AGE) AS average_age FROM matches
easy gold: SELECT avg ( loser_age )  FROM matches

eval_err_num:73
easy pred: SELECT AVG(winner_AGE) AS average_age FROM matches
easy gold: SELECT avg ( winner_age )  FROM matches

eval_err_num:74
easy pred: SELECT AVG(minutes) AS average_minutes FROM matches
easy gold: SELECT avg ( minutes )  FROM matches

eval_err_num:75
easy pred: SELECT 最长的匹配的 minutes FROM matches
easy gold: SELECT max ( minutes )  FROM matches

eval_err_num:76
easy pred: SELECT 最短的匹配的 minutes FROM matches
easy gold: SELECT min ( minutes )  FROM matches

extra pred: SELECT COUNT(*) FROM flights WHERE SourceAirport = 'Aberdeen' OR DestAirport = 'Aberdeen'
extra gold: SELECT count ( * )  FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.city  like  "%Aberdeen%" OR T2.city  like  "%Abilene%"

eval_err_num:77
easy pred: SELECT Name FROM "museum" WHERE Num_of_ Staff > 0
easy gold: SELECT name from museum

eval_err_num:78
medium pred: SELECT Title FROMCartoon WHERE Directed_by = 'Ben Jones' 或者 SELECT Title FROMCartoon WHERE Directed_by = ' Brandon Vietti'
medium gold: SELECT Title FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"

eval_err_num:79
extra pred: SELECTOriginal_air_date FROMCartoon WHERE id = 1
extra gold: SELECT Title, original_air_date FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"

eval_err_num:80
extra pred: SELECTWriter FROMCartoon WHERE id = 1
extra gold: SELECT Title, written_by FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"

eval_err_num:81
medium pred: SELECT Document_ID, Document_Name, Document_Description, Paragraph_ID FROM Templates WHERE Template_Type_Code LIKE '%w%'
medium gold: SELECT * from Documents WHERE Document_Description LIKE "%w%"

eval_err_num:82
medium pred: SELECT Document_Name FROM Templates WHERETemplate_Type_Code LIKE '%w%'
medium gold: SELECT document_name from Documents WHERE Document_Description LIKE "%w%"

eval_err_num:83
medium pred: SELECT Document_ID, Document_Name FROM Templates WHERETemplate_Type_Code LIKE '%w%' AND Template_Type_Code NOT IN ( SELECTTemplate_Type_Code FROM Ref_Template_Types )
medium gold: SELECT document_name , template_id FROM Documents WHERE Document_Description LIKE "%w%"

eval_err_num:84
easy pred: SELECT AVG(LOSER_AGE) AS average_age FROM matches
easy gold: SELECT avg ( loser_age )   FROM matches

eval_err_num:85
easy pred: SELECT AVG(winner_AGE) AS average_age FROM matches
easy gold: SELECT avg ( winner_age )   FROM matches

eval_err_num:86
easy pred: SELECT COUNT(*) AS winner_count FROM matches WHERE hand = 'L'
easy gold: SELECT count ( * )  from matches where winner_hand  =  "L"

eval_err_num:87
extra pred: SELECT winner.name, loser.name FROM matches AS winner, matches AS loser WHERE winner.match_num > winner.match_num + 2 AND winner.name = 'winner' AND loser.name = 'loser'
extra gold: SELECT winner_name, loser_name from matches where minutes  =   ( select max ( minutes )  from matches ) 

eval_err_num:88
easy pred: Show all the dogs | just show me the names of the dogs
easy gold: SELECT name FROM Dogs

eval_err_num:89
hard pred: SELECT breed_code FROMDogs ORDER BY breed_code LIMIT 1
hard gold: SELECT name FROM Dogs WHERE breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 

eval_err_num:90
extra pred: SELECT gender FROMDogs WHERE owner_id = 1
extra gold: SELECT name, gender FROM Dogs WHERE breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 

eval_err_num:91
extra pred: SELECT treatment_date FROMTreatments WHERE dog_id IN ( SELECT dog_id FROMDogs WHERE owner_id = 1 )
extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id   =   T2.dog_id WHERE T1.breed_code   =    (  SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count ( * )  ASC LIMIT 1  ) 

hard pred: SELECT COUNT(*) FROM Has_Pet WHERE PetID = 1
hard gold: SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:92
easy pred: SELECT * FROM Has_Pet WHERE StuID NOT IN (SELECTStuID FROM Student)
easy gold: select count ( * )  from  ( SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat' ) 

eval_err_num:93
hard pred: SELECT id FROM table
hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat'

eval_err_num:94
extra pred: SELECT Name from visitors WHERE ID IN (SELECT ID FROM museum WHERE Open_Year < 2009) AND (ID IN (SELECT ID FROM museum WHERE Open_Year > 2011))
extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  >  2011

eval_err_num:95
extra pred: SELECT Museum_ID, Name from visitors WHERE ID NOT IN (SELECT ID FROM museum WHERE Open_Year < 2009)
extra gold: SELECT t3.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 AND t1.name  =   ( SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  >  2011 ) 

eval_err_num:96
easy pred: SELECT Level_of_membership from "visitor" WHERE ID = (SELECT ID FROM "visitor" WHERE Name = 'Fernando Gago')
easy gold: SELECT level_of_membership FROM visitor WHERE name  =  "Fernando Gago"

eval_err_num:97
easy pred: SELECT Age from "visitor" WHERE ID = (SELECT ID FROM "visitor" WHERE Name = 'Fernando Gago')
easy gold: SELECT age FROM visitor WHERE name  =  "Fernando Gago"

medium pred: SELECT SourceAirport FROM Flights
medium gold: SELECT T1.SourceAirport FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid   =   T1.Airline WHERE T2.Airline   =   "United Airlines"

medium pred: SELECT FlightNo FROM Flights
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid   =   T1.Airline WHERE T2.Airline   =   "United Airlines"

easy pred: SELECT FlightNo FROM Flights WHERE FlightNo = 29
easy gold: SELECT DestAirport FROM flights WHERE FlightNo  =  29

medium pred: SELECT first_name, last_name, hand, birth_date, country_code FROM players
medium gold: SELECT first_name,  last_name FROM players

eval_err_num:98
medium pred: SELECT * FROM ranking
medium gold: SELECT first_name ,  last_name FROM players WHERE hand   =   'L'

eval_err_num:99
hard pred: SELECT COUNT(*) AS num_United_ flights_to_Aberdeen FROM airports
hard gold: SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid   =   T1.Airline WHERE T2.City   =   "Aberdeen" AND T3.Airline   =   "United Airlines"

eval_err_num:100
hard pred: SELECT DISTINCT airports.City AS OtherCity, airports.AirportCode AS OtherAirportCode, COUNT(*) AS num_other_flights FROM airports JOIN airlines ON airports.AirportCode = airlines.AirportCode JOIN Flights ON airlines.uid = Flights.Airline JOIN (SELECT AirportCode, COUNT(*) AS num_flights FROM Flights) AS other airports ON Flights.Airline = other airports.uid AND Flights.FlightNo > other airports.num_flights GROUP BY airports.City, airports.AirportCode HAVING COUNT(*) > 1) AS other机场es ON other机场es.City = OtherCity AND other机场es.AirportCode = OtherAirportCode
hard gold: SELECT T2.city FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid   =   T1.Airline where T2.city !=   'Aberdeen' and T3.airline  =  "United Airlines"

eval_err_num:101
hard pred: SELECT name FROM teacher WHERE id IN (SELECT Teacher_ID FROM course_arrange)
hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID WHERE T2.Course   =   "Math"

medium pred: SELECT * FROM course_arrange WHERE Teacher_ID IN (SELECT Teacher_ID FROM teacher) AND Grade = 1 OR Grade = 3
medium gold: SELECT T2.Staring_Date  FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID where T2.Course  =  "Math"

eval_err_num:102
hard pred: SELECT birth_date FROM "poker_player" WHERE Poker_Player_ID = (SELECT MIN(Poker_Player_ID) FROM "poker_player") AND Earnings = (SELECT MIN(Earnings) FROM "poker_player")
hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

eval_err_num:103
hard pred: SELECT name FROM "poker_player" WHERE poker_player_id = (SELECT MIN(Poker_Player_ID) FROM "poker_player") AND Earnings = (SELECT MIN(Earnings) FROM "poker_player")
hard gold: SELECT name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

eval_err_num:104
hard pred: SELECT Nationality FROM "poker_player" WHERE poker_player_id = (SELECT MIN(Poker_Player_ID) FROM "poker_player") AND Earnings = (SELECT MIN(Earnings) FROM "poker_player")
hard gold: SELECT Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

eval_err_num:105
easy pred: SELECT COUNT(*) FROM "poker_player" WHERE "Poker_Player_ID" = (SELECT "Poker_Player_ID" FROM "poker_player" WHERE "Final_Table_Made" > 0 AND "Best_Finish" > 0)
easy gold: SELECT count ( * )  FROM poker_player

eval_err_num:106
medium pred: SELECT COUNT(*) FROM "people" WHERE "Height" > 200
medium gold: SELECT count ( * )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Height  >  200

eval_err_num:107
medium pred: SELECT AVG(Earnings) AS平均Earnings FROM "poker_player" WHERE "Height" > 200 AND "Poker_Player_ID" = (SELECT "Poker_Player_ID" FROM "poker_player" WHERE "Final_Table_Made" > 0 AND "Best_Finish" > 0)
medium gold: SELECT avg ( T2.Earnings )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Height  >  200

eval_err_num:108
hard pred: SELECT StuID FROM Student WHERE LName='John' AND Fname='Doe' AND has_pet.PetType='Dog'
hard gold: SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

eval_err_num:109
extra pred: SELECT StuID FROM Student WHERE LName='John' AND Fname='Doe' AND (has_pet.PetType='Dog' OR has_pet.PetType='Cat')
extra gold: SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' intersect SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:110
hard pred: SELECT LName, Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetType='Dog')
hard gold: SELECT T1.Fname, T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

eval_err_num:111
easy pred: SELECT COUNT(*) AS num_country FROM country
easy gold: SELECT count ( * )  from country

eval_err_num:112
easy pred: SELECT country_code FROM city WHERE country_code = 'Herat'
easy gold: SELECT countrycode  from city where name  =  "Herat"

hard pred: SELECT id FROM TV_Channel WHERE Series_name = 'TV Series' AND Country = 'United States'
hard gold: select id from tv_channel where country in  ( SELECT country FROM tv_channel GROUP BY country HAVING count ( * )   >  2 ) 

hard pred: SELECT package_option FROM TV_Channel WHERE id = '12345'
hard gold: select package_option from tv_channel where country in  ( SELECT country FROM tv_channel GROUP BY country HAVING count ( * )   >  2 ) 

eval_err_num:113
easy pred: SELECT Series_name FROM TV_SeriesORDER BY Series_name
easy gold: SELECT series_name FROM tv_channel order by series_name asc

eval_err_num:114
hard pred: SELECT COUNT(DISTINCT dog_id) AS num_ dogs_through_ treatments from treatments
hard gold: SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

eval_err_num:115
hard pred: SELECT MAX(age) AS age_of_ youngest_dog FROM Dogs
hard gold: SELECT min ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

hard pred: SELECT dog_id, age FROM Dogs order by age DESC LIMIT 1
hard gold: SELECT max ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

eval_err_num:116
hard pred: SELECT AVG(age) AS average_age FROM table
hard gold: SELECT avg ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

eval_err_num:117
hard pred: SELECT Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName, GovernmentForm,HeadOfState,Capital,Code2 from city
hard gold: SELECT Name FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" ) 

eval_err_num:118
extra pred: SELECT (SELECT COUNT(*) FROM countrylanguage WHERE Language NOT LIKE '%eng%') AS people_using_english, (SELECT COUNT(*) FROM countrylanguage WHERE Language LIKE '%eng%') AS people_using_english_total FROM country
extra gold: SELECT Name,sum ( Population )  FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" )  group by Name

eval_err_num:119
medium pred: SELECT t1.weight, t1.Accelerate, t1.Year, t2.MPI, t2. Horsepower FROM " Cars_data" t1 INNER JOIN "model_list" t2 ON t1.Model = t2.Model AND t1.Maker = 1
medium gold: SELECT T2.Weight FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.MakeID  =  1

eval_err_num:120
medium pred: SELECT t1.year FROM " cars_data" t1 INNER JOIN "model_list" t2 ON t1.Maker = t2.Maker AND t1.Model = t2.Model AND t1.Year = t2.Year
medium gold: SELECT T2.Year FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.Model  =  "buick"

eval_err_num:121
medium pred: SELECT t1.MPI, t1. Horsepower FROM "model_list" t1 INNER JOIN "car_names" t2 ON t1.Model = t2.Model AND t2.Make = "plymouth"
medium gold: SELECT T2.Horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.Model  =  "plymouth"

eval_err_num:122
extra pred: SELECT Model, Horsepower FROM "model_list" WHERE Model = ( SELECT Model FROM "car_names" WHERE Make = "buick" AND cylinders = 4 AND Year = 2019 )
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1

eval_err_num:123
easy pred: SELECT COUNT(DISTINCT car_names) FROM cars_data WHERE year = 1974
easy gold: select count ( * )  from cars_data where year = '1974'

eval_err_num:124
medium pred: SELECT make_id FROM cars_data WHERE year = 1974 AND cylinders = 8
medium gold: select id  from cars_data where year = '1974' and Cylinders  =  '8'

eval_err_num:125
medium pred: SELECT Shop_ID, Employee_ID, Start_from, Is_full_time FROMHiring
medium gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t1.shop_id

eval_err_num:126
extra pred: SELECT Shop_ID, Name FROM Shop WHERE Num_products = ( SELECT MAX(Num_products) FROMHiring ) AND Employee_ID IN ( SELECT Employee_ID FROMHiring )
extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t1.shop_id ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:127
easy pred: select count(*) from "singer" as t1 join "song" as t2 on t1.Singer_ID = t2.Singer_ID
easy gold: select count ( distinct Singer_ID )  from Singer

eval_err_num:128
medium pred: select count(*) from "singer" as t1 join "song" as t2 on t1.Singer_ID = t2.Singer_ID where t2.Sales >= 300000
medium gold: SELECT count ( DISTINCT T1.Name )  FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales > 300000

eval_err_num:129
medium pred: select distinct t1.Name from "singer" as t1 join "song" as t2 on t1.Singer_ID = t2.Singer_ID where t2.Sales >= 300000
medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales > 300000

eval_err_num:130
easy pred: SELECT * FROM ` Contestants` WHERE ` Contestant_number` NOT IN (SELECT ` Contestant_number` FROM `voteS`)
easy gold: SELECT contestant_name FROM CONTESTANTS

eval_err_num:131
easy pred: SELECT SUM( Contestant_number) AS total_ Contestant_number FROM ` Contestants`
easy gold: SELECT COUNT ( contestant_name )  FROM CONTESTANTS

eval_err_num:132
easy pred: SELECT * FROM `Area_CODE_STATE` WHERE `area_code` = 1
easy gold: SELECT contestant_name FROM CONTESTANTS WHERE contestant_number  =  1

eval_err_num:133
easy pred: SELECT * FROM `Area_CODE_STATE` WHERE `area_code` = 2
easy gold: SELECT contestant_name FROM CONTESTANTS WHERE contestant_number  =  2

eval_err_num:134
easy pred: SELECT FlightNo, COUNT(*) as total FROM Flights
easy gold: SELECT COUNT ( DISTINCT Flightno )  FROM flights

eval_err_num:135
easy pred: SELECT COUNT(*) as num FROM countries
easy gold: SELECT COUNT ( DISTINCT country )  FROM airports

eval_err_num:136
easy pred: SELECT COUNT(*) as num_dog_breeds FROM Breeds
easy gold: SELECT count ( * )  from Breeds

eval_err_num:137
extra pred: SELECT breed_code, SUM(weight) as max_weight FROM Dogs GROUP BY breed_code
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:138
medium pred: SELECT size_code, SUM(weight) as weight FROM Dogs WHERE breed_code = ' Bulldog'
medium gold: SELECT T2.size_code FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code where T1.breed_name = "Bulldog"

extra pred: SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:139
medium pred: SELECT Name FROMconductor order by Year_of_Work DESC limit 1
medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1

eval_err_num:140
easy pred: SELECT COUNT(*) as Years FROM performance
easy gold: SELECT Year_of_Work FROM conductor where name = 'Robert Craft'

eval_err_num:141
medium pred: SELECT Name FROMconductor order by Year_of_Work asc limit 1
medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work asc LIMIT 1

eval_err_num:142
extra pred: SELECTProfessional_idFROMTreatmentsGROUP BYProfessional_idORDER BYnum_ Treatments DESCLIMIT 1
extra gold: SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by COUNT ( * )   desc limit 1

eval_err_num:143
extra pred: SELECT treatment_idFROMTreatmentsWHEREcost_of_ treatment <= 0
extra gold: SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by COUNT ( * )   limit 1

eval_err_num:144
easy pred: SELECT COUNT(*) FROM treatments WHERE professional_id IN (SELECT professional_id FROM treatments WHERE num_ treatments <= 3)
easy gold: select count ( * )  from  ( SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 group by T2.professional_id having count ( * )  <=  3 ) 

eval_err_num:145
hard pred: SELECT Name,Continent FROM country WHERE Code NOT IN (SELECT Code FROM countryLanguage WHERE Language = 'English')
hard gold: select name from country where code not in  ( SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 

eval_err_num:146
hard pred: SELECT Name, GovernmentForm FROM country WHERE Code NOT IN (SELECT Code FROM countryLanguage WHERE Language = 'English' AND GovernmentForm = 'Republic')
hard gold: select name from country where code in  ( SELECT Code FROM country WHERE GovernmentForm !=  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 

eval_err_num:147
medium pred: SELECT SUM(vote_id) AS total_ votes FROM `VOTES` WHERE `state` = 'NY' AND `state` = 'CA'
medium gold: SELECT count ( * )  FROM votes WHERE state   =   'NY' or  state   =   'CA'

eval_err_num:148
easy pred: SELECT DISTINCT ` Contestant_number` FROM ` Contestants`
easy gold: SELECT distinct contestant_number FROM votes

eval_err_num:149
easy pred: SELECT COUNT(DISTINCT ` vote_id`) AS correspond_ancestry_count FROM `VOTES` WHERE ` Contestant_number` = 5
easy gold: SELECT count ( * )  from votes where contestant_number  =  '5'

eval_err_num:150
easy pred: SELECT nationality FROM "people" GROUP BY nationality HAVING COUNT(*) = (SELECT COUNT(*) FROM "people" WHERE nationality = ' 英国' AND People_ID > 1) + 1
easy gold: SELECT distinct Nationality FROM people

eval_err_num:151
easy pred: SELECT nationality FROM "people" GROUP BY nationality HAVING COUNT(*) = (SELECT COUNT(*) FROM "people" WHERE nationality = ' 英国' AND People_ID > 1) + 1
easy gold: SELECT Nationality FROM people

eval_err_num:152
easy pred: SELECT COUNT(*) as num FROM "poker_player" WHERE nationality = '俄罗斯'
easy gold: SELECT count ( * )  FROM people where Nationality  =  'Russia'

eval_err_num:153
easy pred: SELECT COUNT(*) as num FROM "poker_player" WHERE nationality = '保加利亚'
easy gold: SELECT count ( * )  FROM people where Nationality  =  'Bulgaria'

eval_err_num:154
medium pred: SELECTMaker FROM car_makers WHEREId IN (SELECTMaker FROM model_list WHEREModel IN (SELECT Model FROM car_makers WHERE id IN (SELECT id FROM countries WHERE country_id = (SELECT country_id FROM continents WHEREContinent = 'XX'))) GROUP BYMaker HAVING COUNT(DISTINCT Model) > 3)
medium gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3

medium pred: SELECT Maker, COUNT(DISTINCT id) FROM car_makers GROUP BY Maker HAVING COUNT(DISTINCT id) > 1
medium gold: SELECT T1.id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3

eval_err_num:155
medium pred: SELECTMaker, id, FullName FROM car_makers WHEREId IN (SELECTMaker FROM model_list WHEREModel IN (SELECT Model FROM car_makers WHERE id IN (SELECT id FROM countries WHERE country_id = (SELECT country_id FROM continents WHEREContinent = 'XX'))) GROUP BYMaker HAVING COUNT(DISTINCT id) > 3) AND FullName = 'Maker'
medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker GROUP BY T1.Id HAVING count ( * )   >  3

eval_err_num:156
medium pred: SELECT Model, Horsepower from cars_data order by Horsepower DESC LIMIT 1
medium gold: SELECT Id FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

eval_err_num:157
medium pred: SELECT 加速值 from table where 年龄 = 39
medium gold: SELECT accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

eval_err_num:158
easy pred: SELECT 加速值 from table where 加速值 > 19.0
easy gold: SELECT COUNT ( * )  FROM CARS_DATA WHERE Accelerate  >  19.0

eval_err_num:159
easy pred: SELECT * FROM "concert" WHERE "concert_Name" = ' Auditions'
easy gold: SELECT year from concert where concert_name  =  "Auditions"

eval_err_num:160
easy pred: SELECT * FROM "concert" WHERE "concert_Name" = 'Superbootcamp'
easy gold: SELECT year from concert where concert_name  =  "Super bootcamp"

eval_err_num:161
easy pred: SELECT * FROM "concert" WHERE "concert_Name" = 'Home Visits'
easy gold: SELECT year from concert where concert_name  =  "Home Visits"

eval_err_num:162
medium pred: SELECT COUNT(*) FROM "concert" WHERE "year" = 2014 OR "year" = 2015
medium gold: SELECT count ( * )  FROM concert WHERE YEAR   =   2014 OR YEAR   =   2015

eval_err_num:163
easy pred: SELECT COUNT(*) FROM "concert" WHERE "year" = 2014
easy gold: SELECT count ( * )  FROM concert WHERE YEAR   =   2014

eval_err_num:164
easy pred: SELECT COUNT(*) FROM "concert" WHERE "year" = 2015
easy gold: SELECT count ( * )  FROM concert WHERE YEAR   =   2015

eval_err_num:165
easy pred: SELECT name FROMurney_date WHERE tourney_id = 1
easy gold: SELECT distinct tourney_name FROM matches

eval_err_num:166
easy pred: SELECT COUNT(*) AS graduate_count FROM schools
easy gold: SELECT count ( * )   from students

eval_err_num:167
medium pred: SELECT 产品开发部.产品名, 产品开发部.产品描述, 产品开发部.产品路线图, 产品开发部.产品路线图规划时间, 产品开发部.产品规划预算, 产品开发部.产品开发计划, 产品开发部.产品开发团队, 产品开发部.产品开发周期, 产品开发部.产品上市日期, 产品开发部.产品的市场份额 FROM 产品开发部 INNER JOIN 产品阵列 ON 产品开发部.产品阵列ID = 产品阵列.产品阵列ID INNER JOIN 产品表 ON 产品开发部.产品ID = 产品表.产品ID INNER JOIN 产品描述 ON 产品开发部.产品描述ID = 产品描述.产品描述ID INNER JOIN 产品路线图 ON 产品开发部.产品路线图ID = 产品路线图.产品路线图ID INNER JOIN 产品规划表 ON 产品开发部.产品规划ID = 产品规划表.产品规划ID INNER JOIN 产品开发计划 ON 产品开发部.产品开发计划ID = 产品开发计划.产品开发计划ID INNER JOIN 产品开发团队 ON 产品开发部.产品开发团队ID = 产品开发团队.产品开发团队ID INNER JOIN 产品开发周期 ON 产品开发部.产品开发周期ID = 产品开发周期.产品开发周期ID INNER JOIN 产品上市日期 ON 产品开发部.产品上市日期ID = 产品上市日期.产品上市日期ID WHERE 产品开发部.产品路线图规划时间 = ( SELECT MAX(规划时间) FROM 产品开发部.产品路线图规划表 WHERE 产品开发部.产品路线图ID = 该表的ID )
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1

easy pred: SELECT SourceAirport, DestAirport FROM Flights WHERE FlightNo = 28
easy gold: SELECT SourceAirport FROM Flights WHERE FlightNo = '28'

eval_err_num:168
hard pred: SELECT AirportCode, AirportName FROM Airports WHERE AirportCode NOT IN (SELECT AirportCode FROM Flights)
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN  ( SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights ) 

eval_err_num:169
medium pred: SELECT DATETIME('2022-01-01 00:00:00', 'YYYY-MM-DD hh24:mi:ss') AS release_time FROM transcripts
medium gold: SELECT * FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

eval_err_num:170
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: SELECT DISTINCT winner_name  FROM matches ORDER BY winner_age LIMIT 3

eval_err_num:171
medium pred: SELECT points FROM ranking ORDER BY points DESC LIMIT 3
medium gold: SELECT loser_rank_points FROM matches ORDER BY winner_age LIMIT 3

eval_err_num:172
medium pred: SELECT player_id, SUM(CASE WHEN winner_age = 0 THEN 1 else -1 END) AS young_wins, SUM(CASE WHEN winner_age = 1 THEN 1 else -1 END) AS young_wins_diff, SUM(CASE WHEN winner_age = 2 THEN 1 else -1 END) AS young_wins_diff_diff FROM matches GROUP BY player_id ORDER BY young_wins DESC LIMIT 3
medium gold: SELECT winner_age FROM matches ORDER BY winner_age LIMIT 3

easy pred: select count(DISTINCT student_id) from Friend
easy gold: SELECT count ( * )  FROM Friend

eval_err_num:173
easy pred: SELECT COUNT(*) as num_poker_player from "poker_player"
easy gold: select count ( * )  from poker_player

eval_err_num:174
medium pred: SELECT COUNT(*) as num_earning_超过了300000 from "poker_player"
medium gold: SELECT count ( * )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000

eval_err_num:175
medium pred: SELECT name, birth_date, height from "poker_player"
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000

eval_err_num:176
easy pred: SELECT COUNT(*) FROM "museum"
easy gold: SELECT count ( * )  from museum

eval_err_num:177
easy pred: SELECT Museum_ID, COUNT(*) as Num_of_Staff FROM "museum" GROUP BY Museum_ID HAVING COUNT(*) > 0
easy gold: SELECT Num_of_Staff from museum

eval_err_num:178
medium pred: SELECT Museum_ID, Name FROM "museum" GROUP BY Museum_ID ORDER BY COUNT(*) DESC LIMIT 1
medium gold: SELECT Museum_ID, Name from museum order by Num_of_Staff desc limit 1

eval_err_num:179
easy pred: SELECT COUNT(*) as total_students FROM students
easy gold: SELECT count ( * )  FROM Students

medium pred: SELECT first_name, middle_name, last_name FROM students WHERE student_id >= 15
medium gold: SELECT first_name,middle_name,last_name  FROM Students

easy pred: SELECT student_id, date_first_registered, first_name, middle_name, last_name FROM students
easy gold: SELECT date_first_registered  FROM Students

easy pred: SELECT COUNT(*) FROM Student
easy gold: SELECT count ( StuID )  FROM student

eval_err_num:180
medium pred: SELECTStuID,PetID FROMHas_Pet WHEREStuID REFERENCES Student AND PetID REFERENCES Pets
medium gold: SELECT T2.petid ,age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid WHERE T1.Lname   =   'Smith'

eval_err_num:181
easy pred: SELECTStuID FROM Has_Pet WHEREStuID IN (SELECTStuID FROM Student)
easy gold: SELECT distinct T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid

eval_err_num:182
medium pred: SELECT s.LName, s.FName, s.Age, a.Major FROM Student s JOIN Has_Pet a ON s.StuID = a.StuID
medium gold: SELECT distinct T1.Fname, T1.Lname, T1.major, T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid

eval_err_num:183
extra pred: SELECT s.LName, s.FName, s.Age, a.Major FROM Student s JOIN Has_Pet a ON s.StuID = a.StuID WHERE a.PetType != 'cat'
extra gold: SELECT Fname, Lname, major, age FROM student WHERE stuid NOT IN  ( SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' ) 

eval_err_num:184
easy pred: SELECT COUNT(*) FROMDogs
easy gold: SELECT count ( * )  FROM Dogs

eval_err_num:185
easy pred: SELECT KACEY.age FROMDogs KACEY
easy gold: SELECT age FROM Dogs where name  =  "Kacey"

eval_err_num:186
medium pred: SELECT breed_code, name, weight FROMDogs WHERE weight = ( SELECT MAX(weight) FROMDogs )
medium gold: SELECT name FROM Dogs order by weight desc limit 1

eval_err_num:187
easy pred: SELECT size_code FROMDogs WHERE breed_code = 'BUL'
easy gold: SELECT size_code FROM Dogs where breed_code  =  "BUL"

medium pred: SELECT Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,HeadOfState,Capital,Code2 FROM country ORDER BY population DESC LIMIT 3
medium gold: SELECT Name FROM country ORDER BY Population ASC LIMIT 3

medium pred: SELECT Name, SurfaceArea FROM country GROUP BY Name ORDER BY SurfaceArea DESC LIMIT 1
medium gold: SELECT Name FROM country ORDER BY surfacearea desc LIMIT 1

eval_err_num:188
easy pred: SELECT COUNT(*) as total_population FROM ite_sequence WHERE name = 'Antarctica'
easy gold: SELECT population from country where name  =  "Antarctica"

eval_err_num:189
hard pred: SELECT COUNT(*) FROM "Students"."student_id" WHERE "Degree_Programs"."degree_program_id" = '1'
hard gold: SELECT count ( * )  FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'

eval_err_num:190
hard pred: SELECT * FROM "Students"."student_id" WHERE "Students"."student_id" = 1
hard gold: SELECT t1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'

eval_err_num:191
hard pred: SELECT * FROM "students" WHERE "student_id" = 9
hard gold: SELECT DISTINCT t1.first_name, t1.middle_name, t1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE t1.student_id  =  9

eval_err_num:192
hard pred: SELECT * FROM "students" WHERE "student_id" = 7
hard gold: SELECT DISTINCT t1.first_name, t1.middle_name, t1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE t1.student_id  =  7

eval_err_num:193
hard pred: SELECT 课程名称, 学生人数 FROM "students"."student_courses" WHERE 学生人数 = 1
hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name, T3.degree_summary_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'

eval_err_num:194
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: SELECT DISTINCT T3.degree_summary_description FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id

eval_err_num:195
hard pred: SELECT * FROM "students"."student_id" WHERE "students"."student_id" = '1' AND "students"."class" = 'bachelor'
hard gold: SELECT DISTINCT T1.student_ID FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'

eval_err_num:196
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'

eval_err_num:197
easy pred: SELECT COUNT(*) AS num_makes FROM "car_makers" WHEREMaker = 'Chevrolet'
easy gold: SELECT count ( DISTINCT Make )  FROM CAR_NAMES WHERE Model  =  'chevrolet'

eval_err_num:198
easy pred: SELECT COUNT(*) AS num_models FROM "model_list"
easy gold: SELECT count ( DISTINCT Model )  FROM CAR_NAMES

eval_err_num:199
hard pred: SELECT Model, COUNT(*) AS num_makes FROM "car_names" GROUP BY Model ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count ( DISTINCT Make )  DESC LIMIT 1

eval_err_num:200
medium pred: SELECT Name, Course_ID FROM teacher WHERE Teacher_ID IN (SELECT Course_ID FROM course)
medium gold: SELECT T2.Name, T1.course_id FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID

medium pred: SELECT Teacher_ID, COUNT(*) FROM course_arrange WHERE Course_ID IN (SELECT Course_ID FROM course)
medium gold: SELECT T2.Name ,  COUNT ( * )  FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID GROUP BY T2.Name

eval_err_num:201
medium pred: select * from "conductor" where "Conductor_ID" in (select "Conductor_ID" from "performance"); select * from "conductor" where "Conductor_ID" in (select "Conductor_ID" from "performance"); select * from "performance" where "Type" = ' audition'; select * from "performance" where "Type" = ' audition'
medium gold: SELECT date FROM performance WHERE TYPE LIKE "%audition%"

easy pred: SELECT country_code FROM players WHERE player_id IN (SELECT player_id FROM players WHERE player_id > 50)
easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count ( * )  > 50

eval_err_num:202
medium pred: SELECT region.name FROM city, country WHERE city.CountryCode = country.Code AND city.Name = 'Kabul'
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Kabul"

eval_err_num:203
medium pred: SELECT region.name FROM city, country, region WHERE city.CountryCode = country.Code AND city.Name = 'Herat'
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Herat"

eval_err_num:204
medium pred: SELECT region.name FROM city, country, region WHERE city.CountryCode = country.Code AND city.Name = 'Qenahar'
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Qandahar"

eval_err_num:205
hard pred: select year(year) as year from matches
hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:206
hard pred: select min(year) as year from matches
hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count ( * )  LIMIT 1

eval_err_num:207
hard pred: select count(*) as match_num from matches
hard gold: SELECT YEAR, count ( * )  FROM matches GROUP BY YEAR ORDER BY count ( * )  LIMIT 1

eval_err_num:208
medium pred: select * from table where year = 2016
medium gold: SELECT year, count ( * )  from matches where year  =  2016

eval_err_num:209
easy pred: select count(*) as num_surface from table where surface = 'hard'
easy gold: SELECT count ( * )  from matches where surface  =  "Hard"

eval_err_num:210
easy pred: SELECTMaker, COUNT(*)FROM model_listGROUP BYMaker
easy gold: SELECT  Id  FROM CAR_MAKERS

eval_err_num:211
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: SELECT  Country  FROM CAR_MAKERS

eval_err_num:212
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select avg ( percentage )  from countrylanguage

eval_err_num:213
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: select countrycode from countrylanguage where language  =  "Dutch" order by percentage desc limit 1

eval_err_num:214
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: select avg ( percentage )  from countrylanguage where language  =  "Papiamento"

eval_err_num:215
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: SELECT Level_of_membership FROM visitor WHERE name  =   "Gonzalo Higuaín "

eval_err_num:216
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: SELECT name FROM visitor WHERE Level_of_membership =  5

eval_err_num:217
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: SELECT count ( * )  FROM visitor WHERE Level_of_membership>5

eval_err_num:218
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: SELECT age FROM visitor WHERE Level_of_membership   = 8

eval_err_num:219
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: SELECT count ( * )  FROM visitor WHERE Level_of_membership > 4

eval_err_num:220
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC

eval_err_num:221
extra pred: SQL NOT GET: may be TIMEOUT
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode GROUP BY T1.Name ORDER BY COUNT ( * )  DESC LIMIT 1

eval_err_num:222
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: SELECT count ( * )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode where T1.name  =  "Canada"

eval_err_num:223
medium pred: SQL NOT GET: may be TIMEOUT
medium gold: SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode where T1.name  =  "Canada"

eval_err_num:224
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: SELECT count ( distinct CountryCode )  FROM countrylanguage WHERE Language  =  "Chinese"

eval_err_num:225
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: SELECT NAME FROM country WHERE Continent  =  "North America"

eval_err_num:226
extra pred: select * from `countrylanguage` where `CountryCode` in (select `Code` from `city`)
extra gold: SELECT LANGUAGE FROM countrylanguage WHERE countrycode in  ( SELECT Code FROM country WHERE Continent  =  "North America" )  and IsOfficial  =  "T"

eval_err_num:227
easy pred: select `LifeExpectancy` from `city`
easy gold: SELECT LifeExpectancy FROM country WHERE name  =  "Canada"

eval_err_num:228
medium pred: SELECT COUNT(*) AS num_students_with_more_than_one_pet FROM Has_Pet WHERE StuID IN (SELECT StuID FROM Student) ANDPetID IN (SELECT PetID FROM Pets)
medium gold: SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1

eval_err_num:229
medium pred: SELECT * FROM Student WHERE LName='Alice' AND FName='Bob'
medium gold: SELECT T1.lname, T1.fname  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1

eval_err_num:230
medium pred: SELECT gender FROM table WHERE name='Kim Tracy'
medium gold: SELECT T1.lname, T1.fname, T1.sex  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1

eval_err_num:231
easy pred: SELECT COUNT(*) FROM `country` WHERE Name = 'Asia'
easy gold: select count ( * )  from  ( SELECT region FROM country WHERE Continent   =   "Asia" group by region ) 

eval_err_num:232
easy pred: SELECT COUNT(*) FROM `country` WHERE Name = ' Europe'
easy gold: select count ( * )  from  ( SELECT region FROM country WHERE Continent   =   "Europe" group by region ) 

eval_err_num:233
medium pred: SELECT SUM(float)《10》FROM `country` WHERE Name IN ('Asia', ' Europe')
medium gold: SELECT sum ( SurfaceArea )  FROM country WHERE Continent   =   "Asia" OR Continent   =   "Europe"

eval_err_num:234
medium pred: SELECT COUNT(DISTINCT Template_Type_Code) FROM Ref_Template_Types WHERETemplate_Type_Description='Presentation'
medium gold: SELECT count ( * )  FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"

eval_err_num:235
medium pred: SELECT Template_Type_Code FROM Ref_Template_Types WHERETemplate_Type_Description='Presentation'
medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"

eval_err_num:236
medium pred: SELECT Template_Type_Code FROM Templates WHERE Template_ID IN (SELECTTemplate_IDFROM Ref_Template_Types WHERETemplate_Type_Description='Presentation')
medium gold: SELECT T2.template_id, T2.Template_Type_Code FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code   =  T2.template_type_code WHERE T1.template_type_description   =   "Presentation"

eval_err_num:237
hard pred: SELECT COUNT(DISTINCTDISTINCT t1.course_name) AS num_of_diff_courses FROM Course_Enrollment_Courses t1 INNER JOIN Course_Enrollment_Courses t2 ON t1.course_id = t2.course_id GROUP BY t1.course_id HAVING COUNT(DISTINCTDISTINCT t2.course_name) <= 1
hard gold: SELECT count ( * )   FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:238
hard pred: SELECT t1.course_id, t2.course_name FROM Course_Enrollment_Courses t1 INNER JOIN Course_Enrollment_Courses t2 ON t1.course_id = t2.course_id WHERE t1.course_name IN (SELECT course_name FROM Course_Enrollment_Courses WHERE course_id = (SELECT course_id FROM Course_Enrollment_Courses WHERE course_name = 'my_course' ORDER BY course_id DESC LIMIT 1)) AND t2.course_name IN (SELECT course_name FROM Course_Enrollment_Courses WHERE course_id = (SELECT course_id FROM Course_Enrollment_Courses WHERE course_name = 'my_course' ORDER BY course_id DESC LIMIT 1)) AND t1.course_id > t2.course_id
hard gold: SELECT student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:239
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: SELECT count ( * )  FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  LIMIT 1

eval_err_num:240
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: SELECT  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  LIMIT 1

eval_err_num:241
easy pred: SELECT AVG(t1.course_id) AS avg_student_course_id FROM Course_Enrollment_Courses t1 INNER JOIN Course_Enrollment_Courses t2 ON t1.course_id = t2.course_id GROUP BY t1.course_id
easy gold: SELECT avg ( student_course_id )  FROM Transcript_Contents

eval_err_num:242
hard pred: SELECT property_name FROM ( SELECT property_name, COUNT(*) AS count FROM properties WHERE property_type_code = 'P' AND room_count > 1 GROUP BY property_name ) properties_with_one_room WHERE count > 0
hard gold: SELECT property_name FROM Properties WHERE property_type_code   =   "House" UNION SELECT property_name FROM Properties WHERE property_type_code   =   "Apartment" AND room_count  >  1

eval_err_num:243
extra pred: SELECT t1.column1, t1.column2, COUNT(*) AS total_rooms FROM table t1 INNER JOIN table t2 ON t1.column1 = t2.column1 AND t1.column2 = t2.column2 GROUP BY t1.column1, t1.column2 HAVING COUNT(*) > 1
extra gold: SELECT property_name, room_count FROM Properties WHERE property_type_code   =   "House" UNION SELECT property_name, room_count FROM Properties WHERE property_type_code   =   "Apartment" AND room_count  >  1

eval_err_num:244
medium pred: SELECT AVG( agree_selling_price) AS average_agreed_sell_price FROM table WHERE property_type_code = 'P' AND room_count > 1
medium gold: SELECT avg ( agreed_selling_price )  FROM Properties WHERE property_type_code   =   "House" AND room_count  >  1

eval_err_num:245
easy pred: SELECT COUNT(*) as num_airports FROM airports
easy gold: SELECT count ( * )  from airports

eval_err_num:246
easy pred: SELECT COUNT(*) as num_ departing_flights FROM flights
easy gold: SELECT count ( distinct sourceairport )  from flights

eval_err_num:247
medium pred: SELECT COUNT(*) as num_ arrive_in_asy FROM flights WHERE SourceAirport = 'ASY'
medium gold: SELECT count ( * )  from flights where destairport like "%ASY%"

eval_err_num:248
extra pred: SELECT COUNT(*) as num_ coming_from_APG, COUNT(*) as num_ coming_from_ABR FROM flight WHERE SourceAirport = 'APG' AND DestAirport = 'ABR'
extra gold: SELECT count ( * )  from flights where destairport like "%ASY%" and sourceairport like "%APG%" UNION SELECT count ( * )  from flights where destairport like "%ASY%" and sourceairport like "%ABR%"

eval_err_num:249
medium pred: select count(*) from "car_makers" where "Country" = " Germany"
medium gold: SELECT count ( * )  FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'germany'

eval_err_num:250
medium pred: select * from "car_names"
medium gold: SELECt T1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'germany'

eval_err_num:251
medium pred: select count(*) from "cars_data" where "Id" = "usa"
medium gold: SELECt count ( T1.maker )  FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'

eval_err_num:252
medium pred: select * from "model_list"
medium gold: SELECt T1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'

eval_err_num:253
medium pred: SELECT first_name, last_name, state FROMOwners
medium gold: SELECT first_name ,  last_name, state FROM Owners

eval_err_num:254
medium pred: SELECT first_name, last_name, email FROMOwners
medium gold: SELECT first_name ,  last_name, email_address FROM Owners

eval_err_num:255
medium pred: SELECT first_name, last_name, email FROMOwners WHERE state LIKE '%North%'
medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'

eval_err_num:256
medium pred: SELECT City FROM "employee" WHERE Employee_ID <= 30 AND City = '多个城市'
medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count ( * )   >  1

eval_err_num:257
medium pred: SELECT City FROM "employee" WHERE Employee_ID >= 30 AND City = '多个城市'
medium gold: SELECT city FROM employee WHERE age  >  30 GROUP BY city HAVING count ( * )   >  1

eval_err_num:258
medium pred: SELECT Name, Age FROM "employee" WHERE Employee_ID >= 30
medium gold: SELECT Name, Age FROM employee WHERE age  >  30

eval_err_num:259
medium pred: SELECT Name, Age FROM "employee" WHERE Employee_ID <= 30
medium gold: SELECT Name, Age FROM employee WHERE age  <  30

eval_err_num:260
easy pred: SELECT City FROM "employee" WHERE Employee_ID <= 29
easy gold: SELECT City FROM employee WHERE age  <  29

eval_err_num:261
easy pred: select count(distinct owner_id) fromDogs
easy gold: SELECT count ( * )  FROM Owners

eval_err_num:262
medium pred: select age fromDogs order by age asc limit 1
medium gold: SELECT age FROM Dogs ORDER BY age ASC LIMIT 1

eval_err_num:263
medium pred: select name fromDogs where age = 1
medium gold: SELECT name FROM Dogs ORDER BY age ASC LIMIT 1

eval_err_num:264
medium pred: select breed_code fromBreeds where name = 'Evangeline'
medium gold: SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Evangeline"

eval_err_num:265
hard pred: SELECT singer_id FROMsinger WHERE singer_id NOT IN (SELECT song_id FROM song)
hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN  ( SELECT Singer_ID FROM song ) 

eval_err_num:266
medium pred: SELECT Name FROM "singer" WHERE birth_year IN (1948, 1949)
medium gold: SELECT Name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949

eval_err_num:267
medium pred: SELECT Citizenship FROM "singer" WHEREinger_id=('1' OR '2') AND name='Alain' AND birth_year<=2000
medium gold: SELECT Citizenship FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949

eval_err_num:268
extra pred: SELECT inger_id, Net_ Worth_Millions FROM "singer" WHERE birth_year IN (1948, 1949) GROUP BY inger_id ORDER BY Net_ Worth_Millions DESC LIMIT 1
extra gold: SELECT name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions desc limit 1

eval_err_num:269
extra pred: SELECT * FROM "singer" WHERE Net_ Worth_Millions > 30000000
extra gold: SELECT name,Net_Worth_Millions FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions desc limit 1

eval_err_num:270
extra pred: SELECT Net_ Worth_ Millions FROM "singer" WHERE birth_year IN (1948, 1949) AND inger_id NOT IN (SELECT inger_id FROM "singer" WHERE Net_ Worth_ Millions > 0)
extra gold: SELECT name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions limit 1

eval_err_num:271
extra pred: SELECT COUNT(*) FROM "battle" WHERE "bulgarian_commander" NOT IN (SELECT "latin_commander" FROM "ship") AND "tonnage" = 225
extra gold: SELECT count ( * )  FROM battle WHERE id NOT IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 

eval_err_num:272
hard pred: SELECT COUNT(*) FROM "ship" WHERE " Lost_in_battle" = 1 AND "tonnage" = 225
hard gold: SELECT count ( * )  FROM battle WHERE id IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 

eval_err_num:273
easy pred: SELECT COUNT(*) FROM "ship" WHERE "tonnage" = 225
easy gold: SELECT count ( * )  FROM ship WHERE tonnage   =   '225'

eval_err_num:274
hard pred: SELECT b.name AS battle_name, c.name AS death_name, d.name AS caused_by_ship_name FROM "battle" AS b INNER JOIN "ship" AS c ON b.id = c. Lost_in_battle INNER JOIN " Death" AS d ON c.id = d.Causes_by_ship_id WHERE d.name = 'The Ship with a tonnage of 225'
hard gold: SELECT result FROM battle WHERE id IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 

eval_err_num:275
hard pred: SELECT CountryName FROM countries WHERE CountryId = 1、2 或者 3
hard gold: SELECT countryname FROM countries WHERE countryid = 1 or  countryid = 2 or countryid = 3 

eval_err_num:276
easy pred: SELECT ModelId FROM car_makers WHERE Maker = 'AAC'
easy gold: SELECT modelid FROM model_list WHERE model  =  "amc"

eval_err_num:277
extra pred: SELECT country.id, country.name FROM countries AS country INNER JOIN model_list ON country.Continent = model_list.Continent INNER JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'AAC' AND car_makers.Model = 'Fiat' GROUP BY country.id, country.name HAVING COUNT(DISTINCT car_makers.Id) > 3
extra gold: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country GROUP BY T1.countryId HAVING count ( * )   >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T3.Model   =   'fiat'

eval_err_num:278
medium pred: SELECT t1. money_rank, t1. earnings from poker_player t1 join people t2 on t1.people_id = t2.people_id order by t1. earnings limit 1
medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1

eval_err_num:279
medium pred: SELECT MAX( People_ID ) AS highest_ earning from people
medium gold: SELECT People_ID FROM poker_player ORDER BY Earnings DESC LIMIT 1

medium pred: SELECT Best_Finish from poker_player
medium gold: SELECT Best_Finish FROM poker_player ORDER BY Earnings DESC LIMIT 1

eval_err_num:280
medium pred: SELECT MAX(Earnings) AS highest_ earning from poker_player
medium gold: SELECT Earnings FROM poker_player order by Earnings desc limit 1

eval_err_num:281
easy pred: SELECT COUNT(*) as num_orchestrals FROM "conductor" WHERE "Conductor_ID" = (SELECT "Conductor_ID" FROM "orchestra")
easy gold: SELECT COUNT ( DISTINCT Orchestra )  FROM orchestra

eval_err_num:282
extra pred: SELECT COUNT(*) as num_no_performance FROM "performance" WHERE "Orchestra_ID" = (SELECT "Orchestra_ID" FROM "conductor") AND "Type" = 'No performance'
extra gold: SELECT COUNT ( Orchestra )  FROM orchestra WHERE Orchestra_ID NOT IN  ( SELECT Orchestra_ID FROM performance ) 

eval_err_num:283
extra pred: SELECT "id", "name" FROM "table" WHERE "table"."id" = (SELECT "id" FROM "table")
extra gold: SELECT Orchestra_ID, Orchestra FROM orchestra WHERE Orchestra_ID NOT IN  ( SELECT Orchestra_ID FROM performance ) 

eval_err_num:284
extra pred: SELECT STdium.Name, STdium.Location FROM stadium INNER JOIN concert ON STdium.Stadium_ID = concert.Stadium_ID INNER JOIN singer_in_concert ON concert.Stadium_ID =singer_in_concert.Stadium_ID WHERE concert.Year IN (2014, 2015)
extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.Year   =   2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.Year   =   2015

eval_err_num:285
medium pred: SELECT year(concert.Year) as Year FROM concert INNER JOIN singer_in_concert ON concert.Year =singer_in_concert.Year WHERE concert.Name='Super Bootcamp'
medium gold: SELECT year from concert where concert_name like "%Super bootcamp%"

eval_err_num:286
medium pred: SELECT * FROM "table" WHERE "table"."Name" = 'Auditions'
medium gold: SELECT year from concert where concert_name like "%Auditions%"

eval_err_num:287
hard pred: SELECT "table"."Stadium_ID" FROM table WHERE "table"."Name" = 'Auditions'
hard gold: SELECT T1.name from stadium as T1 join  concert as T2 on T1.stadium_id  =  T2.stadium_id where T2.concert_name like "%Auditions%"

eval_err_num:288
hard pred: SELECT STdium.Name, STdium.Location FROM stadium INNER JOIN concert ON STdium.Stadium_ID = concert.Stadium_ID INNER JOIN singer_in_concert ON concert.Stadium_ID =singer_in_concert.Stadium_ID WHERE STdium.Year IN (2014, 2015) GROUP BY STdium.Name, STdium.Location HAVING COUNT(*) >= 2
hard gold: SELECT T2.name , T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 or T1.Year  =  2015

eval_err_num:289
medium pred: SELECT COUNT(*) AS num_flights FROM Flights WHERE airline = 'United Airlines' AND sourceAirport = 'New York City' AND destinationAirport = ' Los Angeles International Airport'
medium gold: SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines"

eval_err_num:290
medium pred: SELECT COUNT(*) AS num_dest_Airports FROM Flights WHERE airline = 'United Airlines' AND sourceAirport = 'New York City' AND destinationAirport = ' Los Angeles International Airport'
medium gold: SELECT count ( distinct T2.DestAirport )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines"

eval_err_num:291
medium pred: SELECT COUNT(*) AS num_ Flights FROM Flights WHERE sourceAirport = 'New York City' AND destinationAirport = 'ASY'
medium gold: SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines" AND T2.DestAirport   =   "ASY"

eval_err_num:292
extra pred: SELECT name, id FROM ( SELECT semester_name, COUNT(*) AS num_students FROM Semesters GROUP BY semester_name ORDER BY COUNT(*) DESC LIMIT 1 ) t WHERE t.num_students = ( SELECT COUNT(*) FROM students WHERE student_id = ( SELECT student_id FROM students ORDER BY COUNT(*) DESC LIMIT 1 ) )
extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id   =   T2.semester_id GROUP BY T1.semester_id ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:293
medium pred: SELECT c.LifeExpectancy, u.Name AS GovernmentForm, GROUP_CONCAT(s.Name) AS Systems FROM city c INNER JOIN ite_sequence s ON c.ID = s.name INNER JOIN country language c2 ON c.Code = c2.CountryCode INNER JOIN country c ON c2.CountryCode = c.Code INNER JOIN table u ON u.ID = c.Population GROUP BY c.LifeExpectancy, u.Name, s.Name, c2.Language, c.HeadOfState, c.Capital, c2.Region ORDER BY LifeExpectancy DESC
medium gold: SELECT GovernmentForm, avg ( LifeExpectancy )  FROM country GROUP BY GovernmentForm

eval_err_num:294
easy pred: SELECT u.Name AS GovernmentForm, MAX(c.LifeExpectancy) AS AverageLifeExpectancy FROM table u INNER JOIN city c ON u.ID = c. Population INNER JOIN ite_sequence s ON c.ID = s.name INNER JOIN country language c2 ON c.Code = c2.CountryCode INNER JOIN country c ON c2.CountryCode = c.Code GROUP BY u.Name, c.LifeExpectancy HAVING MAX(c.LifeExpectancy) > 72
easy gold: SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

eval_err_num:295
medium pred: SELECT s.Name AS City, s.Population, u.Name AS GovernmentForm, GROUP_CONCAT(s.Name) AS Systems FROM ite_sequence s INNER JOIN city c ON c.ID = s.ID INNER JOIN city c1 ON c1.ID = c. District INNER JOIN country language c2 ON c2.CountryCode = c.Code INNER JOIN country c ON c2.CountryCode = c.Code INNER JOIN table u ON u.ID = c.Population GROUP BY s.Name, s.Population, u.Name ORDER BY s.Name
medium gold: SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

eval_err_num:296
hard pred: SELECT id FROM "TV_Channel" WHERE id NOT IN (SELECT id FROM "Cartoon" WHERE name = 'Ben Jones')
hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by   =   'Ben Jones'

eval_err_num:297
hard pred: SELECT channel FROM "Cartoon" WHERE name = 'Ben Jones' AND id NOT IN (SELECT id FROM "TV_Channel" WHERE id = 'Ben Jones')
hard gold: SELECT id FROM TV_Channel where id in  ( SELECT channel FROM cartoon WHERE directed_by   =   'Ben Jones' ) 

eval_err_num:298
easy pred: SELECT title FROM "Cartoon" WHERE name = 'cartoons' AND channel NOT IN (SELECT channel FROM "TV_Channel" WHERE id = 'Ben Jones')
easy gold: SELECT Title FROM Cartoon where directed_by   =   'Ben Jones'

easy pred: select document_id from documents
easy gold: SELECT document_id FROM Paragraphs

eval_err_num:299
medium pred: select document_id, count(paragraph_id) from documents group by document_id
medium gold: SELECT document_id ,  count ( * )  FROM Paragraphs GROUP BY document_id

eval_err_num:300
medium pred: select * from table order by document_id
medium gold: SELECT document_id ,  count ( * )  FROM Paragraphs GROUP BY document_id ORDER BY document_id

eval_err_num:301
medium pred: SELECT owner_id, zip_code FROMOwners
medium gold: SELECT  owner_id,zip_code from Owners

eval_err_num:302
medium pred: CREATE TABLE treatments_1s ( owner_id INTEGER PRIMARY KEY, dog_id INTEGER NOT NULL, cost_of_ Treatment DECIMAL(19,4) )
medium gold: SELECT T1.owner_id , T2.dog_id ,T3.cost_of_treatment  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id

eval_err_num:303
extra pred: SELECT owner_name, owner_id FROMDogs GROUP BY owner_name, owner_id ORDER BY total_amount DESC LIMIT 1
extra gold: SELECT  T1.first_name,T1.owner_id  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum ( T3.cost_of_treatment )  DESC LIMIT 1

eval_err_num:304
easy pred: SELECT last_name FROM Dogs WHERE owner_name = ' Jaclyn'
easy gold: SELECT last_name  from Owners where first_name = "Jaclyn"

eval_err_num:305
extra pred: SELECT owner_id, zip_code FROM Dogs WHERE owner_name = 'Jaclyn Stoltenberg'
extra gold: SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum ( T3.cost_of_treatment )  DESC LIMIT 1

eval_err_num:306
medium pred: UPDATE Flights SET DestAirportCode = (SELECT AirportCode FROM airports WHERE airline = Flights.Airline AND airport = Flights.AirportCode)
medium gold: SELECT FlightNo,DestAirport FROM Flights

eval_err_num:307
hard pred: SELECT COUNT(*) AS Num FROM ( SELECT Airline, AirportCode, COUNT(*) AS Num FROM Flights WHERE SourceAirport = 'Aberdeen' OR DestAirport = 'Aberdeen' AND航班日期 >= 日期 AND航班日期 <= 日期 + 8 GROUP BY Airline, AirportCode ) subquery
hard gold: SELECT count ( * )  FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.city   =   "Aberdeen" OR T2.city   =   "Abilene"

eval_err_num:308
hard pred: SELECT City, AirportCode, COUNT(*) AS Num FROM Flights GROUP BY City, AirportCode ORDER BY Num DESC LIMIT 1
hard gold: SELECT DESTAIRPORT FROM Flights GROUP BY DESTAIRPORT order by count ( * )  desc limit 1

medium pred: SELECT COUNT(*) FROM Flights WHERE SourceAirport = 'Aberdeen' AND DestAirport = 'Aberdeen'
medium gold: SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.City   =   "Aberdeen"

eval_err_num:309
medium pred: SELECT COUNT(*) FROM Flights WHERE SourceAirport = 'Aberdeen' AND DestAirport <> 'Aberdeen'
medium gold: SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.sourceAirport   =   T2.AirportCode WHERE T2.City   =   "Aberdeen"

eval_err_num:310
extra pred: SELECT * FROM `city` WHERE `Name` NOT IN ( SELECT Name FROM `country` WHERE `Continent` = 'Asia' AND `Population` < ( SELECT MAX(`Population`) FROM `city` WHERE `CountryCode` = 'AF' ) )
extra gold: SELECT Name FROM country WHERE Continent   =   "Africa"  AND population  <   ( SELECT max ( population )  FROM country WHERE Continent   =   "Asia" ) 

eval_err_num:311
easy pred: SELECT TABLE_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = 'database_name' AND COLUMN_NAME = 'column_name' AND TABLE_SCHEMA_NAME NOT IN ('table_name1', 'table_name2', 'table_name3') AND TABLE_NAME = 'rubia' AND COLUMN_NAME IS NOT NULL
easy gold: SELECT continent FROM country WHERE name  =  "Aruba"

eval_err_num:312
easy pred: SELECT LocalName FROM `city` WHERE CountryCode = 'ANGola'
easy gold: SELECT localname FROM country WHERE name  =  "Angola"

eval_err_num:313
easy pred: SELECT SUM(CASE WHEN `Continent` = 'Asia' THEN `SurfaceArea` END) AS `AFGHANISTAN_SurfaceArea`, SUM(CASE WHEN `Continent` = '南极洲' THEN `SurfaceArea` END) AS `AFGHANISTAN_南极洲SurfaceArea`, SUM(CASE WHEN `Continent` = '北美洲' THEN `SurfaceArea` END) AS `AFGHANISTAN_北美洲SurfaceArea`, SUM(CASE WHEN `Continent` = '南美洲' THEN `SurfaceArea` END) AS `AFGHANISTAN_南美洲SurfaceArea`, SUM(CASE WHEN `Continent` = '非洲' THEN `SurfaceArea` END) AS `AFGHaniSTAN_非洲SurfaceArea`, SUM(CASE WHEN `Continent` = '亚洲' THEN `SurfaceArea` END) AS `AFGHaniSTAN_亚洲SurfaceArea` FROM `country` WHERE `Code` = 'AF'
easy gold: SELECT SurfaceArea FROM country WHERE name  =  "Afghanistan"

eval_err_num:314
easy pred: SELECT Code FROM `country` WHERE Code = 'ARUBA'
easy gold: SELECT Code FROM country WHERE name  =  "Aruba"

eval_err_num:315
hard pred: SELECT Breeds.breed_name,Charges.charge_type,Sizes.size_code,Treatment_Types.Treatment_type_description,Owners.owner_id,Professionals.role_code,Dogs.dog_id,Treatments.Treatment_id,COUNT(*) FROM Breeds INNER JOINCharges ON Breeds.breed_code =Charges.breed_code INNER JOINSizes ON Breeds.breed_code =Sizes.breed_code INNER JOINTreatment_Types ON Breeds.breed_code =Treatment_Types.breed_code INNER JOINOwners ON Breeds.owner_id =Owners.owner_id INNER JOINProfessionals ONOwners.owner_id =Professionals. Professional_id WHERE Breeds.breed_code IS NULL GROUP BY Breeds.breed_code,Charges.charge_type,Sizes.size_code,Treatment_Types.Treatment_type_description,Owners.owner_id,Professionals.role_code,Dogs.dog_id,Treatments.Treatment_id HAVING COUNT(*) = 0
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

eval_err_num:316
easy pred: SELECT Taryn.email_address FROM Breeds AS Breed INNER JOINCharges ASCharge ON Breed.breed_code =Charge.breed_code INNER JOINSizes ASSize ONCharge.size_code =Size.size_code INNER JOINTreatment_Types ASTreatment ONSize.size_code =Treatment. Treatment_type_code INNER JOINOwners ASOwner ONOwner.owner_id =Owner.owner_id INNER JOINProfessionals ASProfessional ONOwner.owner_id =Professional. Professional_id WHEREProfessional.role_code = 'Professional' GROUP BYProfessional. role_code,Owner.owner_id,Treatment. treatment_type_code HAVING COUNT(*) = 1
easy gold: SELECT email_address FROM Professionals WHERE First_Name  =  "Taryn"

eval_err_num:317
easy pred: SELECT state FROM Breeds WHERE breed_code = ' Jayson'
easy gold: SELECT state FROM Professionals WHERE First_Name  =  "Jayson"

eval_err_num:318
extra pred: SELECTMaker, Model, Make from cars_data WHERE Year = 1970
extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker JOIN CAR_NAMES AS T3 ON T2.model   =   T3.model JOIN CARS_DATA AS T4 ON T3.MakeId   =   T4.id WHERE T4.year   =   '1970'

eval_err_num:319
extra pred: SELECTModel, Make from cars_data WHERE Year = 1970
extra gold: SELECT T3.model, T3.make FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker JOIN CAR_NAMES AS T3 ON T2.model   =   T3.model JOIN CARS_DATA AS T4 ON T3.MakeId   =   T4.id WHERE T4.year   =   '1970'

eval_err_num:320
extra pred: SELECTMaker.FullName, Maker.Country from car_makers asMaker join countries asCountry onMaker.Country =Country.Continent WHEREMaker.Year = 1970 ANDCountry.Continent = 'United States'
extra gold: SELECT T1.Fullname FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970' ORDER BY T4.weight DESC limit 1

eval_err_num:321
medium pred: SELECT Title, Directed_by, Channel FROM cartoons WHERE Directed_by = 'Ben Jones'
medium gold: SELECT channel, id FROM cartoon

hard pred: SELECT * FROM TV_Channel WHERE Language != ' Italian'
hard gold: SELECT series_name FROM TV_Channel EXCEPT SELECT series_name FROM TV_channel WHERE language  =  'Italian'

eval_err_num:322
hard pred: SELECT id FROM TV_Channel WHERE Directed_by = 'Ben Jones'
hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'

eval_err_num:323
easy pred: SELECT AVG(Number_products) AS avg_number_of_products FROM "shop""
easy gold: select avg ( Number_products )  from shop

eval_err_num:324
easy pred: SELECT Name FROM "shop" WHERE Number_products > 6685
easy gold: select Name from shop where Number_products > 6685

eval_err_num:325
easy pred: SELECT COUNT(*) AS total_stores FROM "shop"
easy gold: select count ( * )  from shop

eval_err_num:326
extra pred: SELECT City FROM flights WHERE COUNT(*) = (SELECT COUNT(*) FROM airports)
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode   =   T2.SourceAirport GROUP BY T1.City ORDER BY count ( * )  ASC LIMIT 1

eval_err_num:327
easy pred: SELECTFlightNo FROM flights WHERE Airlines = 'APG' AND FlightNo > 0
easy gold: SELECT FlightNo FROM flights WHERE SourceAirport = "APG"

eval_err_num:328
extra pred: `查询语句包围:
extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND IsOfficial   =   "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch" AND IsOfficial   =   "T"

eval_err_num:329
medium pred: `查询语句包围:
medium gold: SELECT T2.language FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T1.name  =  "Belgium" and T2.isofficial  =  "T"

eval_err_num:330
medium pred: `查询语句包围:
medium gold: SELECT T1.name FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.language  =  "Arabic"

eval_err_num:331
medium pred: `查询语句包围:
medium gold: SELECT T2.language FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T1.name  =  "Egypt"

eval_err_num:332
medium pred: `查询语句包围:
medium gold: SELECT count ( T1.name )  FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.Language  =  "Arabic" and T2.isOfficial  =  "T"

eval_err_num:333
medium pred: `查询语句包围:
medium gold: SELECT T1.name FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.Language  =  "Arabic" and T2.isOfficial  =  "T"

eval_err_num:334
medium pred: SELECT COUNT(*) as num_cities, SUM(population) as total_population FROM city GROUP BY countryCode HAVING COUNT(*) > 0 GO SELECT * FROM ite_sequence WHERE name = 'city_sequence' GO SELECT * FROM country WHERE Code = 'Country' GO SELECT * FROM countryLanguage WHERE CountryCode = 'Country'
medium gold: SELECT name,population FROM country WHERE Continent   =   "Africa"

medium pred: SELECT Name, population FROM country WHERE Code = 'Asia' GROUP BY Code HAVING COUNT(*) > 0
medium gold: SELECT name,population FROM country WHERE Continent   =   "Asia"

extra pred: SELECT Name FROM country WHERE Code = 'Asia' GROUP BY Name HAVING SUM(population) > (SELECT SUM(population) FROM country WHERE Code = ' Africa' AND population > 0)
extra gold: SELECT Name FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 

eval_err_num:335
extra pred: SELECT population FROM table WHERE code = 'Country' GROUP BY Code HAVING COUNT(*) > 0
extra gold: SELECT Name,population FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 

eval_err_num:336
extra pred: SELECT * FROM table WHERE code = 'Country' GROUP BY Code HAVING COUNT(*) > 0 GO SELECT * FROM country_language WHERE countryCode = 'Country' GO
extra gold: SELECT Name,GovernmentForm FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 

hard pred: SELECT Name, LifeExpectancy FROM country WHERE Code = '泰国'
hard gold: SELECT Name FROM country WHERE Continent   =   "Asia" ORDER BY LifeExpectancy LIMIT 1

hard pred: SELECT Name, LifeExpectancy FROM country WHERE Code NOT IN (SELECT Code FROM country WHERE Code = '非洲')
hard gold: SELECT Name FROM country WHERE Continent   =   "Africa" ORDER BY LifeExpectancy LIMIT 1

easy pred: SELECT GNP FROM country WHERE Code = '阿富汗'
easy gold: SELECT GNP FROM country WHERE name = "Afghanistan"

eval_err_num:337
easy pred: SELECTpopulation FROM country WHERE Code = '阿富汗'
easy gold: SELECT Population FROM country WHERE name = "Afghanistan"

eval_err_num:338
easy pred: SELECT Earnings FROM "poker_player" WHEREPoker_Player_ID=("Poker_Player_ID" AND "Final_Table_Made"="final_table_made") AND Best_Finish='win'
easy gold: SELECT Earnings FROM poker_player

eval_err_num:339
easy pred: SELECT Earnings, ROW_NUMBER() OVER (ORDER BY Earnings DESC) AS rank FROM "poker_player"
easy gold: SELECT Earnings FROM poker_player order by Earnings desc

eval_err_num:340
medium pred: SELECT final_table_made, Earnings FROM "poker_player" WHEREPoker_Player_ID=("Poker_Player_ID" AND "Final_Table_Made"="final_table_made") AND Earnings<=("Earnings" AND "Final_Table_Made"="final_table_made") ORDER BY Earnings DESC LIMIT 1
medium gold: SELECT Final_Table_Made FROM poker_player order by Earnings asc limit 1

eval_err_num:341
medium pred: SELECT final_table_made, Earnings FROM "poker_player" WHEREPoker_Player_ID=("Poker_Player_ID" AND "Earnings"="Earnings") AND "Final_Table_Made"="final_table_made" ORDER BY Earnings DESC LIMIT 1
medium gold: SELECT Final_Table_Made FROM poker_player order by Earnings desc limit 1

easy pred: SELECT Template_ID, Document_ID FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID
easy gold: SELECT template_id FROM Documents

medium pred: SELECT Template_ID, Document_ID FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID
medium gold: SELECT template_id ,Document_ID FROM Documents

hard pred: SELECT Template_ID FROM Templates WHERE Template_ID NOT IN ( SELECT Document_ID FROM Documents )
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

eval_err_num:342
medium pred: SELECT t.Template_Type_Code, s.Document_ID FROM Templates t JOIN Document_scores s ON t.Template_ID = s.Template_ID JOIN Ref_Template_Types tt ON t.Template_Type_Code = tt.Template_Type_Code WHERE s.Document_ID NOT IN ( SELECT Document_ID FROM Documents )
medium gold: SELECT T1.template_id ,T1.Template_Type_Code FROM Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID

eval_err_num:343
hard pred: SELECT COUNT(*) FROM ( SELECT dog_id, COUNT(*) AS count FROMTreatments GROUP BY dog_id ) AS t
hard gold: SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

eval_err_num:344
hard pred: SELECT age FROM ( SELECT age, COUNT(*) AS count, SUM(age) OVER () AS total_age FROMDogs WHERE age <= 18 GROUP BY age HAVING COUNT(*) >= 1 ) AS t WHERE total_age = ( SELECT SUM(total_age) FROM ( SELECT COUNT(*) AS count, SUM(age) OVER () AS total_age FROMDogs WHERE age <= 18 GROUP BY age HAVING COUNT(*) >= 1 ) AS t2 )
hard gold: SELECT min ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

eval_err_num:345
hard pred: SELECT age FROM ( SELECT age, COUNT(*) AS count, SUM(age) OVER () AS total_age FROMDogs WHERE age <= 18 GROUP BY age HAVING COUNT(*) >= 1 ) AS t WHERE age = ( SELECT MAX(age) FROM ( SELECT age, COUNT(*) AS count, SUM(age) OVER () AS total_age FROMDogs WHERE age <= 18 GROUP BY age HAVING COUNT(*) >= 1 ) AS t2 )
hard gold: SELECT max ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

eval_err_num:346
hard pred: SELECT AVG(age) FROM ( SELECT age, COUNT(*) AS count, SUM(age) OVER () AS total_age FROMDogs WHERE age <= 18 GROUP BY age HAVING COUNT(*) >= 1 ) AS t WHERE age <= 18
hard gold: SELECT avg ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 

eval_err_num:347
easy pred: SELECT COUNT(DISTINCT semester_name) AS different_semesters FROM courses
easy gold: SELECT distinct semester_name FROM Semesters

eval_err_num:348
hard pred: SELECT semester_name FROM courses WHERE semester_id NOT NULL AND student_enrolment_id NOT NULL
hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN (  SELECT semester_id FROM Student_Enrolment  ) 

eval_err_num:349
extra pred: SELECT semester_id, semester_description FROM courses WHERE semester_id NOT NULL
extra gold: SELECT semester_id,semester_name,semester_description FROM Semesters WHERE semester_id NOT IN (  SELECT semester_id FROM Student_Enrolment  ) 

easy pred: select count(distinct sex) from Student
easy gold: SELECT count ( * ) FROM student WHERE Sex = "F"

eval_err_num:350
medium pred: select t1.lname, t1.fname from Student t1 join Has_Pet t2 on t1.StuID = t2.StuID where t2.pet_age = (select min(pet_age) from Pets)
medium gold: SELECT LName,Fname  FROM student order  by  Age  limit 1

extra pred: select avg(age) from Student where StuID not in (select StuID from Has_Pet)
extra gold: SELECT avg ( age )  FROM student WHERE stuid NOT IN  ( SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid ) 

eval_err_num:351
easy pred: select city_code from table where StuID = 1003
easy gold: SELECT city_code  FROM student WHERE StuID = 1003

medium pred: SELECT Channel FROM TV_Series WHERE id IN ( SELECT id FROM TV_Channel WHERE Series_name = 'Cartoon' AND Country = '北上' ) AND id IN ( SELECT id FROM TV_Channel WHERE Series_name = 'Cartoon' AND Language = '中文' ) AND id IN ( SELECT id FROM TV_Channel WHERE Series_name = 'Cartoon' AND Content = '卡通片' ) AND id IN ( SELECT id FROM TV_Channel WHERE Series_name = 'Cartoon' AND Pixel_aspect_ratio_PAR = '1.85' ) AND id IN ( SELECT id FROM TV_Channel WHERE Series_name = 'Cartoon' AND Hight_Definition_TV = '高清晰度' ) AND id IN ( SELECT id FROM TV_Channel WHERE Series_name = 'Cartoon' AND Pay_per_view_PPV = '付费点播' ) AND id IN ( SELECT id FROM TV_Channel WHERE Series_name = 'Cartoon' AND Package_Option = '普通包' ) )
medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by   =   'Todd Casey'

eval_err_num:352
easy pred: SELECT Title FROM Cartoon WHERE id IN ( SELECT id FROM TV_Series WHERE Series_name = 'Cartoon' AND id = '123456' )
easy gold: SELECT title FROM cartoon  WHERE written_by   =   'Todd Casey'

eval_err_num:353
easy pred: SELECT COUNT(*) AS num_languages FROM countrylanguage
easy gold: SELECT count ( distinct language )  from countrylanguage

eval_err_num:354
easy pred: SELECT SUM(population) AS population_of_aruba FROM city
easy gold: SELECT population from country where name  =  "Aruba"

eval_err_num:355
easy pred: SELECT SUM(GNP) AS Afghanistan_GNPOld FROM country
easy gold: SELECT GNPOLD from country where name  =  "Afghanistan"

eval_err_num:356
easy pred: select t1.country_code from players t1 join matches t2 on t1.player_id = t2.player_id group by t2.player_id having count(t2.player_id) > 50
easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count ( * )   >  50

eval_err_num:357
easy pred: select t1.country_code from players t1 join matches t2 on t1.player_id = t2.player_id group by t2.player_id having count(t2.player_id) < 40
easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count ( * )   <  40

eval_err_num:358
medium pred: select t1.player_name, t1.first_name, t1.last_name from players t1 join matches t2 on t1.player_id = t2.player_id where t2.country_code = 'AHO'
medium gold: SELECT first_name,last_name FROM players where country_code = 'AHO'

eval_err_num:359
easy pred: select t1.player_id from players t1 join matches t2 on t1.player_id = t2.player_id where t2.country_code = 'AHO'
easy gold: SELECT player_id FROM players where country_code = 'AHO'

eval_err_num:360
easy pred: select t1.hand from players t1 join matches t2 on t1.player_id = t2.player_id where t2.player_id = 206449
easy gold: SELECT hand FROM players where player_id = 206449

eval_err_num:361
easy pred: select count(distinct t2.player_id) from players t1 join matches t2 on t1.player_id = t2.player_id where t2.player_id = '206449'
easy gold: SELECT count ( * )  FROM players where hand = 'U'

eval_err_num:362
hard pred: SELECT Battle.name FROM Battle JOIN ship ON Battle.id =ship. Lost_in_battle WHERE ship.Lost_in_battle = 0
hard gold: SELECT name FROM battle EXCEPT SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel'

eval_err_num:363
hard pred: SELECT Battle.result FROM Battle JOIN ship ON Battle.id =ship. Lost_in_battle WHERE ship.Lost_in_battle = 0
hard gold: SELECT RESULT  FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 

eval_err_num:364
hard pred: SELECT Battle.bulgarian_commander FROM Battle JOIN ship ON Battle.id =ship. Lost_in_battle WHERE ship.Lost_in_battle = 0
hard gold: SELECT bulgarian_commander FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 

eval_err_num:365
hard pred: SELECT Battle.date FROM Battle JOIN ship ON Battle.id =ship. Lost_in_battle WHERE ship.Lost_in_battle = 0
hard gold: SELECT date FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 

eval_err_num:366
hard pred: SELECT Battle. Latin_commander FROM Battle JOIN ship ON Battle.id =ship. Lost_in_battle WHERE ship.Lost_in_battle = 0
hard gold: SELECT  latin_commander  FROM battle where name not in  ( SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle WHERE T2.location   =   'English Channel' ) 

eval_err_num:367
easy pred: SELECT COUNT(*) FROM "store" GROUP BY "Shop_ID" HAVING COUNT(*) > 0
easy gold: SELECT COUNT ( * )  FROM shop

eval_err_num:368
easy pred: SELECT "Shop_ID", SUM(Number_products) AS "Maximum_products" FROM "shop" GROUP BY "Shop_ID" HAVING SUM(Number_products) > ?"Maximum_products": "All_products"
easy gold: SELECT MAX ( Number_products )  FROM shop

eval_err_num:369
easy pred: SELECT "Shop_ID", MIN(Number_products) AS "Minimum_products" FROM "shop" GROUP BY "Shop_ID" HAVING MIN(Number_products) > 0
easy gold: SELECT MIN ( Number_products )  FROM shop

eval_err_num:370
extra pred: SELECT breed_name AS top_rank FROM Breeds ORDER BY breed_name DESC LIMIT 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:371
medium pred: SELECT COUNT(*) AS total_count FROM Breeds WHERE breed_code = ' Bulldog'
medium gold: SELECT count ( * )  FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code where T1.breed_name  =  "Bulldog"

eval_err_num:372
hard pred: SELECT s.lname, s.fname FROM Student s JOIN Has_Pet h ON s. StuID = h.StuID JOIN Pets p ON h.PetID = p.PetID WHERE p.PetType = 'cat' AND s.LName = ' Linda' AND s.FName = ' Linda'
hard gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'dog'

medium pred: SELECT COUNT(*) FROM Pets WHERE PetType = 'all'
medium gold: SELECT count ( T2.StuId )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid

eval_err_num:373
hard pred: SELECT pet_age FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.LName = ' Linda' AND Has_Pet.PetType = 'cat' AND pet_age > 0
hard gold: SELECT T3.pet_age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T1.Fname  =  "Linda"

eval_err_num:374
easy pred: SELECT name FROM "visitor" WHERE level_of_membership > 4
easy gold: SELECT name FROM visitor WHERE Level_of_membership  >  4

eval_err_num:375
medium pred: ALTER TABLE "visitor" add age INT
medium gold: SELECT name, age FROM visitor WHERE Level_of_membership  >  4

eval_err_num:376
medium pred: SELECT *, MIN(age) AS oldest_age FROM "table" ORDER BY age DESC
medium gold: SELECT name ,  age FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC

eval_err_num:377
medium pred: SELECT ID FROM "visit" WHERE Museum_ID = ' Museum1' AND visitor_ID = ' visitor1'
medium gold: SELECT id FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC

eval_err_num:378
medium pred: SELECT first, middle, last FROM students WHERE first IN (SELECT student_id FROM student_enrolment WHERE degree_program_id = 101 AND semester_id = 1 AND student_id = students.student_id) AND last IN (SELECT student_id FROM student_enrolment WHERE degree_program_id = 102 AND semester_id = 2 AND student_id = students.student_id)
medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING count ( * )    =   2

medium pred: SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM students)
medium gold: SELECT T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING count ( * )    =   2

eval_err_num:379
easy pred: SELECT email FROM students WHERE student_id = 4
easy gold: SELECT email_address FROM Students where student_id  =  4

eval_err_num:380
medium pred: SELECT first_day(date_first_registered) AS date_first_registered FROM students WHERE student_id = 4
medium gold: SELECT date_first_registered FROM Students where first_name  =  'Timmothy' and middle_name  =  'Anna' and last_name  =  'Ward'

eval_err_num:381
medium pred: SELECT COUNT(DISTINCT owner_id) AS num_dog_Owners FROM Dogs WHERE breed_code = 'Breeds'
medium gold: SELECT count ( * )  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'

medium pred: SELECT name FROM Dogs WHERE owner_id = 1
medium gold: SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'

eval_err_num:382
medium pred: SELECT name, breed_name FROM Dogs WHERE owner_id = 1
medium gold: SELECT T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   =   'Virginia'

eval_err_num:383
medium pred: SELECT breed_name FROM Breeds WHERE name = 'Bessie'
medium gold: SELECT T2.breed_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Bessie"

eval_err_num:384
medium pred: SELECT size_description FROM Dogs WHERE owner_id = 1 AND breed_code = 'Breeds'
medium gold: SELECT T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Bessie"

eval_err_num:385
easy pred: SELECT COUNT(*) AS num_record_ Companies FROM "conductor" WHERE "Conductor_ID" = 1
easy gold: SELECT count ( Record_Company )  FROM orchestra

eval_err_num:386
easy pred: SELECT COUNT(*) AS num_ Orchestras FROM "orchestra" WHERE "Orchestra_ID" = 1
easy gold: SELECT count ( Orchestra_ID )  FROM orchestra

eval_err_num:387
easy pred: SELECT * FROM "orchestra" ORDER BY "Year_of_Founded" DESC, "Name"
easy gold: select orchestra from orchestra order by Year_of_Founded

eval_err_num:388
easy pred: SELECT * FROM "orchestra" WHERE "Name" = 'Royal Danish Orchestra'
easy gold: select year_of_founded  from orchestra where orchestra = 'Royal Danish Orchestra'

eval_err_num:389
hard pred: SELECT Record_Company FROM "orchestra" GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT ( * )  DESC LIMIT 1

eval_err_num:390
medium pred: SELECT COUNT(*) FROM airlines AS a WHERE a.airline = 'United Airlines' AND a. AirportCode = 'ASY'
medium gold: SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines" AND T2.DestAirport   =   "ASY"

eval_err_num:391
medium pred: SELECT COUNT(*) FROM airlines AS a WHERE a.uid = 1 AND a. AirportCode = 'ASY'
medium gold: SELECT count ( * )  FROM FLIGHTS WHERE airline  =  1 and DestAirport   =   " ASY"

eval_err_num:392
easy pred: SELECT COUNT(*) as total_Volvo_cars from car_makers
easy gold: SELECT count ( * )  FROM CAR_names where model  =  "volvo"

eval_err_num:393
extra pred: SELECT Model, Make from car_names order by Accelerate DESC limit 1
extra gold: SELECT T1.id FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1

eval_err_num:394
extra pred: SELECT Cylinders from cars_data WHERE Model = "Volvo"
extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1

easy pred: SELECT * FROM Friend
easy gold: SELECT count ( * )  FROM Friend

eval_err_num:395
easy pred: SELECT name, grade FROM Highschooler WHERE ID IN (SELECT ID FROM Friend)
easy gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id

eval_err_num:396
medium pred: select semester_id from students where student_id in (select student_id from Student_Enrolment)
medium gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id WHERE degree_summary_name   =   'Master'

eval_err_num:397
medium pred: select degree_summary_description from students where student_id = 14
medium gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE T2.student_id  =  14

eval_err_num:398
hard pred: SELECT Model, miles_per_gal FROM cars_data WHERE miles_per_gal > (SELECT MAX(miles_per_gal) FROM cars_data)
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id ORDER BY T2.mpg DESC LIMIT 1

eval_err_num:399
hard pred: SELECT Model, Horsepower FROM cars_data WHERE Horsepower > (SELECT MAX( Horsepower) FROM cars_data)
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id ORDER BY T2.horsepower DESC LIMIT 1

easy pred: SELECT * FROM employee WHERE Employee_ID = 1
easy gold: SELECT Age from employee where Name = 'George Chuter'

easy pred: SELECT * FROM employee WHERE Employee_ID = 100
easy gold: SELECT Age from employee where Name = 'Lee Mears'

eval_err_num:400
hard pred: SELECT Name FROM employee WHERE Bonus = ( SELECT MAX( Bonus) FROM evaluation GROUP BY Employee_ID )
hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1

hard pred: SELECT Name from people WHERE Nationality = ' 中国人' or Name = ' 美国人' or Name = ' 日本人' or Name = ' 韩国人'
hard gold: SELECT Name FROM people WHERE People_ID IN  ( SELECT People_ID FROM poker_player ) 

eval_err_num:401
easy pred: SELECT COUNT(*) as num_players FROM players
easy gold: SELECT count ( * )  FROM players

easy pred: SELECT Country_Code FROM players WHERE player_id = 12345
easy gold: SELECT country_code FROM players  where first_name  =  "Mirjana"

easy pred: SELECT birth_date FROM players WHERE player_id = 12345
easy gold: SELECT birth_date FROM players  where first_name  =  "Mirjana"

eval_err_num:402
extra pred: SELECT Model, Make FROM car_makers WHERE Maker = 'GM'
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors'

eval_err_num:403
extra pred: SELECT Model FROM car_makers WHERE Model > 3500
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T4.weight  >  3500

eval_err_num:404
extra pred: SELECT Model, Make, COUNT(*) AS total_count FROM car_makers GROUP BY Model, Make HAVING COUNT(*) = (SELECT COUNT(*) FROM model_list WHERE Model = 'BMW' AND Make = 'BMW') + (SELECT COUNT(*) FROM model_list WHERE Model = 'Mercedes-Benz' AND Make = 'Mercedes-Benz')
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' or T4.weight  <=   3500

eval_err_num:405
extra pred: SELECT Model FROM car_makers WHERE Model > 3500 OR Maker = 'GM'
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' Or T4.weight  <=   3500 except SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' and T4.weight  <=   3500

eval_err_num:406
easy pred: SELECT height FROM "people" WHERE Name = ' Aleksey Ostapenko'
easy gold: SELECT height FROM people where name  =  "Aleksey Ostapenko"

eval_err_num:407
easy pred: SELECT Name FROM "people" WHEREBirth_Date = '1982-08-16'
easy gold: SELECT name FROM people where birth_date  =  "August 16, 1982"

eval_err_num:408
easy pred: SELECT People_ID FROM "people" WHERE Nationality = ' Russia'
easy gold: SELECT people_id FROM people where nationality  =  "Russia"

eval_err_num:409
easy pred: SELECT Nationality FROM "table" WHERE Nationality IN (' Russia', ' Ukraine', ' Finland', ' Sweden', ' France', ' Germany', ' China', ' Japan', ' India') AND COUNT(*) > 0
easy gold: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT ( * )    >=    2

easy pred: select population from city; ```
easy gold: SELECT Population FROM country where Name   =   "Afghanistan"

eval_err_num:410
easy pred: select * from table where country = 'Aruba'
easy gold: SELECT Population FROM country where Name   =   "Aruba"

eval_err_num:411
medium pred: select * from table where language = 'Aruba'
medium gold: SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Aruba"

eval_err_num:412
medium pred: select * from table where language = 'Aruba'
medium gold: SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Aruba" and T2.IsOfficial = 'T'

eval_err_num:413
medium pred: select * from table where country = ' Afghanistan'
medium gold: SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Afghanistan" and T2.IsOfficial = 'T'

eval_err_num:414
medium pred: select count(distinct language) from table
medium gold: SELECT count ( * )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.language = 'Dari' and T1.name !=  'Afghanistan'

eval_err_num:415
medium pred: SELECT dog_id, strftime('%Y-%m-%d', date_of_birth) AS date_of_birth, cost_of_treatment FROM treatments JOIN Breeds ON treatment_id = Breeds.breed_code JOINCharges ON charge_id =Charges.charge_id JOINSizes ON size_code = Sizes.size_code JOINOwners ON owner_id =Owners.owner_id JOINDogs ON dog_id =Dogs.dog_id WHERE dog_id IN (SELECT dog_id FROM Breeds WHERE breed_code = 'Collie') AND date_of_birth >= strftime('%Y-%m-%d', CURRENT_DATE()) AND date_of_birth <= strftime('%Y-%m-%d', CURRENT_DATE()) + INTERVAL 1 DAY
medium gold: SELECT name,cost_of_treatment  FROM Dogs join Treatments

eval_err_num:416
hard pred: SELECT cost_of_ Treatment FROM treatments ORDER BY cost_of_ Treatment DESC
hard gold: SELECT name FROM Dogs WHERE dog_id NOT IN (  SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum ( cost_of_treatment )   <  1000  ) 

eval_err_num:417
easy pred: SELECT age FROM "visitor" WHERE name = 'Gonzalo Higuaín'
easy gold: SELECT age FROM visitor where name  =  "Gonzalo Higuaín"

eval_err_num:418
medium pred: SELECT num_of_Ticket FROM "visit" WHERE customer_id = 5
medium gold: SELECT num_of_ticket FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id where visitor_id  =  5

eval_err_num:419
medium pred: SELECT total_spent FROM "visit" WHERE visitor_id = '1001'
medium gold: SELECT Total_spent FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id where name  =  "Arjen Robben"

eval_err_num:420
hard pred: SELECT name, age FROM "visitor" WHERE level_of_membership = ( SELECT MAX(level_of_ Membership) FROM "visitor" )
hard gold: SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1

eval_err_num:421
medium pred: select `Name`, `Continent`, `Region`, `SurfaceArea`, `IndepYear`, `Population`, `LifeExpectancy`, `GNP`, `GNPOld`, `LocalName`, ` GovernmentForm`, `HeadOfState`, `Capital`, `Code2`, `IsOfficial` from `city` where `ID` in ( select `id` from ` sqlite_sequence` order by `seq` limit 1 ) and `Code` like '%English%'
medium gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English"

eval_err_num:422
medium pred: select `Name`, `Continent`, `Region`, `SurfaceArea`, `IndepYear`, `Population`, `LifeExpectancy`, `GNP`, `GNPOld`, `LocalName`, ` GovernmentForm`, `HeadOfState`, `Capital`, `Code2`, `IsOfficial` from `city` where `ID` in ( select `id` from ` sqlite_sequence` order by `seq` limit 1 ) and `Code` like '%Dutch%'
medium gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch"

eval_err_num:423
medium pred: select `LifeExpectancy` from `city` where `ID` in ( select `id` from ` sqlite_sequence` order by `seq` limit 1 ) and `Code` like '%English%'
medium gold: SELECT DISTINCT T1.LifeExpectancy FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch"

medium pred: SELECT winner_name, winner_rank, winner_rank_points, winner_seed, year FROM matches ORDER BY match_num DESC LIMIT 3
medium gold: SELECT winner_name  FROM matches ORDER BY winner_age LIMIT 3

eval_err_num:424
medium pred: SELECT rank, name, rank_points, year FROM players WHERE player_id in (SELECT player_id FROM matches)
medium gold: SELECT DISTINCT winner_name,  winner_rank FROM matches ORDER BY winner_age LIMIT 3

eval_err_num:425
medium pred: SELECT winner_name, name FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 3
medium gold: SELECT loser_name FROM matches ORDER BY winner_age LIMIT 3

eval_err_num:426
medium pred: SELECT role, street, city, state FROM professionals WHERE first_name = ' Taryn' AND role_code = 'Employee'
medium gold: SELECT role_code , street , city , state FROM professionals WHERE first_name  =  "Taryn"

easy pred: SELECT first_name, last_name FROM professionals WHERE state = 'Indiana'
easy gold: SELECT first_name FROM professionals WHERE state  =  "Indiana"

eval_err_num:427
easy pred: SELECT COUNT(*) as num_Death_events FROM " Death"
easy gold: SELECT count ( * )  FROM death

eval_err_num:428
hard pred: SELECT t1.name, t1.date, t1.bulgarian_commander, t1.latin_commander, t1.result FROM "Battle" t1 INNER JOIN "ship" t2 ON t1.id = t2.id INNER JOIN "Death" t3 ON t2.id = t3. caused_by_ship_id GROUP BY t1.name, t1.date, t1.bulgarian_commander, t1.latin_commander, t1.result ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT * FROM death where killed  =   ( select max ( killed )  from death ) 

eval_err_num:429
medium pred: SELECT * FROM "Battle"; SELECT * FROM "ship"; SELECT * FROM "Death"
medium gold: SELECT * FROM death where note like "%East%"

eval_err_num:430
medium pred: SELECT * FROM "Death" WHERE "Causes_by_ship_id" = ( SELECT "causes_by_ship_id" FROM "ship" WHERE "tonnage" = 't' )
medium gold: SELECT T1.killed FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

eval_err_num:431
medium pred: SELECT * FROM "Death" WHERE " Injury_ situations" = ( SELECT " Injury_ situations" FROM "ship" WHERE "tonnage" = 't' )
medium gold: SELECT T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

eval_err_num:432
medium pred: SELECT SUM(CASE WHEN "Causes_by_ship_id" = 't' THEN 1 END) AS death_Situations, SUM(CASE WHEN "Causes_by_ship_id" = 't' THEN 1 END) AS injury_Situations FROM "Death" WHERE "Causes_by_ship_id" = 't'
medium gold: SELECT COUNT ( T1.id )  FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

eval_err_num:433
hard pred: SELECT COUNT(*) AS num_car_makers,ContId,ContName FROM "continents" GROUP BYContId,ContName ORDER BY num_carmakers DESC
hard gold: SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country GROUP BY T1.Continent

eval_err_num:434
medium pred: SELECT COUNT(*) AS num_car_makers, (SELECT COUNT(*) FROM "car_makers" WHERE country = 'USA') AS car_makers_count FROM "continents" GROUP BYContId,ContName ORDER BY num_carmakers DESC
medium gold: seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "usa"

eval_err_num:435
medium pred: SELECT COUNT(*) AS num_car_makers, (SELECT COUNT(*) FROM "car_makers" WHERE country = ' Germany') AS car_makers_count FROM "continents" GROUP BYContId,ContName ORDER BY num_carmakers DESC
medium gold: seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "germany"

eval_err_num:436
medium pred: SELECT COUNT(*) AS num_car_makers, (SELECT COUNT(*) FROM "car_makers" WHERE country = ' France') AS car_makers_count FROM "continents" GROUP BYContId,ContName ORDER BY num_carmakers DESC
medium gold: seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "france"

eval_err_num:437
easy pred: select count(*) as total_count from country
easy gold: SELECT count ( * )  FROM country

eval_err_num:438
easy pred: select count(*) as total_count from city
easy gold: SELECT count ( * )  FROM city

eval_err_num:439
medium pred: select region from city where name = 'Kabul'
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"

eval_err_num:440
medium pred: select count(*) as total_count from (select region from city where name = 'Kabul') t
medium gold: SELECT count ( T2.name )  FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.region  =  "Southern and Central Asia"

eval_err_num:441
medium pred: SELECT COUNT(*) FROM Documents WHERE Template_Type_Code = ' BK'
medium gold: SELECT count ( * )  FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK"

eval_err_num:442
medium pred: SELECT Document_Name, Document_Description FROM Documents WHERE Template_Type_Code = ' BK'
medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK"

eval_err_num:443
extra pred: SELECT COUNT(*) FROM Documents WHERE Template_Type_Code <> ' BK'
extra gold: Select count ( * )  from documents where document_name not in  ( SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK" ) 

eval_err_num:444
easy pred: SELECT Code FROM country WHERE Language NOT LIKE '%English%'
easy gold: SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  !=   "English"

eval_err_num:445
hard pred: SELECT Code FROM country WHERE Language NOT LIKE '%English%' AND GovernmentForm != 'Republic'
hard gold: SELECT Code FROM country WHERE GovernmentForm !=  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English"

eval_err_num:446
extra pred: SELECT T.Name AS country_name, T.Continent AS language_Continent, T.Region AS language_region, T.SurfaceArea AS language_surfaceArea, T.IndepYear AS language_IndepYear, T.LifeExpectancy AS language_LifeExpectancy, T.GNP AS language_GNP, T.GNPOld AS language_GNPOld, IFNULL(U.LocalName, '') AS language_localName, IFNULL(U. GovernmentForm, '') AS language_ GovernmentForm, IFNULL(U.HeadOfState, '') AS language_HeadOfState, IFNULL(U.Capital, '') AS language_Capital, IFNULL(U.Code2, '') AS language_Code2 FROM city T INNER JOIN country U ON T.ID = U.City_ID INNER JOIN sqlite_sequence U2 ON U.seq = U2.seq
extra gold: select countrycode, language from countrylanguage where countrycode in  ( SELECT Code FROM country WHERE GovernmentForm !=  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 

extra pred: SELECT Code2 FROM country WHERE Continent = 'North America'
extra gold: select code from country where continent  =  "North America" and code in  ( SELECT Code FROM country WHERE GovernmentForm !=  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 

eval_err_num:447
easy pred: SELECT cell_number FROM animals WHERE name = 'taryn'
easy gold: SELECT cell_number FROM Professionals WHERE first_name  =  "Taryn"

eval_err_num:448
medium pred: SELECT DATE_effective_FROM('2022-01-01', '2022-02-01') AS Date_Effective_Of_Template_ID_1
medium gold: SELECT Date_Effective_From, Date_Effective_To FROM Templates where Template_ID = 1

eval_err_num:449
easy pred: SELECTTemplate_Type_Code FROM Templates WHERETemplate_ID = 4
easy gold: SELECT Template_Type_Code  FROM Templates where Template_ID = 4

eval_err_num:450
easy pred: SELECTVersion_Number FROM Templates WHERETemplate_ID = 0
easy gold: SELECT Version_Number  FROM Templates where Template_ID = 0

eval_err_num:451
easy pred: SELECT t1.Country FROM "singer" t1 INNER JOIN "stadium" t2 ON t1.Singer_ID = t2.Singer_ID AND t1.Age > 40 INNER JOIN "concert" t3 ON t2.Stadium_ID = t3.Stadium_ID WHERE t3.Year = '2022'
easy gold: SELECT country FROM singer WHERE age  >  40

eval_err_num:452
easy pred: SELECT t1.Country FROM "singer" t1 INNER JOIN "stadium" t2 ON t1.Singer_ID = t2.Singer_ID AND t1.Age < 30 INNER JOIN "concert" t3 ON t2.Stadium_ID = t3.Stadium_ID WHERE t3.Year = '2022'
easy gold: SELECT DISTINCT ( country )  FROM singer WHERE age  < 30

eval_err_num:453
hard pred: SELECT t1.Country FROM "singer" t1 INNER JOIN "stadium" t2 ON t1.Singer_ID = t2.Singer_ID INNER JOIN "concert" t3 ON t2.Stadium_ID = t3.Stadium_ID WHERE t1.Age > 40 AND t1.Age < 30
hard gold: SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30

eval_err_num:454
medium pred: SELECT Accelerate FROM "cars_data" WHERE Id = (SELECT Make FROM "car_makers" WHERE FullName = 'AMC HORNET SPORTAbout' AND Country = 'SW')
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T2.Make   =   'amc hornet sportabout  ( sw ) '

eval_err_num:455
hard pred: SELECT Model FROM "model_list" WHERE Model = (SELECT Model FROM "car_makers" WHERE Make = 'AMC HORNET SPORTAbout' AND Country = 'SW') ORDER BY Date DESC LIMIT 1
hard gold: SELECT T2.Model FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId order by T1.Year desc limit 1

eval_err_num:456
easy pred: SELECTTemplate_IDFROMDocumentsWHERETemplate_ID NOT IN (SELECTTemplate_IDFROMReferences)
easy gold: SELECT template_id FROM Templates

eval_err_num:457
hard pred: SELECTTemplate_Type_CodeFROMReferencesWHERETemplate_Type_Code NOT IN (SELECTTemplate_Type_CodeFROMDocuments)
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

eval_err_num:458
hard pred: SELECTDate_Effective_ToFROMTemplatesWHEREDate_Effective_To NOT IN (SELECTDate_Effective_ToFROMReferences)
hard gold: SELECT Date_effective_to FROM Templates WHERE template_id IN  (  SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents ) 

eval_err_num:459
hard pred: SELECTNum_Of_templates_usedFROMDocumentsWHERENum_Of_templates_used NOT IN (SELECTNum_Of_templates_usedFROMReferences)
hard gold: SELECT count ( * )  FROM Templates WHERE template_id in  ( SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents ) 

eval_err_num:460
hard pred: ``` SELECTTemplate_IDFROMDocumentsWHEREDocument_ID NOT IN (SELECTTemplate_IDFROMReferences)
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

eval_err_num:461
medium pred: SELECT concert_name, concert_theme, COUNT(*) as num_singers FROM concerts GROUP BY concert_name, concert_theme ORDER BY num_singers DESC
medium gold: SELECT T2.concert_name , T2.theme , count ( * )  FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id

eval_err_num:462
easy pred: SELECT Year(super_bootcamp) as Year FROM super_bootcamp
easy gold: SELECT Year FROM concert WHERE concert_Name  =  "Super bootcamp"

eval_err_num:463
easy pred: SELECT Stadium_ID FROM super_bootcamp GROUP BY Stadium_ID ORDER BY Stadium_ID DESC
easy gold: SELECT Stadium_ID FROM concert WHERE concert_Name  =  "Super bootcamp"

eval_err_num:464
easy pred: SELECT (`city`.`Population`) AS `Population` FROM (`city`) AS `city` JOIN (` sqlite_sequence`) AS `seq` ON `seq`.`name` = `city`.`ID` JOIN (` country`) AS `country` ON `country`.`Code` = `seq`.`seq` WHERE `Continent` = 'Asia' GROUP BY `city`.`Name`, `country`.`Continent` ORDER BY `population` DESC
easy gold: SELECT sum ( Population )  FROM country where Continent  =  'Asia'

eval_err_num:465
easy pred: SELECT (`table`.`Language`) AS `Language` FROM (`table`) AS `table` JOIN (` country`) AS `country` ON `table`.`Language` = `country`.`Language` WHERE (` country`.`Percentage` = 9.5) GROUP BY `table`.`Language`
easy gold: SELECT Language FROM countrylanguage where Percentage  =  9.5

eval_err_num:466
easy pred: SELECT (`city`.`LifeExpectancy`) AS `LifeExpectancy` FROM (`city`) AS `city` JOIN (` sqlite_sequence`) AS `seq` ON `seq`.`name` = `city`.`ID` JOIN (` country`) AS `country` ON `country`.`Code` = `seq`.`seq` WHERE (`city`.`CountryCode` = 'Angola') GROUP BY `city`.`Name`, ` sqlite_sequence`.`name`, ` country`.`Continent`, ` country`.`Region`, ` country`.`SurfaceArea`, ` lifeExpectancy`.`float(3,1)`
easy gold: SELECT LifeExpectancy FROM country where LocalName  =  'Angola'

eval_err_num:467
easy pred: SELECT (`table`.`GNP`) AS `GNP` FROM (`table`) AS `table` JOIN (` country`) AS `country` ON `table`.`Code` = `country`.`Code` WHERE (`table`.`Code` = 'Aruba') GROUP BY `table`.`Code`
easy gold: SELECT GNP FROM country where LocalName  =  'Angola'

eval_err_num:468
easy pred: SELECT (`table`.`GNP Old`) AS `GNP Old` FROM (`table`) AS `table` JOIN (` country`) AS `country` ON `table`.`Code` = `country`.`Code` WHERE (`table`.`Code` = ' Afghanistan') GROUP BY `table`.`Code`
easy gold: SELECT GNPOld FROM country where Name  =  'Afghanistan'

eval_err_num:469
hard pred: select * from "singer" where "Song_release_year" > (select avg("Song_release_year"))
hard gold: SELECT song_name FROM singer WHERE song_release_year  >   ( SELECT avg ( song_release_year )  FROM singer ) 

eval_err_num:470
easy pred: select avg("Song_release_year") from "singer"
easy gold: SELECT avg ( song_release_year )  FROM singer

eval_err_num:471
easy pred: select * from "song" order by "Song_release_year" asc
easy gold: SELECT song_name from singer order by song_release_year

eval_err_num:472
hard pred: select * from "singer" where "Age" > (select avg("Age")) order by "Song_name" asc
hard gold: SELECT song_name FROM singer WHERE age  >   ( SELECT avg ( age )  FROM singer ) 

eval_err_num:473
easy pred: SELECT * FROM "conductor" WHERE "Conductor_ID" = 1
easy gold: SELECT T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID   =   T2.Conductor_ID

eval_err_num:474
easy pred: SELECT Name FROM "conductor"
easy gold: SELECT Name FROM conductor

eval_err_num:475
easy pred: SELECT Age FROM "Colin Davis"
easy gold: SELECT Age FROM conductor WHERE Name  =  "Colin Davis"

eval_err_num:476
easy pred: SELECT COUNT(*) AS num_students FROMstudents
easy gold: SELECT count ( * )  FROM Students

eval_err_num:477
easy pred: SELECT FirstName FROM Students WHERE student_id = 3
easy gold: SELECT first_name FROM Students where student_id = 3

eval_err_num:478
easy pred: SELECT Email FROM Students WHERE student_id = 2
easy gold: SELECT email_address FROM Students where student_id = 2

eval_err_num:479
easy pred: SELECT COUNT(*) AS num_student_enrolment FROM Student_Enrolment
easy gold: SELECT count ( * )  FROM Student_Enrolment

eval_err_num:480
easy pred: SELECT * FROM Templates WHERE Version_Number NOT IN ( SELECT Version_Number FROM Ref_Template_Types )
easy gold: SELECT * FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID   =   T2.template_ID

medium pred: SELECT * FROM Templates WHERE Template_Type_Code NOT IN ( SELECT Template_Type_Code FROM Ref_Template_Types )
medium gold: SELECT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

eval_err_num:481
medium pred: SELECT DISTINCTTemplate_Type_Description FROM Templates WHERE Template_Type_Code NOT IN ( SELECT Template_Type_Code FROM Ref_Template_Types )
medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

medium pred: SELECT AVG(population) FROM country WHERE Name = 'Russian Federation'
medium gold: SELECT Population FROM country ORDER BY SurfaceArea DESC LIMIT 1

eval_err_num:482
medium pred: SELECT * FROM table WHERE Title = 'World Cup'
medium gold: SELECT HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1

medium pred: SELECT Name,Continent FROM country WHERE Code = 'China'
medium gold: SELECT Continent FROM country ORDER BY SurfaceArea DESC LIMIT 1

eval_err_num:483
medium pred: SELECT name FROM "poker_player" WHERE final_table_made > 300000
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000

eval_err_num:484
easy pred: SELECT COUNT(*) FROM "poker_player"
easy gold: SELECT count ( Poker_Player_ID )  from poker_player

eval_err_num:485
medium pred: select count(*) from `students` where `state` = 'North Carolina'
medium gold: SELECT count ( * )  FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'

eval_err_num:486
medium pred: select `first_name`, `last_name` from `students`
medium gold: SELECT T1.first_name,T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'

eval_err_num:487
extra pred: select * from `students` where `degree_program_id` is NULL
extra gold: SELECT T1.first_name, T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT T3.first_name, T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id

eval_err_num:488
easy pred: SELECT area_code FROM areas_code_state
easy gold: select area_code from AREA_CODE_STATE

eval_err_num:489
hard pred: SELECT * FROM votes WHERE vote_id = ( SELECT vote_id FROM areas_code_state WHERE area_code = '876' AND state = 'CA' )
hard gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling'

eval_err_num:490
hard pred: SELECT * FROM votes WHERE vote_id = ( SELECT vote_id FROM areas_code_state WHERE area_code = '888' AND state = 'NV' )
hard gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'

eval_err_num:491
extra pred: SELECT * FROM votes WHERE vote_id IN ( SELECT vote_id FROM areas_code_state WHERE area_code = '888' AND state = 'NV' AND Contestant_number = ' Kelly Clauss' )
extra gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'

eval_err_num:492
easy pred: SELECT COUNT(*) AS num_shop FROM "shop""
easy gold: SELECT count ( * )  FROM shop

eval_err_num:493
easy pred: SELECT Name FROM "shop"
easy gold: SELECT name FROM shop

eval_err_num:494
easy pred: SELECT Location FROM "FC Haka"
easy gold: SELECT location FROM shop where name  =  "FC Haka"

eval_err_num:495
easy pred: SELECT COUNT(*) AS num_products FROM "HJK"
easy gold: SELECT Number_products FROM shop where name  =  "HJK"

eval_err_num:496
medium pred: SELECT degree_summary_name FROM degree_ Programs JOIN sections ON degree_program_id = sections.program_id JOIN students ON section_id = students.section_id JOIN addresses ON address_id = students.address_id WHERE department_id = ( SELECT department_id FROM departments ORDER BY department_name ASC LIMIT 1 )
medium gold: select T2.degree_summary_name from Departments as T1 JOIN Degree_Programs as T2 on T1.department_id  =  T2.department_id where T1.department_name  =  'statistics'

medium pred: SELECT role_code FROM professionals
medium gold: SELECT professional_id, role_code  FROM Professionals

eval_err_num:497
extra pred: SELECT email_address, COUNT(*) AS did_not_operate FROMOwners GROUP BY email_address HAVING COUNT(*) = 1
extra gold: SELECT professional_id , role_code , email_address FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

eval_err_num:498
medium pred: select id from car_makers whereMaker='American' and country='United States'
medium gold: SELECT Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.FullName   =   'American Motor Company'

eval_err_num:499
medium pred: select model_id from model_list whereMaker='Acura' and Model='毒药'
medium gold: SELECT ModelId FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.Maker   =   'amc'

eval_err_num:500
medium pred: selectMaker from car_makers whereId=2
medium gold: SELECT DISTINCT ( T1.Maker )  FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.Id  =  2

eval_err_num:501
medium pred: select count(model_id) from model_list whereMaker='American' and Model='毒药'
medium gold: SELECT count ( * )  FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.FullName   =   'American Motor Company'

eval_err_num:502
medium pred: SELECT name, Course_ID FROM teacher GROUP BY name, Course_ID HAVING COUNT(DISTINCT Course_ID) > 1
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID

eval_err_num:503
hard pred: SELECT name, Course_ID FROM teacher ORDER BY name ASC
hard gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID ORDER BY T3.Name

eval_err_num:504
hard pred: SELECT * FROM table WHERE Course_ID in ( SELECT Course_ID FROM teacher GROUP BY teacher_id HAVING COUNT(DISTINCT Course_ID) > 1 )
hard gold: SELECT T3.Name ,  T2.Course, T1.teacher_ID FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID ORDER BY T3.Name

eval_err_num:505
easy pred: SELECT LANGUAGE FROM "Sky Music"
easy gold: SELECT Language FROM TV_Channel where series_name = 'Sky Music'

eval_err_num:506
easy pred: SELECT Package_Option FROM "TV_Channel"
easy gold: SELECT distinct Package_Option FROM TV_Channel

eval_err_num:507
easy pred: SELECT Content FROM "TV_Channel"
easy gold: SELECT distinct  Content FROM TV_Channel

eval_err_num:508
hard pred: SELECT COUNT(*) AS num_languages, language FROM "TV_Channel" WHERE language < 4
hard gold: SELECT LANGUAGE FROM TV_Channel GROUP BY LANGUAGE ORDER BY count ( * )  ASC LIMIT 1

eval_err_num:509
hard pred: SELECT language FROM "TV_Channel" WHERE id IN (SELECT id FROM "TV_Series" WHERE channel = 'ABC' ANDrating > 3.5)
hard gold: SELECT LANGUAGE FROM TV_Channel GROUP BY LANGUAGE ORDER BY count ( * )  desc LIMIT 1

eval_err_num:510
hard pred: SELECT 的总和, content FROM "TV_Channel" GROUP BY 的总和
hard gold: SELECT content from tv_channel group by content order by count ( * )  desc limit 1

eval_err_num:511
hard pred: SELECT min(content) FROM "TV_Channel"
hard gold: SELECT content from tv_channel group by content order by count ( * )  limit 1

eval_err_num:512
easy pred: SELECT series_name FROM "TV_Channel" WHERE id IN (SELECT id FROM "TV_Series" WHERE channel = 'ABC' ANDrating > 3.5)
easy gold: SELECT series_name from tv_channel

hard pred: SELECT first_name FROM professionals; SELECT first_name FROM owners
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners

eval_err_num:513
hard pred: SELECT first_name FROM table WHERE first_name NOT IN ('Bark', 'Blow', 'Crow', 'Fletch', 'Glow', 'Hate', 'Sleep', 'Smell', 'You', 'Zeus') AND first_name NOT LIKE '%dog%'
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

eval_err_num:514
hard pred: SELECT first_name FROM table WHERE first_name IN ('Alice', 'Bob', 'Charlie', 'David', 'Alice', 'Bob', 'Charlie', 'David') AND first_name NOT LIKE '%dog%'
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners UNION SELECT name FROM Dogs

eval_err_num:515
easy pred: select t1.lname from Student t1 join Has_Pet t2 on t1. StuID = t2.StuID and t1.LName = t2.LName
easy gold: select lname from Student AS T1 JOIN Has_Pet AS T2 ON T2.stuid = T1.stuid

eval_err_num:516
hard pred: select t1.lname from Student t1 join Has_Pet t2 on t1. StuID = t2.StuID and t2.PetID = 'cat'
hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE  T3.pettype  =  'cat'

eval_err_num:517
hard pred: select t1.lname from Student t1 join Has_Pet t2 on t1. StuID = t2.StuID and t2.PetID = (select PetID from Pets where PetType = 'cat' and pet_age = 3)
hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'

eval_err_num:518
medium pred: SELECT name, major_record_format FROM Orchestra
medium gold: SELECT orchestra, Major_Record_Format  FROM orchestra

eval_err_num:519
easy pred: SELECT name FROM Orchestra order by name asc
easy gold: SELECT orchestra FROM orchestra order by orchestra

eval_err_num:520
medium pred: SELECT major_record_format FROM Orchestra WHERE count(*) order by count(*) asc
medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT ( * )  ASC

eval_err_num:521
easy pred: SELECT COUNT(*) FROM "museum" WHERE " Museum_ID" IN (SELECT " Museum_ID" FROM "visit")
easy gold: SELECT count ( Museum_ID  )  FROM museum

eval_err_num:522
easy pred: SELECT * FROM "museum" WHERE " Museum_ID" = 3
easy gold: SELECT Num_of_Staff FROM museum where museum.Museum_ID  =  3

eval_err_num:523
easy pred: SELECT Year(Open_Year) FROM "museum"
easy gold: SELECT Open_year FROM museum where Name = 'Capital Plaza Museum'

eval_err_num:524
medium pred: SELECT visitor.Name FROM museum INNER JOIN visit ON Museum. Museum_ID = visit. Museum_ID INNER JOIN visit ON museum. Museum_ID = visit. Museum_ID AND visit.Num_of_Ticket > 1
medium gold: SELECT  t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id GROUP BY t1.id HAVING count ( * )   >  1

eval_err_num:525
medium pred: SELECT museum. Museum_ID, museum.Name, museum.Num_of_ Staff, visit.Level_of_ membership, visit.Age, visit.Total_spent FROM museum INNER JOIN visit ON Museum. Museum_ID = visit. Museum_ID
medium gold: SELECT  t1.name, t1.id, t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id GROUP BY t1.id HAVING count ( * )   >  1

eval_err_num:526
medium pred: SELECT name, level_of_ membership FROM visit WHERE age > 20
medium gold: SELECT  name, Level_of_membership FROM visitor where age > 20

eval_err_num:527
medium pred: SELECT customer.Name, customer.Age FROM customer INNER JOIN spend ON customer.ID = spend.Customer_ID WHERE spend.Total_spent > 100
medium gold: SELECT  t1.name , t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id where t2.total_spent > 100

eval_err_num:528
easy pred: SELECT COUNT(*) as count FROM `table`
easy gold: SELECT count ( GovernmentForm )  FROM country

eval_err_num:529
easy pred: SELECT COUNT(DISTINCT `id`) AS num FROM `table` WHERE `lifeExpectancy` > 72
easy gold: SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

eval_err_num:530
medium pred: SELECT `id`, `population` FROM `table` WHERE `lifeExpectancy` > 72
medium gold: SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

eval_err_num:531
easy pred: SELECT `Code`, `LifeExpectancy` FROM `city` WHERE `id` IN (SELECT `id` FROM `table`)
easy gold: SELECT avg ( LifeExpectancy )  FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

eval_err_num:532
medium pred: SELECT * FROM `table` WHERE `lifeExpectancy` > 72
medium gold: SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72

eval_err_num:533
easy pred: SELECT level_of_ membership FROM "visitor" WHERE ID = 1
easy gold: SELECT Level_of_membership FROM visitor WHERE ID  =  1

eval_err_num:534
easy pred: SELECT name FROM "customer" WHERE ID = 1
easy gold: SELECT Name FROM visitor WHERE ID  =  1

eval_err_num:535
easy pred: SELECT age FROM "customer" WHERE ID = 1
easy gold: SELECT Age FROM visitor WHERE ID  =  1

eval_err_num:536
extra pred: SELECT COUNT(*) as NumOfFlights FROM airlines GROUP BY airline ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  desc LIMIT 1

extra pred: SELECT airline FROM flights WHERE flightNo < 4
extra gold: SELECT T1.airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  asc LIMIT 1

eval_err_num:537
easy pred: SELECT abbreviation FROM airlines WHERE name = 'AirTran Airways'
easy gold: SELECT abbreviation from airlines where airline =  "AirTran Airways"

eval_err_num:538
easy pred: SELECT country FROM airlines WHERE name = 'AirTran Airways'
easy gold: SELECT country from airlines where airline =  "AirTran Airways"

eval_err_num:539
medium pred: SELECT Battle.id, Battle.name FROM Battle INNER JOIN ship ONBattle.id=ship.id INNER JOIN Death ONship.id=Death.ship_id
medium gold: SELECT T1.id ,  T1.name FROM battle AS T1

eval_err_num:540
hard pred: SELECT Battle.id, Battle.name FROM Battle INNER JOIN ship ONBattle.id=ship.id INNER JOIN Death ONship.id=Death.ship_id GROUP BY Battle.id, Battle.name HAVING COUNT(Death. caused_by_ship_id) > 10
hard gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle JOIN death AS T3 ON T2.id   =   T3.caused_by_ship_id GROUP BY T1.id HAVING sum ( T3.killed )   >  10

eval_err_num:541
hard pred: SELECT Battle.id, Battle.name, Battle.date, ship.Lost_in_battle, ship.tonnage, ship.ship_type, ship.location, Death. caused_by_ship_id FROM Battle INNER JOIN ship ONBattle.id=ship.id INNER JOIN Death ONship.id=Death.ship_id GROUP BY Battle.id, Battle.name, Battle.date HAVING COUNT(Death. caused_by_ship_id) > 10
hard gold: SELECT T1.id ,  T1.name ,T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle JOIN death AS T3 ON T2.id   =   T3.caused_by_ship_id GROUP BY T1.id HAVING sum ( T3.killed )   >  10

eval_err_num:542
easy pred: SELECT 平均年龄 FROMPets
easy gold: SELECT avg ( pet_age )  FROM pets WHERE PetType  =  'cat'

eval_err_num:543
easy pred: SELECT 平均年龄 FROMPets
easy gold: SELECT avg ( pet_age )  FROM pets WHERE PetType  =  'dog'

easy pred: SELECT MAX(pet_age) FROM Pets
easy gold: SELECT max ( pet_age )  FROM pets WHERE PetType  =  'dog'

eval_err_num:544
medium pred: SELECT MAX(pet_age) AS max_age FROMPets
medium gold: SELECT max ( pet_age )  ,  pettype FROM pets GROUP BY pettype

eval_err_num:545
easy pred: SELECT MAX(pet_age) AS max_age FROM Pets WHERE PetType = 'Cat'
easy gold: SELECT max ( pet_age )  FROM pets WHERE PetType  =  'cat'

eval_err_num:546
easy pred: SELECT FullName FROM car_makers WHERE make = 'AC米兰'
easy gold: select fullname from car_makers where maker  =  "amc"

eval_err_num:547
hard pred: SELECT Model FROM car_makers WHERE Country = ' Germany'
hard gold: SELECT T3.model FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T1.countryname  =  "germany"

eval_err_num:548
easy pred: SELECT ModelId FROM car_makers WHERE make = 'BMW'
easy gold: SELECT modelid from model_list where model  =  "bmw"

eval_err_num:549
extra pred: SELECT Countries.Id, Countries.Name FROM countries INNER JOIN models ON Countries.Continent = models.Continent INNER JOIN car_makers ON models.Maker = car_makers.Id GROUP BY Countries.Id, Countries.Name HAVING COUNT(DISTINCT car_makers.make) > 3 OR car_makers.make = 'flat'
extra gold: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country GROUP BY T1.countryId HAVING count ( * )   >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T3.Model   =   'fiat'

eval_err_num:550
extra pred: SELECT phone_number FROM treatments GROUP BY professional_id ORDER BY total_cost DESC LIMIT 1
extra gold: SELECT T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by count ( * )   desc limit 1

medium pred: SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2
medium gold: SELECT T1.professional_id  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id HAVING count ( * )    >=    2

easy pred: SELECT COUNT(DISTINCT professional_id) FROM treatments WHERE treatment_id = 1
easy gold: select count ( * )  from  ( SELECT *  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id HAVING count ( * )    =  1 ) 

eval_err_num:551
easy pred: SELECT Document_ID FROM Documents WHERE Paragraph_ID IN (1, 2)
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count ( * )  BETWEEN 1 AND 2

eval_err_num:552
easy pred: SELECT Paragraph_Text FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Paragraph_ID IN (1, 2))
easy gold: SELECT Paragraph_Text FROM Paragraphs GROUP BY document_id HAVING count ( * )  BETWEEN 1 AND 2

medium pred: SELECT Name FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
medium gold: select name from teacher order by Age asc limit 1

medium pred: SELECT Name, Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
medium gold: select Hometown from teacher order by Age asc limit 1

medium pred: SELECT * FROM Pets WHERE PetID = 5
medium gold: SELECT fname, lname FROM student WHERE sex   =   'F'

eval_err_num:553
easy pred: SELECT city_code FROM Student WHEREStuID = (SELECT StuID FROM Has_Pet WHERE PetID = 5)
easy gold: SELECT DISTINCT city_code FROM student

eval_err_num:554
hard pred: SELECT pet_age, weight FROM Pets WHERE PetType = 'dog' AND sex = 'female' AND StuID = (SELECT StuID FROM Has_Pet WHERE PetID = 5)
hard gold: SELECT T3.weight FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T2.petid   =   T3.petid WHERE T1.sex   =   'F'

medium pred: select id, Horsepower from cars_data order by Horsepower limit 1
medium gold: SELECT id from cars_data order by horsepower limit 1

extra pred: select id from cars_data where Horsepower < (select avg( Horsepower) from cars_data)
extra gold: SELECT T1.Id FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T1.Horsepower <  ( SELECT avg ( Horsepower )  FROM CARS_DATA ) 

eval_err_num:555
extra pred: INSERT INTO table (model, make) VALUES ('Model 1', 'Maker 1'); INSERT INTO table (model, make) VALUES ('Model 2', 'Maker 2'); INSERT INTO table (model, make) VALUES ('Model 3', 'Maker 3')
extra gold: SELECT T1.Id ,T2.model FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T1.Horsepower <  ( SELECT avg ( Horsepower )  FROM CARS_DATA ) 

eval_err_num:556
medium pred: SELECT * FROM `Transcript_Contents` WHERE date_left >= DATETIME'2022-01-01' AND date_left < DATETIME'2022-01-02'
medium gold: SELECT transcript_id FROM Transcripts ORDER BY transcript_date DESC LIMIT 1

eval_err_num:557
easy pred: SELECT transcript_date FROM `Transcripts` WHERE transcript_id = 5
easy gold: SELECT transcript_date FROM Transcripts WHERE transcript_id  =  5

eval_err_num:558
medium pred: SELECT transcript_date, transcript_id FROMTranscripts WHERE transcript_id IN (SELECT transcript_id FROM transcripts GROUP BY transcript_date HAVING COUNT(DISTINCT course_name) >= 2)
medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id   =   T2.transcript_id GROUP BY T1.transcript_id HAVING count ( * )    >=    2

eval_err_num:559
medium pred: SELECT other_details FROM transcripts WHERE transcript_id IN (SELECT transcripts_id FROM transcripts GROUP BY transcript_date HAVING COUNT(DISTINCT course_name) >= 2)
medium gold: SELECT T2.other_details FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id   =   T2.transcript_id GROUP BY T1.transcript_id HAVING count ( * )    >=    2

eval_err_num:560
medium pred: SELECT Transcript_date FROM transcripts WHERE Transcript_id IN (SELECT Transcript_id FROM transcripts GROUP BY Transcript_date HAVING COUNT(DISTINCT course_name) >= 2)
medium gold: SELECT T2.transcript_date FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id   =   T2.transcript_id GROUP BY T1.transcript_id HAVING count ( * )    >=    2

easy pred: SELECT ID FROM Highschooler
easy gold: select student_id from Friend

eval_err_num:561
easy pred: SELECT first_name FROM employees WHERE role_code = ' Employee'
easy gold: SELECT first_name FROM Professionals WHERE role_code   =   'Employee'

eval_err_num:562
medium pred: SELECT semester_name, COUNT(*) FROM student_enrollments GROUP BY semester_name HAVING COUNT(*) > 0
medium gold: SELECT T1.semester_name, count ( * )  from semesters as T1 join student_enrolment as T2 on T1.semester_id  =  T2.semester_id group by T2.semester_id

eval_err_num:563
extra pred: SELECT semester_name FROM student_enrollments GROUP BY semester_name ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.semester_name from semesters as T1 join student_enrolment as T2 on T1.semester_id  =  T2.semester_id group by T2.semester_id order by count ( * )  desc limit 1

eval_err_num:564
medium pred: SELECT student_enrollment_id, degree_program_id FROM student_enrollment
medium gold: SELECT student_enrolment_id, degree_program_id from  Student_Enrolment

eval_err_num:565
hard pred: SELECT semester_name FROM student_enrollments WHERE student_enrollments.semester_id = ( SELECT semester_id FROM student_enrollments WHERE semester_id NOT IN ( SELECT semester_id FROM student_enrollments AS other_table ) )
hard gold: sELECT semester_name FROM Semesters WHERE semester_id NOT IN (  SELECT semester_id FROM Student_Enrolment  ) 

eval_err_num:566
hard pred: SELECT * FROM `countrylanguage` WHERE `IsOfficial` = 'F'
hard gold: SELECT name FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T" ) 

eval_err_num:567
extra pred: SELECT *, AVG(LifeExpectancy) FROM `city` JOIN `country` ON `city.ID` = `country.ID` JOIN `countrylanguage` ON `city.CountryCode` = `countryLanguage.CountryCode` WHERE `city.Name` = 'Tokyo' AND `Country.Name` = ' Japan'
extra gold: SELECT avg ( LifeExpectancy )  FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T" ) 

eval_err_num:568
medium pred: SELECT * FROM `city`
medium gold: SELECT avg ( LifeExpectancy )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T"

eval_err_num:569
medium pred: SELECT * FROM flight WHERE SourceAirport = 'CVO' AND DestAirport = 'SNA'
medium gold: SELECT FlightNo FROM flights where SourceAirport = "CVO" and DestAirport = "SNA"

eval_err_num:570
medium pred: SELECT * FROM flight WHERE SourceAirport = 'CVO' AND DestAirport = 'DFW'
medium gold: SELECT * FROM flights where SourceAirport = "CVO" and DestAirport = "DFW"

medium pred: SELECT airline FROM airlines WHERE uid = 'ABC123'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline WHERE T2.SourceAirport   =   " CVO"

medium pred: SELECT Channel FROM TV_series WHERE Episode = 'A love of a lifetime'
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T2.Episode  =  "A Love of a Lifetime"

eval_err_num:571
easy pred: SELECT COUNT(*) ASViewers FROM TV_series WHERE Episode = 'A love of a lifetime'
easy gold: SELECT  Viewers_m FROM  TV_series  where Episode  =  "A Love of a Lifetime"

easy pred: SELECT rating FROM TV_series WHERE Episode = 'A love of a lifetime'
easy gold: SELECT  Weekly_Rank  FROM  TV_series  where Episode  =  "A Love of a Lifetime"

medium pred: SELECT player_id FROM players WHERE player_id = (SELECT MIN(player_id) FROM players)
medium gold: SELECT player_id FROM players ORDER BY birth_date desc LIMIT 1

medium pred: SELECT player_id FROM players WHERE player_id = (SELECT MAX(player_id) FROM players)
medium gold: SELECT player_id FROM players ORDER BY birth_date LIMIT 1

medium pred: SELECT first_name, country_code FROM players
medium gold: SELECT first_name, country_code FROM players ORDER BY birth_date LIMIT 1

eval_err_num:572
medium pred: SELECT t1.Name, t2.Name FROM "teacher" t1 INNER JOIN "teacher" t2 ON t1.Teacher_ID = t2.Teacher_ID AND t1.Name = t2.Name WHERE t1.Teacher_ID IN (SELECT Teacher_ID FROM "course_arrange")
medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID GROUP BY T2.Name HAVING COUNT ( * )    >=    2

eval_err_num:573
medium pred: SELECT age, hometown FROM "student" WHERE age = (SELECT MAX(age) FROM "student") AND hometown = (SELECT MIN(hometown) FROM "student")
medium gold: SELECT T2.age, t2.hometown FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID GROUP BY T2.Name HAVING COUNT ( * )    >=    2

eval_err_num:574
hard pred: SELECT grade FROM "course_arrange" WHERE Teacher_ID = (SELECT Teacher_ID FROM "teacher") AND Course_ID = (SELECT Course_ID FROM "course")
hard gold: SELECT t1.grade FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID   =   T2.Teacher_ID order by t2.age desc limit 1

eval_err_num:575
easy pred: SELECT COUNT(*) FROM "visit" WHERE " Museum_ID" = (SELECT MAX(" Museum_ID") FROM "museum")
easy gold: SELECT max ( num_of_ticket )  FROM visit

eval_err_num:576
easy pred: SELECT AVG(COUNT(*)) FROM "visit"
easy gold: SELECT avg ( num_of_ticket )  FROM visit

eval_err_num:577
easy pred: SELECT COUNT(*) as num_ships FROM "ship"
easy gold: SELECT   count ( * )   from ship

eval_err_num:578
easy pred: SELECT name FROM "ship"
easy gold: SELECT  name  from ship

eval_err_num:579
medium pred: SELECT Name fromsinger WHERE Age = (SELECT 最年轻的 singer_id FROMsinger) ORDER BY Age DESC LIMIT 1
medium gold: SELECT Name FROM singer ORDER BY age LIMIT 1

eval_err_num:580
easy pred: SELECT Song FROM "Tribbal King" WHERE Name = 'Tribbal King'
easy gold: SELECT Song_Name FROM singer where name  =  'Tribal King'

eval_err_num:581
easy pred: SELECT release_year from singer WHERE Name = 'Tribbal King'
easy gold: SELECT song_release_year FROM singer where name  =  'Tribal King'

eval_err_num:582
easy pred: SELECT Name FROM country WHEREContinent=' Europe'
easy gold: SELECT Name FROM country WHERE continent   =   "Europe"

eval_err_num:583
medium pred: SELECT Name, COUNT(*) FROM country WHERE population大于等于 80000
medium gold: SELECT Name FROM country WHERE continent   =   "Europe" AND Population   =   "80000"

eval_err_num:584
easy pred: SELECT Name fromsinger
easy gold: SELECT Name FROM singer

easy pred: SELECT other_details, department_id FROM Departments WHERE department_name = 'history'
easy gold: SELECT other_details FROM Departments WHERE department_name  =  "history"

easy pred: SELECT cylinders FROM cars_data
easy gold: SELECT sum ( Cylinders )  FROM cars_data

medium pred: SELECT MAX(weight) FROM cars_data
medium gold: SELECT Weight FROM cars_data ORDER BY Weight DESC LIMIT 1

easy pred: SELECT Year FROM cars_data
easy gold: SELECT count ( * )  FROM cars_data

medium pred: SELECT MAX(Accelerate) FROM cars_data
medium gold: SELECT accelerate FROM cars_data ORDER BY accelerate DESC LIMIT 1

medium pred: SELECT MAX(Edispl) FROM cars_data
medium gold: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1

eval_err_num:585
easy pred: SELECT age FROMsinger WHERE name = 'Joe sharp'
easy gold: SELECT age from singer where name  =  "Joe Sharp"

eval_err_num:586
easy pred: SELECT COUNT(*) FROMsinger WHERE is_male = 1
easy gold: select count ( * )  from singer where country  =  "United States"

eval_err_num:587
easy pred: SELECT COUNT(*) FROMsinger WHERE Is_male = 1
easy gold: select count ( * )  from singer where Is_male  =  "True"

eval_err_num:588
extra pred: SELECT Model,Maker FROM car_makers WHERE Maker = 'General Motors'
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors'

eval_err_num:589
extra pred: SELECT Model FROM car_makers WHERE Model > 3500
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T4.weight  >  3500

eval_err_num:590
extra pred: SELECT make, model FROM cars_data WHERE Horsepower > (SELECT MAX( Horsepower) FROM cars_data)
extra gold: SELECT DISTINCT T2.Model, T3.maker FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' order by t4.horsepower desc limit 1

eval_err_num:591
extra pred: SELECT COUNT(*) FROM ( SELECT make, model, mpg FROM cars_data WHERE mpg > 15 ) x
extra gold: SELECT count ( * )  FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' and t4.mpg > 15

eval_err_num:592
extra pred: SELECT make, model FROM ( SELECT make, model, mpg FROM cars_data WHERE mpg > 15 ) x WHERE x.make = 'GM'
extra gold: SELECT DISTINCT t1.make, t1.model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' order by t4.mpg desc limit 1

eval_err_num:593
easy pred: SELECT AVG(grade) AS avg_grade FROM Highschooler
easy gold: SELECT avg ( grade )  FROM Highschooler

eval_err_num:594
medium pred: SELECT name, AVG(grade) AS top_grade FROM Highschooler ORDER BY AVG(grade) DESC LIMIT 1
medium gold: SELECT grade FROM Highschooler order by grade desc limit 1

eval_err_num:595
medium pred: SELECT name, AVG(grade) AS low_grade FROM Highschooler ORDER BY AVG(grade) ASC LIMIT 1
medium gold: SELECT grade FROM Highschooler order by grade limit 1

eval_err_num:596
easy pred: SELECT t1.CountryName FROM countries t1 INNER JOIN model_list t2 ON t1.CountryId = t2.Maker INNER JOIN car_makers t3 ON t2.Maker = t3.Id GROUP BY t1.CountryName HAVING COUNT(DISTINCT t1.CountryName) > 1
easy gold: SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId   =   T2.Country

eval_err_num:597
hard pred: SELECT t1.CountryName FROM countries t1 LEFT JOIN car_makers t2 ON t1.CountryId = t2.Country WHERE t2.Id = NULL
hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId   =   T2.Country

eval_err_num:598
medium pred: SELECT student_id, friend_id FROM Highschooler
medium gold: SELECT student_id, friend_id FROM Friend

eval_err_num:599
easy pred: SELECT student_id FROM Highschooler
easy gold: SELECT id FROM Highschooler

eval_err_num:600
easy pred: SELECT COUNT(DISTINCT student_id) FROM Highschooler
easy gold: SELECT count ( id )  FROM Highschooler

eval_err_num:601
easy pred: SELECT COUNT(DISTINCT friend_id) FROM Highschooler
easy gold: SELECT count ( distinct friend_id )  FROM Friend

hard pred: SELECT student_id WHERE NOT EXISTS ( SELECT * FROM Friend WHERE student_id = student_id )
hard gold: SELECT id FROM Highschooler EXCEPT SELECT friend_id FROM Friend

eval_err_num:602
medium pred: SELECT name, grade FROM Highschooler WHERE student_id = 1510
medium gold: SELECT name, grade FROM Highschooler where id  =  1510

eval_err_num:603
easy pred: SELECT * FROM "employee" WHERE "City" = 'New York'
easy gold: SELECT city FROM employee

eval_err_num:604
medium pred: SELECT * FROM "employee" WHERE ("Age" <= 30) AND ("City" IN (SELECT "City" FROM "shop" WHERE "Shop_ID" = "1" AND "Name" = '天安门' LIMIT 1))
medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count ( * )   >  1

eval_err_num:605
easy pred: SELECT * FROM "table" WHERE ("Age" >= 18) AND ("Age" < 30) AND (" City" = ' Bath')
easy gold: SELECT Age FROM employee WHERE city  =  'Bath'

eval_err_num:606
medium pred: SELECT COUNT(*) FROM Has_Pet WHEREStuID IN (SELECTStuID FROM Student)
medium gold: SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid WHERE T1.age  >  20

eval_err_num:607
easy pred: SELECT losers.name FROM matches AS losers JOIN players ON losers.player_id = players.player_id WHERE losers.age = 24.626967830300003
easy gold: SELECT distinct loser_name from matches where loser_age  =  24.626967830300003

eval_err_num:608
medium pred: SELECT SUM(match_num) AS total_matches FROM matches AS m JOIN players ON m.player_id = players.player_id WHERE m.draw_size = 2 AND m.winner_id = ' Petra Kvitova'
medium gold: SELECT count ( * )  from matches where loser_name  =  "Petra Kvitova" or winner_name  =  "Petra Kvitova"

eval_err_num:609
easy pred: SELECT losers.name, losers.ranking_points, players.player_id, players.first_name, players.last_name, players.hand, players.birth_date, players.country_code FROM matches AS m JOIN players ON m.player_id = players.player_id WHERE m.loser_rank_points > 3500
easy gold: SELECT distinct loser_id from matches where loser_rank_points > 3500

eval_err_num:610
hard pred: SELECT winner.name, winner.ranking_points FROM rankings JOIN matches ON rankings.tours = matches.best_of GROUP BY winner.name, winner.ranking_points ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT winner_name , winner_rank_points FROM matches GROUP BY winner_name ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:611
hard pred: SELECT max(likes) as greatest_number_of_likes, COUNT(*) as total_number_of_students from Likes
hard gold: SELECT count ( * )  from  Likes  group by student_id order by  count ( * )  desc limit  1

eval_err_num:612
extra pred: SELECT name FROM Highschooler order by likes DESC limit 1
extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count ( * )  DESC limit 1

eval_err_num:613
medium pred: SELECT t1.feature_type_name AS AirCon_Feature_Type FROM Ref_Feature_Types t1,Ref_Property_Types t2 WHERE t1.feature_type_code = t2.property_type_code AND t1.feature_name = 'AirCon'
medium gold: SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code   =   T2.feature_type_code WHERE T1.feature_name   =   "AirCon"

eval_err_num:614
easy pred: ```sql SELECT t1.property_type_description AS AirCon_Feature_Description FROM Ref_Feature_Types t1,Ref_Property_Types t2 WHERE t1.feature_type_code = t2.property_type_code AND t1.feature_name = 'AirCon'
easy gold: select feature_description from Other_Available_Features  where feature_name  =  "AirCon"

eval_err_num:615
easy pred: SELECT COUNT(DISTINCT t1.feature_id) AS num_DISTINCT_feature_ids FROM Ref_Feature_Types t1,Ref_Property_Types t2
easy gold: select count ( * )  from  ( select distinct feature_id from Other_Available_Features  ) 

eval_err_num:616
easy pred: SELECT t1.feature_type_code AS feature_type_code_sort FROM Ref_Feature_Types t1,Ref_Property_Types t2 WHERE t1.feature_type_code = t2.property_type_code AND t1.feature_name = 'AirCon'
easy gold: select feature_type_code from Other_Available_Features  where feature_name  =  "AirCon"

eval_err_num:617
hard pred: SELECT transcript_date FROMTranscripts GROUP BY transcript_date ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT transcript_date FROM Transcripts group by transcript_date order by count ( * )  asc limit 1

eval_err_num:618
hard pred: SELECT transcripts.transcript_date FROM transcripts JOIN ( SELECT department_id, COUNT(*) as num_times FROM departments GROUP BY department_id ) departments ON transcripts.department_id = departments.department_id JOIN ( SELECT course_id, COUNT(*) as num_times FROM courses GROUP BY course_id ) courses ON transcripts.course_id = courses.course_id JOIN ( SELECT student_id, COUNT(*) as num_times FROM students GROUP BY student_id ) students ON transcripts.student_id = students.student_id GROUP BY transcripts.transcript_date ORDER BY num_times DESC LIMIT 1
hard gold: SELECT transcript_date FROM Transcripts GROUP BY transcript_date ORDER BY count ( * )  desc limit 1

eval_err_num:619
medium pred: select DestAirport from flights where airline = 'United Airlines' and flightNo in (select flightNo from airports where airportCode = 'HND')
medium gold: SELECT T2.DestAirport FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline  =  "United Airlines"

eval_err_num:620
hard pred: select count(distinct airline) from airports where airportCode = 'APG'
hard gold: SELECT COUNT ( T1.Airline )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.sourceAirport like "%APG%"

eval_err_num:621
medium pred: select flightNo from flights as t1 join airports as t2 on t1.AirportCode = t2.AirportCode join airlines as t3 on t1.Airline = t3.uid where t3.Abbreviation = ' Delta Airlines' and t2.City = '北京'
medium gold: SELECT T2.FlightNo FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline  =  "Delta Airlines"

eval_err_num:622
hard pred: SELECT COUNT(*) FROM "car_makers" WHERE "Country" = 'USA'
hard gold: SELECT count ( * )  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id JOIN COUNTRIES AS T3 ON T2.Country   =   T3.CountryId WHERE T3.CountryName   =   'usa'

eval_err_num:623
medium pred: SELECTMakerFROM "car_makers" WHERE Model = '那条街上的出租车'
medium gold: SELECT distinct t1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'

eval_err_num:624
medium pred: SELECT COUNT(*) FROM "car_makers" WHERE Maker = '福特'
medium gold: select count (  * )  from model_list as t1 join car_makers as t2 where t1.maker  =  t2.id and t2.maker  =  "ford"

medium pred: SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes WHERE liked_id IN (SELECT student_id FROM Likes)) AND grade >= 8
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id GROUP BY T1.student_id HAVING count ( * )    >=    2

medium pred: SELECT * FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes WHERE liked_id = (SELECT student_id FROM Likes)) AND grade >= 8
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id GROUP BY T1.student_id HAVING count ( * )    >=    1

medium pred: SELECT ID FROM Highschooler
medium gold: SELECT T2.id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id GROUP BY T1.student_id HAVING count ( * )    >=    1

eval_err_num:625
easy pred: SELECT country FROM airlines WHERE name = 'United'
easy gold: SELECT COUNTRY FROM AIRLINES WHERE AIRLINE   =   "United Airlines"

easy pred: SELECT sourceAirport, destAirport FROM flights WHERE airline = 'ASY'
easy gold: SELECT SourceAirport FROM flights WHERE DestAirport   =   "ASY"

eval_err_num:626
easy pred: ```sql SELECT country FROM airlines WHERE name = 'US Airways'
easy gold: SELECT country FROM Airlines WHERE Airline   =   "US Airways"

eval_err_num:627
easy pred: ```sql SELECT name FROM countries WHERE language = 'USA'
easy gold: SELECT Airline FROM Airlines WHERE country   =   "USA"

easy pred: select name from Highschooler where ID like 'A%'
easy gold: SELECT AVG ( grade )  FROM Highschooler

eval_err_num:628
medium pred: SELECT name FROM "poker_player" WHERE final_table_made = 1 AND PRIMARY KEY (Poker_Player_ID) = (SELECT people_id FROM "people") ORDER BY final_table_made ASC
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Final_Table_Made

eval_err_num:629
medium pred: SELECT nationality FROM "poker_player" WHERE final_table_made = 1 AND PRIMARY KEY (Poker_Player_ID) = (SELECT people_id FROM "people") ORDER BY final_table_made ASC
medium gold: SELECT T1.Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Final_Table_Made

eval_err_num:630
hard pred: SELECT name FROM "poker_player" WHERE money_rank = (SELECT MAX( Money_Rank) FROM "poker_player") ORDER BY money_rank DESC
hard gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings desc limit 1

eval_err_num:631
hard pred: SELECT name FROM "poker_player" WHERE money_rank = (SELECT MIN( Money_Rank) FROM "poker_player") ORDER BY money_rank ASC
hard gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings limit 1

eval_err_num:632
hard pred: SELECT best_finish FROM "poker_player" WHERE money_rank = (SELECT Money_Rank FROM "poker_player") ORDER BY money_rank DESC LIMIT 1
hard gold: SELECT T2.Best_Finish FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings  limit 1

eval_err_num:633
easy pred: SELECT transcript_date FROMTranscripts
easy gold: select transcript_date from Transcripts

eval_err_num:634
medium pred: SELECT MAX(transcript_date) AS most_ recent_date FROMTranscripts
medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1

eval_err_num:635
medium pred: SELECT MAX(transcript_date) AS last_transcript_release_date FROMTranscripts
medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1

eval_err_num:636
medium pred: SELECT Title,Directed_by,Written_by,Original_air_date,Production_code FROMCartoon WHERE Production_code='PPV' ORDER BY Air_Date DESC LIMIT 1
medium gold: SELECT Title FROM cartoon ORDER BY original_air_date LIMIT 1

eval_err_num:637
medium pred: SELECTChannel FROM TV_Series WHEREAir_Date DESC LIMIT 1
medium gold: SELECT Channel FROM cartoon ORDER BY original_air_date LIMIT 1

eval_err_num:638
medium pred: SELECT production_code,Channel FROM TV_Series WHEREAir_Date DESC LIMIT 1
medium gold: SELECT production_code ,  channel, original_air_date FROM cartoon ORDER BY original_air_date desc LIMIT 1

eval_err_num:639
easy pred: SELECTVersion_NumberFROMTemplates WHERETemplate_ID=3
easy gold: SELECT Version_Number from Templates where Template_ID  =  3

eval_err_num:640
medium pred: SELECTDocument_NameFROMDocuments WHERETemplate_ID=25
medium gold: SELECT t2.Document_Name from Templates as t1 join Documents as t2 on t1.Template_ID  =  t2.Template_ID where t1.Template_ID  =  25

eval_err_num:641
hard pred: SELECTTemplate_Type_Code FROMRef_Template_Types WHERETemplate_Type_Code NOT IN (SELECTTemplate_Type_Code FROMTemplates WHEREVersion_Number<=10)
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

eval_err_num:642
easy pred: SELECTVersion_NumberFROMTemplates WHERETemplate_ID=4
easy gold: SELECT Version_Number from Templates where Template_ID  =  4

eval_err_num:643
medium pred: SELECT Airline from airlines WHEREuid = ( SELECTuid FROM airports GROUP BYuid HAVING COUNT(DISTINCT AirportCode) > 1 )
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline WHERE T2.SourceAirport   =   " AHD"

eval_err_num:644
easy pred: SELECT COUNT(*) FROM "stadium" WHERE "capacity" > 1000
easy gold: SELECT count ( * )  FROM stadium WHERE average > 1000

eval_err_num:645
medium pred: SELECT Stadium_ID,Average FROM "stadium" WHERE Capacity < 5000
medium gold: SELECT name FROM stadium ORDER BY average LIMIT 1

eval_err_num:646
medium pred: SELECT "Stadium_ID",Average FROM "stadium" ORDER BY Average DESC LIMIT 1
medium gold: SELECT name FROM stadium ORDER BY average DESC LIMIT 1

eval_err_num:647
extra pred: SELECT * FROM `country` WHERE `Continent` NOT IN ('Asia', 'Pacific') AND `Population` < (SELECT MAX(population) FROM `city` WHERE `CountryCode` = `country``.`Code`)
extra gold: SELECT Name FROM country WHERE Continent   =   "Africa"  AND population  <   ( SELECT min ( population )  FROM country WHERE Continent   =   "Asia" ) 

eval_err_num:648
extra pred: SELECT * FROM `country` WHERE `Continent` NOT IN ('Asia', 'Pacific') AND `Population` < (SELECT MAX(population) FROM `city` WHERE `CountryCode` = `country``.`Code`)
extra gold: SELECT Name FROM country WHERE Continent   =   "Asia"  AND population  <   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 

eval_err_num:649
hard pred: SELECT * FROM `country` ORDER BY `LifeExpectancy` DESC LIMIT 1
hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy DESC LIMIT 1

eval_err_num:650
extra pred: SELECT COUNT(*) FROM `Dogs` WHERE `abandoned_yn` = 'Y'
extra gold: SELECT count ( * )  FROM Dogs WHERE dog_id NOT IN  (  SELECT dog_id FROM Treatments  ) 

eval_err_num:651
extra pred: SELECT COUNT(DISTINCT `dog_id`) FROM `Dogs` WHERE `abandoned_yn` = 'Y'
extra gold: SELECT count ( * )  FROM Dogs WHERE abandoned_yn  =  1 AND dog_id NOT IN  (  SELECT dog_id FROM Treatments  ) 

eval_err_num:652
medium pred: SELECT `dog_id`, `Treatment_type_code` FROM `Treatments` WHERE `date_of_Treatment` = '2022-01-01' AND `cost_of_ Treatment` = 0
medium gold: SELECT T1.dog_id, T2.treatment_type_code FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE abandoned_yn  =  1

eval_err_num:653
easy pred: SELECT * FROM "employee" WHERE "Name" = 'George Chuter'
easy gold: select age from employee where name  =  "George Chuter"

eval_err_num:654
easy pred: SELECT Employee_ID, Year_Awarded, Bonus FROM " Evaluation" WHERE Year_Awarded = 2018 AND Employee_ID = 1
easy gold: select city from employee where name  =  "Lee Mears"

eval_err_num:655
extra pred: SELECT degree_program_id, SUM(student_enrollment_id) AS total_student_enrollment FROM Student_Enrolment GROUP BY degree_program_id ORDER BY total_student_enrollment DESC LIMIT 1
extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:656
extra pred: SELECT * FROM ( SELECT degree_program_id, COUNT(*) AS total_student_enrollment FROM Student_Enrolment GROUP BY degree_program_id ) AS common_degree_summary_表 WHERE degree_program_id = 9
extra gold: SELECT T1.degree_program_id  FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:657
easy pred: SELECT COUNT(*) AS num_students FROM Student_Enrolment WHERE degree_program_id = 9
easy gold: SELECT COUNT ( * )  FROM Student_Enrolment WHERE degree_program_id  =  "9"

eval_err_num:658
medium pred: SELECT COUNT(*) AS num_masters FROM ( SELECT COUNT(*) AS num_students, COUNT(*) AS num_enrollments FROM Student_Enrolment GROUP BY program_id, student_id ) AS master_table WHERE program_id = 9
medium gold: SELECT COUNT ( * )  FROM Degree_Programs WHERE degree_summary_name  =  "Master" AND degree_program_id  =  "9"

eval_err_num:659
extra pred: SELECT program_id, COUNT(*) AS total_students FROM Student_Enrolment GROUP BY program_id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count ( * )  limit 1

eval_err_num:660
easy pred: SELECT COUNT(*) FROM ( SELECT student_id, COUNT(*) FROM table GROUP BY student_id ) AS table_count WHERE student_id = 3
easy gold: SELECT COUNT ( * )  FROM Student_Enrolment where degree_program_id  =  "3"

eval_err_num:661
easy pred: SELECT SUM(cost_of_ Treatment) AS total_cost FROM Treatments
easy gold: SELECT sum ( cost_of_treatment )  from treatments

eval_err_num:662
hard pred: SELECT first_name, last_name FROMOwners WHERE owner_id IN (SELECT id FROM Treatments GROUP BY dog_id HAVING MIN(cost_of_ treatment) = (SELECT MIN(cost_of_ treatment) FROM Treatments)) ORDER BY id DESC
hard gold: select T1.first_name, T1.last_name from Professionals as T1 join Treatments as T2 on T1.professional_id  =  T2.professional_id order by T2.cost_of_treatment asc limit 1

eval_err_num:663
medium pred: SELECT dog_id FROM (SELECT id FROM Treatments GROUP BY dog_id HAVING MIN(cost_of_ treatment) = (SELECT MIN(cost_of_ treatment) FROM Treatments)) AS subquery WHERE cost_of_ treatment < (SELECT MAX(cost_of_ treatment) FROM Treatments)
medium gold: select dog_id from treatments order by cost_of_treatment asc limit 1

eval_err_num:664
medium pred: SELECTContId FROMcontinents
medium gold: SELECT ContId ,  Continent  FROM CONTINENTS

eval_err_num:665
medium pred: SELECT continent, COUNT(*) AS Num_Country FROMcontinents
medium gold: SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.Continent GROUP BY T1.ContId

eval_err_num:666
extra pred: SELECTContinent FROMcontinents GROUP BYContinent HAVING COUNT(*) = (SELECT COUNT(*) FROMcontinents WHEREContinent = '非洲')
extra gold: SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.Continent GROUP BY T1.ContId ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:667
medium pred: select Document_ID, Document_Name, Paragraph_ID, COUNT(*) from Paragraphs group by Document_ID, Document_Name having COUNT(*) >= 2
medium gold: SELECT T1.document_id ,  T2.document_name ,  count ( * )  FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id GROUP BY T1.document_id

eval_err_num:668
easy pred: select Paragraph_Text, Case When Other_Details = 'NULL' Then 'NULL' Else Other_Details end as Other_Details from Paragraphs
easy gold: SELECT Paragraph_Text FROM Paragraphs WHERE Other_Details !=  "NULL"

eval_err_num:669
easy pred: SELECT * FROM "Cartoon" WHERE "Written_by" = ' Todd Casey'
easy gold: select * from Cartoon where Written_by  =  'Todd Casey'

eval_err_num:670
easy pred: SELECT Title FROM "Cartoon" WHERE "Type" = 'Title'
easy gold: select Title from Cartoon where Written_by  =  'Todd Casey'

eval_err_num:671
medium pred: SELECT * FROM "Cartoon" AS t1 join "TV_Series" AS t2 on t1."id" = t2."Channel"
medium gold: SELECT T1.id FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by  =  'Todd Casey'

eval_err_num:672
medium pred: select sum(total_spent) from "visit" where "visitor_ID" in (SELECT "ID" from "visitor" where "Level_of_ Membership" = 1)
medium gold: SELECT sum ( t2.Total_spent )  FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id WHERE t1.Level_of_membership   =   1

eval_err_num:673
easy pred: select count(distinct "visitor_ID") from "visitor" where "Level_of_ Membership" = 1
easy gold: SELECT COUNT ( id )  FROM visitor WHERE Level_of_membership  =  1

eval_err_num:674
easy pred: select count(distinct "Level_of_ Membership") from " visitor"
easy gold: SELECT COUNT ( DISTINCT level_of_membership )  FROM visitor

eval_err_num:675
easy pred: select * from (SELECT "Name" from "visitor" where "Level_of_ membership" = 1)
easy gold: SELECT name FROM visitor WHERE Level_of_membership  =  1

eval_err_num:676
medium pred: 抱歉,您的问题似乎有误,因为您并没有提供要查询的表名或查询语句。请提供更多上下文信息,以便我可以更好地回答您的问题。
medium gold: SELECT  t1.level_of_membership, sum ( Total_spent )  FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id group by Level_of_membership

medium pred: select count(distinct document_id) from documents where document_name = 'Welcome to NY'
medium gold: SELECT count ( * )  FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id WHERE T2.Document_Name   =   'Welcome to NY'

medium pred: select Paragraph_Text from Paragraphs
medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id WHERE T2.Document_Name   =   'Welcome to NY'

medium pred: select distinct Paragraph_ID from Paragraphs
medium gold: SELECT T1.paragraph_id FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id WHERE T2.Document_Name   =   'Welcome to NY'

eval_err_num:677
medium pred: SELECT player_id, SUM(ranking_points) AS total_ranking_point FROM rankings GROUP BY player_id ORDER BY total_ranking_point DESC
medium gold: SELECT sum ( ranking_points )  ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.first_name

eval_err_num:678
medium pred: SELECT player_id, name FROM ( SELECT player_id, MAX(ranking_point) AS max_ranking_point FROM rankings GROUP BY player_id ) subquery WHERE max_ranking_point = ( SELECT MAX(max_ranking_point) FROM subquery ) AND name = 'John Doe'
medium gold: SELECT distinct T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id WHERE T2.ranking  =  1

eval_err_num:679
hard pred: SELECT Code, Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName, GovernmentForm,HeadOfState, Capital,Code2,Is Official,Percentage FROM city JOIN country ON city.CountryCode = country.Code JOIN sqlite_sequence ON city.Sequence = sqlite_sequence.Name JOIN countrylanguage ON sqlite_sequence.CountryCode = countrylanguage.CountryCode GROUP BY Code, Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName, GovernmentForm,HeadOfState, Capital,Code2,Is Official,Percentage
hard gold: SELECT Name FROM country WHERE Continent  =  "Africa" order by population desc limit 1

easy pred: SELECT population FROM country WHERE Code = ' Nigeria'
easy gold: select population from country where Name  =  'Nigeria'

eval_err_num:680
hard pred: SELECT Code, Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName, GovernmentForm,HeadOfState, Capital,Code2,IsOfficial,Percentage FROM city JOIN country ON city.CountryCode = country.Code JOIN sqlite_sequence ON city.Sequence = sqlite_sequence.Name JOIN countrylanguage ON sqlite_sequence.CountryCode = countrylanguage.CountryCode JOIN country ON country.Code = 'China' GROUP BY Code, Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName, GovernmentForm,HeadOfState, Capital,Code2,Is Official,Percentage
hard gold: SELECT Name FROM country WHERE Continent   =   "Asia"  order by population desc limit 1

eval_err_num:681
easy pred: SELECT population FROM table
easy gold: SELECT population from country where name  =  'China'

eval_err_num:682
extra pred: SELECT COUNT(*) as num FROM table WHERE population > (SELECT population FROM country WHERE Code = ' Nigeria')
extra gold: SELECT count ( Name )  FROM country WHERE Continent   =   "Asia"  AND population >  ( SELECT population FROM country WHERE name  =  'Nigeria' ) 

eval_err_num:683
extra pred: SELECT Code, Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName, GovernmentForm,HeadOfState, Capital,Code2,Is Official,Percentage FROM table ORDER BY Code, Name LIMIT 10
extra gold: SELECT Name FROM country WHERE Continent   =   "Asia"  AND population >  ( SELECT population FROM country WHERE name  =  'Nigeria' ) 

eval_err_num:684
hard pred: select * from table whereContinent='Asia' and population大于等于1000
hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T1.Continent   =   "Asia"

eval_err_num:685
hard pred: select * from table where population大于等于200000
hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T3.Population >200000

eval_err_num:686
hard pred: select avg(population) from table
hard gold: SELECT avg ( T3.Population )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T1.Name  =  "China"

eval_err_num:687
hard pred: select avg(population) from table where language='NL'
hard gold: SELECT avg ( T3.Population )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T2.Language  =  "Dutch"

eval_err_num:688
easy pred: SELECT COUNT(*) FROM "visit" WHERE Museum_ID = 1
easy gold: SELECT count ( * )  from visitor

eval_err_num:689
easy pred: SELECT COUNT(*) FROM "visitor" WHERE Level_of_ Membership > 4
easy gold: SELECT count ( * )  FROM visitor WHERE Level_of_membership  >  4

eval_err_num:690
easy pred: SELECT Name FROM "museum" WHERE Num_of_ Staff > 0; SELECT Name FROM "visitor" WHERE Num_of_ Staff > 0
easy gold: SELECT name FROM visitor WHERE Level_of_membership  >  4

eval_err_num:691
medium pred: SELECT *, (SELECT COUNT(*) FROM "visitor" WHERE Level_of_ Membership > 4) AS higher_level FROM "museum"
medium gold: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC

eval_err_num:692
medium pred: SELECT first_name, AVG(ranking_points) as average_ranking FROM players GROUP BY first_name
medium gold: SELECT avg ( ranking )  ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id

eval_err_num:693
medium pred: SELECT first_name, last_name, AVG(ranking_points) as average_ranking FROM players GROUP BY first_name, last_name
medium gold: SELECT avg ( ranking )  ,  T1.first_name, t1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id

eval_err_num:694
medium pred: SELECT full_name FROM players WHERE hand = 'L'
medium gold: SELECT  T1.first_name, t1.last_name FROM players AS T1 where t1.hand  =  "L"

eval_err_num:695
easy pred: SELECT last_name FROM players WHERE player_id = ( SELECT player_id FROM matches WHERE match_type = 'tournament' AND winner_id = 'W' )
easy gold: SELECT T1.last_name FROM players AS T1 where t1.hand  =  "L"

eval_err_num:696
hard pred: SELECT AVG(ranking_points) as average_ranking, player_id, first_name, last_name FROM players WHERE hand = 'L' GROUP BY player_id, first_name, last_name
hard gold: SELECT avg ( ranking )  ,  T1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id   =   T2.player_id where T1.hand  =  "L" GROUP BY T1.first_name

eval_err_num:697
hard pred: SELECT AVG(grade) AS average_grade FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend WHERE friend_id IN (SELECT liked_id FROM likes))
hard gold: SELECT avg ( grade )  FROM Highschooler WHERE id IN  ( SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id ) 

eval_err_num:698
hard pred: SELECT * FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend WHERE friend_id IN (SELECT likes_id FROM likes))
hard gold: SELECT * FROM Highschooler WHERE id not IN  ( SELECT student_id FROM Friend ) 

hard pred: SELECT name, grade FROM Highschooler GROUP BY name, grade HAVING COUNT(*) > 0
hard gold: SELECT grade FROM Highschooler WHERE id not IN  ( SELECT student_id FROM Friend ) 

hard pred: SELECT name FROM Highschooler
hard gold: SELECT name FROM Highschooler WHERE id not IN  ( SELECT student_id FROM Friend ) 

eval_err_num:699
hard pred: SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend WHERE friend_id IN (SELECT likes_id FROM likes))
hard gold: SELECT name FROM Highschooler WHERE id IN  ( SELECT student_id FROM Friend ) 

easy pred: SELECT name, grade FROM Highschooler
easy gold: SELECT grade from highschooler where name  =  "Kyle"

hard pred: SELECT name FROM stadium
hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN  ( SELECT stadium_id FROM concert ) 

eval_err_num:700
medium pred: SELECT Stadium.name, SUM(Capacity) AS total_capacity FROM stadium JOIN ( SELECT Capacity, COUNT(*) AS count FROM concerts GROUP BY Capacity ) concert ON Stadium.capacity = concert.Capacity AND Stadium.name = concert.stadium_name JOIN concerts ON concert.concert_id = concerts.concert_id GROUP BY Stadium.name HAVING COUNT(DISTINCT concerts.concert_id) = (SELECT COUNT(*) FROM concerts)
medium gold: SELECT name FROM stadium ORDER BY Highest DESC LIMIT 1

eval_err_num:701
hard pred: SELECT COUNT(*) as most_common_ citizenship FROM "singer" GROUP BY "Citizenship" ORDER BY COUNT(*) DESC
hard gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT ( * )  DESC LIMIT 1

eval_err_num:702
hard pred: SELECT COUNT(*) as least_common_ citizenship FROM "singer" GROUP BY "Citizenship" ORDER BY COUNT(*) DESC
hard gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT ( * )  ASC LIMIT 1

eval_err_num:703
easy pred: SELECT Name, Birth_Year, Net_ Worth_Millions, Citizenship FROM "singer" WHERE Citizenship = '澳大利亚'
easy gold: SELECT name FROM singer where Citizenship = 'Australia'

eval_err_num:704
easy pred: SELECT * FROM "people" WHERE "people"." People_ID" = 1
easy gold: SELECT Nationality FROM people where People_ID = 1

eval_err_num:705
easy pred: SELECT DATE("2000-01-01") AS birthday_date FROM "people" WHERE "people"." People_ID" = 1
easy gold: SELECT Birth_Date FROM people where Name = "Teodor Salparov"

eval_err_num:706
easy pred: SELECT "poker_player"."Earnings" FROM "poker_player" WHERE "poker_player"."Poker_Player_ID" = 5
easy gold: SELECT Earnings FROM poker_player where People_ID   =   5

eval_err_num:707
hard pred: SELECT money_rank FROM "poker_player" WHERE height = ( SELECT MAX(height) FROM "people" WHERE "people"."People_ID" = "poker_player"."Poker_Player_ID" )
hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T1.Height DESC LIMIT 1

eval_err_num:708
extra pred: SELECT degree_program_id, COUNT(*) as num_students FROM Student_Enrolment GROUP BY degree_program_id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:709
easy pred: SELECT degree_program_id FROM Architecture_Programs WHERE name = 'Architecto'
easy gold: SELECT degree_program_id from Degree_Programs where degree_summary_description  =  'architecto'

eval_err_num:710
medium pred: SELECT SELECT * FROM students WHERE student_id = ( SELECT student_id FROM student_enrolment WHERE student_name = 'Timmothy' )
medium gold: SELECT T2.degree_program_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id WHERE T1.first_name  =  "Timmothy"

eval_err_num:711
medium pred: SELECT date_first_registered, date_left FROM students WHERE student_id = ( SELECT student_id FROM student_enrolment WHERE student_name = 'Timmothy' )
medium gold: SELECT date_first_registered, date_left FROM Students WHERE first_name  =  "Timmothy"

easy pred: select count(distinct PetType) from Pets
easy gold: SELECT count ( * )   from Pets where PetType = "dog"

easy pred: select pet_age from Pets
easy gold: SELECT pet_age  from Pets where PetType = "dog"

extra pred: select weight from Pets order by pet_age asc limit 1
extra gold: SELECT weight  from Pets where PetType = "dog" and pet_age  =   ( select min ( pet_age )  from Pets where PetType = "dog" ) 

eval_err_num:712
medium pred: SELECT t1.last_name FROM students t1 INNER JOIN addresses t2 ON t1.address_id = t2.address_id AND t2.state = ' North Carolina'
medium gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'

eval_err_num:713
medium pred: SELECT t1.first_name, t2.last_name FROM students t1 INNER JOIN addresses t2 ON t1.address_id = t2.address_id AND t2.state = ' North Carolina'
medium gold: SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'

eval_err_num:714
extra pred: SELECT t1.last_name FROM students t1 INNER JOIN addresses t2 ON t1.address_id = t2.address_id AND t2.state = ' North Carolina' AND t2.department_id IS NULL
extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id

eval_err_num:715
extra pred: SELECT t1.first_name FROM students t1 INNER JOIN addresses t2 ON t1.address_id = t2.address_id AND t2.state = ' North Carolina' AND t2.department_id IS NULL
extra gold: SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id

medium pred: SELECT winner_name, winner_ioc FROM matches ORDER BY minutes DESC LIMIT 1; SELECTLoser_name,Loser_ioc FROM matches ORDER BY minutes DESC LIMIT 1
medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1

eval_err_num:716
medium pred: SELECT player_id, score FROM players WHERE player_id IN (SELECT player_id FROM matches ORDER BY minutes DESC LIMIT 1)
medium gold: SELECT score FROM matches ORDER BY minutes DESC LIMIT 1

eval_err_num:717
easy pred: select * from "model_list" where "Model" in (select "Model" from "car_makers") and "Maker" in (select "Maker" from "car_makers")
easy gold: select distinct Model from car_names

eval_err_num:718
hard pred: select distinct "Model" from "model_list" where "Maker" in (select "Maker" from "car_makers") and "Year" >= 1980
hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model   =   T2.model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.id WHERE T3.year  >  1980

eval_err_num:719
hard pred: SELECT grade FROM Highschooler WHERE ID IN (SELECT ID FROM Friend GROUP BY grade HAVING COUNT(*) > (SELECT COUNT(*) FROM Friend WHERE student_id = Highschooler.ID))
hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:720
easy pred: SELECT * FROM table WHERE name = 'tiffany'
easy gold: SELECT grade FROM Highschooler WHERE name  =  "Tiffany"

medium pred: SELECT grade FROM Highschooler WHERE ID = 1689
medium gold: SELECT grade FROM Highschooler WHERE name  =  "Gabriel" AND ID  =  1689

easy pred: SELECT * FROM Highschooler WHERE ID = 1510
easy gold: SELECT name FROM Highschooler WHERE ID  =  1510

eval_err_num:721
medium pred: SELECT first, last FROM owners WHERE owner_id = 1
medium gold: SELECT T1.first_name , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.owner_id   =  1

eval_err_num:722
medium pred: SELECT name FROM dogs WHERE owner_id = '1' AND state = 'VI'
medium gold: SELECT T2.name  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   = "Virginia"

eval_err_num:723
extra pred: SELECT CASE WHEN count(DISTINCT student_enrolment.student_id) = (SELECT count(DISTINCT course.course_id) FROM courses WHERE course.course_id = students.student_id) AND course.course_name = (SELECT course_name FROM courses WHERE course_name = students.course_name) THEN 'Least enrollment' ELSE course.course_name END AS cause_name FROM students INNER JOIN Student_Enrolment ON students.student_id = student_enrolment.student_id INNER JOIN courses ON student_enrolment.course_id = courses.course_id GROUP BY students.student_id ORDER BY count(DISTINCT student_enrolment.student_id) DESC
extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name ORDER BY count ( * )  LIMIT 1

eval_err_num:724
medium pred: SELECT COUNT(*) AS num_students FROM students INNER JOIN Student_Enrolment ON students.student_id = student_enrolment.student_id WHERE student_enrolment.course_id = 14
medium gold: SELECT  count ( * )  FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name having T1.course_id  =  14

eval_err_num:725
easy pred: SELECT COUNT(*) FROM `city` WHERE `CountryCode` = 'XX'; --XX 代表任意一个国别代码 SELECT COUNT(*) FROM `countrylanguage` WHERE `CountryCode` = 'XX'; --XX 代表任意一个国别代码
easy gold: SELECT count ( distinct  Language )  from countrylanguage

eval_err_num:726
easy pred: SELECT MAX(Percentage) AS highest_Percentage FROM `countrylanguage`
easy gold: SELECT max ( Percentage )  from countrylanguage

eval_err_num:727
hard pred: SELECT * FROM Friend WHERE student_id = (SELECT student_id FROM Highschooler WHERE name = ' Kyle')
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

easy pred: SELECT * FROM Highschooler WHERE ID = 1709
easy gold: SELECT name FROM highschooler where id  =  1709

eval_err_num:728
hard pred: SELECT * FROM Friend WHERE student_id = (SELECT student_id FROM Highschooler WHERE name = ' Jordan')
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Jordan"

eval_err_num:729
hard pred: SELECT * FROM Friend WHERE student_id = (SELECT student_id FROM Highschooler WHERE name = 'Gabriel')
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Gabriel"

eval_err_num:730
hard pred: SELECTCountryNameFROM countriesWHEREContinent = ' Europe'
hard gold: SELECT distinct T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe'

eval_err_num:731
extra pred: SELECT countries.CountryName, car_makers.Maker, COUNT(*) as number_of_car_makers FROM countries JOIN car_makers ON countries.Continent = car_makers.Continent GROUP BY countries.CountryName, car_makers.Maker ORDER BY number_of_carmakers DESC
extra gold: SELECT T1.CountryName, count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName

eval_err_num:732
extra pred: SELECT TABLE_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ' cars_data' AND COLUMN_NAME = 'Year'
extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName HAVING count ( * )    >=    3

eval_err_num:733
extra pred: SELECT TABLE_NAME, COUNT(*) as num FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ' cars_data' AND COLUMN_NAME = 'cylinders'
extra gold: SELECT T1.CountryName, count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName HAVING count ( * )    >=    3

eval_err_num:734
hard pred: SELECT COUNT(*) as total_car_makers FROM models WHERE model_list.Maker = ' Europe'
hard gold: SELECT count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe'

eval_err_num:735
hard pred: SELECT COUNT(*) as total_car_makers FROM models WHERE model_list.Maker = ' America'
hard gold: SELECT count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'america'

eval_err_num:736
hard pred: SELECT TABLE_NAME, COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = ' cars_data' AND COLUMN_NAME = 'Year'
hard gold: SELECT T3.Fullname FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'america'

eval_err_num:737
extra pred: SELECT SUM(访客_ID) FROM ( SELECT 访客_ID, COUNT(*) AS total_count FROM "visit" WHERE Museum_ID NOT IN ( SELECT Museum_ID FROM "museum" WHERE Open_Year >= 2010 ) ) subquery
extra gold: SELECT count ( * )  FROM visitor WHERE id NOT IN  ( SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID   =   t2.Museum_ID WHERE t1.open_year  >  2010 ) 

eval_err_num:738
extra pred: SELECT name, level_of_membership FROM "member" ORDER BY level_of_ Membership LIMIT 3
extra gold: SELECT name, level_of_membership FROM visitor WHERE id NOT IN  ( SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID   =   t2.Museum_ID WHERE t1.open_year  >  2010 ) 

eval_err_num:739
extra pred: SELECT COUNT(*) AS num_owner_no_dogs FROM ( SELECT owner_id, COUNT(*) AS num_of_Owners FROM Dogs WHERE owner_id NOT IN (SELECT owner_id FROMOwners) GROUP BY owner_id ) owners_no_dogs
extra gold: SELECT count ( * )  FROM Owners WHERE owner_id NOT IN  (  SELECT owner_id FROM Dogs  ) 

eval_err_num:740
extra pred: SELECT name, full_name FROM dogs ORDER BY full_name DESC LIMIT 10
extra gold: SELECT count ( * )  FROM Owners WHERE owner_id NOT IN  (  SELECT owner_id FROM Dogs  ) 

eval_err_num:741
medium pred: SELECT * FROM "Cartoon" WHEREOriginal_air_date='2021-01-01'
medium gold: SELECT title  FROM cartoon ORDER BY original_air_date LIMIT 1

eval_err_num:742
medium pred: SELECT * FROM "Cartoon" WHEREOriginal_air_date='2021-09-15'
medium gold: SELECT title  FROM cartoon ORDER BY original_air_date desc LIMIT 1

eval_err_num:743
medium pred: ```sql SELECT * FROM "Cartoon" WHEREChannel='YouTube'
medium gold: SELECT channel FROM cartoon ORDER BY original_air_date desc LIMIT 1

eval_err_num:744
medium pred: ```sql SELECT "Production_code" FROM "Cartoon"
medium gold: SELECT production_code FROM cartoon ORDER BY original_air_date desc LIMIT 1

eval_err_num:745
easy pred: select * from "singer" where birth_year < 1945
easy gold: SELECT * FROM singer WHERE Birth_Year  <  1945

eval_err_num:746
easy pred: select * from "singer" where birth_year >= 1955
easy gold: SELECT * FROM singer WHERE Birth_Year  >  1955

eval_err_num:747
easy pred: select * from "singer" where citizenship = 'US'
easy gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945

eval_err_num:748
medium pred: select * from "singer" where citizenship = 'US'
medium gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 or Birth_Year  >  1955

eval_err_num:749
medium pred: select name, birth_year from "singer" where Citizenship = 'US' and birth_year < 1945
medium gold: SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'United States'

eval_err_num:750
extra pred: select * from "singer" where birth_year >= 1955 and Citizenship = 'US'
extra gold: SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'United States' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'United States'

eval_err_num:751
medium pred: select name, birth_year from "singer" where Citizenship = 'FR' and birth_year < 1945
medium gold: SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'France'

eval_err_num:752
extra pred: select * from "singer" where birth_year >= 1955 and Citizenship = 'FR'
extra gold: SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'France' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'France'

eval_err_num:753
extra pred: select name, birth_year from "singer" where Citizenship = ' Chilean' and birth_year < 1945 or birth_year >= 1955
extra gold: SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'Chile' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'Chile'

eval_err_num:754
easy pred: SELECT COUNT(*) FROM `country`
easy gold: select count ( * )  from Country

eval_err_num:755
easy pred: SELECT COUNT(*) FROM `countrylanguage`
easy gold: select count ( distinct Language )  from countrylanguage

eval_err_num:756
easy pred: SELECT SUM(floatval('AFG'::text)) AS surface_area FROM `country`
easy gold: select SurfaceArea from Country where Code  =  'AFG'

easy pred: SELECT population FROM city
easy gold: SELECT sum ( Population )  FROM country WHERE Region  =  "Caribbean"

easy pred: SELECT * FROM country WHERE lifeExpectancy < 72
easy gold: SELECT Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72

eval_err_num:757
medium pred: SELECT continents, SUM(population) AS total_population FROM country GROUP BY continents
medium gold: SELECT sum ( Population ) ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72

medium pred: SELECT lifeExpectancy FROM country
medium gold: SELECT avg ( LifeExpectancy )  ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72

eval_err_num:758
medium pred: SELECT continents, AVG(lifeExpectancy) AS average_lifeExpectancy, SUM(population) AS total_population FROM country WHERE lifeExpectancy < 72
medium gold: SELECT sum ( Population )  ,  avg ( LifeExpectancy )  ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72

eval_err_num:759
medium pred: SELECT street FROMOwners WHERE owner_id = 1
medium gold: SELECT street FROM Owners WHERE first_name  =  "Nora" and last_name  =  "Haley"

eval_err_num:760
medium pred: SELECT home_phone FROMOwners WHERE owner_id = 1
medium gold: SELECT home_phone FROM Owners WHERE first_name  =  "Nora" and last_name  =  "Haley"

eval_err_num:761
medium pred: SELECT email FROMOwners WHERE name = ' Jaclyn Stoltenberg'
medium gold: SELECT email_address FROM Owners WHERE first_name  =  "Jaclyn" and last_name  =  "Stoltenberg"

eval_err_num:762
easy pred: SELECT first_name FROMOwners WHERE name = ' Du Buque'
easy gold: SELECT first_name FROM Owners WHERE last_name  =  "DuBuque"

eval_err_num:763
hard pred: SELECT Document_ID, COUNT(*) as Num_Paragraphs FROM Documents GROUP BY Document_ID ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count ( * )  ASC LIMIT 1

eval_err_num:764
hard pred: SELECT Document_ID, COUNT(*) as Num_Paragraphs FROM Documents GROUP BY Document_ID ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count ( * )  desc LIMIT 1

eval_err_num:765
easy pred: SELECT COUNT(*) as Num_Paragraphs FROM Paragraphs WHERE Document_ID = 2394
easy gold: select count ( paragraph_id )  from Paragraphs where Document_ID  =  2394

eval_err_num:766
easy pred: SELECT Paragraph_Text FROM Paragraphs WHERE Paragraph_ID IN ( SELECT Paragraph_ID FROM table ORDER BY Paragraph_ID DESC LIMIT 3 )
easy gold: select Paragraph_Text from Paragraphs where Document_ID  =  2394

eval_err_num:767
extra pred: select owner_id, last_name from owners order by cost_of_ Treatments asc limit 1
extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id JOIN Treatments AS T3 ON T2.dog_id   =   T3.dog_id GROUP BY T1.owner_id ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:768
easy pred: SQL NOT GET: may be TIMEOUT
easy gold: SELECT distinct loser_id  FROM  matches where loser_name   = "Petra Kvitova"

hard pred: SELECT country FROM TV_Channel WHERE series_name like '%todd casey%'
hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by   =   'Todd Casey'

eval_err_num:769
medium pred: SELECT * FROM "Cartoon" WHERE directed_by = 'Michael Jelenic'
medium gold: SELECT directed_by from cartoon where title  =  "The Rise of the Blue Beetle!" and written_by  =  "Michael Jelenic"

eval_err_num:770
easy pred: SELECT package_option FROM "TV_Channel" WHERE country = 'ITally'
easy gold: SELECT Package_Option from tv_channel where country  =  "Italy"

eval_err_num:771
medium pred: SELECTsinger.Name, singer.Song_release_year FROM singer INNER JOIN concert ON singer.Singer_ID = concert.Singer_ID INNER JOINstadium ON concert.Stadium_ID =stadium.Stadium_ID WHERE singer.Age = ( SELECT min(age) FROM singer GROUP BY singer.Name )
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1

eval_err_num:772
medium pred: SELECT singer.Name, singer.Song_release_year FROM singer INNER JOIN concert ON singer.Singer_ID = concert.Singer_ID INNER JOINstadium ON concert.Stadium_ID =stadium.Stadium_ID WHERE singer.Age = ( SELECT max(age) FROM singer GROUP BY singer.Name )
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age desc LIMIT 1

eval_err_num:773
medium pred: SELECTsinger.Name FROMsinger INNER JOIN concert ON singer.Singer_ID = concert.Singer_ID INNER JOINstadium ON concert.Stadium_ID =stadium.Stadium_ID WHEREsinger.Age = ( SELECT min(age) FROM singer )
medium gold: SELECT Name FROM singer ORDER BY age LIMIT 1

eval_err_num:774
medium pred: SELECT singer.Name, singer.Song_release_year, singer.Age FROM singer INNER JOIN concert ON singer.Singer_ID = concert.Singer_ID INNER JOINstadium ON concert.Stadium_ID =stadium.Stadium_ID WHERE singer.Age = ( SELECT max(age) FROM singer )
medium gold: SELECT Name, age FROM singer ORDER BY age desc LIMIT 1

eval_err_num:775
medium pred: SELECT singer.Country FROM singer INNER JOIN concert ON singer.Singer_ID = concert.Singer_ID INNER JOINstadium ON concert.Stadium_ID =stadium.Stadium_ID WHERE singer.Country = ( SELECT country from singer )
medium gold: SELECT Country FROM singer ORDER BY age desc LIMIT 1

eval_err_num:776
easy pred: SELECTsinger.Name FROMsinger INNER JOIN concert ON singer.Singer_ID = concert.Singer_ID INNER JOINstadium ON concert.Stadium_ID =stadium.Stadium_ID WHEREsinger.Country = 'United States'
easy gold: SELECT Name FROM singer where country  =  'United States'

eval_err_num:777
hard pred: SELECT COUNT(*) FROM Has_Pet WHERE PetID = (SELECTPetID FROM Pets WHEREPetType = 'Dog')
hard gold: SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'dog'

eval_err_num:778
hard pred: SELECT COUNT(*) FROM Has_Pet WHERE PetID = (SELECTPetID FROM Pets WHEREPetType = 'Cat')
hard gold: SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat'

eval_err_num:779
extra pred: SELECT t1.StuID, t1.LName, t1.Fname FROM Student t1 join Has_Pet t2 on t1.StuID = t2.StuID AND t2.PetID = (SELECTPetID FROM Pets WHEREPetType = 'Dog') join Student t3 on t1.StuID = t3.StuID AND t3.LName = t3.Fname WHERE t1.Age >= 18 AND t2.Age >= 18 AND t3.Age >= 18
extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat' OR T3.pettype   =   'dog'

easy pred: SELECT state FROM professionals GROUP BY state HAVING COUNT(*) > 0
easy gold: SELECT state FROM Professionals

eval_err_num:780
hard pred: SELECT state FROM ( SELECT state, COUNT(*) as num FROM professionals GROUP BY state ) t WHERE num > 1
hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals

eval_err_num:781
medium pred: SELECT first_name, description FROM professionals
medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code

eval_err_num:782
medium pred: ``` SELECT first_name, treatment_type_description FROM treatment_types WHERE treatment_type_code = 'Treatment_Type_1'
medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code

eval_err_num:783
easy pred: SELECT COUNT(DISTINCT "Course_ID") AS num_courses FROM "course" WHERE Staring_Date = '2023-02-18'
easy gold: SELECT count ( Course_ID )  FROM course

eval_err_num:784
easy pred: SELECT Course, Staring_Date, Course_ID, grade FROM "course_arrange" WHERE Course_ID = '1' AND grade = 1
easy gold: SELECT Course FROM course

eval_err_num:785
easy pred: SELECT COUNT(DISTINCT "Teacher_ID") AS num_teachers FROM "teacher" WHERE Name = 'John Doe'
easy gold: SELECT count ( Teacher_ID )  FROM teacher

eval_err_num:786
hard pred: SELECT Name, COUNT(DISTINCT "Teacher_ID") AS num_teachers FROM "teacher" WHERE Name IN ('Alice', 'Bob', 'Charlie') AND Course = 'Math'
hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID WHERE T2.Course   =   "Math"

eval_err_num:787
hard pred: 输出结果:
hard gold: SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country GROUP BY T1.Continent

eval_err_num:788
hard pred: SQL NOT GET: may be TIMEOUT
hard gold: SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "asia"

eval_err_num:789
hard pred: select Continent, count(DISTINCT car_makers) as count_car_makers, sum(case when Country = 'China' then 1 else 0 end) as China_count, sum(case when Country = 'United States' then 1 else 0 end) as United_ States_count, sum(case when Country = 'Mexico' then 1 else 0 end) asMexico_count, sum(case when Country = 'Brazil' then 1 else 0 end) asBrazil_count, sum(case when Country = ' Russia' then 1 else 0 end) as Russia_count, count(DISTINCT model_list) as model_list_count from car_makers, models, countries, continents group by Continent, ModelList, Country
hard gold: SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "europe"

eval_err_num:790
hard pred: select Continent, count(DISTINCT car_makers) as count_car_makers, sum(case when Country = 'United States' then 1 else 0 end) as United_ States_count, sum(case when Country = 'Mexico' then 1 else 0 end) asMexico_count, sum(case when Country = 'Brazil' then 1 else 0 end) asBrazil_count, sum(case when Country = ' Russia' then 1 else 0 end) as Russia_count, count(DISTINCT model_list) as model_list_count from car_makers, models, countries, continents group by Continent, ModelList, Country
hard gold: SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "america"

eval_err_num:791
easy pred: select COUNT(*) as total_car_makers from car_makers group by Maker
easy gold: select count ( * )  from car_makers

eval_err_num:792
easy pred: CREATE TABLE `professionals` ( `professional_id` INTEGER PRIMARY KEY, `role_code` VARCHAR(10) NOT NULL, `first_name` VARCHAR(50), `street` VARCHAR(50), `city` VARCHAR(50), `state` VARCHAR(20), `zip_code` VARCHAR(20), `last_name` VARCHAR(50), `email_address` VARCHAR(50), `home_phone` VARCHAR(20), `cell_number` VARCHAR(20) ); CREATE TABLE `Treatments` ( ` Treatment_id` INTEGER PRIMARY KEY, `dog_id` INTEGER NOT NULL, `Professional_id` INTEGER NOT NULL, `Treatment_type_code` VARCHAR(10) NOT NULL, `date_of_Treatment` DATETIME, `cost_of_ Treatment` DECIMAL(19,4), FOREIGN KEY (` Treatment_type_code` ) REFERENCES `Treatment_Types`(` Treatment_type_code` ), FOREIGN KEY (`Professional_id` ) REFERENCES `Professionals`(`Professional_id` ) ); SELECT COUNT(DISTINCT professional_id) AS num_of_differs
easy gold: SELECT count ( distinct professional_id )  from professionals

eval_err_num:793
medium pred: SELECT Professional_id, (SELECT first_name, treatment_type_code FROMTreatments WHERE treatment_id = Professional_id) AS First_Name_and_Treatment_Type_Codes FROM Professionals
medium gold: SELECT T1.professional_id, T1.first_name ,  T3.treatment_type_code FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code

eval_err_num:794
extra pred: SELECT treatment_id, (SELECT COUNT(*) FROMTreatments WHERE treatment_type_code = 'Treatment_type_code' AND treatment_date = 'YYYY-MM-DD') AS recent_ treatments, (SELECT COUNT(*) FROM treatments) AS treatments_count FROM Professionals
extra gold: SELECT T1.professional_id, T1.first_name, T3.treatment_type_code FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code order by T2.date_of_treatment desc limit 5

hard pred: SELECT name FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship)
hard gold: SELECT name  FROM battle EXCEPT SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

extra pred: SELECT name, result FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship)
extra gold: SELECT name , RESULT FROM battle EXCEPT SELECT T1.name , T1.result  FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

extra pred: SELECT name, result, bulgarian_commander FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship)
extra gold: SELECT name , RESULT , bulgarian_commander FROM battle EXCEPT SELECT T1.name , T1.result , T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

easy pred: SELECT Document_Name, Document_Description, Other_Details FROM Documents
easy gold: SELECT * FROM Documents

easy pred: SELECT Document_Name, Document_Description, Other_Details FROM Documents WHERE Template_ID = 1
easy gold: SELECT * FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID   =   T2.Template_ID

medium pred: SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'PPT'
medium gold: SELECT count ( * )  FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID   =   T2.Template_ID WHERE T2.Template_Type_Code   =   'PPT'

eval_err_num:795
easy pred: SELECT AVERAGE(Accelerate) AS的平均加速度 FROM cars_data
easy gold: SELECT AVG ( Accelerate )  FROM cars_data

eval_err_num:796
easy pred: SELECT AVERAGE(horsepower) AS的平均 Horsepower FROM cars_data
easy gold: SELECT AVG ( Horsepower )  FROM cars_data

eval_err_num:797
extra pred: SELECT Model, Horsepower FROM cars_data WHERE cylinders = 4 GROUP BY Model HAVING COUNT(DISTINCT Horsepower) > 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1

eval_err_num:798
medium pred: SELECT c.Code, c.Name, country_language. Language, COUNT(*) AS num_ languages FROM country AS c LEFT JOIN countrylanguage ON c.Code = countrylanguage.CountryCode GROUP BY c.Code, c.Name HAVING COUNT(*) > 0 ORDER BY num_ languages DESC LIMIT 1
medium gold: SELECT count ( DISTINCT T2.Language )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial   =   "T"

eval_err_num:799
medium pred: SELECT SUM(DISTINCT language) AS total_languages FROM country AS c WHERE c.Continent = 'Asia' AND c.CodeBefore1930 = 1
medium gold: SELECT count ( DISTINCT T2.Language )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial   =   "T"

                     easy                 medium               hard                 extra                all                  joint_all           
count                417                  320                  163                  107                  1007                 293                 
=====================   EXECUTION ACCURACY     =====================
execution            0.168                0.047                0.006                0.037                0.000                0.014               

====================== EXACT MATCHING ACCURACY =====================
exact match          0.199                0.025                0.006                0.000                0.091                0.014               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.772                0.528                0.650                0.667                0.692                0.000               
select(no AGG)       0.789                0.585                0.650                0.667                0.716                0.000               
where                0.809                0.250                0.077                0.111                0.542                0.000               
where(no OP)         0.809                0.250                0.077                0.222                0.551                0.000               
group(no Having)     0.000                0.250                0.000                0.000                0.111                0.000               
group                0.000                0.000                0.000                0.000                0.000                0.000               
order                0.000                0.600                0.000                0.667                0.556                0.000               
and/or               1.000                0.886                0.963                0.748                0.931                0.000               
IUEN                 0.000                0.000                0.000                0.000                0.000                0.000               
keywords             0.913                0.457                0.125                0.333                0.644                0.000               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.228                0.087                0.080                0.075                0.143                0.000               
select(no AGG)       0.233                0.097                0.080                0.075                0.148                0.000               
where                0.241                0.042                0.010                0.013                0.112                0.000               
where(no OP)         0.241                0.042                0.010                0.027                0.114                0.000               
group(no Having)     0.000                0.019                0.000                0.000                0.008                0.000               
group                0.000                0.000                0.000                0.000                0.000                0.000               
order                0.000                0.039                0.000                0.054                0.030                0.000               
and/or               1.000                0.982                0.987                1.000                0.993                0.000               
IUEN                 0.000                0.000                0.000                0.000                0.000                0.000               
keywords             0.256                0.056                0.012                0.037                0.106                0.000               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.352                0.150                0.142                0.134                0.237                1.000               
select(no AGG)       0.359                0.166                0.142                0.134                0.245                1.000               
where                0.372                0.071                0.018                0.024                0.186                1.000               
where(no OP)         0.372                0.071                0.018                0.048                0.189                1.000               
group(no Having)     1.000                0.036                1.000                1.000                0.015                1.000               
group                1.000                1.000                1.000                1.000                1.000                1.000               
order                1.000                0.073                1.000                0.100                0.057                1.000               
and/or               1.000                0.932                0.975                0.856                0.961                1.000               
IUEN                 1.000                1.000                1.000                1.000                1.000                1.000               
keywords             0.400                0.099                0.022                0.067                0.182                1.000               


                     turn 1               turn 2               turn 3               turn 4               turn >4             
count                293                  285                  244                  114                  71                  
=====================   TRUN XECUTION ACCURACY     =====================
execution            0.140                0.081                0.070                0.053                0.042               

====================== TRUN EXACT MATCHING ACCURACY =====================
exact match          0.133                0.091                0.078                0.044                0.042               
