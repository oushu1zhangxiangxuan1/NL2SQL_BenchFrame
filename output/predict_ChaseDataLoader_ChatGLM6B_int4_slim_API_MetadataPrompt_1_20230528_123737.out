SELECT * FROM 图书
SELECT * FROM 电子书
SELECT MAX(电子书售价) AS price FROM 电子书
SELECT price AS price FROM 电子书 WHERE 书名='The Shawshank Redemption'
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SELECT 书名id, 平台id FROM 图书 INNER JOIN 平台 ON 图书.图书id = 平台.平台id INNER JOIN 图书与平台 ON 图书.书名id = 平台.平台id WHERE 平台.成立时间 = '2020-01-01'
SELECT 书名id, 平台id FROM 图书 INNER JOIN 平台 ON 图书.图书id = 平台.平台id WHERE 平台.是否自营 = '1'
SELECT 书名id, 平台id FROM 图书 INNER JOIN 平台 ON 图书.图书id = 平台.平台id INNER JOIN 图书与平台 ON 图书.书名id = 平台.平台id WHERE 平台.是否自营 = '1' GROUP BY 书名id, 平台id HAVING SUM(会员费) = '2'
SELECT price FROM 电子书 WHERE price > ( SELECT price FROM 电子书 WHERE 书籍id = '2' ORDER BY 售价 DESC LIMIT 1 )
SELECT price FROM 电子书 WHERE price < ( SELECT price FROM 电子书 WHERE 书籍id = '2' ORDER BY 售价 ASC LIMIT 1 )

SELECT t1.name, t1.time AS成立时间 FROM 图书 t1, 平台 t2 WHERE t1.书名id = t2.平台id AND t1.time > t2.成立时间
SELECT t1.name AS 平台名, t1.time AS 成立时间, t1.年营业额 AS 年营业额, t2.年营业额 AS 年营业额_binary FROM 平台 t1 INNER JOIN 图书 t2 ON t1.平台id = t2.平台id WHERE t1.成立时间 > t2.成立时间
SELECT t1.name, t1.time, t1.年营业额 AS 年营业额_text FROM 平台 t1 INNER JOIN ( SELECT name, MAX(time) AS max_time, COUNT(*) AS total_营业额 FROM 图书 GROUP BY name, max_time ) t2 ON t1.平台id = t2.平台id AND t1.time = t2.max_time WHERE t1.name = t2.name
SELECT name, MAX(年营业额) AS 最高年营业额, COUNT(*) AS 最高营业额_text FROM 图书 GROUP BY name SELECT MAX(年营业额) AS 最高年营业额, COUNT(*) AS 最高营业额_text FROM 平台 GROUP BY name

SELECT 书名, 平台id FROM 图书 JOIN 平台 ON 图书id = 平台id WHERE 平台id = '平台名'
SELECT price FROM 图书 JOIN 平台 ON 图书id = 平台id WHERE 平台id = '平台名'
SELECT price FROM 图书 JOIN 平台 ON 图书id = 平台id WHERE 平台id IN ('平台名1', '平台名2', '平台名3')

SELECT 书籍.书名, 平台.平台名, 书和平台之间的关系.评分, 书和平台之间的关系.购买人数, 书和平台之间的关系.加入购物车人数, 书和平台之间的关系.收藏人数, 书和平台之间的关系.缺货 FROM 书籍 书籍_table, 平台 平台_table, 书和平台之间的关系 书籍_table_and_平台_table, 平台 平台_table, 关系表_and_book_table 书籍_table_and_平台_table_and_关系表_and_book_table ORDER BY 评分 DESC, 购买人数 DESC
SQL NOT GET: may be TIMEOUT
SELECT 电子书.书名, 电子书.价格, COUNT(*) AS 购买人数 FROM 电子书 电子书_table, 关系表_and_book_table 书籍_table_and_平台_table, 书籍 书籍_table, 平台 平台_table, 关系表_and_book_table 书籍_table_and_平台_table_and_关系表_and_book_table GROUP BY 电子书.书名, 书籍_table.书名, 电子书_table.价格, 书籍_table_and_平台_table.书名, 书籍_table_and_平台_table_and_关系表_and_book_table.书名, 书籍_table_and_平台_table_and_关系表_and_book_table.价格, 书籍_table_and_平台_table_and_关系表_and_book_table.购买人数
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SELECT书名, 平台名, COUNT(*) as 购买人数 FROM 图书_平台 GROUP BY 书名, 平台名 HAVING 缺货
SELECT作者 FROM 图书 WHERE 类型 = 'text' FOREIGN KEY (作者) REFERENCES 图书 (图书id)
SELECT类型 FROM 图书 WHERE 类型 = 'text' FOREIGN KEY (类型) REFERENCES text (图书id)

SELECT * FROM 图书_平台 WHERE 书籍_id IN (SELECT MAX(书名id) FROM 图书_平台)
SELECTSELECT 售价 FROM 图书_平台 WHERE 书籍_id IN (SELECT MAX(书名id) FROM 图书_平台)
SELECTSELECTSELECT 电子书_id, 电子书_售价 FROM 电子书_平台 WHERE 电子书_id IN (SELECT MAX(电子书_id) FROM 电子书_平台)

SELECT 书名id, 评分, 购买人数, 加入购物车人数, 收藏人数, 缺货 FROM 图书与平台 WHERE 书名id REFERENCES 图书 (图书id) AND 平台id REFERENCES 平台 (平台id)
SELECT AVG(评分) AS 平均得分 FROM 图书与平台 WHERE 书名id REFERENCES 图书 (图书id) AND 平台id REFERENCES 平台 (平台id)
SELECT COUNT(1) AS 参与人数 FROM 图书与平台 WHERE 书名id REFERENCES 图书 (图书id) AND 平台id REFERENCES 平台 (平台id)
SELECT 平台id AS 平台id, 书名id AS 书名id, 购买人数, 加入购物车人数, 收藏人数, 缺货 FROM 图书与平台 WHERE 书名id REFERENCES 图书 (图书id) AND 平台id REFERENCES 平台 (平台id)

SELECT * FROM "民俗节日" WHERE "民族id" IN (SELECT "民族id" FROM "民族") AND "时间" = '2022-01-01' AND "纪念" = '自由'
SELECT * FROM "民俗节日" WHERE "节日" = '春节' AND "民族id" = '汉族' AND "纪念" = '1949-01-01'
SELECT * FROM "民俗节日" WHERE "节日" = '春节' AND "民族id" = '汉族' AND "纪念" = '1949-01-01' AND "庆祝" = '2022-01-01' AND "时间" = '2022-01-01'

SELECT COUNT(*) FROM "民族" WHERE "民族id" IN (SELECT "民族id" FROM "民俗节日" WHERE "时间" = '2022-01-01' AND "纪念" = 'NULL')
SELECT * FROM "民族" WHERE "民族id" IN (SELECT "民族id" FROM "民俗节日" WHERE "时间" = '2022-01-01' AND "纪念" = 'NULL')
SELECT COUNT(*) AS "人口数量" FROM "民族" WHERE "民族id" IN (SELECT "民族id" FROM "民俗节日" WHERE "时间" = '2022-01-01' AND "纪念" = 'NULL')
SELECT *, COUNT(*) AS "人口数量" FROM "民族" GROUP BY "民族id" HAVING COUNT(*) > 1

SELECT宗教信仰 FROM "民族" WHERE 民族id IN (SELECT 民族id FROM "民族城市") ON DELETE NOACTION ON UPDATE NOACTION
SELECT 民族id, 语言 FROM "民族" WHERE 语言 IN (SELECT 语言 FROM "民族城市") ON DELETE NOACTION ON UPDATE NOACTION
SELECT 城市名称, COUNT(*) AS 人口 FROM "民族城市" GROUP BY 城市名称 ON DELETE NOACTION ON UPDATE NOACTION
SELECT 民族id, SUM(人口) AS 总人数 FROM "民族" GROUP BY 民族id ON DELETE NOACTION ON UPDATE NOACTION
SELECT 民族id, COUNT(*) AS 总人数, SUM(人口) AS 总人口 FROM "民族" GROUP BY 民族id, 总人数 ON DELETE NOACTION ON UPDATE NOACTION

SELECT 民族, 民族城市.人口 / 城市.人口 AS 比例 FROM "民族" AS 民族 INNER JOIN "民族城市" AS 民族城市 ON 民族.民族id = 民族城市.民族id INNER JOIN "城市" AS 城市 ON 民族城市.城市名称 = 城市.城市名称 GROUP BY 民族, 民族城市.人口 ORDER BY 比例 DESC
SELECT * FROM "民族城市" AS 民族城市 INNER JOIN "民族" AS 民族 ON 民族.民族id = 民族城市.民族id INNER JOIN "城市" AS 城市 ON 民族城市.城市名称 = 城市.城市名称 GROUP BY 民族, 民族城市.人口 HAVING MAX(人口) = (SELECT MAX(人口) FROM "民族城市" AS 民族城市 WHERE 民族.民族id = 民族城市.民族id) ORDER BY 比例 DESC
SELECT * FROM "民族城市" AS 民族城市 INNER JOIN "民族" AS 民族 ON 民族.民族id = 民族城市.民族id INNER JOIN "城市" AS 城市 ON 民族城市.城市名称 = 城市.城市名称 GROUP BY 民族, 民族城市.人口 HAVING MIN(人口) = (SELECT MIN(人口) FROM "民族城市" AS 民族城市 WHERE 民族.民族id = 民族城市.民族id) ORDER BY 比例 DESC
SELECT人口 FROM "民族" AS 民族 INNER JOIN "民族城市" AS 民族城市 ON 民族.民族id = 民族城市.民族id INNER JOIN "城市" AS 城市 ON 民族城市.城市名称 = 城市.城市名称 WHERE 民族.人口 > (SELECT COUNT(*) FROM "民族城市" AS 民族城市 WHERE 民族.民族id = 民族城市.民族id)

NO SQL FOUND
NO SQL FOUND
NO SQL FOUND
NO SQL FOUND

SELECT * FROM "公司" WHERE id IN (SELECT 所属公司id FROM "音箱产品" WHERE 名称 = '智能音箱' AND 售价 > 0)
SELECT 产品名称 FROM "音箱产品" WHERE 名称 = '智能音箱'
SELECT 售价 FROM "音箱产品" WHERE 名称 = '智能音箱' AND 售价 > 0
SELECT 售价, COUNT(*) as total_sales FROM "音箱产品" WHERE 名称 = '智能音箱' AND 售价 > 0 GROUP BY 售价 DESC ORDER BY total_sales DESC LIMIT 1

SELECT 公司名称, 排名 FROM "公司" WHERE 所属国家 = '中国' ORDER BY 排名 DESC LIMIT 1
SELECT 产品名 FROM "音箱产品" WHERE 所属公司 = '它们' LIMIT 1
SELECT 销售数量, COUNT(*) as 排名 FROM "产品销售" WHERE 季度 = '2022' GROUP BY 销售数量 ORDER BY COUNT(*) DESC LIMIT 1
SELECT 音箱产品名, COUNT(*) as 排名 FROM "音箱产品" WHERE 所属公司id = ( SELECT MAX(所属公司id) FROM "公司" GROUP BY 公司名称 ) GROUP BY 音箱产品名 ORDER BY COUNT(*) DESC LIMIT 1
SQL NOT GET: may be TIMEOUT

SELECT 音箱产品.名称, 产品销售.季度, 音箱产品.售价, 音箱产品.排名, 音箱产品.上升名次, COUNT(DISTINCT 产品销售.销售量) 销售量_增长 FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.音箱id WHERE 产品销售.季度 = 4 GROUP BY 音箱产品.名称, 产品销售.季度 ORDER BY 销售量_增长 DESC
SELECT 音箱产品.名称, 产品销售.季度, 音箱产品.售价, 音箱产品.排名, 音箱产品.上升名次, COUNT(DISTINCT 产品销售.销售量) 销售量_增长 FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.音箱id WHERE 产品销售.季度 = 4 GROUP BY 音箱产品.名称, 产品销售.季度 ORDER BY 销售量_增长 DESC
SELECT 音箱产品.名称, 产品销售.季度, 音箱产品.售价, 音箱产品.排名, COUNT(DISTINCT 产品销售.销售量) 销售量_增长 FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.音箱id WHERE 产品销售.季度 = 4 GROUP BY 音箱产品.名称, 产品销售.季度 ORDER BY COUNT(DISTINCT 产品销售.销售量) DESC, 音箱产品.排名 ASC

SELECT * FROM "国内游路线" WHERE 路线名称 = 'A线路'
SELECT 路线名称, 出发城市, 天数, '预售价格', '参团价格', '起团人数', '个人价格', '景点数' FROM "出境游路线" WHERE 路线名称 = 'A线路' AND 旅行社id = 'A旅行社'
SELECT 天数 FROM "国内游路线" WHERE 路线名称 = 'A线路' AND 旅行社id = 'A旅行社'
SELECT 天数, '成人价格', '儿童价格', '景点数' FROM "出境游路线" WHERE 路线名称 = 'A线路' AND 旅行社id = 'A旅行社' ORDER BY 天数 DESC LIMIT 1

SELECT * FROM "国内游路线" WHERE "预售价格" = (SELECT MAX("国内游路线预售价格") FROM "国内游路线" WHERE "旅行社id" = 1)
SELECT * FROM "出境游路线" WHERE "价格" = (SELECT MAX("价格") FROM "出境游路线" WHERE "旅行社id" = 1)
SELECT * FROM "出境游路线" WHERE "价格" IN (SELECT MAX("价格") FROM "出境游路线" WHERE "旅行社id" = 1)
SELECT * FROM "旅行社" WHERE "旅行社id" IN (SELECT MAX("旅行社id") FROM "旅行社" WHERE "名称" = '旅行社')

SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
NO SQL FOUND

SELECT * FROM "旅行社" WHERE 旅行社id = 5A
SELECT * FROM "出境游所含国家" WHERE 路线id IN (SELECT 路线id FROM "出境游路线" WHERE 旅行社id = 5A)
SELECT 天数, 门票总价格 FROM "出境游路线" ORDER BY 门票总价格 DESC LIMIT 1
SELECT a.旅行社id, a.出境游国家数量, a.国内游城市数量 FROM "旅行社" a JOIN "出境游所含国家" b ON a.旅行社id = b.旅行社id JOIN "国内游路线" c ON b.路线id = c.路线id WHERE a.旅行社id = 5A ORDER BY a.出境游国家数量 DESC, a.国内游城市数量 DESC LIMIT 1

SELECT书名, 平台id FROM 图书 INNER JOIN 平台 ON 图书id = 平台id ORDER BY 购买人数 DESC LIMIT 1
SELECT 书名, 平台id FROM 图书 INNER JOIN 平台 ON 图书id = 平台id WHERE 平台id = ( SELECT 平台id FROM 平台 GROUP BY 平台id ORDER BY COUNT(*) DESC LIMIT 1 )
SELECT 书名, MAX(评分) FROM 图书 GROUP BY 书名 HAVING MAX(评分) = ( SELECT MAX(评分) FROM 图书 GROUP BY 书名 )

SELECT * FROM 电视剧 WHERE 出品时间 < '2021-09-01' AND 出品公司 = 'ABC 电视剧公司'
NO SQL FOUND
NO SQL FOUND

SELECT商店名,软件数 FROM "应用商店" GROUP BY商店名 ORDER BY软件数 DESC LIMIT 1
SELECT * FROM "应用商店支持国家" WHERE "用户是否可以购买应用程序" = '1' AND "开发人员是否可以出售应用程序" = '0' LIMIT 1
SELECT * FROM "应用商店支持国家" WHERE "用户是否可以购买应用程序" = '1' AND "开发人员是否可以出售应用程序" = '0' LIMIT 1

SELECT MAX(下载量) FROM "软件下载" WHERE "软件id" = (SELECT "软件id" FROM "软件")
SELECT 软件名称 FROM "软件" WHERE 软件id = (SELECT "软件id" FROM "软件下载")
SELECT 用途 FROM "软件" WHERE 软件id = (SELECT "软件id" FROM "软件下载")
SELECT 软件名称, 软件用途 FROM "软件" WHERE 软件id IN (SELECT "软件id" FROM "软件下载")

SELECT * FROM输入法软件 WHERE 应用商店名 = 'Google Play Store' AND 软件下载支持国家 = 'Google Play国家'
SELECT * FROM地图软件 WHERE 应用商店名 = 'Google Play Store' AND 软件下载支持国家 = 'Google Play国家'
SELECT * FROM软件下载 WHERE 应用商店id = 'App Store' AND 下载量 > 1000 AND 评价人数 = 1 AND 好评数 > 0
SELECT COUNT(*) FROM应用商店支持国家 WHERE 商店名 = 'App Store' AND 用户是否可以购买应用程序 = 'True' AND 开发人员是否可以出售应用程序 = 'True'

SELECT t1.累计下载次数 FROM "应用商店" t1 join "应用商店支持国家" t2 on t1.商店id = t2.商店id join "软件" t3 on t1.软件id = t3.软件id where t2.用户是否可以购买应用程序 = '1' and t2.开发人员是否可以出售应用程序 = '0' order by t1.累计下载次数 limit 1
SELECT t1.国家 FROM "应用商店" t1 join "应用商店支持国家" t2 on t1.商店id = t2.商店id join "软件" t3 on t1.软件id = t3.软件id where t2.用户是否可以购买应用程序 = '0' and t2.开发人员是否可以出售应用程序 = '1' and t3.名称 = '酷安'
SELECT 商店名称 from "应用商店" join "应用商店支持国家" on 商店id = 应用商店支持国家.商店id join "软件" on 商店id =软件.软件id where 商店支持国家.用户是否可以购买应用程序 = '0' and 商店支持国家.开发人员是否可以出售应用程序 = '1' and 软件.名称 like '酷安%'
SELECT * FROM "应用商店" as t1 join "应用商店支持国家" as t2 on t1.商店id = t2.商店id join "软件" as t3 on t1.软件id = t3.软件id where t2.用户是否可以购买应用程序 = '0' and t2.开发人员是否可以出售应用程序 = '1' and t3.名称 like '酷安%'

SELECT软件id, MAX(好评数) AS max_好评数 FROM "软件下载" GROUP BY软件id ORDER BY max_好评数 DESC
SELECT软件id, MAX(下载量) AS max_下载量 FROM "软件下载" GROUP BY软件id ORDER BY max_下载量 DESC
SQL NOT GET: may be TIMEOUT

SELECT COUNT(*) FROM "应用商店" WHERE "商店名" = '小米应用商店'
SELECT 的总和 FROM "应用商店" t1, "软件" t2 WHERE t1.商店id = t2.商店id AND t2.软件id = '软件'
SELECT * FROM "应用商店" t1 JOIN "应用商店支持国家" t2 ON t1.商店id = t2.商店id AND t2.国家 = '中国'

SELECT * FROM "应用商店" WHERE "商店名"='打车软件' AND "应用商店支持国家"."商店id"=1
SELECT 软件下载."下载量" AS下载量, 软件下载."评价人数" AS评价人数, 软件下载."好评数" AS好评数, PRIMARY KEY (软件下载."软件id"), FOREIGN KEY (应用商店id) REFERENCES "应用商店" (应用商店id) ON DELETE NOACTION ON UPDATE NOACTION FROM "软件下载" WHERE 软件下载."应用商店支持国家" = '中国' ORDER BY 好评数 DESC
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SQL NOT GET: may be TIMEOUT
SELECT 公司名称, 集团名称, 城市名称, 城市id所属集团, 总餐饮收入, 同比增长, 总消费额, 总的人气, 总的排名 FROM 餐饮公司, 城市, 餐饮公司城市消费, 餐饮公司城市连锁 WHERE 公司id IN ( SELECT 公司id FROM 餐饮公司 JOIN 城市 ON 城市id = 公司id JOIN 餐饮公司城市消费 ON 餐饮公司城市消费id = 城市id JOIN 餐饮公司城市连锁 ON 城市连锁id = 城市id )
SELECT 公司名称, 餐饮类型 FROM 餐饮公司, 餐饮公司城市消费, 餐饮公司城市连锁 WHERE 公司id IN ( SELECT 公司id FROM 餐饮公司 JOIN 餐饮公司城市消费 ON 餐饮公司城市消费id = 公司id JOIN 餐饮公司城市连锁 ON 城市连锁id = 公司id )
SELECT 公司名称, 城市名称, 公司id, 经营年数, 餐饮收入, 同比增长, 消费额, 人气, 排名 FROM "餐饮公司", "城市", "餐饮公司城市消费", "餐饮公司城市连锁" WHERE 公司id IN ( SELECT 公司id FROM "餐饮公司" JOIN "城市" ON "城市"."城市id" = "餐饮公司"."城市id" JOIN "餐饮公司城市消费" ON "餐饮公司城市消费"."公司id" = "餐饮公司"."公司id" JOIN "城市" ON "城市"."城市id" = "城市"."城市id" JOIN "餐饮公司城市连锁" ON "餐饮公司城市连锁"."公司id" = "城市"."公司id" )

SELECT * FROM "餐饮公司城市连锁" WHERE 公司id IN (SELECT 公司id FROM "餐饮公司" WHERE 总部城市id = '北京') ON DELETE NOACTION ON UPDATE NOACTION
SELECT COUNT(*) as 分店数量 FROM "餐饮公司城市连锁" WHERE 城市id IN (SELECT 城市id FROM "城市") ON DELETE NOACTION ON UPDATE NOACTION
SELECT *, COUNT(*) as 员工数量 FROM "餐饮公司城市消费" join "餐饮公司城市连锁" on "餐饮公司城市消费"."公司id" = "餐饮公司城市连锁"."公司id" WHERE "餐饮公司城市消费"."城市id" IN (SELECT 城市id FROM "城市") ON DELETE NOACTION ON UPDATE NOACTION
SELECT 餐厅座位数, COUNT(*) as 餐厅座位数量 FROM "餐饮公司城市连锁" WHERE 公司id IN (SELECT 公司id FROM "餐饮公司") ON DELETE NOACTION ON UPDATE NOACTION
SELECT 总面积, SUM(面积) as 总面积 FROM "餐饮公司城市连锁" GROUP BY 公司id ON DELETE NOACTION ON UPDATE NOACTION

SELECT t1.name, t1.所属省份, t1.餐饮收入, t1.同比增长 FROM "城市" t1 INNER JOIN "餐饮公司" t2 ON t1.城市id = t2.总部城市id INNER JOIN "餐饮公司城市消费" t3 ON t2.公司id = t3.公司id INNER JOIN "餐饮公司城市连锁" t4 ON t3.城市id = t4.城市id WHERE t4.人气 = ( SELECT MAX(人气) FROM "餐饮公司城市消费" WHERE "餐饮公司城市消费"."公司id" = t2.公司id )
SELECT t1.name, t1.所属省份, t1.餐饮收入, t1.同比增长 FROM "城市" t1 INNER JOIN "餐饮公司" t2 ON t1.城市id = t2.总部城市id INNER JOIN "餐饮公司城市消费" t3 ON t2.公司id = t3.公司id INNER JOIN "餐饮公司城市连锁" t4 ON t3.城市id = t4.城市id WHERE t4.人气 = ( SELECT MAX(人气) FROM "餐饮公司城市消费" WHERE "餐饮公司城市消费"."公司id" = t2.公司id )
SELECT t1.name, t1.所属省份, t1.餐饮收入, t1.同比增长 FROM "城市" t1 INNER JOIN "餐饮公司" t2 ON t1.城市id = t2.总部城市id INNER JOIN "餐饮公司城市消费" t3 ON t2.公司id = t3.公司id INNER JOIN "餐饮公司城市连锁" t4 ON t3.城市id = t4.城市id WHERE t4.同比增长 = ( SELECT MAX(同比增长) FROM "餐饮公司城市消费" WHERE "餐饮公司城市消费"."公司id" = t2.公司id )
SELECT t1.name, t1.所属省份, MAX(t1.同比增长) AS 同比增长 FROM "城市" t1 INNER JOIN "餐饮公司城市消费" t3 ON t1.城市id = t3.城市id INNER JOIN "餐饮公司" t2 ON t3.公司id = t2.公司id GROUP BY t1.name, t1.所属省份 ORDER BY MAX(t1.同比增长) DESC LIMIT 1
SQL NOT GET: may be TIMEOUT

NO SQL FOUND
NO SQL FOUND
NO SQL FOUND
NO SQL FOUND

SELECT 书名id, 平台id FROM 图书, 平台 WHERE 图书id IN (SELECT 图书id FROM 图书) AND 平台id IN (SELECT 平台id FROM 平台) GROUP BY 书名id, 平台id HAVING COUNT(*) > 0
SELECT 书名id, 平台id FROM 图书, 平台 WHERE 图书id IN (SELECT 图书id FROM 图书) AND 平台id IN (SELECT 平台id FROM 平台) ORDER BY COUNT(*) DESC
SELECT书名id, 作者id, 出版社id, 书籍类型, 出版时间FROM 图书_table WHERE 出版社id IN (SELECT 出版社id FROM 出版社) AND 书籍类型 IN (SELECT 书籍类型 FROM 书籍) AND 出版时间 IN (SELECT 出版时间 FROM 出版时间) GROUP BY 书名id, 作者id, 出版社id, 书籍类型, 出版时间HAVING COUNT(*) > 0

SELECT 平台名 FROM 平台 WHERE 成立时间早于 '2010-01-01'
SELECT 是否自营 FROM 平台 WHERE 成立时间早于 '2010-01-01'
SELECT 书名, 电子书售价, 购买人数 FROM 图书与平台 WHERE 书名 in (SELECT 书名 from 图书 where 图书id in (SELECT 图书id from 平台 where 平台id in (SELECT 平台id from 图书_平台 WHERE 书名 in (SELECT 书名 from 图书 WHERE 类型 in ('e', 'r', 'm'))))

SELECT 书名, 平台id FROM 图书 JOIN 平台 ON 图书.平台id = 平台id WHERE 平台id = ( SELECT MAX(平台id) FROM 平台 )
SELECT 书名, 作者, 类型 FROM 图书 WHERE 类型 = 'text' LIMIT 1
SELECT 电子书.书名, 电子书.平台id, 电子书.电子书售价, 电子书.购买人数 FROM 图书_with_平台 书籍 JOIN 电子书 ON 书籍.书名id = 电子书.书名id JOIN 平台 ON 书籍.平台id = 平台.平台id WHERE 书籍.类型 = 'text' LIMIT 1

SELECT * FROM 图书 WHERE id IN (SELECT 图书id FROM 平台 WHERE 平台id IN (SELECT 平台id FROM 图书 WHERE 书名 IN (SELECT 书名id FROM 图书_平台 WHERE 平台id IN (SELECT 平台id FROM 图书_平台 WHERE 书名 IN (SELECT 书名id FROM 图书 WHERE 类型 = 'text'))) AND 年营业额 > 0)
SELECT * FROM 图书 WHERE id IN (SELECT 图书id FROM 平台 WHERE 平台id IN (SELECT 平台id FROM 图书 WHERE 书名 IN (SELECT 书名id FROM 图书_平台 WHERE 平台id IN (SELECT 平台id FROM 图书_平台 WHERE 书名 IN (SELECT 书名id FROM 图书 WHERE 类型 = 'text'))) AND 年营业额 > 0) AND 是否自营 = '1')
SELECT * FROM 图书 WHERE id IN (SELECT 图书id FROM 平台 WHERE 平台id IN (SELECT 平台id FROM 图书_平台 WHERE 平台id IN (SELECT 平台id FROM 图书_平台 WHERE 书名 IN (SELECT 书名id FROM 图书 WHERE 类型 = 'text'))) AND 年营业额 > 0) AND 是否自营 = '1' AND 平台名 = '京东'
SELECT评分 FROM 图书_平台 WHERE 书名id = (SELECT 书名id FROM 图书 WHERE 类型 = 'text' AND 出版社 = '淘宝') AND 平台id = (SELECT 平台id FROM 平台 WHERE 年营业额 > 0) AND 评分人数 = 1

SELECT * FROM 图书; SELECT * FROM 平台; SELECT * FROM 图书与平台
SELECT 营业额, COUNT(*) as 人数 FROM 图书; SELECT 营业额, COUNT(*) as 人数 FROM 平台; SELECT 营业额, COUNT(*) as 人数 FROM 图书与平台; SELECT 营业额, COUNT(*) as 人数 FROM 书籍; ORDER BY 营业额 DESC
SELECT 会员费 as 费用 FROM 平台; SELECT 会员费 as 费用 FROM 图书与平台; SELECT 会员费 as 费用 FROM 书籍
SELECT书名, 电子书售价 as 电子书售价, 购买人数 as 购买人数 FROM 书籍; SELECT 书名, 电子书售价 as 电子书售价, 购买人数 as 购买人数 FROM 图书与平台; SELECT 书名, 电子书售价 as 电子书售价, 购买人数 as 购买人数 FROM 平台; FROM 书籍, 书籍与平台, 平台, 书籍
SELECT 作者, 类型 FROM 书籍; SELECT 作者, 类型 FROM 图书与平台; SELECT 作者, 类型 FROM 平台; FROM 书籍, 书籍与平台, 平台, 书籍

SELECT 平台名 FROM 图书 INNER JOIN 平台 ON 图书.平台id = 平台.平台id WHERE 书名 = '巴菲特的估值逻辑'
SELECT MAX(电子书售价) AS MAX_电子书售价, MIN(电子书售价) AS MIN_电子书售价 FROM 电子书 WHERE 书名 = '巴菲特的估值逻辑' GROUP BY 书名 ORDER BY MAX_电子书售价 DESC, MIN_电子书售价 DESC
SELECT 电子书售价 - 会员价格 AS相差 FROM 电子书 WHERE 书名 = '巴菲特的估值逻辑' GROUP BY 书名 ORDER BY相差 DESC, 电子书售价 DESC LIMIT 1
SELECT 会员费 AS 会员费, 电子书售价 - 会员费 AS 相差 FROM 电子书 WHERE 书名 = '巴菲特的估值逻辑' GROUP BY 电子书售价, 会员费 ORDER BY 相差 DESC, 会员费 DESC LIMIT 1

SELECT 电视剧收视.收视率, 电视剧.剧名, 电视剧收视.平台id FROM 电视剧收视 INNER JOIN 电视剧 ON 电视剧收视.平台id = 电视剧.平台id INNER JOIN 电视台 ON 电视剧收视.电视台id = 电视台.电视台id WHERE 电视剧收视.时间段 = ( SELECT 时间段 FROM 电视节目 WHERE 电视节目.出品公司 = '出品公司' AND 电视节目.发行公司 = '发行公司' ORDER BY 收视率 DESC LIMIT 1 )
SELECT 电视剧.剧名, 电视剧.出品公司, 电视剧.发行公司, 时间段, 电视剧收视.收视率 FROM 电视剧 INNER JOIN 电视剧收视 ON 电视剧.剧名 = 电视剧收视.剧名 AND 电视剧.出品公司 = 电视剧收视.出品公司 AND 电视剧.发行公司 = 电视剧收视.发行公司 INNER JOIN 电视台 ON 电视剧收视.平台id = 电视剧收视.平台id WHERE 电视剧收视.时间段 = ( SELECT 时间段 FROM 电视节目 WHERE 电视节目.出品公司 = '出品公司' AND 电视节目.发行公司 = '发行公司' ORDER BY 收视率 DESC LIMIT 1 )
SELECT 电视剧.剧名, 电视剧.出品公司, 电视剧.发行公司, 电视台.平台id, 电视台.开播时间, 电视台.上线时间, 电视剧收视.收视率 FROM 电视剧 INNER JOIN 电视剧收视 ON 电视剧.剧名 = 电视剧收视.剧名 AND 电视剧.出品公司 = 电视剧收视.出品公司 AND 电视剧.发行公司 = 电视剧收视.发行公司 INNER JOIN 电视台 ON 电视剧收视.平台id = 电视台.平台id INNER JOIN 电视节目 ON 电视剧收视.平台id = 电视节目.平台id WHERE 电视台.开播时间 = ( SELECT 开播时间 FROM 电视台 WHERE 电视台.隶属机构 = '隶属机构' ORDER BY 开播时间 DESC LIMIT 1 )

SELECT首播平台id FROM 电视剧 WHERE 出品时间 = '2022-02-18 10:00:00' AND 出品公司 = 'TVB'
SELECT * FROM 电视台 WHERE 开播时间 = '2022-02-18 10:00:00' AND 上线时间 = '2022-02-18 10:00:00' AND 隶属机构 = 'TVB'
SELECT 时间段, 电视剧收视表的收视率 FROM 电视剧收视 WHERE 电视剧id = (SELECT 电视剧id FROM 电视剧收视 WHERE 平台id = 'TVB' AND 时间段 = '2022-02-19 11:00:00') order by 收视率 DESC limit 1
SELECT 电视剧id, 收视率 FROM 电视剧收视 WHERE 平台id = 'TVB' AND 时间段 = '2022-02-19 11:00:00' AND 时间段 = '2022-02-20 11:00:00' AND (SELECT COUNT(*) FROM 电视剧收视 WHERE 电视剧id = 电视剧表的id AND 平台id = 'TVB' AND 时间段 = '2022-02-19 11:00:00') > (SELECT COUNT(*) FROM 电视剧收视 WHERE 电视剧id = 电视剧表的id AND 平台id = 'TVB' AND 时间段 = '2022-02-20 11:00:00')
SELECT * FROM 电视台 WHERE 开播时间 = '2022-02-18 10:00:00' AND 上线时间 = '2022-02-18 10:00:00' AND 隶属机构 = '浙江台'

SELECT 出品公司, 发行公司 FROM 电视剧收视 cross join 电视剧 cross join 电视台 where 首播平台id in (SELECT 电视台id FROM 电视台) and 出品公司 in (SELECT 公司 text FROM 出品公司) and 发行公司 in (SELECT 公司 text FROM 发行公司) order by 首播时间, 出品公司
SELECT 电视剧编号, 剧名 FROM 电视剧收视 cross join 电视剧 cross join 电视台 where 出品公司 in (SELECT 公司 text FROM 出品公司) and 发行公司 in (SELECT 公司 text FROM 发行公司) and 出品公司 + 发行公司 = (SELECT MAX(出品公司) + MAX(发行公司) FROM 电视剧收视) order by 剧名, 出品公司
SELECT 电视剧编号, 出品时间, 发行时间 FROM 电视剧收视 cross join 电视剧 cross join 电视台 where 首播平台id in (SELECT 电视台id FROM 电视台) and 首播时间 in (SELECT time FROM 电视剧 WHERE 剧名 = '神鬼奇兵') and 首播时间 in (SELECT time FROM 电视剧 WHERE 剧名 = '神鬼奇兵') and 出品公司 in (SELECT 公司 text FROM 出品公司) and 发行公司 in (SELECT 公司 text FROM 发行公司) order by 电视剧编号, 出品时间, 发行时间
SELECT 首播平台id, 首播时间 FROM 电视剧收视 cross join 电视剧 cross join 电视台 where 首播平台id in (SELECT 电视台id FROM 电视台) and 首播时间 in (SELECT time FROM 电视剧 WHERE 剧名 = '神鬼奇兵') and 首播平台id in (SELECT 电视台id FROM 电视台) order by 首播平台id, 首播时间

SELECT 出品公司, COUNT(*) AS 数量 FROM 电视剧 GROUP BY 出品公司 HAVING 数量 > 1
SELECT 出品公司, SUM(出品时间) AS 数量 FROM 电视剧 GROUP BY 出品公司 HAVING 数量 > 1
SELECT 收视率, COUNT(*) AS 数量 FROM 电视剧收视 GROUP BY 收视率 HAVING COUNT(*) > 1

SELECT * FROM "球队" WHERE id IN ( SELECT 球队id FROM "篮球运动员" WHERE name = 'NBA总冠军' LIMIT 10 )
SELECT赛区, 冠军次数 FROM "球队" WHERE id IN ( SELECT id FROM "篮球运动员" WHERE name = 'NBA总冠军' LIMIT 10 )
SELECT联盟, 球队id, 冠军次数 FROM "球队" WHERE id IN ( SELECT id FROM "篮球运动员" WHERE name = 'NBA总冠军' LIMIT 10 )
SELECT联盟, 球队id, 冠军次数 FROM "球队" WHERE id IN ( SELECT id FROM "篮球运动员" WHERE name = 'NBA总冠军' LIMIT 10 )

SELECT t1.球员id, t2.参加选秀年 FROM "篮球运动员" t1 INNER JOIN "NBA总冠军" t2 ON t1.球员id = t2.球队id INNER JOIN "time" t3 ON t2.赛季 = t3.时间 WHERE t3.时间 = '1984-01-01' AND t1.是否状元 = '0'
SELECT t1.球员id, t2.就读的学校 FROM "篮球运动员" t1 INNER JOIN "NBA总冠军" t2 ON t1.球员id = t2.球队id INNER JOIN "text" t3 ON t2.就读的学校 = t3.学校名 WHERE t3.学校名 = 'Harlem High School' AND t1.是否状元 = '0'
SELECT t1.球员id, t2.是否状元 FROM "篮球运动员" t1 INNER JOIN "NBA总冠军" t2 ON t1.球员id = t2.球队id INNER JOIN "text" t3 ON t2.是否状元 = t3.学校名 WHERE t3.学校名 = 'Harlem High School'
SQL NOT GET: may be TIMEOUT

CREATE TABLE "MVP记录" ( "赛季" number, "球员id" number, "所属球队" TEXT, PRIMARY KEY ("球员id") ) CREATE TABLE "篮球运动员" ( "球员id" text, "中文名" text, "参加选秀年" time, "是否状元" binary, "获得球队" text, "毕业院校" text, "国籍" TEXT, PRIMARY KEY ("球员id") )
SELECT * FROM "NBA总冠军" WHERE "球队id" = ( SELECT "球队id" FROM "MVP记录" ORDER BY "赛季" DESC LIMIT 1 )
SELECT * FROM "NBA总冠军" WHERE "球队id" = ( SELECT "球队id" FROM "MVP记录" ORDER BY "赛季" DESC LIMIT 1 ) AND "总教练" = '冠军球队'

SELECT * FROM "NBA总冠军" WHERE "球队id" IN (SELECT "球队id" FROM "篮球运动员" WHERE "球员id" = (SELECT "球员id" FROM "篮球运动员" WHERE "获得球队" = '球队的赛季' AND "毕业院校" = '球队的年份' AND "国籍" = '球队的国家' LIMIT 1)) ON DELETE NOACTION ON UPDATE NOACTION
SELECT * FROM "NBA总冠军" WHERE "赛季" IN ( SELECT "赛季" FROM "MVP记录" WHERE "球员id" = ( SELECT "球员id" FROM "篮球运动员" WHERE "获得球队" = '球队的赛季' AND "毕业院校" = '球队的年份' AND "国籍" = '球队的国家' LIMIT 1 ) )
SELECT * FROM "NBA总冠军" WHERE "总教练" IN ( SELECT "总教练" FROM "篮球运动员" WHERE "获得球队" = '球队的赛季' AND "毕业院校" = '球队的年份' AND "国籍" = '球队的国家' LIMIT 1 )

SELECT 书籍.书名, 出版图书.书名, 网络小说.书名, 出版图书.评分, 出版图书.评价人数, 出版图书.字数, 出版图书.点击数, 网络小说.类型, 网络小说.状态, 网络小说.价格,畅销榜.周排名,畅销榜.月排名,畅销榜.总排名 FROM 书籍 INNER JOIN 出版图书 ON 书籍.书名 = 出版图书.书名 INNER JOIN 网络小说 ON 书籍.书名 = 网络小说.书名 INNER JOIN 畅销榜 ON 出版图书.出版图书id = 畅销榜.出版图书id ON DELETE > 0 ON UPDATE > 0
SELECT 作者.姓名, 作者.年龄 FROM作者 INNER JOIN 出版图书 ON作者.作者id = 出版图书.作者id INNER JOIN 网络小说 ON作者.作者id = 网络小说.作者id INNER JOIN 畅销榜 ON出版图书.出版图书id = 畅销榜.出版图书id ON DELETE > 0
SELECT 网络小说.书名, 网络小说.评分 FROM 网络小说 INNER JOIN 畅销榜 ON 网络小说.网络图书id = 畅销榜.网络图书id ORDER BY 网络小说.评分 DESC LIMIT 1
SELECT畅销榜.周排名,畅销榜.月排名,畅销榜.总排名 FROM畅销榜 INNER JOIN 畅销榜 ON畅销榜.网络小说id =畅销榜.网络小说id ORDER BY畅销榜.总排名 DESC LIMIT 100
SQL NOT GET: may be TIMEOUT

SELECT * FROM "网络小说" WHERE 状态 = '完结'
SELECT作者id FROM "网络小说" WHERE 状态 = '完结' AND 书名 = '穿越'
SELECT * FROM "网络小说" WHERE 状态 = '完结' AND 价格 >= 10000 ORDER BY 价格 DESC LIMIT 10
SELECT * FROM "网络小说" WHERE 状态 = '完结' AND 价格 < 10000 ORDER BY 价格 ASC LIMIT 10
SELECT * FROM "网络小说" WHERE 状态 = '完结' AND 书名 = '三生三世十里桃花'

SELECT 书名, 类型 FROM "出版图书" WHERE 作者id = (SELECT 作者id FROM "作者" WHERE name = '人类简史' AND age = 18)
SELECT 点击数 FROM "出版图书" WHERE 书名 = '人类简史' AND 出版图书id = (SELECT 出版图书id FROM "网络小说" WHERE 书名 = '人类简史' AND 评价人数 = 1 ORDER BY 点击 DESC LIMIT 1)
SELECT 作家id FROM "作者" WHERE name = '人类简史' AND age = 18 ORDER BY 姓名 ASC LIMIT 1

NO SQL FOUND
NO SQL FOUND
NO SQL FOUND
NO SQL FOUND

NO SQL FOUND
NO SQL FOUND
NO SQL FOUND
NO SQL FOUND

SELECT 网络小说id AS 书名, SUM(价格) AS 评分 FROM 收藏榜 WHERE 周排名 = (SELECT 周排名 FROM畅销榜 WHERE 网络小说id = 网络小说id_1) GROUP BY 网络小说id ORDER BY 周排名 DESC LIMIT 1
SELECT 网络小说id AS 书名, SUM(价格) AS 评分 FROM 收藏榜 WHERE 月排名 = (SELECT 月排名 FROM畅销榜 WHERE 网络小说id = 网络小说id_1) GROUP BY 网络小说id ORDER BY 月排名 ASC LIMIT 1
SELECT 网络小说id AS 书名, SUM(价格) AS 评分 FROM 收藏榜 WHERE 总排名 = (SELECT 总排名 FROM畅销榜 WHERE 网络小说id = 网络小说id_1) GROUP BY 网络小说id ORDER BY 总排名 DESC LIMIT 1
SELECT 作者.姓名, 作者.年龄 FROM作者 a JOIN出版图书 b ON a.作者id = b.作者id WHERE b.书名 = '流浪的蛙' ORDER BY a.姓名, a.年龄 LIMIT 1
SELECT age FROM作者 WHERE name = '作者'

SELECT 网络小说.书名,作者.姓名,作者.年龄, 出版图书.书名, 出版图书.评分, 出版图书.评价人数, 出版图书.字数, 出版图书.点击数, 网络小说.类型, 网络小说.状态, 网络小说.价格,畅销榜.周排名,畅销榜.月排名,畅销榜.总排名 FROM 网络小说 INNER JOIN畅销榜 ON 网络小说.网络图书id =畅销榜.网络小说id INNER JOIN作者 ON 网络小说.作者id =作者.作者id INNER JOIN 出版图书 ON 出版图书.出版图书id =作者.作者id ON DELETE NOACTION ON UPDATE NOACTION
SELECT作者.姓名,作者.年龄, 出版图书.书名, 出版图书.评分, 出版图书.评价人数, 出版图书.字数, 出版图书.点击数, 网络小说.类型, 网络小说.状态, 网络小说.价格,畅销榜.周排名,畅销榜.月排名,畅销榜.总排名 FROM作者 INNER JOIN 出版图书 ON作者.作者id = 出版图书.出版图书id INNER JOIN 网络小说 ON 网络小说.网络图书id = 出版图书.出版图书id INNER JOIN畅销榜 ON 网络小说.网络图书id =畅销榜.网络小说id ON DELETE NOACTION ON UPDATE NOACTION
SELECT书名,评分 FROM 网络小说 INNER JOIN畅销榜 ON 网络小说.网络图书id =畅销榜.网络小说id WHERE评分 = ( SELECT MAX(评分) FROM 网络小说 ) ON DELETE NOACTION ON UPDATE NOACTION
SELECT 网络小说.书名, 网络小说.评分,畅销榜.周排名,畅销榜.月排名,畅销榜.总排名 FROM 网络小说 INNER JOIN畅销榜 ON 网络小说.网络图书id =畅销榜.网络小说id WHERE 评分 = ( SELECT MAX(评分) FROM 网络小说 ) ON DELETE NOACTION ON UPDATE NOACTION
SELECT 网络小说.书名, 网络小说.状态 FROM 网络小说 INNER JOIN 状态表 ON 网络小说.网络图书id = 状态表.网络图书id WHERE 状态 = '收藏'

SELECT * FROM出版图书 WHERE点击数 = (SELECT MAX(点击数) FROM 网络小说 WHERE 网络小说id = 出版图书id)
SELECT * FROM出版图书 WHERE点击数 = (SELECT MAX(点击数) FROM 网络小说 WHERE 网络小说id = 出版图书id)
NO SQL FOUND

SELECT * FROM "网络小说" WHERE 所有权 = 'Y' AND 状态 = '已完成'
SELECT 价格 FROM "网络小说" WHERE 所有权 = 'Y' AND 状态 = '已完成' ORDER BY 价格 DESC LIMIT 1
SELECT 价格 FROM "网络小说" WHERE 所有权 = 'Y' AND 状态 = '已完成' ORDER BY 价格 ASC LIMIT 1
SQL NOT GET: may be TIMEOUT
SELECT 评估人 FROM "出版图书" WHERE 出版图书id = '82' AND 评价人数 = '1' AND 评分 > 2

SELECT * FROM 网络小说 WHERE 评分 > (SELECT 评分 FROM 出版图书 WHERE 书名 = '书名' AND 作者id = '作者id') AND 类型 = '类型'
NO SQL FOUND
NO SQL FOUND

NO SQL FOUND
NO SQL FOUND
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SELECT * FROM "台风" WHERE DATE(登陆时间) = (SELECT DATE(最早一次登陆时间) FROM "台风" AS t1 WHERE t1.台风id = '台风id' ORDER BY DATE(登陆时间) DESC LIMIT 1)

SELECT t1.name, t1.登陆地点, t1.登陆时间, t1.登陆强度, t1.死亡人数, t1.失踪人数, t2.经济损失 FROM "台风" t1 JOIN "台风影响的国家" t2 ON t1.台风id = t2.台风id WHERE t2.经济损失 = ( SELECT MAX(经济损失) FROM "台风影响的国家" WHERE "台风id" = t2.台风id ) ORDER BY 经济损失 DESC
SELECT t1.name, t1.登陆地点 FROM "台风" t1 JOIN "台风影响的中国省份" t2 ON t1.台风id = t2.台风id JOIN "台风影响的国家" t3 ON t1.台风id = t3.台风id WHERE t2.省份 = ( SELECT 省份 FROM "台风影响的中国省份" WHERE "台风id" = t2.台风id ) AND t3.国家 = ( SELECT 国家 FROM "台风影响的国家" WHERE "台风id" = t3.台风id ) AND t1.登陆地点 = t3.国家 ORDER BY t1.name
SELECT COUNT(*) as死亡人数 FROM "台风影响的中国省份" t1 JOIN "台风影响的国家" t2 ON t1.台风id = t2.台风id JOIN "台风" t3 ON t1.台风id = t3.台风id WHERE t2.国家 = ( SELECT 国家 FROM "台风影响的国家" WHERE "台风id" = t2.台风id ) AND t3.台风id = t2.台风id GROUP BY t1.省份, t2.国家, t3.台风id ORDER BY死亡人数 DESC

SELECT appname, appid, COUNT(*) AS download_count FROM "应用商店" AS app WHERE appid IN (SELECT appid FROM "软件") GROUP BY appid ORDER BY download_count DESC LIMIT 1
SELECT country FROM "应用商店" AS app WHERE appid IN (SELECT appid FROM "软件") GROUP BY country ORDER BY COUNT(*) DESC LIMIT 1
SELECT country, '允许用户购买应用程序' AS allowed_application_购买 FROM "应用商店" AS app WHERE appid IN (SELECT appid FROM "软件") FOREIGN KEY (appid) REFERENCES "软件" ("软件id") ON DELETE NOACTION ON UPDATE NOACTION
SQL NOT GET: may be TIMEOUT

SELECT * FROM "应用商店" WHERE "商店名" = '滴滴打车' AND "用户是否可以购买应用程序" = '1' AND "开发人员是否可以出售应用程序" = '0' SELECT * FROM "应用商店支持国家" WHERE "应用商店id" = '1' AND "国家" = '中国' SELECT * FROM "软件" WHERE "软件id" = '1' SELECT * FROM "软件下载" WHERE "应用商店id" = '1' AND "软件id" = '软件id'
SELECT AVG(下载量) FROM "应用商店" WHERE "商店名" = '滴滴打车' AND "用户是否可以购买应用程序" = '1' AND "开发人员是否可以出售应用程序" = '0' SELECT AVG(下载量) FROM "应用商店支持国家" WHERE "应用商店id" = '1' AND "国家" = '中国' SELECT AVG(下载量) FROM "软件" WHERE "软件id" = '1' SELECT AVG(下载量) FROM "软件下载" WHERE "应用商店id" = '1' AND "软件id" = '软件id'
SELECT 商店名, 下载量 FROM "应用商店" WHERE 商店名 = '滴滴打车' AND 下载量 > 0 SELECT 商店名, 下载量 FROM "应用商店支持国家" WHERE 商店名 = '滴滴打车' AND 下载量 > 0 SELECT 商店名, 下载量 FROM "软件" WHERE 软件id = '1' AND 商店名 = '滴滴打车' SELECT 商店名, 下载量 FROM "软件下载" WHERE 商店名 = '滴滴打车' AND 软件id = '软件id'

SELECT COUNT(*) FROM "台风影响的中国省份" WHERE "台风id" IN (SELECT "台风id" FROM "台风" WHERE "名称" = '台风' AND "登陆地点" = '中国') AND "死亡人数" > 0; SELECT COUNT(*) FROM "台风影响的国家" WHERE "台风id" IN (SELECT "台风id" FROM "台风" WHERE "名称" = '台风' AND "登陆地点" = '国家') AND "经济损失" > 0; SELECT "死亡人数" AS "总共死亡人数" FROM "台风影响的中国省份" WHERE "台风id" IN (SELECT "台风id" FROM "台风" WHERE "名称" = '台风' AND "登陆地点" = '中国') AND "死亡人数" > 0; SELECT "经济损失" AS "总共经济损失" FROM "台风影响的国家" WHERE "台风id" IN (SELECT "台风id" FROM "台风" WHERE "名称" = '台风' AND "登陆地点" = '国家') AND "经济损失" > 0
SELECT SUM(经济损失) AS "经济损失" FROM "台风影响的国家" WHERE "台风id" IN (SELECT "台风id" FROM "台风" WHERE "名称" = '台风' AND "登陆地点" = '国家') AND "经济损失" > 0
SQL NOT GET: may be TIMEOUT
SELECT * FROM "台风影响的中国省份" WHERE id IN (SELECT id FROM "台风")

SELECT 登陆时间 FROM "台风" WHERE 台风id = (SELECT 台风id FROM "台风影响的国家" WHERE 国家 = '澳大利亚')
SELECT 登陆强度, 登陆地点 FROM "台风" WHERE 台风id = (SELECT 台风id FROM "台风影响的国家" WHERE 国家 = '澳大利亚' AND 经济损失 = 0)
SELECT * FROM "台风影响的中国省份" WHERE 台风id IN (SELECT 台风id FROM "台风影响的国家" WHERE 国家 = '中国') AND 省份 = '省份名'
SELECT * FROM "台风影响的国家" WHERE 国家 = '澳大利亚' AND 经济损失 = 0
SELECT 经济损失 FROM "台风影响的国家" WHERE 国家 = '澳大利亚' AND 经济损失 = 0 DELETE FROM "台风影响的国家" WHERE 国家 = '澳大利亚'

SELECT 台风id, 名称, 登陆地点, 登陆时间, 登陆强度, 持续天数, 死亡人数, 经济损失 FROM "台风" WHERE 登陆地点 = '浙江省'
SELECT 台风id, 死亡数, 平均死亡数 FROM "台风" WHERE 影响地点 = '浙江省' GROUP BY 台风id ORDER BY 平均死亡数 DESC LIMIT 10
SELECT 台风id, 省份 FROM "台风" GROUP BY 台风id ORDER BY 省份 DESC LIMIT 10
SELECT 台风id, 省份, 国家, 经济损失 FROM "台风" GROUP BY 台风id, 省份, 国家 ORDER BY 经济损失 DESC LIMIT 10

SELECT作者.姓名, 出版图书.书名, 出版图书.作者id, 网络小说.书名, 网络小说.评分, 网络小说.类型, 网络小说.状态, 网络小说.价格,畅销榜.周排名,畅销榜.月排名,畅销榜.总排名 FROM作者 JOIN出版图书 ON作者.作者id =出版图书.作者id JOIN 网络小说 ON出版图书.出版图书id =网络小说.网络图书id JOIN畅销榜 ON 网络小说.网络图书id =畅销榜.网络小说id ON DELETE = 0 ON UPDATE = 0
SELECT作者.姓名, 出版图书.书名, 出版图书.作者id, 网络小说.书名, 网络小说.评分, 网络小说.类型, 网络小说.状态, 书籍.书名, 书籍.作者id, 书籍.作者id FROM作者 JOIN 出版图书 ON作者.作者id =出版图书.作者id JOIN 网络小说 ON出版图书.出版图书id =网络小说.网络图书id JOIN 书籍 ON网络小说.网络图书id =书籍.书籍id ON DELETE = 0 ON UPDATE = 0
SELECT作者.姓名, 出版图书.书名, 出版图书.作者id, 网络小说.书名, 网络小说.评分, 网络小说.类型, 网络小说.状态, 书籍.书名, 书籍.作者id, 书籍.作者id FROM作者 JOIN 出版图书 ON作者.作者id =出版图书.作者id JOIN 网络小说 ON出版图书.出版图书id =网络小说.网络图书id JOIN 书籍 ON网络小说.网络图书id =书籍.书籍id ON DELETE = 0 ON UPDATE = 0
SELECT作者.姓名, 出版图书.书名, 出版图书.作者id, 网络小说.书名, 网络小说.评分, 网络小说.类型, 网络小说.状态, 书籍.书名, 书籍.作者id, 书籍.作者id FROM作者 JOIN 出版图书 ON作者.作者id =出版图书.作者id JOIN 网络小说 ON出版图书.出版图书id =网络小说.网络图书id JOIN 书籍 ON网络小说.网络图书id =书籍.书籍id ON DELETE = 0 ON UPDATE = 0
SELECT作者.姓名, 出版图书.书名, 出版图书.作者id, 网络小说.书名, 网络小说.评分, 网络小说.类型, 网络小说.状态, 书籍.书名, 书籍.作者id, 书籍.作者id FROM作者 JOIN 出版图书 ON作者.作者id =出版图书.作者id JOIN 网络小说 ON出版图书.出版图书id =网络小说.网络图书id JOIN 书籍 ON网络小说.网络图书id =书籍.书籍id ON DELETE = 0 ON UPDATE = 0

NO SQL FOUND
NO SQL FOUND
SELECT 网络小说.书名, 网络小说.收藏量 FROM 网络小说 INNER JOIN 畅销榜 ON 网络小说.网络图书id = 畅销榜.网络小说id INNER JOIN 畅销榜 ON 畅销榜.周排名 = 网络小说.周排名 WHERE 畅销榜.类型 = '书籍' GROUP BY 网络小说.书名, 网络小说.收藏量 ORDER BY 收藏量 DESC LIMIT 10
SELECT 网络小说.书名, 网络小说.收藏量 FROM 网络小说 INNER JOIN 畅销榜 ON 网络小说.网络图书id = 畅销榜.网络小说id INNER JOIN 畅销榜 ON 畅销榜.周排名 = 网络小说.周排名 WHERE 畅销榜.类型 = '书籍' GROUP BY 网络小说.书名, 网络小说.收藏量 ORDER BY 收藏量 DESC LIMIT 10
SELECT 网络小说.书名, 网络小说.收藏量 FROM 网络小说 INNER JOIN 畅销榜 ON 网络小说.网络图书id = 畅销榜.网络小说id INNER JOIN 畅销榜 ON 畅销榜.周排名 = 网络小说.周排名 WHERE 畅销榜.类型 = '书籍' GROUP BY 网络小说.书名, 网络小说.收藏量 HAVING COUNT(*) > 1

SELECT COUNT(DISTINCT 网络小说id) AS 网络小说本数 FROM 网络小说 ON DELETE DELETE NOACTION ON UPDATE UPDATE NOACTION WHERE 作者id = '唐七公子'
SELECT * FROM 网络小说 WHERE 出版图书id = (SELECT 出版图书id FROM 出版图书 ON DELETE DELETE NOACTION)
SELECT 书名 FROM 出版图书 WHERE 出版图书id = (SELECT 出版图书id FROM 出版图书 ON DELETE DELETE NOACTION)
SELECT 评分 FROM 网络小说 WHERE 网络小说id = (SELECT 网络小说id FROM 网络小说 ON DELETE DELETE NOACTION)
SELECT 书名 FROM 出版图书 WHERE 评分 < > (SELECT 评分 FROM 网络小说 WHERE 网络小说id = (SELECT 网络小说id FROM 网络小说 ON DELETE DELETE NOACTION))

SELECT 书名 FROM 出版图书 WHERE 出版图书id IN ( SELECT 出版图书id FROM 畅销榜 ORDER BY 周排名 DESC LIMIT 5 )
SELECT 书名 FROM 网络小说 WHERE 网络小说id IN ( SELECT 网络小说id FROM 收藏榜 ORDER BY 周排名 DESC LIMIT 5 )
SELECT 书名, 首字母排序 FROM 网络小说 ORDER BY 首字母排序 DESC, 小说名 DESC

NO SQL FOUND
NO SQL FOUND
NO SQL FOUND

SELECT * FROM "台风影响的国家" as t1 LEFT JOIN "台风" as t2 ON t1."台风id" = t2."台风id" WHERE t2."经济损失" > (SELECT SUM(经济损失) FROM "台风影响的国家" as t3 WHERE t3."台风id" = t1."台风id")
SELECT 台风id, 名称, 登陆地点, 登陆时间, 登陆强度, 持续天数, 死亡人数, 经济损失 FROM "台风影响的国家" as t1 LEFT JOIN "台风" as t2 ON t1."台风id" = t2."台风id" WHERE t2."经济损失" = ( SELECT SUM(经济损失) FROM "台风影响的国家" as t3 WHERE t3."台风id" = t1."台风id" )
SELECT 台风id FROM "台风影响的国家" as t1 INNER JOIN "台风" as t2 ON t1."台风id" = t2."台风id" WHERE t2."登陆地点" = ( SELECT 登陆地点 FROM "台风影响的国家" as t3 WHERE t3."台风id" = t1."台风id" )

SELECT * FROM "台风影响的中国省份" AS a INNER JOIN "台风" AS b ON a."台风id" = b."台风id" WHERE b."登陆地点" = "海南"
SELECT * FROM "台风影响的国家" AS a INNER JOIN "台风" AS b ON a."台风id" = b."台风id" WHERE b."登陆时间" = (SELECT MAX(登陆时间) FROM "台风影响的国家" WHERE "国家" = a."国家")
SELECT * FROM "台风影响的国家" AS a INNER JOIN "台风" AS b ON a."台风id" = b."台风id" WHERE b."登陆时间" = (SELECT MAX(登陆时间) FROM "台风影响的国家" WHERE "国家" = a."国家")
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SELECT t1.国家, t2.经济损失 FROM "台风影响的国家" t1 INNER JOIN "台风" t2 ON t1."台风id" = t2."台风id" WHERE t2."登陆时间" = ( SELECT MAX(登陆时间) FROM "台风影响的国家" t3 WHERE t3."国家" = t1.国家 )
SELECT t1.省份, t2.经济损失 FROM "台风影响的中国省份" t1 INNER JOIN "台风影响的国家" t2 ON t1."台风id" = t2."台风id" INNER JOIN "台风" t3 ON t1."台风id" = t3."台风id" AND t3."登陆时间" = ( SELECT MAX(登陆时间) FROM "台风影响的国家" t4 WHERE t4."国家" = t1.省份 )
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SELECT COUNT(DISTINCT 运动队id) AS 奥运冠军次数 FROM 奥运会成绩 INNER JOIN 奥运会交手记录 ON 奥运会成绩.运动队id = 奥运会交手记录.球队id WHERE 运动队id REFERENCES 篮球运动队 (id)
SELECT 奥运会名称, 比赛日期 FROM 奥运会成绩 INNER JOIN 奥运会交手记录 ON 奥运会成绩.运动队id = 奥运会交手记录.球队id WHERE 运动队id REFERENCES 篮球运动队 (id) AND 赛事类型 = '奥运会'
SELECT 对手id, 是否胜利 FROM 奥运会交手记录 INNER JOIN 奥运会成绩 ON 奥运会交手记录.对手id = 奥运会成绩.对手id WHERE 奥运会成绩.年份 = 2022 AND 奥运会成绩.比赛类型 = '奥运会' GROUP BY 对手id, 是否胜利 ORDER BY 是否胜利 DESC, 比赛日期 ASC
SELECT 比分 FROM 奥运会交手记录 INNER JOIN 奥运会成绩 ON 奥运会交手记录.对手id = 奥运会成绩.对手id WHERE 奥运会成绩.年份 = 2022 AND 奥运会成绩.比赛类型 = '奥运会' GROUP BY 奥运会交手记录.对手id, 奥运会成绩.比赛类型 HAVING COUNT(DISTINCT 奥运会交手记录.对手id) = 2
SELECT现任主教练 FROM 篮球运动队 WHERE 队名 = '西班牙' AND 成立时间 = '2021' FOREIGN KEY (队名, 成立时间) REFERENCES REFERENCES 篮球运动队 (id, id)

NO SQL FOUND
SELECT MAX(奥运会成绩) AS max_奥运会成绩, MAX(奥运会比赛日期) AS max_奥运会比赛日期 FROM 奥运会成绩 INNER JOIN 奥运会交手记录 ON 奥运会成绩 = 奥运会交手记录(对手id) GROUP BY 运动队id, 主教练, 奥运会名称, 年份, 奥运会比赛日期
SELECT 年份, 奥运会名称, 奥运会比赛日期 FROM 奥运会成绩 INNER JOIN 奥运会交手记录 ON 奥运会成绩 = 奥运会交手记录(对手id) GROUP BY 年份, 奥运会名称, 奥运会比赛日期

SELECT 主教练 FROM 奥运会成绩 WHERE 年份 = 2022
SELECT COUNT(*) FROM 奥运会交手记录 WHERE 对手id = '1' AND 年份 = '2022'
SELECT 主教练, AVG(名次) FROM 奥运会成绩 GROUP BY 主教练

SELECT * FROM 商家 WHERE 类型 = 'A' AND 配送费 = 0
SELECT 商家id FROM 商家 WHERE 类型 = 'A' AND 配送费 = 0
SELECT * FROM "商家平台活动" WHERE 优惠活动 = 'Free配送费' AND 配送费 = 0
SELECT 配送费 FROM "商家平台活动" WHERE 起送价格 = 0
SELECT评分, 月售单数 FROM "商家平台活动" WHERE 商家id = 'A' AND 平台id = 'X'

SELECT * FROM 商家 WHERE 商家id IN ( SELECT 商家id FROM 商家平台活动 ORDER BY 配送费 DESC LIMIT 10 )
SELECT * FROM 商家 WHERE 商家id IN ( SELECT 商家id FROM 商家平台活动 ORDER BY 配送费 DESC LIMIT 10 )
SELECT * FROM 商家 JOIN 商家平台活动 ON 商家id = 商家平台活动.商家id WHERE 商家平台活动.配送费 > ( SELECT MAX(配送费) FROM 商家平台活动 ORDER BY 配送费 DESC )
SELECT 商家id, 平台id, 配送费, 起送价格 FROM 商家 JOIN 商家平台活动 ON 商家id = 商家平台活动.商家id ORDER BY 配送费 DESC, 起送价格 DESC LIMIT 10

CREATE TABLE 商家 (商家id TEXT PRIMARY KEY, 商家 text, 类型 TEXT); CREATE TABLE "商家平台活动" ( "商家id" TEXT, "平台id" TEXT, "优惠活动" text, "配送费" number, "起送价格" real, "评分" real, "月售单数" INT, FOREIGN KEY ("商家id") REFERENCES "商家" ("商家id"), FOREIGN KEY ("平台id") REFERENCES "平台" ("平台id") ON DELETE NOACTION ON UPDATE NOACTION, )
CREATE TABLE 商家 (商家id TEXT PRIMARY KEY, 商家 text, 类型 TEXT); CREATE TABLE "商家平台活动" ( "商家id" TEXT, "平台id" TEXT, "优惠活动" text, "配送费" number, "起送价格" real, "评分" real, "月售单数" INT, FOREIGN KEY ("商家id") REFERENCES "商家" ("商家id"), FOREIGN KEY ("平台id") REFERENCES "平台" ("平台id") ON DELETE NOACTION ON UPDATE NOACTION, )
CREATE TABLE 商家 (商家id TEXT PRIMARY KEY, 商家 text, 类型 TEXT); CREATE TABLE "商家平台活动" ( "商家id" TEXT, "平台id" TEXT, "优惠活动" text, "配送费" number, "起送价格" real, "评分" real, "月售单数" INT, FOREIGN KEY ("商家id") REFERENCES "商家" ("商家id"), FOREIGN KEY ("平台id") REFERENCES "平台" ("平台id") ON DELETE NOACTION ON UPDATE NOACTION, )
SQL NOT GET: may be TIMEOUT

INSERT INTO "商家平台活动" ("商家id", "平台id", "优惠活动", "配送费", "起送价格", "评分", "月售单数") VALUES ('商家1', '平台1', '优惠活动1', '配送费100', '起送价格1', '评分4.5', '月售单数20')
INSERT INTO "商家平台活动" ("商家id", "平台id", "优惠活动", "配送费", "起送价格", "评分", "月售单数") VALUES ('商家1', '平台1', '优惠活动1', '配送费100', '起送价格1', '评分4.5', '月售单数20')
SELECT 平台id FROM 平台 WHERE 市场占比 = 2
SELECT 优惠活动 FROM "商家平台活动" WHERE 商家id = '商家1' AND 平台id = '平台1'

SELECT COUNT(*) AS num_下单量 FROM "商家平台活动" WHERE "商家id" = (SELECT MAX(商家id) FROM "商家")
SELECT *, AVG(评分) AS avg_评分 FROM "商家平台活动" WHERE "商家id" = (SELECT MAX(商家id) FROM "商家")
SELECT 平台名,市场占比 FROM 平台 GROUP BY 平台名 ORDER BY市场占比 DESC LIMIT 1
SELECT 平台名, 平台id, 配送费, 起送价格 FROM "商家平台活动" WHERE 商家id = (SELECT MAX(商家id) FROM "商家") ORDER BY 平台名, 平台id, 配送费, 起送价格 DESC LIMIT 1

SELECT * FROM "应用商店支持国家" INNER JOIN "软件" ON "软件"."软件id" = "应用商店"."商店id" INNER JOIN "应用商店支持国家" ON "应用商店"."商店id" = "软件"."软件id" WHERE "应用商店"."商店id" = ( SELECT MAX(商店id) FROM "应用商店" GROUP BY 商店名 )
SELECT * FROM "应用商店支持国家" INNER JOIN "软件" ON "软件"."软件id" = "应用商店"."商店id" INNER JOIN "应用商店支持国家" ON "应用商店"."商店id" = "软件"."软件id" WHERE "应用商店"."商店id" = ( SELECT MAX(商店id) FROM "应用商店" GROUP BY 商店名 )
SELECT * FROM "应用商店支持国家" INNER JOIN "软件" ON "软件"."软件id" = "应用商店"."商店id" INNER JOIN "应用商店支持国家" ON "应用商店"."商店id" = "软件"."软件id" GROUP BY "应用商店支持国家"."商店id" ORDER BY MAX(累计下载次数) DESC LIMIT 1
SELECT * FROM "应用商店支持国家" INNER JOIN "软件" ON "软件"."软件id" = "应用商店"."商店id" INNER JOIN "应用商店支持国家" ON "应用商店"."商店id" = "软件"."软件id" GROUP BY "应用商店支持国家"."商店id" ORDER BY MAX(评价人数) DESC, MAX(好评数) DESC LIMIT 1
SQL NOT GET: may be TIMEOUT

SELECT 应用商店.商店名, 应用商店.应用软件数, 应用商店.累计下载次数, 软件.软件名称, 软件.用途, 软件.下载量, 软件.评价人数, 软件.好评数 FROM 应用商店 INNER JOIN 应用商店支持国家 ON 应用商店.商店id = 支持国家.应用商店id INNER JOIN "软件" ON 应用商店.软件id = "软件".软件id WHERE 支持国家.国家 = '中国'
SELECT 商店.商店名, 商店.应用软件数, 商店.累计下载次数, 商店.用户是否可以购买应用程序, 商店.开发人员是否可以出售应用程序, 软件.软件名称, 软件.用途, 软件.下载量, 软件.评价人数, 软件.好评数 FROM 应用商店 INNER JOIN 应用商店支持国家 ON 应用商店.商店id = 支持国家.应用商店id INNER JOIN "软件" ON 应用商店.软件id = "软件".软件id WHERE 支持国家.国家 = '中国' AND 软件.用途 = '导航软件'
SELECT 商店.商店名, 商店.应用软件数, 商店.累计下载次数, 商店.用户是否可以购买应用程序, 商店.开发人员是否可以出售应用程序, 软件.软件名称, 软件.用途, 软件.下载量, 软件.评价人数, 软件.好评数 FROM 应用商店 INNER JOIN 应用商店支持国家 ON 应用商店.商店id = 支持国家.应用商店id INNER JOIN "软件" ON 应用商店.软件id = "软件".软件id WHERE 支持国家.国家 = '中国'

SELECT * FROM "软件下载" WHERE评价人数 = (SELECT COUNT(*) FROM "应用商店" WHERE商店名 = 'Google应用商店' AND 软件id = 'Android SDK' AND 应用名 = 'Android Studio' AND 开发者_可不可以_购买_应用程序 = 1 AND 用户是否可以_购买_应用程序 = 0)
SELECT 软件id,下载量,评价人数,好评数,(SELECT COUNT(*) FROM "应用商店" WHERE商店名 = 'Google应用商店' AND 软件id = 'Android SDK' AND 应用名 = 'Android Studio' AND 开发者_可不可以_购买_应用程序 = 1 AND 用户是否可以_购买_应用程序 = 0) AS 下载量_评价人数_好评数 FROM "软件下载" ORDER BY 下载量 DESC,评价人数 DESC,好评数 DESC LIMIT 1
SELECT 软件id, 软件名称, 用途 FROM "软件" WHERE 用途 = '开发' LIMIT 1
SELECT软件id,好评数 FROM "软件" ORDER BY好评数 DESC LIMIT 1

NO SQL FOUND
SELECT 生产总值增长率 FROM 城市 WHERE 城市id = (SELECT 城市id FROM 城市第一产业 WHERE 产业类型 = '农业' AND 收入 > (SELECT收入 FROM 城市贸易产业 WHERE 城市id = 城市 id)) AND 地区生产总值 > (SELECT 地区生产总值 FROM 城市 WHERE 城市id = (SELECT 城市id FROM 城市第一产业 WHERE 产业类型 = '农业' AND 收入 > (SELECT收入 FROM 城市贸易产业 WHERE 城市id = 城市 id)) AND 产业类型 = '农业' AND 收入 > (SELECT收入 FROM 城市贸易产业 WHERE 城市id = 城市 id))
NO SQL FOUND
SELECT 金融业增加值 FROM 城市 WHERE 城市id = (SELECT 城市id FROM 城市第一产业 WHERE 产业类型 = '金融' AND 收入 > (SELECT收入 FROM 城市贸易产业 WHERE 城市id = 城市 id)) AND 城市id = (SELECT 城市id FROM 城市第一产业 WHERE 产业类型 = '金融' AND 收入 > (SELECT收入 FROM 城市贸易产业 WHERE 城市id = 城市 id)) AND 城市id = (SELECT 城市id FROM 城市第一产业 WHERE 产业类型 = '金融' AND 收入 > (SELECT收入 FROM 城市贸易产业 WHERE 城市id = 城市 id)) AND 城市id = (SELECT 城市id FROM 城市第一产业 WHERE 产业类型 = '金融' AND 收入 > (SELECT收入 FROM 城市贸易产业 WHERE 城市id = 城市 id)) AND 产业类型 = '金融' AND 收入 > (SELECT收入 FROM 城市贸易产业 WHERE 城市id = 城市 id))

SELECT MAX(生产总值增长率) AS max_生产总值_增长率 FROM 城市第一产业 WHERE 经济 = '低迷'
SELECT 城市id, 生产总值增长率 FROM 城市第一产业 WHERE 产业类型 = '农业' AND 城市id IN (SELECT 城市id FROM 城市 WHERE 经济 = '低迷')
SELECT 产业类型 FROM 城市第一产业 WHERE 城市id IN (SELECT 城市id FROM 城市 WHERE 经济 = '低迷')
SELECT COUNT(*) AS count FROM 城市第一产业 WHERE 产业类型 = '农业' AND 城市id IN (SELECT 城市id FROM 城市 WHERE 经济 = '低迷')

SELECT 金融业增加值, 增长率 FROM 城市金融产业 WHERE 城市id = (SELECT 城市id FROM 城市) AND 金融业增加值 > (SELECT 金融业增加值 FROM 城市) AND 增长率 > (SELECT 增长率 FROM 城市) AND 城市id = (SELECT 城市id FROM 城市 WHERE 名称 = '长沙') AND 今年的增加值 > (SELECT 增加值 FROM 城市 WHERE 城市id = (SELECT 城市id FROM 城市 WHERE 名称 = '长沙') AND 增长率 > 0) AND 同比去年增长 > (SELECT 增长率 FROM 城市贸易产业 WHERE 城市id = (SELECT 城市id FROM 城市 WHERE 名称 = '长沙') AND 行业 = '贸易产业')
SELECT count(金融机构数量) AS num FROM 城市金融产业
SELECT 贷款余额, 同比增长率 FROM 城市金融产业

NO SQL FOUND
NO SQL FOUND
NO SQL FOUND
NO SQL FOUND

SELECT 产业类型, 收入, 收入增长率, 产量, 产量增长率, 城市id, 城市名称, 所属省份, 地区生产总值, 生产总值增长率, 城市id, 城市名称, 所属省份, 地区生产总值, 生产总值增长率 FROM 城市 INNER JOIN 城市第一产业 ON 城市id = 城市第一产业.城市id INNER JOIN 城市贸易产业 ON 城市id = 城市贸易产业.城市id INNER JOIN 城市金融产业 ON 城市id = 城市金融产业.城市id WHERE 产业类型 = '第一产业'
SELECT收入,收入增长率,产量,产量增长率,城市id,城市名称,所属省份,地区生产总值,生产总值增长率 FROM 城市 INNER JOIN 城市第一产业 ON 城市id = 城市第一产业.城市id INNER JOIN 城市贸易产业 ON 城市id = 城市贸易产业.城市id INNER JOIN 城市金融产业 ON 城市id = 城市金融产业.城市id WHERE 产业类型 = '第一产业' and 收入 > (SELECT 收入 FROM 城市 WHERE 城市id = 1)
SELECT 产量, 产量增长率 FROM 城市 INNER JOIN 城市第一产业 ON 城市id = 城市第一产业.城市id INNER JOIN 城市贸易产业 ON 城市id = 城市贸易产业.城市id INNER JOIN 城市金融产业 ON 城市id = 城市金融产业.城市id WHERE 产业类型 = '第一产业' and 收入 > (SELECT 收入 FROM 城市 WHERE 城市id = 1)

SELECT * FROM 比赛 WHERE 名称 = '清华大学' AND 方向 = '北京'
SELECT * FROM 比赛 WHERE 方向 = '面向北京' LIMIT 1
SELECT 奖金数 FROM 比赛 WHERE 奖金数 = (SELECT 奖金数 FROM 奖金表 WHERE 比赛id = 参加比赛id) LIMIT 1
SELECT 成绩 FROM 学生参赛记录 WHERE 加入队伍id = (SELECT 加入队伍id FROM 学生参赛记录 WHERE 学生id = 学生id) LIMIT 1
SELECT 成绩 FROM 学生参赛记录 WHERE 加入队伍id = (SELECT 加入队伍id FROM 学生参赛记录 WHERE 学生id = 学生id) LIMIT 1

CREATE TABLE 比赛 ( 比赛id TEXT PRIMARY KEY, 名称 TEXT, 方向 TEXT, 举办单位 TEXT, 单位性质 TEXT, 奖金数 number, 录取队伍数量 number, 比赛平台 TEXT ); CREATE TABLE 参赛队伍 ( 队伍id TEXT PRIMARY KEY, 队名 TEXT ); CREATE TABLE 参赛学生 ( 学生id TEXT PRIMARY KEY, 姓名 TEXT, 年龄 number, 学历 TEXT, 学校 TEXT ); CREATE TABLE 学生参赛记录 ( 队伍id TEXT REFERENCES 参赛队伍 (队伍id), 学生id TEXT REFERENCES 参赛学生 (学生id), 加入队伍日期 DATE ); CREATE TABLE 队伍参赛成绩 ( 加入队伍id number, 参加比赛id number, 成绩 text, FOREIGN KEY (加入队伍id) REFERENCES 参赛队伍 (队伍id), FOREIGN KEY (参加比赛id) REFERENCES 比赛 (比赛id) )
SELECT * FROM 比赛 WHERE 奖金数 > (SELECT 奖金数 FROM 参赛队伍 WHERE 参赛队伍.队伍id = 比赛.比赛id)
SELECT 队伍.队伍id, 奖项.奖项名称 FROM 比赛 JOIN 奖项 ON 比赛.比赛id = 奖项.奖项id JOIN 参赛队伍 ON 比赛.比赛id = 参赛队伍.队伍id JOIN 学生 ON 参赛队伍.学生id = 学生.学生id WHERE 比赛.奖金数 > (SELECT 奖金数 FROM 参赛队伍 WHERE 参赛队伍.队伍id = 比赛.比赛id) ORDER BY 队伍id, 奖项名称 DESC

SELECT 学生.姓名, 学校.学校text FROM 参赛学生 JOIN 学生参赛记录 ON 学生.学生id = 学生参赛记录.学生id JOIN 学校 ON 学生.学校text = 学校.学校text WHERE 学生.加入队伍日期 = (SELECT 加入队伍日期 FROM 队伍参赛成绩 WHERE 加入队伍id = 加入队伍id)
SELECT s.姓名, s.加入队伍日期, r.比赛名称 FROM 参赛学生 s JOIN 学生参赛记录 r ON s.学生id = r.学生id JOIN 比赛 ON r.比赛id = r.比赛id WHERE s.加入队伍日期 = (SELECT 加入队伍日期 FROM 队伍参赛成绩 WHERE 加入队伍id = 加入队伍id)
SELECT 获奖.获奖状态 FROM 获奖 JOIN 比赛参赛成绩 ON 获奖.比赛id = 比赛参赛成绩.比赛id JOIN 参赛队伍 ON 获奖.参赛队伍id = 参赛队伍.队伍id WHERE 参赛队伍.队名 = '清华大学' AND 比赛.比赛平台 = '微信公众平台' AND 参赛队伍.加入队伍id = 参赛队伍.加入队伍id

SQL NOT GET: may be TIMEOUT
SELECT t1.name, t1.direction, t1.举办单位, t1.单位性质, t2.奖金数, t2.录取队伍数量, t2.比赛平台 FROM 比赛 t1 INNER JOIN 参赛队伍 t2 ON t1.比赛id = t2.队伍id INNER JOIN 学生参赛记录 t3 ON t2.队伍id = t3.加入队伍id AND t3.学生id = t3.学生id WHERE t3.加入队伍日期 = '2021-01-01'
SELECT * FROM 参赛记录 INNER JOIN 比赛 ON 参赛记录.加入队伍id = 比赛.比赛id INNER JOIN 参赛队伍 ON 参赛记录.加入队伍id = 参赛队伍.队伍id INNER JOIN 学生 ON 参赛记录.学生id = 学生.学生id WHERE 加入队伍日期 = '2021-01-01'
SELECT 参赛队伍.name FROM 参赛记录 INNER JOIN 比赛 ON 参赛记录.加入队伍id = 比赛.比赛id INNER JOIN 参赛队伍 ON 参赛记录.加入队伍id = 参赛队伍.队伍id WHERE 比赛.比赛id = '2021_09'

SELECT 比赛.name, 参赛队伍.队名, 参赛学生.name, 参赛学生.age, 参赛学生.学历, 比赛.name, 比赛.方向 FROM 比赛 INNER JOIN 参赛队伍 ON 比赛.参赛队伍id = 参赛队伍.队伍id INNER JOIN 参赛学生 ON 比赛.参赛学生id = 参赛学生.学生id ON 参赛队伍.加入队伍id = 参赛学生.加入队伍id INNER JOIN 学生参赛记录 ON 参赛队伍.加入队伍id = 学生参赛记录.加入队伍id INNER JOIN 比赛 ON 学生参赛记录.加入队伍id = 比赛.比赛id WHERE 学生参赛记录.加入队伍id IN (SELECT 加入队伍id FROM 队伍参赛成绩) ORDER BY 成绩 DESC LIMIT 1
SELECT * FROM 参赛学生 INNER JOIN 学生参赛记录 ON 学生参赛记录.学生id = 学生.学生id INNER JOIN 比赛 ON 学生参赛记录.加入队伍id = 比赛.比赛id WHERE 学生.年龄 = (SELECT MAX(年龄) FROM 参赛学生) ORDER BY 学生.姓名 DESC, 学生.学历 DESC, 学生.学校 ASC
SELECT 比赛.name, 参赛队伍.队名, 参赛学生.name, 参赛学生.age, 参赛学生.学历, 比赛.name, 比赛.方向 FROM 比赛 INNER JOIN 参赛队伍 ON 比赛.比赛id = 参赛队伍.比赛id INNER JOIN 参赛学生 ON 比赛.参赛学生id = 参赛学生.学生id WHERE 参赛学生.年龄 = (SELECT MAX(年龄) FROM 参赛学生) ORDER BY 比赛.name DESC, 比赛.方向 DESC, 参赛队伍.队名 ASC, 参赛学生.name ASC, 参赛学生.学历 ASC
SELECT举办单位.type_name FROM 举办单位 INNER JOIN 单位性质 ON 举办单位.type_name = 单位性质.type_name INNER JOIN 比赛 ON 比赛.比赛id = 举办单位.比赛id WHERE 举办单位.type_name IN ('政府机构', '企业', '学校', '非营利组织') ORDER BY 单位性质.type_name ASC, 比赛.比赛id ASC, 举办单位.type_name ASC, 比赛.比赛id ASC
SQL NOT GET: may be TIMEOUT

SELECT COUNT(DISTINCT 参赛队伍) FROM 学生参赛记录 WHERE 加入队伍id IN (SELECT 加入队伍id FROM 队伍参赛成绩 WHERE 比赛平台 = '阿里天池')
SELECT * FROM 比赛 WHERE 名称 = '阿里天池' AND 方向 = '男' AND 举办单位 = '阿里天池' AND 单位性质 = '国家' AND 奖金数 = '100' AND 录取队伍数量 = '1' AND 比赛平台 = '阿里天池'
SELECT 参赛队伍, 比赛平台 FROM 学生参赛记录 WHERE 加入队伍id IN (SELECT 加入队伍id FROM 队伍参赛成绩 WHERE 比赛平台 = '阿里天池') AND 学生id = '123456'
SELECT 成绩 FROM 队伍参赛成绩 WHERE 参加比赛id IN (SELECT 参加比赛id FROM 比赛 WHERE 比赛平台 = '阿里天池') AND 加入队伍id = '123456' AND 学生id = '123456'

SELECT * FROM比赛 WHERE名称 like '%模式识别%' ORDER BY奖金数 DESC LIMIT 10
SELECT 举办单位, 平台 FROM 比赛 WHERE 名称 like '%模式识别%' ORDER BY 举办单位, 平台 DESC LIMIT 10
SELECT * FROM 参赛队伍 WHERE 加入队伍id not in (SELECT加入队伍id FROM 学生参赛记录) ORDER BY 加入队伍id DESC LIMIT 10
SELECT * FROM 参赛队伍 WHERE 加入队伍id not in (SELECT加入队伍id FROM 学生参赛记录) ORDER BY 加入队伍id DESC LIMIT 10
SELECT 姓名, 学校 FROM 学生 WHERE 学历 = 'X' ORDER BY 年龄 DESC, 学校 LIMIT 10

SQL NOT GET: may be TIMEOUT
SELECT COUNT(*) FROM "餐饮公司城市连锁" WHERE "城市id" = (SELECT "城市id" FROM "城市")
SELECT COUNT(*) FROM "餐饮公司城市连锁" WHERE "员工数量" = (SELECT COUNT(*) FROM "餐饮公司城市消费" WHERE "公司id" = "公司id")
SELECT SUM(人均消费额) AS total_人均消费额 FROM "餐饮公司城市消费" WHERE "公司id" = "公司id" AND "城市id" = (SELECT "城市id" FROM "城市")

SELECT * FROM "餐饮公司城市消费" WHERE "城市id" = (SELECT MAX("城市id") FROM "城市")
SELECT * FROM "餐饮公司城市连锁" WHERE "分店数量" = (SELECT "分店数量" FROM "餐饮公司城市消费" WHERE "公司id" = "12345") ORDER BY "总消费额" DESC LIMIT 1
SELECT * FROM "餐饮公司城市连锁" WHERE "分店数量" = (SELECT MAX("分店数量") FROM "餐饮公司城市消费" WHERE "公司id" = "12345") ORDER BY "总消费额" DESC LIMIT 1
SELECT * FROM "餐饮公司城市连锁" WHERE "分店数量" = (SELECT MAX("分店数量") FROM "餐饮公司城市消费" WHERE "公司id" = "12345") ORDER BY "总消费额" DESC LIMIT 1

SELECT 餐厅名, 餐饮公司.总部城市id, COUNT(*) 分店数量 FROM 餐饮公司 INNER JOIN 城市 ON 餐饮公司.总部城市id = 城市.城市id GROUP BY 餐厅名, 餐饮公司.总部城市id ORDER BY COUNT(*) DESC LIMIT 1
SELECT * FROM 餐饮公司 INNER JOIN 城市 ON 餐饮公司.总部城市id = 城市.城市id INNER JOIN 餐饮公司城市消费 ON 餐饮公司.总部城市id = 城市.城市id AND 餐饮公司.公司名称 = '成都' GROUP BY 餐饮公司.公司id, 城市.城市id, 餐饮公司.公司名称 ORDER BY COUNT(*) DESC LIMIT 1
SELECT 日期 FROM 经营状况 WHERE 公司名称 = '餐饮公司' AND 公司id = ( SELECT MAX(公司id) FROM 经营状况 WHERE 公司名称 = '餐饮公司' ) AND 城市.城市id = 经营状况.城市id
SELECT 股票代码 FROM 餐饮公司 INNER JOIN 上市股市 ON 餐饮公司.总部城市id = 上市股市.城市id WHERE 餐饮公司.公司id = ( SELECT MAX(公司id) FROM 上市股市 WHERE 上市股市.股票代码 = 'A股' )

NO SQL FOUND
NO SQL FOUND
NO SQL FOUND
NO SQL FOUND

SELECT * FROM "商家平台活动" WHERE 商家id IN (SELECT 商家id FROM "商家" WHERE 类型 = '外卖' ORDER BY 月售单数 DESC LIMIT 1)
SELECT 配送费 FROM "商家平台活动" WHERE 商家id IN (SELECT 商家id FROM "商家" WHERE 类型 = '外卖' ORDER BY 月售单数 DESC LIMIT 1) AND "起送价格" = (SELECT "起送价格" FROM "商家平台活动" WHERE 商家id = 商家id ORDER BY "起送价格" DESC LIMIT 1)
SELECT 配送费 FROM "商家平台活动" WHERE 商家id IN (SELECT 商家id FROM "商家" WHERE 类型 = '外卖' ORDER BY 月售单数 DESC LIMIT 1) AND "起送价格" = (SELECT "起送价格" FROM "商家平台活动" WHERE 商家id = 商家id ORDER BY "起送价格" DESC LIMIT 1)
SELECT COUNT(*) FROM "订单" WHERE "订单类型" = '购买' AND "订单金额" <= (SELECT MAX("购买金额") FROM "商家平台活动" WHERE "商家id" = 商家id) AND "商家平台id" = (SELECT MAX("平台id") FROM "平台" WHERE "市场占比" = 1)

SELECT 商家id FROM "商家平台活动" WHERE 配送费 = 0
SELECT 评分 FROM "商家平台活动" WHERE 配送费 = 0
SELECT 平台名 FROM "平台" WHERE 市场占比 = 1
SELECT 市场占比 FROM "平台" WHERE 市场占比 = 1

SELECT 商家id, 平台id, 配送费, 评分, 月售单数 FROM "商家平台活动" WHERE (配送费, 配送费) NOT IN ((2,2), (4,4)) ORDER BY 评分 DESC, 月售单数 DESC LIMIT 1
SELECT * FROM "餐厅订单" WHERE 餐厅名称 LIKE '%美团%' ORDER BY 评分 DESC LIMIT 10
SELECT t1.text FROM 餐厅订单 t1 JOIN 商家平台活动 t2 ON t1.商家id = t2.商家id JOIN "商家" t3 ON t2.平台id = t3.平台id WHERE t1.text IN (SELECT text FROM 餐厅订单 WHERE restaurant = '张三') AND t2.平台id = '平台2' AND t2.配送费 = 2 ORDER BY t1.text DESC, t2.平台id DESC, t3.评分 DESC LIMIT 10

CREATE TABLE篮球运动队 (id TEXT PRIMARY KEY, 队名 text, 所属国家 text, 成立时间 time, 现任主教练 text, 现在世界排名 number) CREATE TABLE奥运会成绩 (年份 INT, 奥运会名称 TEXT, 名次 INT, 运动队id INT REFERENCES 篮球运动队 (id), 主教练 TEXT) CREATE TABLE奥运会交手记录 (对手id number, 比分 number, 是否胜利 BOOLEAN, 球队id REFERENCES 篮球运动队 (id), 赛事类型 TEXT, 年份 INT, 奥运会 STRING, 比赛日期 DATE, FOREIGN KEY (对手id) REFERENCES 篮球运动队 (id))
CREATE TABLE篮球运动队 (id TEXT PRIMARY KEY, 队名 text, 所属国家 text, 成立时间 time, 现任主教练 text, 现在世界排名 number) CREATE TABLE奥运会成绩 (年份 INT, 奥运会名称 TEXT, 名次 INT, 运动队id INT REFERENCES 篮球运动队 (id), 主教练 TEXT) CREATE TABLE奥运会交手记录 (对手id number, 比分 number, 是否胜利 BOOLEAN, 球队id REFERENCES 篮球运动队 (id), 赛事类型 TEXT, 年份 INT, 奥运会 STRING, 比赛日期 DATE, FOREIGN KEY (对手id) REFERENCES 篮球运动队 (id))
CREATE TABLE篮球运动队 (id TEXT PRIMARY KEY, 队名 text, 所属国家 text, 成立时间 time,现任主教练 text, 现在世界排名 number) CREATE TABLE奥运会成绩 (年份 INT, 奥运会名称 TEXT, 名次 INT, 运动队id INT REFERENCES 篮球运动队 (id), 主教练 TEXT) CREATE TABLE奥运会交手记录 (对手id number, 比分 number, 是否胜利 BOOLEAN, 球队id REFERENCES 篮球运动队 (id), 赛事类型 TEXT, 年份 INT, 奥运会 STRING, 比赛日期 DATE, FOREIGN KEY (对手id) REFERENCES 篮球运动队 (id))
CREATE TABLE篮球运动队 (id TEXT PRIMARY KEY, 队名 text, 所属国家 text, 成立时间 time,现任主教练 text, 现在世界排名 number) CREATE TABLE奥运会成绩 (年份 INT, 奥运会名称 TEXT, 名次 INT, 运动队id INT REFERENCES 篮球运动队 (id), 主教练 TEXT) CREATE TABLE奥运会交手记录 (对手id number, 比分 number, 是否胜利 BOOLEAN, 球队id REFERENCES 篮球运动队 (id), 赛事类型 TEXT, 年份 INT, 奥运会 STRING, 比赛日期 DATE, FOREIGN KEY (对手id) REFERENCES 篮球运动队 (id)) GO SELECT * FROM 奥运会成绩 WHERE 年份 = 2016 AND 奥运会 = '里约奥运会' AND 对手id = 1; GO SELECT * FROM 奥运会交手记录 WHERE 年份 = 2016 AND 比赛类型 = '八分之一决赛' AND 球队id = 1
SQL NOT GET: may be TIMEOUT

SELECT * FROM 奥运会成绩 WHERE 年份 = 2012 AND 运动队id IN (SELECT 队名 FROM 篮球运动队 WHERE 所属国家 = 'GB' AND 现在世界排名 >= 2)
SELECT * FROM 奥运会成绩 WHERE 年份 = 2012 AND 运动队id IN (SELECT 队名 FROM 篮球运动队 WHERE 所属国家 = 'GB' AND 现在世界排名 <= 4)
SELECT 赛事类型, 比赛日期 FROM 奥运会交手记录 WHERE 球队id IN (SELECT 队名 FROM 篮球运动队 WHERE 所属国家 = 'GB' AND 现在世界排名 <= 4)

SELECT 主教练 FROM 奥运会成绩 WHERE 年份 = 2016
SELECT * FROM 奥运会成绩 WHERE 运动队id = (SELECT id FROM 篮球运动队 WHERE 队名 = '阿根廷男篮国家队')
SELECT 世界排名 FROM 篮球运动队 WHERE id IN (SELECT id FROM 篮球运动队 WHERE 队名 = '阿根廷男篮国家队')

SELECT 队名, 成立时间 FROM 篮球运动队
SELECT 国家, 实力 FROM 奥运会成绩
SELECT 主教练, 训练方式 FROM 奥运会交手记录
SELECT * FROM 奥运会交手记录

SELECT * FROM 产品销售 WHERE 季度 = '2022'
SELECT * FROM 音箱产品 WHERE 所属公司 = '中国'
SELECT COUNT(*) as num, 音箱id, COUNT(*)-num as rank from 音箱产品 GROUP BY 音箱id order by rank DESC

SELECT 音箱产品.名称 FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.音箱id WHERE 产品销售.季度 = (SELECT 季度 FROM 产品销售 WHERE 销售量 = (SELECT 销售量 FROM 产品销售 WHERE 产品id = 1234))
SELECT 音箱产品.名称, 销售量增长 FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.音箱id WHERE 产品销售.季度 = (SELECT 季度 FROM 产品销售 WHERE 销售量 = (SELECT 销售量 FROM 产品销售 WHERE 产品id = 1234))
SELECT 音箱产品.名称, 销售量增长 FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.音箱id WHERE 产品销售.季度 = (SELECT 季度 FROM 产品销售 WHERE 销售量 = (SELECT 销售量 FROM 产品销售 WHERE 产品id = 1234))
SELECT 音箱产品.名称, 产品销售.排名, 产品销售.上升名次 FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.音箱id WHERE 产品销售.季度 = (SELECT 季度 FROM 产品销售 WHERE 销售量 = (SELECT 销售量 FROM 产品销售 WHERE 产品id = 1234)) ORDER BY 产品销售.上升名次, 产品销售.名称 LIMIT 10
SELECT 音箱产品.名称, 公司.排名 FROM 音箱产品 INNER JOIN 公司 ON 音箱产品.所属公司id = 公司.id WHERE 公司.所属国家 = 'US' LIMIT 1

SELECT 音箱id, 价格 FROM 音箱产品 WHERE 所属公司id = 1
SELECT * FROM 音箱产品 WHERE 所属公司id = 1
SELECT 排名 FROM 产品销售 WHERE 产品id = ( SELECT 音箱id FROM 音箱产品 WHERE 所属公司id = 1 )
SELECT 公司名称, 产品名称 FROM 公司 WHERE id = ( SELECT id FROM 音箱产品 WHERE 所属公司id = 1 )

SELECT * FROM "商家平台活动" WHERE "商家id" = 1 AND "平台id" = (SELECT MAX(平台id) FROM "平台")
SELECT * FROM "商家平台活动" ORDER BY "评分" DESC, "平台id" DESC LIMIT 10, 10
SELECT * FROM "商家平台活动" ORDER BY "月售单数" DESC, "评分" DESC LIMIT 10, 10

SELECT 球员id, 篮球运动员.中文名, 篮球运动员.参加选秀年, 篮球运动员.是否状元, 球队.夺冠次数 FROM 篮球运动员 JOIN 球队 ON 篮球运动员.球员id = 球队.球员id JOIN NBA总冠军 ON 球队.球队id = NBA总冠军.球队id WHERE NBA总冠军.赛季 = (SELECT 赛季 FROM NBA总冠军 WHERE 球队id = 1)
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SELECT 支球队.球队id, 篮球运动员.球员id, NBA总冠军.赛季 FROM 支球队, 篮球运动员, NBA总冠军 WHERE 篮球运动员.球员id IN ( SELECT 球员id FROMMVP记录 WHERE 赛季 = ( SELECT 赛季 FROM NBA总冠军 WHERE 球队id = ( SELECT 球队id FROM 球队 WHERE 中文队名 = '清华大学' LIMIT 1 ) ) ) GROUP BY 球队id, 中文队名 ORDER BY 冠军次数 DESC LIMIT 1
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SELECT * FROM 商家 WHERE 商家id IN ( SELECT 商家id FROM 商家平台活动 WHERE 平台id = '平台' AND 优惠活动 = '优惠活动' )
SELECT评分, SUM(月售单数) AS 销量 FROM 商家平台活动 WHERE 商家id IN ( SELECT 商家id FROM 商家 WHERE 类型 = '商家' ) AND 平台id IN ( SELECT 平台id FROM 平台 WHERE 市场占比 = '市场占比' )
SELECT评分, 配送费 FROM 商家平台活动 WHERE 商家id IN ( SELECT 商家id FROM 商家 WHERE 类型 = '商家' ) AND 平台id IN ( SELECT 平台id FROM 平台 WHERE 市场占比 = '市场占比' )

SELECT * FROM "商家平台活动" WHERE "商家id" < 20
SELECT COUNT(*) FROM "商家平台活动" WHERE "商家id" < 20
SELECT评分, COUNT(*) FROM "商家平台活动" GROUP BY评分 ORDER BY评分 ASC LIMIT 10
SELECT "商家id", "平台id", "优惠活动", "配送费", "评分", "月售单数" FROM "商家平台活动" ORDER BY "商家id" ASC, "平台id" ASC, "优惠活动", "配送费", "评分", "月售单数" ASC LIMIT 10

SELECT * FROM "平台" WHERE市场占比 = (SELECT MAX(市场占比) FROM "商家") AND 平台名 = '外卖软件'
SELECT * FROM "平台" WHERE市场占比 = (SELECT MIN(市场占比) FROM "商家") AND 平台名 = '外卖软件'
SELECT * FROM "平台" WHERE 市场占比 = (SELECT COUNT(*) FROM "商家" WHERE 商家名 = '商家平台活动' AND 平台名 = '外卖软件') AND 平台名 = '外卖软件'
SELECT * FROM "商家平台活动" WHERE优惠活动 = (SELECT 优惠活动 FROM "商家" WHERE 商家名 = '商家平台活动' AND 平台名 = '外卖软件') AND 月份 = '2022'

SELECT * FROM "台风影响的国家" WHERE "台风id" = (SELECT MAX("台风id") FROM "台风影响的国家")
SELECT * FROM "台风影响的国家" WHERE "台风id" IN (SELECT "台风id" FROM "台风影响的国家" WHERE "经济损失" > 0)
SELECT * FROM "台风影响的国家" WHERE "台风id" IN (SELECT "台风id" FROM "台风影响的国家" WHERE "经济损失" > 0)
SELECT 经济损失 AS total_loss FROM "台风影响的国家" WHERE "台风id" IN (SELECT "台风id" FROM "台风影响的国家" WHERE "经济损失" > 0)
SELECT * FROM "台风影响的中国省份" AS a INNER JOIN "台风影响的国家" AS b ON a."台风id" = b."台风id" AND a."省份" = b."国家"

SELECT COUNT(*) FROM "台风影响的中国省份" WHERE "台风id" IN ( SELECT "台风id" FROM "台风" WHERE "名称" = '广东' ) + SELECT COUNT(*) FROM "台风影响的国家" WHERE "台风id" IN ( SELECT "台风id" FROM "台风" WHERE "名称" = '广东' ) + SELECT COUNT(*) FROM "台风" WHERE "台风id" IN ( SELECT "台风id" FROM "台风" WHERE "名称" = '广东' )
SQL NOT GET: may be TIMEOUT
SELECT CASE WHEN "台风id" IN ( SELECT "台风id" FROM "台风影响的国家" WHERE "国家" = '中国' AND "名称" = '1949年以来' ) THEN 1 ELSE 2 END AS 最多次数 FROM "台风影响的中国省份" WHERE "台风id" = '广东'
SELECT SUM(CASE WHEN "玛琪" IN ( SELECT "玛琪" FROM "台风影响的国家" WHERE "国家" = '中国' AND "名称" = '1949年以来' ) THEN 10 ELSE 0 END) AS 经济损失 FROM "台风影响的国家" WHERE "国家" = '中国' AND "名称" = '1949年以来'
SELECT COUNT(DISTINCT "玛琪" WHERE "国家" = '中国') AS 受影响的国家数量 FROM "台风影响的国家" WHERE "国家" = '中国'
SELECT SUM(DISTINCT "玛琪" WHERE "国家" = '中国' AND "名称" = '1949年以来') AS 经济损失 FROM "台风影响的国家" WHERE "国家" = '中国' AND "名称" = '1949年以来'

SELECT 音箱产品.名称 FROM 产品销售 WHERE (SELECT COUNT(*) FROM 产品销售 WHERE 产品id = 产品销售.产品id AND 季度 = 1) > (SELECT COUNT(*) FROM 产品销售 WHERE 产品id = 产品销售.产品id AND 季度 = 2)
SELECT 公司.名称 FROM 公司 INNER JOIN 音箱产品 ON 公司.id = 音箱产品.所属公司id INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.产品id WHERE 产品销售.季度 = 1
SELECT price FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.产品id WHERE 产品销售.季度 = 1
SELECT 音箱产品.名称 FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.产品id WHERE 产品销售.季度 = 1 AND price < 10000

NO SQL FOUND
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

NO SQL FOUND
NO SQL FOUND
NO SQL FOUND
NO SQL FOUND

SELECT 型号 FROM 电视机平台售卖 JOIN 电视机型号 ON 型号id = 电视机型号.型号id WHERE 平台 = 'PC' AND 型号id IN (SELECT 型号id FROM 电视机品牌 WHERE 品牌名 = 'TV')
SELECT * FROM 电视机型号 JOIN 电视机平台售卖 ON 型号id = 电视机型号.型号id WHERE 平台 = 'PC' AND 性别 = '男性'
SELECT price FROM 电视机平台售卖 JOIN 电视机型号 ON 型号id = 电视机型号.型号id WHERE 平台 = 'PC' AND 型号id IN (SELECT 型号id FROM 电视机品牌 WHERE 品牌名 = 'TV')

NO SQL FOUND
NO SQL FOUND
NO SQL FOUND

SELECT 电视品牌.品牌id, 电视品牌.品牌名, 各城市电视机销量.城市, 各城市电视机销量.省份, 各城市电视机销量.电视机售卖量, 电视机售卖量.观看电视日平均用时 FROM 电视机品牌 INNER JOIN 各城市电视机销量 ON 电视机品牌.品牌id = 各城市电视机销量.品牌id INNER JOIN 电视机平台售卖 ON 电视机品牌.品牌id = 电视机平台售卖.型号id INNER JOIN 电视机型号 ON 电视机平台售卖.型号id = 电视机型号.型号id WHERE 电视机型号.型号id = ( SELECT 型号id FROM 电视机型号 WHERE 产品定位 = '电视机' ) ORDER BY 观看电视日平均用时 DESC
SELECT 电视品牌.品牌id, 电视品牌.品牌名, 各城市电视机销量.城市, 各城市电视机销量.省份, 各城市电视机销量.电视机售卖量, 电视机售卖量.观看电视日平均用时 FROM 电视品牌 INNER JOIN 各城市电视机销量 ON 电视品牌.品牌id = 各城市电视机销量.品牌id INNER JOIN 电视机平台售卖 ON 电视品牌.品牌id = 电视机平台售卖.型号id INNER JOIN 电视机型号 ON 电视机平台售卖.型号id = 电视机型号.型号id WHERE (SELECT 型号id FROM 电视机型号 WHERE 产品定位 = '电视机' ) = ( SELECT 型号id FROM 电视机型号 WHERE 产品定位 = '电视机' ) ORDER BY 观看电视日平均用时 DESC
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SELECT 型号id, 产品定位, 屏幕尺寸, 屏幕比例, 分辨率, 背光灯寿命, 定价 FROM 电视机平台售卖 JOIN 电视机型号 ON 电视机平台售卖.型号id = 电视机型号.型号id JOIN 电视机品牌 ON 电视机平台售卖.品牌id = 电视机品牌.品牌id WHERE 平台 = '拼多多' ORDER BY 售卖量 DESC
SELECT 定价 FROM 电视机平台售卖 WHERE 平台 = '拼多多' ORDER BY 售卖量 DESC
SELECT 定价 FROM 电视机平台售卖 WHERE 平台 = '拼多多' ORDER BY 售卖量 DESC, 定价 DESC

SELECT * FROM 电视机品牌 WHERE 品牌id IN ( SELECT 品牌id FROM 各城市电视机销量 WHERE 城市 = '北京' ORDER BY 售卖量 DESC LIMIT 1 ) SELECT * FROM 电视机平台售卖 WHERE 型号id IN ( SELECT 型号id FROM 电视机型号 WHERE 产品定位 = '游戏' ORDER BY 售卖量 DESC LIMIT 1 ) SELECT * FROM 电视机型号 WHERE 品牌id IN ( SELECT 品牌id FROM 电视机品牌 WHERE 国家 = '中国' ORDER BY 市场份额 DESC LIMIT 1 )
SELECT 屏幕尺寸, 分辨率 FROM 电视机型号 WHERE 品牌id IN ( SELECT 品牌id FROM 电视机品牌 WHERE 国家 = '中国' ORDER BY 市场份额 DESC LIMIT 1 )
SELECT 定价 FROM 电视机平台售卖 WHERE 型号id IN ( SELECT 型号id FROM 电视机型号 WHERE 产品定位 = '游戏' ORDER BY 售卖量 DESC LIMIT 1 )
SELECT 平台, 当前售价, 最高价格, 最低价格, 售卖量, 用户评分 FROM 电视机平台售卖 WHERE 型号id IN ( SELECT 型号id FROM 电视机型号 WHERE 产品定位 = '游戏' ORDER BY 售卖量 DESC LIMIT 1 ) GO SELECT * FROM 电视机品牌 WHERE 品牌id IN ( SELECT 品牌id FROM 电视机品牌 WHERE 国家 = '中国' ORDER BY 市场份额 DESC LIMIT 1 )
SELECT 购买量, 用户评分 FROM 购买记录 WHERE 价格 IN ( SELECT 定价 FROM 价格表 WHERE 产品 = '电视机' ORDER BY 价格 DESC LIMIT 1 ) GO SELECT * FROM 购买记录 WHERE 购买量 IN ( SELECT 购买量 FROM 购买记录 WHERE 购买时间 = '2022-01-01' ORDER BY 购买时间 ASC LIMIT 1 )

SELECT 型号id, 屏幕尺寸, 屏幕比例, 分辨率, 背光灯寿命, 定价 FROM 电视机平台售卖 ORDER BY 屏幕尺寸 DESC LIMIT 1
SELECT 型号id, 屏幕尺寸, 屏幕比例, 分辨率, 背光灯寿命, 定价 FROM 电视机平台售卖 WHERE 屏幕尺寸 IN (SELECT 屏幕尺寸 FROM 电视机品牌 WHERE 品牌id = 20) ORDER BY 屏幕尺寸 DESC, 屏幕比例 DESC LIMIT 1
SELECT 品牌名, 公司, 国家, 市场份额 FROM 各城市电视机销量 WHERE 城市 = '北京' FOREIGN KEY (城市) REFERENCES 各城市电视机销量 (城市) FOREIGN KEY (市场份额) REFERENCES 各城市电视机销量 (市场份额)
SELECT 品牌名, 公司, 国家, 市场份额 FROM 电视机品牌 WHERE 品牌名 = '国产' FOREIGN KEY (品牌名) REFERENCES 电视机品牌 (品牌名)
SELECT 品牌名, 公司, 国家, 市场份额 FROM 电视机品牌 WHERE 品牌名 = '国产' FOREIGN KEY (品牌名) REFERENCES 电视机品牌 (品牌名) ORDER BY 市场份额 DESC LIMIT 1

CREATE TABLE 电视机品牌 ( 品牌id TEXT PRIMARY KEY, 品牌名 TEXT, 公司 TEXT, 国家 TEXT, 市场份额 number ); CREATE TABLE 各城市电视机销量 ( 城市 TEXT, 省份 TEXT, 电视机售卖量 number, 观看电视日平均用时 number ); CREATE TABLE 电视机平台售卖 ( 型号id number, 平台 TEXT, 当前售价 number, 最高价格 number, 最低价格 number, 售卖量 number, 用户评分 number ); CREATE TABLE 电视机型号 ( 型号id TEXT PRIMARY KEY, 型号 text, 产品定位 text, 屏幕尺寸 number, 屏幕比例 text, 分辨率 number, 背光灯寿命 number, 定价 number, 品牌id number, FOREIGN KEY (品牌id) REFERENCES 电视机品牌 (品牌id), FOREIGN KEY (型号id) REFERENCES 电视机型号 (型号id) )
SQL NOT GET: may be TIMEOUT
SELECT * FROM 电视机型号 WHERE 型号id IN ( SELECT 型号id FROM 电视机平台售卖 )
SELECT price FROM 电视机平台售卖 WHERE 型号id IN ( SELECT 型号id FROM 电视机型号 )

SELECT * FROM 电视机品牌 WHERE 品牌id IN (SELECT 品牌id FROM 电视机平台售卖 WHERE 型号id IN (SELECT 型号id FROM 电视机型号))
SELECT price FROM 电视机品牌 WHERE brandid IN (SELECT brandid FROM 电视机平台售卖 WHERE 型号id IN (SELECT 型号id FROM 电视机型号))
SELECT * FROM 在线平台售卖 WHERE 平台id IN (SELECT 平台id FROM 在线平台 WHERE 商品id IN (SELECT 商品id FROM 商品 WHERE 品牌id IN (SELECT 品牌id FROM 电视机品牌 WHERE 型号id IN (SELECT 型号id FROM 电视机型号)))))

SELECT 品牌id, 市场份额 FROM 电视机品牌 ORDER BY 市场份额 DESC LIMIT 1
SELECT型号id, 型号 FROM 电视机型号 WHERE 品牌id = ( SELECT 品牌id FROM 电视机品牌 ORDER BY 市场份额 DESC LIMIT 1 )
SELECT 型号id, 当前售价 FROM 电视机平台售卖 WHERE 当前售价 = ( SELECT 定价 FROM 电视机型号 ORDER BY 定价 DESC LIMIT 1 )

SELECT * FROM 电视机型号
SELECT 品牌名, 公司, 国家, 市场份额, 各城市电视机销量, 电视机平台售卖, 型号id, 品牌id, 产品定位, 屏幕尺寸, 屏幕比例, 分辨率, 背光灯寿命, 定价 FROM 电视机品牌
SELECT 品牌名, 公司, 国家, 市场份额, 各城市电视机销量, 电视机平台售卖, 型号id, 品牌id, 产品定位, 屏幕尺寸, 屏幕比例, 分辨率, 背光灯寿命, 定价 FROM 电视机品牌
SELECT AVG(定价) AS avg_price FROM ( SELECT 定价, COUNT(*) AS num FROM 电视机平台售卖 GROUP BY 定价 ) t ORDER BY num DESC

SELECT 商店名, 应用商店支持国家 FROM "应用商店" JOIN "应用商店支持国家" ON 商店id = 应用商店支持国家 id JOIN "软件" ON 软件id = 商店id WHERE 应用商店支持国家.用户是否可以购买应用程序 = 0 GROUP BY 商店名, 应用商店支持国家 ORDER BY下载量 DESC,好评数 DESC LIMIT 1
SQL NOT GET: may be TIMEOUT
SELECT 商店名, 应用商店支持国家 FROM "应用商店" JOIN "应用商店支持国家" ON 商店id = 应用商店支持国家 id JOIN "软件" ON 软件id = 商店id WHERE 应用商店支持国家.用户是否可以购买应用程序 = 1 GROUP BY 商店名, 应用商店支持国家 ORDER BY下载量 DESC,好评数 DESC LIMIT 1

SELECT * FROM "应用商店" WHERE "应用软件数" = ( SELECT MAX(应用软件数) FROM "应用商店" GROUP BY "商店名" )
SELECT "用户量" as user_count, "用户累计下载次数" as user_total_download_次数, COUNT(*) as user_count_total FROM "应用商店" WHERE "商店名" = ( SELECT "商店名" FROM "应用商店" GROUP BY "商店名" HAVING MAX(user_total_download_次数) = ( SELECT MAX(user_total_download_次数) FROM "应用商店" GROUP BY "商店名" ) )
SELECT "软件名称" FROM "应用商店支持国家" WHERE "应用商店id" = ( SELECT "商店id" FROM "应用商店" WHERE "应用软件数" > 0 LIMIT 1 )
SELECT "下载量" as "下载量_count", COUNT(*) as "下载量_total" FROM "软件下载" WHERE "应用商店id" = ( SELECT "商店id" FROM "应用商店" WHERE "应用软件数" > 0 LIMIT 1 )

SELECT 软件下载, count(软件id) as download_count FROM "应用商店" GROUP BY 应用商店id HAVING count(软件id) > 0 LIMIT 1
SELECT COUNT(DISTINCT 用户id) as user_count FROM "应用商店支持国家" WHERE 国家 = '中国' GROUP BY 应用商店id HAVING user_count > 0
SELECT 应用商店id, CASE WHEN 用户不可以购买应用程序 THEN '中国' ELSE '其他国家' END as 国家_pattern, count(DISTINCT 用户id) as user_count FROM "应用商店支持国家" WHERE 国家 = '中国' GROUP BY 应用商店id HAVING user_count > 0 LIMIT 1
SELECT 商店id, CASE WHEN 开发人员不可以出售应用程序 THEN '中国' ELSE '其他国家' END as 国家_pattern, '应用程序可以出售' as 是否_可以买 FROM "应用商店支持国家" WHERE 国家 = '中国' GROUP BY 商店id HAVING 是否_可以买 > 0 LIMIT 1

SELECT * FROM "应用商店" JOIN "应用商店支持国家" ON "应用商店id" = "应用商店id" JOIN "软件" ON "软件id" = "应用商店id" WHERE "商店名" = '美妆' ORDER BY "下载量" DESC
SELECT * FROM "应用商店" JOIN "应用商店支持国家" ON "应用商店id" = "应用商店id" JOIN "软件" ON "软件id" = "应用商店id" WHERE "商店名" = '美妆' AND "软件名称" = '软件' ORDER BY "下载量" DESC
SELECT COUNT(*) FROM "应用商店" JOIN "应用商店支持国家" ON "应用商店id" = "应用商店id" JOIN "软件" ON "软件id" = "应用商店id" WHERE "商店名" = '美妆' AND "软件名称" = '软件'
SELECT COUNT(*) FROM "软件下载" JOIN "应用商店支持国家" ON "应用商店id" = "应用商店id" JOIN "软件" ON "软件id" = "应用商店id" WHERE "软件id" = '软件' GROUP BY "软件id" ORDER BY COUNT(*) DESC
SQL NOT GET: may be TIMEOUT

SELECT软件id,下载量,评价人数,好评数, FROM "软件下载" WHERE下载量 = ( SELECT MAX(下载量) FROM "应用商店支持国家" WHERE "商店id" = '商店id' )
SELECT 应用商店id,下载量,评价人数,好评数, FROM "应用商店支持国家" WHERE "商店id" = ( SELECT MAX(下载量) FROM "应用商店" WHERE "商店name" = '商店名' )
SELECT软件id, 应用类型, FROM "软件" WHERE 应用类型 = ( SELECT 类型 FROM "软件下载" WHERE "软件id" = '软件id' )

SELECT * FROM "应用商店" WHERE "商店名" IN ('Google Play Store', 'App Store') AND "应用软件数" > 0 AND "累计下载次数" > 0 AND "用户是否可以购买应用程序" = '1' AND "开发人员是否可以出售应用程序" = '1'
SELECT * FROM "应用商店" WHERE "商店名" IN ('Google Play Store', 'App Store') AND "应用软件数" > 0 AND "累计下载次数" > 0 AND "用户是否可以购买应用程序" = '1' AND "开发人员是否可以出售应用程序" = '1'
SQL NOT GET: may be TIMEOUT
SELECT COUNT(*) FROM "应用商店" WHERE "商店名" IN ('Google Play Store', 'App Store') AND "应用软件数" > 0 AND "累计下载次数" = (SELECT 累计下载次数 FROM "应用商店" WHERE "商店名" = 'Google Play Store' ORDER BY 下载量 DESC LIMIT 1)

CREATE TABLE 中国地铁 ( 年份 time, 总里程 number, 开通城市数量 number ); CREATE TABLE 城市 ( 城市id text PRIMARY KEY, 城市名称 text, 所属省份 text ); CREATE TABLE 城市地铁票价 ( 城市id number PRIMARY KEY, 列_2元可乘坐里程 number, 列_3元可乘坐里程 number, 列_4元可乘坐里程 number, 列_5元可乘坐里程 number ); CREATE TABLE 城市地铁里程 ( 城市id number PRIMARY KEY, 地铁运营里程 number, 在建里程 number, 规划里程 number, 已运营线路数 number, FOREIGN KEY (城市id) REFERENCES 城市 (城市id) ); CREATE TABLE 城市地铁日均客运量 ( 城市id number PRIMARY KEY, 日均客运量 number, 每日每公里客运量 number, 每公里运营成本 number, 每公里运营收入 number, FOREIGN KEY (城市id) REFERENCES 城市 (城市id) )
SELECT 省份, 城市 FROM 中国地铁 WHERE 年份 = '2020'
SELECT 城市, 地铁运营里程 FROM 城市地铁里程表 WHERE 年份 = '2020'
SELECT 城市, 线路数 FROM 城市地铁线路表 WHERE 年份 = '2020'

CREATE TABLE 中国地铁 ( 年份 time , 总里程 number , 开通城市数量 number ) CREATE TABLE 城市 ( 城市id text PRIMARY KEY, 城市名称 text, 所属省份 text ) CREATE TABLE 城市地铁票价 ( 城市id number PRIMARY KEY, 列_2元可乘坐里程 number, 列_3元可乘坐里程 number, 列_4元可乘坐里程 number, 列_5元可乘坐里程 number ) CREATE TABLE 城市地铁里程 ( 城市id number PRIMARY KEY, 地铁运营里程 number, 在建里程 number, 规划里程 number, 已运营线路数 number ) CREATE TABLE 城市地铁日均客运量 ( 城市id number PRIMARY KEY, 日均客运量 number, 每日每公里客运量 number, 每公里运营成本 number, 每公里运营收入 number )
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SQL NOT GET: may be TIMEOUT
SELECT cityid, 每天每公里客运量, 每公里运营成本, 每公里运营收入 FROM 城市地铁日均客运量 INNER JOIN 城市地铁票价 ON cityid = 票价.城市id INNER JOIN 城市 ON cityid = 城市.城市id INNER JOIN 城市地铁里程 ON cityid = 里程.城市id INNER JOIN 城市地铁日均客运量 ON cityid = 日均客运量.城市id WHERE 城市.城市名称 = '中国地铁' AND 日期 = '2021-01-01' ORDER BY 每天每公里客运量 DESC LIMIT 10
SQL NOT GET: may be TIMEOUT

SELECT 城市id, MAX(列_2元可乘坐里程) as 列_2元可乘坐里程, MAX(列_3元可乘坐里程) as 列_3元可乘坐里程, MAX(列_4元可乘坐里程) as 列_4元可乘坐里程, MAX(列_5元可乘坐里程) as 列_5元可乘坐里程 FROM 城市地铁票价 GROUP BY 城市id ORDER BY MAX(列_2元可乘坐里程) DESC, MAX(列_3元可乘坐里程) DESC, MAX(列_4元可乘坐里程) DESC, MAX(列_5元可乘坐里程) DESC LIMIT 1
SELECT 站名 as 站名, COUNT(*) as 站名数量 FROM 城市地铁里程 WHERE 列_2元可乘坐里程 = 2 GROUP BY 站名 ORDER BY 站名数量 DESC LIMIT 1
SELECT 城市 as 城市, 列_5元可乘坐里程 as 列_5元可乘坐里程, COUNT(*) as 列_5元可乘坐里程数量 FROM 城市地铁票价 WHERE 列_5元可乘坐里程 = 5 GROUP BY 城市 ORDER BY 列_5元可乘坐里程数量 DESC LIMIT 1
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SQL NOT GET: may be TIMEOUT
CREATE TABLE 民俗节日 ( 节日 text, 民族id number, 时间 time, 纪念 text, FOREIGN KEY (民族id) REFERENCES 民族(词条id)) CREATE TABLE "民族" ( "民族id" text, "名称" text, "人口" number, "语言" text, "宗教信仰" text, PRIMARY KEY ("民族id") ) CREATE TABLE "民族城市" ( "民族id" number, "城市名称" text, "人口" number, "比例" number, FOREIGN KEY (民族id) REFERENCES "民族" ("民族id"), ON DELETE NOACTION ON UPDATE NOACTION )
CREATE TABLE 民俗节日 ( 节日 text, 民族id number, 时间 time, 纪念 text, FOREIGN KEY (民族id) REFERENCES 民族(词条id)) CREATE TABLE "民族城市" ( "民族id" number, "城市名称" text, "人口" number, "比例" number, FOREIGN KEY (民族id) REFERENCES "民族" ("民族id"), ON DELETE NOACTION ON UPDATE NOACTION )

SELECT * FROM "民族" WHERE 语言 = '汉语'
SELECT人口,比例 FROM "民族城市" WHERE 城市名称 = '北京'
SELECT 城市名称,人口比例 FROM "民族城市" WHERE 城市名称 = '北京' AND 民族id = '1'
SELECT 节日名称, 民族id, 时间, 纪念 FROM "民俗节日" WHERE 节日 = '春节' AND 民族id = '1' AND 时间 = '2023-02-18'

SELECT * FROM 动物 WHERE 食性 = '草'
SELECT * FROM 动物 WHERE 是否是人类朋友 = '0'
SELECT * FROM 动物 WHERE 理由 = '人类的朋友'

SELECT * FROM 奥运会冠亚军 INNER JOIN 冠军国家 ON 奥运会冠亚军.赛事id = 冠军国家.赛事id INNER JOIN 球员夺冠次数 ON 运动员.球员id = 冠军次数.球员id WHERE 奥运会冠亚军.比赛名称 = '羽毛球比赛'
SELECT * FROM 奥运会冠亚军 INNER JOIN 冠军国家 ON 奥运会冠亚军.赛事id = 冠军国家.赛事id INNER JOIN 球员夺冠次数 ON 运动员.球员id = 冠军次数.球员id WHERE 奥运会冠亚军.比赛名称 = '羽毛球比赛' and 冠军国家.成立时间 = '1950' and 球员夺冠次数.冠军次数 = 1
SELECT * FROM 奥运会冠亚军 INNER JOIN 冠军国家 ON 奥运会冠亚军.赛事id = 冠军国家.赛事id INNER JOIN 球员夺冠次数 ON 运动员.球员id = 冠军次数.球员id WHERE 奥运会冠亚军.比赛名称 = '羽毛球比赛' and 冠军国家.成立时间 = '1950' and 球员.冠军次数 = 1
SQL NOT GET: may be TIMEOUT

SELECT * FROM "医院排名" WHERE 年份 = ( SELECT MAX(年份) FROM "医院" WHERE 医院名 = '未知' AND 所属城市id = '未知' )
SELECT COUNT(*) FROM "医院" WHERE "院士数量" = ( SELECT COUNT(*) FROM "院士数量" WHERE "医院名" = '未知' AND "所属城市id" = '未知' )
SELECT COUNT(*) FROM "医院" GROUP BY "科室数量" HAVING COUNT(*) > 1
SELECT * FROM "医院" WHERE 是否重点 = 0 AND "科室数量" = ( SELECT COUNT(*) FROM "特色科室" WHERE "医院id" = '未知' GROUP BY "科室" HAVING COUNT(*) > 0 )

SELECT 球员id, AGE(出生日期) AS 年龄 FROM 羽毛球球员 ORDER BY AGE(出生日期) DESC
SELECT 球员id, 球员姓名, 国籍, 出生日期, 身高, 性别, SELECT COUNT(*) FROM 重要赛事 WHERE 赛事id IN (SELECT 赛事id FROM 奥运会冠亚军) ON DELETE NOACTION ON UPDATE NOACTION FROM 羽毛球球员
SELECT 球员id, 赛事id, 运动员姓名, 性别, 冠军次数, 亚军次数, 季军次数 FROM 重要赛事 WHERE 赛事id IN (SELECT 赛事id FROM 奥运会冠亚军) ORDER BY 冠军次数 DESC, 亚军次数 DESC, 季军次数 DESC
SELECT 球员id, 运动员姓名, 性别, 身高, SELECT MAX(身高) AS max_height FROM 羽毛球球员 WHERE 球员id IN (SELECT 球员id FROM 羽毛球球员) GROUP BY 球员id, 运动员姓名, 性别 FROM 羽毛球球员

SELECT 冠军数量 FROM 奥运会冠亚军 WHERE 国家名称 = '中国'
SELECT球员id,球员姓名,性别,国籍,出生日期,身高 FROM 羽毛球球员 WHERE 球员id NOT IN (SELECT 球员id FROM 重要赛事)
SELECT 赛事名称, 冠军数量 FROM 奥运会冠亚军 WHERE 国家名称 = '中国'

SELECT * FROM 医院 WHERE 医院id IN (SELECT 医院id FROM 医院排名 WHERE 年份=2022)
SELECT COUNT(*) AS科室数量, SUM(科室数量) AS重点专科数量 FROM 医院
SELECT接待病患数量,手术数量 FROM 医院
SELECT科室名称, '是研究中心' AS 科室类型 FROM 特色科室

NO SQL FOUND
SELECT * FROM医院 ORDER BY职工数量 DESC LIMIT 10
SELECT * FROM 医院 WHERE 所属城市id = '哈尔滨'
SELECT 人口数量, 老年人口占比 FROM 城市, 特色科室 WHERE 城市id = '哈尔滨'

SELECT * FROM "医院" "a" LEFT JOIN "医院排名" "b" ON "a"."医院id" = "b"."医院id" WHERE "b"."年份" = (SELECT 年份 FROM "城市" WHERE 城市id = 12345 AND "词条id" = "洛阳")
SELECT * FROM "医院" "a" LEFT JOIN "医院排名" "b" ON "a"."医院id" = "b"."医院id" WHERE "b"."等级" = (SELECT 等级 FROM "医院" WHERE 医院id = 1)
SELECT * FROM "科室" "c" JOIN "医院" "a" ON "a"."科室id" = "c"."科室id" JOIN "医院排名" "b" ON "b"."医院id" = "a"."医院id" WHERE "b"."医院id" = (SELECT 医院id FROM "医院" WHERE 医院id = 1)
SELECT * FROM "科室" "c" JOIN "医院" "a" ON "a"."科室id" = "c"."科室id" JOIN "医院排名" "b" ON "b"."医院id" = "a"."医院id" WHERE "b"."是否重点" = 1

SELECT * FROM "城市" AS t1 INNER JOIN "医院" AS t2 ON t1."城市id" = t2."所属城市id" INNER JOIN "医院排名" AS t3 ON t2."医院id" = t3."医院id" ON t1."人口数量" = (SELECT MAX(人口数量) FROM "城市" WHERE 所属省份 = t1."国家") WHERE t3."年份" = t1."年份" AND t3."排名" = t1."排名" ORDER BY t1."人口数量" DESC
SQL NOT GET: may be TIMEOUT
SELECT * FROM "医院" AS t1 INNER JOIN "医院排名" AS t2 ON t1."医院id" = t2."医院id" INNER JOIN "城市" AS t3 ON t1."城市id" = t3."城市id" WHERE t2."医院id" IN (SELECT "二甲医院id" FROM "医院" WHERE "医院等级" = 1 AND "职工数量" > 100) ORDER BY t1."医院等级" DESC, t2."医院id" DESC, t3."人口数量" DESC
SQL NOT GET: may be TIMEOUT

SELECT 日均客运量,每日每公里客运量, 每公里运营成本,每公里运营收入 FROM 城市地铁日均客运量 WHERE 城市 = '成都'
SELECT * FROM 城市地铁日均客运量 WHERE 城市 = '成都'
SELECT * FROM 城市地铁日均客运量 WHERE 城市 = '成都' AND 列_4元可乘坐里程 > 0

SELECT * FROM "医院" WHERE "医院等级" = 3 AND "职工数量" = 1 AND "院士数量" = 1
SELECT * FROM "医院排名" WHERE "年份" = '2022' AND "医院id" = '1' AND "排名" = '1'
SELECT * FROM "医院排名" WHERE "年份" = '2022' AND "医院id" = '1' AND "排名" < '20'

SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SELECT * FROM 运动员 JOIN 重要赛事 ON 运动员.球员id = 重要赛事.赛事id JOIN 奥运会冠亚军 ON 运动员.球员id = 奥运会冠亚军.金牌获得者id JOIN 冠军国家 ON 运动员.球员id = 冠军国家.赛事id JOIN 比赛夺冠次数 ON 运动员.球员id = 比赛夺冠次数.球员id WHERE 冠军国家.赛事id = '20120820' AND 奥运会冠亚军.比赛名称 = '奥运会' AND 冠军国家.赛事名称 = '奥运会' AND 运动员.性别 = '男' AND 运动员.国籍 = '中国'
SELECT 冠军数量 FROM 冠军国家 JOIN 重要赛事 ON 冠军国家.赛事id = 重要赛事.赛事id JOIN 奥运会冠亚军 ON 冠军国家.赛事id = 奥运会冠亚军.金牌获得者id JOIN 球员夺冠次数 ON 冠军国家.赛事id = 球员夺冠次数.球员id WHERE 奥运会冠亚军.比赛名称 = '奥运会' AND 冠军国家.赛事名称 = '奥运会' AND 运动员.性别 = '男' AND 运动员.国籍 = '中国'
SQL NOT GET: may be TIMEOUT

SELECT t1.运动员name, t2.奥运会名称, t3.项目名称, t4.金牌获得者id, t5.银牌获得者id, t6.铜牌获得者id FROM "羽毛球球员" t1 JOIN "重要赛事" t2 ON t1.球员id = t2.赛事id JOIN "奥运会冠亚军" t3 ON t2.赛事id = t3.奥运会名称 JOIN "球员夺冠次数" t4 ON t3.球员id = t4.球员id JOIN "冠军国家" t5 ON t4.冠军数量 = t5.国家名称 WHERE t3.奥运会名称 = '2008北京奥运会' ORDER BY t5.冠军数量 DESC
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SELECT 国家名称, 赛事id, 冠军数量, (SELECT COUNT(*) FROM 冠军国家) AS 冠军数量_list, FROM 冠军国家 GROUP BY 赛事id ORDER BY 冠军数量 DESC LIMIT 1
SELECT 赛事id, 冠军数量, (SELECT COUNT(*) FROM 冠军国家) AS 冠军数量_list, FROM 冠军国家 GROUP BY 赛事id ORDER BY 冠军数量 DESC LIMIT 1
SQL NOT GET: may be TIMEOUT
SELECT 赛事id, 比赛数量, (SELECT COUNT(*) FROM 冠军国家) AS 冠军数量_list, FROM 冠军国家 WHERE 比赛间隔年 like '%1990%' ORDER BY 比赛数量 DESC LIMIT 1

SELECT 医院名 FROM 医院 FROM 医院排名 FROM 城市 FROM 特色科室 WHERE 所属城市id = ( SELECT 词条id FROM 城市 WHERE 名称 = '北京' )
SELECT 城市id FROM 医院 WHERE 医院名 = ( SELECT 词条id FROM 城市 WHERE 名称 = '北京' )
SELECT 医院id FROM 医院 WHERE 医院名 NOT IN ( SELECT 词条id FROM 城市 WHERE 名称 = '哈尔滨' )
SELECT 医院id, 城市id, COUNT(*) AS院士数量 FROM 医院 INNER JOIN 医院排名 ON 医院id = 医院排名.医院id INNER JOIN 城市 ON 城市id = 医院排名.城市id INNER JOIN 特色科室 ON 特色科室id = 医院排名.科室id WHERE 城市.名称 = '哈尔滨' GROUP BY 医院id, 城市id HAVING COUNT(*) > 1
SQL NOT GET: may be TIMEOUT

SELECT * FROM 羽毛球球员 WHERE 性别 = '男性' LIMIT 0, 1
SELECT 赛事成立时间, 比赛间隔年 FROM 重要赛事 WHERE 赛事名称 = '奥运会冠亚军' ORDER BY 赛事成立时间 DESC
SELECT COUNT(*) FROM 羽毛球球员 WHERE 球员id NOT IN ( SELECT 球员id FROM 重要赛事 WHERE 赛事id NOT IN ( SELECT 赛事id FROM 羽毛球球员 ORDER BY 赛事id DESC LIMIT 0, 1 ) )
SELECT 运动员id, 奥运会名称, 项目名称, 冠军次数 FROM 奥运会冠亚军 WHERE 比赛名称 = '羽毛球比赛' GROUP BY 运动员id, 奥运会名称, 项目名称 HAVING 冠军次数 > 0 ORDER BY 冠军次数 DESC
SELECT * FROM 球员夺冠次数 WHERE 赛事id = '羽毛球比赛' ORDER BY 冠军次数 DESC LIMIT 0, 1

SELECT 地铁运营里程 FROM 城市地铁里程 WHERE 城市id = '广东'
SELECT 地铁规划里程 FROM 城市地铁规划里程 WHERE 城市id = '广东'
SELECT 地铁运营里程, 地铁在建里程, 地铁规划里程, 地铁已运营线路数, 地铁日均客运量 FROM 城市地铁日均客运量 WHERE 城市id = '广东'

SELECT * FROM 动物 WHERE 是否是人类朋友 = 1
SELECT * FROM 动物朋友 WHERE 是否是人类朋友 = 1
SELECT * FROM 动物的天敌 WHERE 天敌id = (SELECT 动物id FROM 动物 WHERE 是否是人类朋友 = 0)

SELECT * FROM "奥运会冠亚军" WHERE "奥运会名称" = '2016北京奥运会' FOREIGN KEY ("金牌获得者id") REFERENCES "羽毛球球员" ("球员id") ON DELETE NOACTION ON UPDATE NOACTION, "奥运会名称" = '2016北京奥运会' FOREIGN KEY ("银牌获得者id") REFERENCES "羽毛球球员" ("球员id") ON DELETE NOACTION ON UPDATE NOACTION, "奥运会名称" = '2016北京奥运会' FOREIGN KEY ("铜牌获得者id") REFERENCES "羽毛球球员" ("球员id") ON DELETE NOACTION ON UPDATE NOACTION, "运动员姓名" = '张三' FOREIGN KEY ("性别") REFERENCES '男' ("性别") ON DELETE NOACTION ON UPDATE NOACTION, "运动员姓名" = '李四' FOREIGN KEY ("国籍") REFERENCES '中国' ("国籍") ON DELETE NOACTION ON UPDATE NOACTION, "出生日期" = '1990-01-01' FOREIGN KEY ("身高") REFERENCES ("身高") ON DELETE NOACTION ON UPDATE NOACTION
SELECT * FROM "运动员夺冠次数" WHERE "运动员姓名" = '张三' FOREIGN KEY ("国籍") REFERENCES '中国' ("国籍") ON DELETE NOACTION ON UPDATE NOACTION, "运动员姓名" = '李四' FOREIGN KEY ("国籍") REFERENCES '中国' ("国籍") ON DELETE NOACTION ON UPDATE NOACTION, "运动员姓名" = '王五' FOREIGN KEY ("国籍") REFERENCES '中国' ("国籍") ON DELETE NOACTION ON UPDATE NOACTION, "运动员姓名" = '赵六' FOREIGN KEY ("国籍") REFERENCES '中国' ("国籍") ON DELETE NOACTION ON UPDATE NOACTION, "运动员姓名" = '钱七' FOREIGN KEY ("国籍") REFERENCES '中国' ("国籍") ON DELETE NOACTION ON UPDATE NOACTION
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SQL NOT GET: may be TIMEOUT
SELECT * FROM "民族城市" WHERE "民族id" = ( SELECT "民族id" FROM "民族" ORDER BY "人口" DESC LIMIT 10 ) ORDER BY "比例" DESC
SELECT * FROM "民族城市" WHERE "民族id" = ( SELECT "民族id" FROM "民族" ORDER BY "人口" DESC LIMIT 10 ) ORDER BY "宗教信仰" DESC
SELECT * FROM "民族城市" WHERE "民族id" = ( SELECT "民族id" FROM "民族" ORDER BY "人口" DESC LIMIT 10 ) ORDER BY "人口" DESC, "语言" DESC, "宗教信仰" DESC

SELECT 日期 FROM 民俗节日 WHERE 民族id = 1
SELECT 人口 FROM "民族城市" WHERE 民族id = 1
SELECT 比例 FROM "民族城市" WHERE 民族id = 1
SQL NOT GET: may be TIMEOUT

SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SELECT * FROM "篮球运动员" WHERE "参加选秀年" = '1984' ORDER BY "参加选秀年" DESC LIMIT 1
SELECT * FROM "篮球运动员" WHERE "参加选秀年" = '1984' ORDER BY "参加选秀年" DESC LIMIT 1
SELECT SUM(num_MVP) FROM "MVP记录" WHERE "球员id" = 'your_player_id' GROUP BY "球员id" ORDER BY SUM(num_MVP) DESC LIMIT 1

SELECT * FROM "民族" WHERE 民族id IN (SELECT 民族id FROM "民族城市") ON DELETE NOACTION ON UPDATE NOACTION
SELECT 语言, 宗教信仰 FROM "民族" WHERE 民族id IN (SELECT 民族id FROM "民族城市") ON DELETE NOACTION ON UPDATE NOACTION
SELECT人口, COUNT(*) FROM "民族" GROUP BY人口ORDER BY COUNT(*) DESC LIMIT 1

SELECT a.艺人, a.综艺节目, a.身份, a.参加期数 FROM "艺人" a INNER JOIN "综艺节目" b ON a.经纪公司 = b.制作公司 INNER JOIN "平台" c ON b.平台id = c.词条id INNER JOIN "节目阵容" d ON a.综艺节目id = d.节目id WHERE b.播出状态 = '已播' AND d.参加期数 = 1 AND a.id = d.艺人id AND a.id NOT IN (SELECT id FROM 节目阵容 WHERE 期数 = 0) AND a.姓名 = '明星' AND a.民族 = '汉'
SELECT c.参加期数 FROM "节目阵容" d INNER JOIN "综艺节目" e ON d.综艺节目id = e.节目id INNER JOIN "艺人" a ON e.艺人id = a.id INNER JOIN "平台" b ON a.平台id = b.平台id WHERE b.平台名称 = '妻子的浪漫旅行' AND e.播出状态 = '已播' AND a.id = b.艺人id AND a.姓名 = '明星' AND a.民族 = '汉'
SQL NOT GET: may be TIMEOUT

SELECT 电视剧id,首播平台id FROM 电视剧收视 WHERE 时间段 = '2022-01-01' AND 平台id = '2' AND 首播平台id = '1'
SELECT 的电视剧id, 的合成时间 FROM 电视剧收视 WHERE 时间段 = '2022-01-01' AND 的合成时间 = '2022-01-19'
SELECT 收视率 FROM 电视剧收视 WHERE 时间段 = '2022-01-01' AND 合成时间 = '2022-01-19'

SELECT * FROM 电视剧 WHERE 剧名 = '自制剧'
SELECT * FROM 电视剧 WHERE 剧名 = '教育意义'; SELECT * FROM 电视剧收视 WHERE 平台id = '当时'
SELECT 电视台id, 电视剧id, 收视率 FROM 电视剧收视 WHERE 平台id = '2022'
SELECT 电视台id, 电视剧id, 收视率 FROM 电视剧收视 WHERE 首播平台id = '2016' AND 时间段 = '19:00'

SELECT * FROM 电视剧 WHERE 出品时间 = '2022-01-01' AND 出品公司 = '正午阳光' AND 发行公司 = 'ABC'
SELECT 剧名, 出品时间 FROM 电视剧 WHERE 出品时间 = '2022-01-01' AND 出品公司 = '正午阳光' AND 发行公司 = 'ABC'
SELECT 电视剧收视.剧名, 电视剧收视.出品公司, 电视剧收视.发行公司 FROM 电视剧收视 INNER JOIN 电视剧 ON 电视剧收视.首播平台id = 电视剧收视.平台id INNER JOIN 电视台 ON 电视剧收视.电视台id = 电视台.电视台id WHERE 电视剧收视.出品时间 = '2022-01-01' AND 电视剧收视.发行公司 = '正午阳光' AND 电视台.隶属机构 = 'ABC'
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SELECT * FROM 电视台 WHERE name = 'CCTV'; SELECT * FROM 电视剧 WHERE剧名 = '三国演义'; SELECT * FROM 电视剧收视 WHERE电视剧id = 1
SELECT 隶属机构 FROM 电视台 WHERE name = 'CCTV'; SELECT 隶属机构 FROM 电视剧 WHERE 剧名 = '三国演义'; SELECT 隶属机构 FROM 电视剧收视 WHERE 电视剧id = 1
SELECT 上线时间,开播时间 FROM 电视台 WHERE name = 'CCTV'; SELECT 上线时间,开播时间 FROM 电视剧 WHERE 剧名 = '三国演义'; SELECT 上线时间,开播时间 FROM 电视剧收视 WHERE 电视剧id = 1
SELECT 剧名 FROM 电视剧 WHERE 首播平台id = 1 AND 出品公司 = 'ABC'; SELECT 剧名 FROM 电视剧 WHERE 首播平台id = 1 AND 出品公司 = 'XYZ'; SELECT 剧名 FROM 电视剧收视 WHERE 电视剧id = 1 AND 平台id = 'CCTV' AND 时间段 = '2022-01-01 10:00:00'

SELECT * FROM "平台" WHERE "平台id" NOT IN (SELECT "平台id" FROM "艺人") AND "平台id" NOT IN (SELECT "平台id" FROM "综艺节目")
SELECT COUNT(*) FROM "综艺节目" WHERE "节目id" = (SELECT "节目id" FROM "节目阵容" WHERE "参加期数" > 1 AND "平台id" = '平台id' AND "年会费" > 0)
SELECT 的时光 AS 播放时间 FROM "综艺节目" AS t1 JOIN "节目阵容" AS t2 ON t1."平台id" = t2."节目id" AND t1."期数" = t2."期数" WHERE t2."每周播出时间" = '时间' AND t1."播出状态" = '播放'
SELECT SUM(的时光) AS 月会费 FROM "综艺节目" AS t1 JOIN "节目阵容" AS t2 ON t1."平台id" = t2."节目id" AND t1."期数" = t2."期数" WHERE t2."每周播出时间" = '时间' AND t1."播出状态" = '播放' AND t1."参加期数" > 1 AND t1."平台id" = '平台id' AND t1."年会费" > 0 GROUP BY t1."平台id" ORDER BY 月会费 DESC LIMIT 3

SELECT * FROM "妻子的浪漫旅行" WHERE "夫妻" IN (SELECT "夫妻id" FROM "节目阵容")
SELECT * FROM "嘉宾" WHERE "姓名" = (SELECT "姓名" FROM "艺人")
SELECT * FROM "综艺节目" WHERE "平台id" = (SELECT "平台id" FROM "平台") ORDER BY "首播时间" DESC LIMIT 1

SELECT * FROM "平台" WHERE (年费 < 1000)
SELECT SUM(年会费) as 年会费用 FROM "平台" WHERE (年费 < 1000)
SELECT 季度会费 as 季度会费 FROM "平台" WHERE (季度会费 < 500)
SELECT 预算 as 预算 FROM ( SELECT SUM(年费) as 年费, COUNT(*) as 人数 FROM "平台" WHERE (年费 < 1000) ) subquery WHERE (预算 < 50000)
SELECT的口碑 AS口碑, 综艺节目的期数 FROM "平台" WHERE (口碑 < 50)

SELECT * FROM "艺人" WHERE id IN (SELECT id FROM "综艺节目" WHERE name = '奇葩说') ORDER BY id DESC
SELECT * FROM "综艺节目" WHERE id IN (SELECT id FROM "艺人" WHERE name = '傅首尔') ORDER BY id DESC
SELECT * FROM "平台" WHERE id IN (SELECT id FROM "综艺节目" WHERE name = '奇葩说') ORDER BY id DESC

SELECT * FROM "综艺节目" WHERE "期数" = (SELECT "节目id" FROM "艺人" WHERE "姓名" = "妻子") AND "首播时间" = (SELECT "时间" FROM "平台" WHERE "平台id" = "妻子" AND "口碑" = '1' AND "每周播出时间" = '2022-02-18' )
SELECT * FROM "综艺节目" WHERE "期数" = (SELECT "节目id" FROM "艺人" WHERE "姓名" = "妻子") AND "首播时间" = (SELECT "时间" FROM "平台" WHERE "平台id" = "妻子" AND "口碑" = '1' AND "每周播出时间" = '2022-02-18' AND "首播时间" > '2022-02-18' )
SELECT * FROM "综艺节目" WHERE "期数" = (SELECT "节目id" FROM "艺人" WHERE "姓名" = "妻子") AND "首播时间" = (SELECT "时间" FROM "平台" WHERE "平台id" = "妻子" AND "口碑" = '1' AND "每周播出时间" = '2022-02-18' AND "首播时间" > '2022-02-18' AND "首播时间" < '2022-02-21' AND "每周播出时间" = '2022-02-24' AND "平台id" ≠ '妻子' AND "平台id" ≠ '妻子' AND "平台id" ≠ '妻子' AND "口碑" ≠ '0' AND "平台id" ≠ '妻子' AND "平台id" ≠ '妻子' AND "口碑" ≠ '1' AND "平台id" ≠ '妻子' AND "平台id" ≠ '妻子')
SELECT COUNT(*) as 期数 FROM "综艺节目" WHERE "期数" = (SELECT COUNT(*) FROM "艺人" WHERE "姓名" = "妻子") + '期' AND "首播时间" = (SELECT '2022-02-18' AS 首播时间) + '期' AND "每周播出时间" = '2022-02-24'

SELECT * FROM "综艺节目" WHERE首播时间 = '2022-05-15 19:00' AND每周播出时间 = '2022-05-15 21:00'
SELECT * FROM "综艺节目" WHERE 首播时间 = '2022-05-15' AND 每周播出时间 = '2022-05-16'
SELECT * FROM "综艺节目" WHERE 首播时间 = '2022-05-15' AND 每周播出时间 = '2022-05-16'

SELECT * FROM "艺人" WHERE id IN (SELECT id FROM "平台" WHERE name = '嘉行天下')
SELECT 字段1, 字段2, 字段3 FROM "艺人" WHERE id IN (SELECT id FROM "平台" WHERE name = '艺人平台' AND xpath = '//text()' AND class = ''))
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

NO SQL FOUND
NO SQL FOUND
NO SQL FOUND
NO SQL FOUND

NO SQL FOUND
NO SQL FOUND
NO SQL FOUND

NO SQL FOUND
NO SQL FOUND
NO SQL FOUND

SELECT * FROM 医院 WHERE 所属城市id = (SELECT 词条id FROM 城市 ON DELETE NOACTION ON UPDATE NOACTION)
SELECT * FROM 医院 WHERE 医院等级 = '三甲医院'
SELECT * FROM 医院 WHERE 科室数量 = 1 AND 重点专科数量 = 1

SELECT * FROM "医院" WHERE 医院名 = '吉林大学白求恩第一医院'
SELECT * FROM "医院排名" WHERE 年份 = '2022' AND 医院id IN ( SELECT 医院id FROM "医院" WHERE 城市名 = '长春' )
SELECT手术数量 FROM "医院排名" WHERE 年份 = '2022' AND 医院id IN ( SELECT 医院id FROM "医院" WHERE 城市名 = '长春' )
SELECT职工数量 FROM "医院" WHERE 医院id IN ( SELECT 医院id FROM "医院" WHERE 城市名 = '长春' )
SELECT 城市名, 城市id FROM "城市" WHERE 城市id IN ( SELECT 城市id FROM "城市" WHERE 省份 = '辽宁省' )

SELECT 城市名, MAX(人口数量) AS max_population FROM 城市 GROUP BY 城市名
SELECT 老年人口占比, MAX(人口数量) AS max_population FROM 城市 GROUP BY 城市名
SELECT 老年人数量, COUNT(*) AS total_population FROM 城市 GROUP BY 老年人数量
SELECT 医院名, 医院排名 FROM 医院排名 GROUP BY 医院名

SELECT t2.科室数量, t3.排名, COUNT(DISTINCT t1.医院id) as 医院数量 FROM "医院" t1 INNER JOIN "特色科室" t2 ON t1.科室 = t2.科室 INNER JOIN "城市" t3 ON t2.城市id = t3.城市id WHERE t2.重点 = 1 AND t3.城市id = ( SELECT MAX(城市id) FROM "城市" ) GROUP BY t1.医院id, t2.科室数量, t3.排名 ORDER BY 医院数量 DESC
SELECT COUNT(DISTINCT t1.医院id) as 医院数量 FROM "医院" t1 INNER JOIN "特色科室" t2 ON t1.科室 = t2.科室 INNER JOIN "城市" t3 ON t2.城市id = t3.城市id WHERE t2.重点 = 1 AND t3.城市id = ( SELECT MAX(城市id) FROM "城市" ) GROUP BY t1.医院id, t2.科室数量, t3.排名 ORDER BY 医院数量 DESC
SELECT t1.科室, COUNT(DISTINCT t1.医院id) as 医院数量 FROM "医院" t1 INNER JOIN "特色科室" t2 ON t1.科室 = t2.科室 INNER JOIN "城市" t3 ON t2.城市id = t3.城市id WHERE t2.重点 = 1 AND t3.城市id = ( SELECT MAX(城市id) FROM "城市" ) GROUP BY t1.科室, t2.科室数量, t3.城市id ORDER BY 医院数量 DESC

SELECT t1.name AS 城市名, t1.人口数量, t1.老年人口占比, (SELECT COUNT(*) FROM "城市" t2 WHERE t2.城市id = t1.城市id AND t2.老年人口占比 = (SELECT MIN(老年人口占比) FROM "城市" t3 WHERE t3.城市id = t1.城市id)) AS 最小老年人占比 FROM "医院" t1 JOIN "医院排名" t2 ON t1.医院id = t2.医院id JOIN "城市" t3 ON t2.城市id = t3.城市id WHERE t3.老年人口占比 = 0
SELECT * FROM "医院" t1 JOIN "医院排名" t2 ON t1.医院id = t2.医院id JOIN "城市" t3 ON t2.城市id = t3.城市id WHERE t3.老年人口占比 = 0
SELECT COUNT(*) FROM "医院" t1 JOIN "医院排名" t2 ON t1.医院id = t2.医院id JOIN "城市" t3 ON t2.城市id = t3.城市id WHERE t3.老年人口占比 = 0

SELECT * FROM "医院排名" WHERE "医院id" IN ( SELECT "医院id" FROM "医院" ORDER BY "排名" DESC LIMIT 10 ) AND "城市id" = ( SELECT "城市id" FROM "城市" ORDER BY "人口数量" DESC LIMIT 10 )
SELECT * FROM "医院排名" WHERE ("接待病患数量" + "手术数量") = ( SELECT SUM(接待病患数量) + SUM(手术数量) FROM "医院排名" GROUP BY "医院id" ORDER BY "排名" DESC LIMIT 10 ) AND "城市id" = ( SELECT "城市id" FROM "城市" GROUP BY "城市id" ORDER BY "人口数量" DESC LIMIT 10 )
SQL NOT GET: may be TIMEOUT

SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SELECT 地球的经纬度, 地球的重力加速度, 地球公转周期 FROM 地球的磁记录 WHERE 地球的磁场方向 = 'N'
SELECT 出境游路线.路线名称, 出境游路线.景点数 FROM出境游路线 JOIN 国内游路线 ON 出境游路线.路线名称 = 国内游路线.路线名称 JOIN 邮轮路线 ON 出境游路线.路线名称 = 邮轮路线.路线名称 JOIN 旅行社 ON 邮轮路线.旅行社id = 旅行社.旅行社id WHERE 邮轮路线.旅行天数 = ?
SELECT 出境游路线.路线名称, 出境游路线.景点数 FROM出境游路线 JOIN 国内游路线 ON 出境游路线.路线名称 = 国内游路线.路线名称 JOIN 邮轮路线 ON 出境游路线.路线名称 = 邮轮路线.路线名称 JOIN 旅行社 ON 邮轮路线.旅行社id = 旅行社.旅行社id WHERE 邮轮路线.旅行天数 = (?)

SELECT 旅行社.name FROM 旅行社 JOIN出境游所含国家 ON 出境游路线.旅行社id = 旅行社.id JOIN国内游路线 ON国内游路线.旅行社id = 旅行社.id JOIN 邮轮路线 ON 邮轮路线.旅行社id = 旅行社.id JOIN 出境游路线 ON 出境游路线.旅行社id = 邮轮路线.旅行社id WHERE 免税店.id = ( SELECT COUNT(*) FROM 免税店 WHERE 旅行社.id = ( SELECT 旅行社id FROM 旅行社 WHERE 名称 = '旅行社' ORDER BY 免税店数量 DESC LIMIT 1 ) ) GROUP BY 旅行社.name ORDER BY 免税店数量 DESC LIMIT 1
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SELECT 出境游路线.路线名称, 邮轮路线.邮轮路线名称, COUNT(DISTINCTDISTINCT 出境游路线.旅行社id) as 旅行社id_count FROM 出境游路线 INNER JOIN 邮轮路线 ON 出境游路线.路线id = 邮轮路线.邮轮路线id INNER JOIN 旅行社 ON 邮轮路线.旅行社id = 旅行社.旅行社id GROUP BY 出境游路线.路线名称, 邮轮路线.邮轮路线名称 HAVING COUNT(DISTINCTDISTINCT 旅行社id) > 0
SELECT 出境游路线.路线名称, 邮轮路线.邮轮路线名称, COUNT(DISTINCTDISTINCT 出境游路线.旅行社id) as 旅行社id_count FROM 出境游路线 INNER JOIN 邮轮路线 ON 出境游路线.路线id = 邮轮路线.邮轮路线id INNER JOIN 国内游路线 ON 邮轮路线.旅行社id = 国内游路线.旅行社id GROUP BY 出境游路线.路线名称, 邮轮路线.邮轮路线名称 HAVING COUNT(DISTINCTDISTINCT 旅行社id) > 0
SELECT 邮轮路线.路线名称, 邮轮路线.邮轮路线名称, 邮轮路线.海景房价格, MIN(阳台房价格) as 阳台房价格 FROM 邮轮路线 INNER JOIN (SELECT 邮轮路线id, MAX(阳台房价格) as阳台房价格 FROM 邮轮路线 GROUP BY 邮轮路线id) 阳台价格 ON 邮轮路线.邮轮路线id = 阳台价格.邮轮路线id INNER JOIN (SELECT 邮轮路线id, MAX(海景房价格) as海景房价格 FROM 邮轮路线 GROUP BY 邮轮路线id) 海景价格 ON 邮轮路线.邮轮路线id = 海景价格.邮轮路线id GROUP BY 邮轮路线.路线名称, 邮轮路线.邮轮路线名称 HAVING MIN(阳台房价格) > MAX(海景房价格)
SQL NOT GET: may be TIMEOUT

NO SQL FOUND
NO SQL FOUND
NO SQL FOUND
NO SQL FOUND

SELECT * FROM出境游路线 WHERE 路线id IN ( SELECT 路线id FROM出境游所含国家 WHERE 国家 = '中国' )
SELECT * FROM邮轮路线 WHERE 路线id IN ( SELECT 路线id FROM邮轮路线表 WHERE 出发城市 = '上海' )
SELECT 成人价格,儿童价格 FROM出境游路线 WHERE 路线id IN ( SELECT 路线id FROM出境游所含国家 WHERE 国家 = '中国' )
SELECT 门票总价格 FROM出境游路线 WHERE 路线id IN ( SELECT 路线id FROM出境游所含国家 WHERE 国家 = '中国' )
SELECT 旅行社id, 亚洲排名 FROM 旅行社 WHERE 旅行社id IN ( SELECT 旅行社id FROM 旅行社表 WHERE 亚洲排名 = 1 )

SELECT 路线id, 天数, COUNT(*) as num_days FROM "国内游路线" GROUP BY 路线id ORDER BY num_days DESC LIMIT 1
SELECT路线id, 天数, COUNT(*) as num_days FROM "出境游路线" GROUP BY 路线id ORDER BY num_days DESC LIMIT 1
SELECT邮轮公司, 邮轮路线 FROM "邮轮路线" JOIN "旅行社" ON邮轮路线."旅行社id" = "旅行社id" WHERE邮轮路线."天数" > (SELECT MAX(天数) FROM "邮轮路线")
SQL NOT GET: may be TIMEOUT

NO SQL FOUND
NO SQL FOUND
NO SQL FOUND

SELECT * FROM "音箱产品" WHERE price between 100 and 200
SELECT * FROM "音箱产品" WHERE name in (SELECT name FROM "公司" WHERE id between 1 and 2)
SELECT * FROM "音箱产品" WHERE price between 100 and 200 AND name in (SELECT name FROM "公司" WHERE id between 1 and 2)
SELECT 季度, SELECT_VALUE(销售量增长), "产品名称" FROM "产品销售" WHERE id in (SELECT id FROM "公司")

SELECT * FROM 产品销售 WHERE 季度 = '2022' AND 产品id = 1
SELECT * FROM 公司 WHERE id = '1'
SELECT COUNT(*) FROM 公司 WHERE id = '1'

SELECT * FROM "公司" WHERE id IN (SELECT 所属公司id FROM "音箱产品" WHERE 名称 = '百度')
SELECT 音箱id, COUNT(*) as 销售量 FROM "音箱产品" WHERE 名称 = '百度' GROUP BY 音箱id
SELECT COUNT(*) as 销售量, 季度, SUM(CASE WHEN 销售量增长 THEN 1 ELSE -1 END) as 销售量增长 FROM "产品销售" WHERE 季度 = (SELECT MAX(季度) FROM "产品销售") AND 产品id IN (SELECT 音箱id FROM "音箱产品" WHERE 名称 = '百度')

SELECT音箱产品, 产品销售, COUNT(*) as 销售量 FROM 产品销售 JOIN 音箱产品 ON 产品销售.音箱id = 音箱产品.音箱id GROUP BY音箱产品, 产品销售 ORDER BY 销售量 DESC LIMIT 3
SELECT 公司.id as 公司id, 公司.名称 as 公司名称, 音箱产品.名称 as 音箱产品名称 FROM 公司 JOIN 音箱产品 ON 公司.id = 音箱产品.所属公司id GROUP BY 公司, 音箱产品 ORDER BY 公司id DESC, 名称 ASC LIMIT 3
SELECT 音箱产品.售价 as 音箱售价, 产品销售.季度, COUNT(*) as 销售量 FROM 音箱产品 JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.音箱id GROUP BY 音箱产品, 产品销售 ORDER BY 音箱售价 DESC, 季度 ASC LIMIT 3

SELECT * FROM 动物 WHERE 学名 = '人类的朋友' AND 食性 = '食肉'
SELECT * FROM 动物 WHERE 学名 = '人类的朋友' AND 理由 = '因为它是人类的朋友'
SELECT COUNT(*) FROM 动物朋友 WHERE 朋友id = '动物的天敌'
SELECT 学名, 食性, 是否是人类朋友, 理由, 学名 + 食性 + 是否是人类朋友 + 理由 AS 理由_text FROM 动物 WHERE 学名 = '人类的天敌' AND 理由 = '它们是食草动物'

SELECT * FROM 商家 WHERE 商家id IN (SELECT 商家id FROM 商家平台活动)
SELECT配送费 FROM 商家平台活动 WHERE 商家id IN (SELECT 商家id FROM 商家)
SELECT 起送价格 FROM 商家平台活动 WHERE 商家id IN (SELECT 商家id FROM 商家)

SELECT 商家id, 平台id, 配送费, 评分 FROM "商家平台活动" WHERE 配送费 = 0
SELECT 商家id, 类型, 配送费, 评分 FROM "商家" WHERE 商家id = 1
SELECT 评分 FROM "商家平台活动" WHERE 商家id = 1 AND 平台id = '平台名'

SELECT 商家id, 月售单数 FROM "商家平台活动" WHERE 商家id IN ( SELECT 商家id FROM "商家" GROUP BY 商家id ORDER BY 月售单数 DESC LIMIT 10 )
SELECT 商家id, 月售单数 FROM "商家平台活动" ORDER BY 月售单数 DESC LIMIT 10
SELECT * FROM "商家平台活动" WHERE 月售单数 = ( SELECT MAX(月售单数) FROM "商家平台活动" GROUP BY 商家id ) ORDER BY 月售单数 DESC LIMIT 1
SELECT 配送费 FROM "商家平台活动" WHERE 商家id IN ( SELECT 商家id FROM "商家" GROUP BY 商家id ORDER BY 月售单数 DESC LIMIT 10 ) ORDER BY 配送费 DESC LIMIT 1

SELECT 平台.平台名, 平台.市场占比 FROM 平台 INNER JOIN 商家 ON 商家.商家id =平台.平台id INNER JOIN "商家平台活动" ON 商家.商家id = "商家平台活动"."商家id" WHERE "商家平台活动"."配送费" > (SELECT MAX(配送费) FROM "商家平台活动" GROUP BY "商家平台活动"."配送费") GROUP BY 平台.平台名, 平台.市场占比 ORDER BY 市场占比 DESC LIMIT 1
SQL NOT GET: may be TIMEOUT
SELECT 平台.平台名, 商家.商家name, 商家.合作商家数量 FROM 平台 INNER JOIN 商家 ON 商家.商家id =平台.商家id INNER JOIN "商家平台活动" ON 商家.商家id = "商家平台活动"."商家id" WHERE 商家.合作商家数量 > (SELECT COUNT(*) FROM 商家 WHERE 商家id = 商家.商家id) ORDER BY 平台.平台名, 商家.合作商家数量 DESC LIMIT 1
SELECT COUNT(*) AS 商家数量 FROM 商家 WHERE 商家id = ( SELECT 商家id FROM 商家 GROUP BY 商家id HAVING COUNT(*) > 1 )

SELECT * FROM 图书
SELECT作者 FROM 图书
SELECT 小说类型, 书名, 作者, 平台id, 年营业额, 是否自营, 会员费 FROM 图书与平台
SELECT 售价 FROM 图书与平台

SELECT * FROM 餐饮公司城市消费 WHERE 人均消费额 < 500
SELECT 公司名, 所属集团 FROM 餐饮公司 WHERE 总部城市id = ( SELECT 总部城市id FROM 餐饮公司城市消费 WHERE 总消费额 < 500 )
SELECT 经营年数 FROM 餐饮公司 WHERE 公司id = ( SELECT 公司id FROM 餐饮公司城市消费 WHERE 总消费额 < 500 )
SELECT 城市名 FROM 城市 WHERE 公司名称 in ( SELECT 公司名称 FROM 餐饮公司城市消费 WHERE 总消费额 < 500 )

SELECT 球员id FROM 篮球运动员 WHERE 姓名 = '公牛队'
SELECT 夺冠次数 FROM NBA总冠军 WHERE 总教练 = '公牛队'
SELECT 赛区,所属联盟 FROM 篮球运动员 WHERE 球员id = '公牛队'
SELECT 总教练 FROM NBA总冠军 WHERE 球队id = '公牛队'
SELECT 年份,时间, 赛季,球员id,所属球队 FROM 篮球运动员 WHERE 姓名 = '公牛队'

SELECT * FROM "篮球运动员" WHERE 性别 = '男' AND 国籍 = '美国'
SELECT * FROM "篮球运动员" WHERE 参加选秀年 = '1996' AND 是否状元 = '是'
SELECT * FROM "NBA总冠军" WHERE 赛季 = '2016' AND 球队id = ( SELECT 球队id FROM "篮球运动员" WHERE 参加选秀年 = '1996' AND 是否状元 = '是' )

SELECT * FROM "篮球运动员" WHERE "球员id" = ( SELECT "球员id" FROM "MVP记录" WHERE "赛季" = 1 LIMIT 1 )
SELECT * FROM "篮球运动员" WHERE "球员id" IN ( SELECT "球员id" FROM "MVP记录" WHERE "赛季" = 1 LIMIT 1 )
SELECT * FROM "篮球运动员" WHERE "球员id" IN ( SELECT "球员id" FROM "MVP记录" WHERE "赛季" = 1 LIMIT 1 )
SELECT * FROM "球队" WHERE "赛区" = ( SELECT "赛区" FROM "篮球运动员" WHERE "球员id" = ( SELECT "球员id" FROM "MVP记录" WHERE "赛季" = 1 LIMIT 1 ) LIMIT 1 )
SELECT COUNT(*) FROM "NBA总冠军" WHERE "赛季" = 1 GROUP BY "球队id" ORDER BY COUNT(*) DESC

SELECT * FROM "NBA总冠军" WHERE "赛区" = "西部"
SELECT * FROM "篮球运动员" WHERE "参加选秀年" = "1996" AND "是否状元" = "0" AND "所属球队" = "爵士"
SELECT * FROM "NBA总冠军" WHERE "赛季" = "2010" AND "球队id" = "太阳" AND "总教练" = "科比"

SELECT * FROM 平台
SELECT成立时间 AS 成立时间 FROM 平台
SELECT 年营业额 AS 营业额, COUNT(*) as 总营业额 FROM 平台 ORDER BY 营业额 DESC LIMIT 10
SELECT 会员费 AS 会员费 FROM 平台 WHERE 年营业额 = (SELECT MAX(年营业额) FROM 平台)

SELECT 作者, 题目 FROM 图书; SELECT 作者, 题目 FROM 平台
SELECT 书名, 售价 FROM 图书; SELECT 书名, 售价 FROM 平台
SELECT 平台名, 成立时间 FROM 平台; SELECT 平台名, 成立时间 FROM 平台
SELECT 平台名, 年营业额 FROM 平台
SELECT 平台名, 年营业额 FROM 平台; ORDER BY 年营业额 DESC; SELECT 平台名, 年营业额 FROM 平台; ORDER BY 年营业额 DESC

SELECT 出境游所含国家.* FROM 出境游所含国家 INNER JOIN 出境游路线 ON 出境游所含国家.路线id = 出境游路线.出境游路线id INNER JOIN 国内游路线 ON 出境游路线.国内游路线id = 国内游路线.国内游路线id INNER JOIN 邮轮路线 ON 出境游路线.邮轮路线id = 邮轮路线.邮轮路线id INNER JOIN 旅行社 ON 邮轮路线.旅行社id = 旅行社.旅行社id WHERE 旅行社.名称 = '旅行社' AND 出境游所含国家.旅行天数 > 0
SELECT 出境游路线.旅行天数, 出境游所含国家.景点数量, 出境游路线.邮轮路线名称, 国内游路线.国内游路线名称, 邮轮路线.航行区域, 旅行社.旅行社名称, COUNT(*) FROM 出境游所含国家 INNER JOIN 出境游路线 ON 出境游所含国家.路线id = 出境游路线.出境游路线id INNER JOIN 国内游路线 ON 出境游路线.国内游路线id = 国内游路线.国内游路线id INNER JOIN 邮轮路线 ON 出境游路线.邮轮路线id = 邮轮路线.邮轮路线id INNER JOIN 旅行社 ON 邮轮路线.旅行社id = 旅行社.旅行社id WHERE 旅行社.名称 = '旅行社' GROUP BY 出境游路线.旅行天数, 出境游所含国家.景点数量, 出境游路线.邮轮路线名称, 国内游路线.国内游路线名称, 邮轮路线.航行区域, 旅行社.旅行社名称
SELECT 景点数量, COUNT(*) FROM 出境游所含国家 INNER JOIN 出境游路线 ON 出境游所含国家.路线id = 出境游路线.出境游路线id INNER JOIN 国内游路线 ON 出境游路线.国内游路线id = 国内游路线.国内游路线id INNER JOIN 邮轮路线 ON 出境游路线.邮轮路线id = 邮轮路线.邮轮路线id INNER JOIN 旅行社 ON 邮轮路线.旅行社id = 旅行社.旅行社id WHERE 旅行社.名称 = '旅行社' GROUP BY 景点数量, COUNT(*) ORDER BY COUNT(*) DESC

CREATE TABLE出境游路线 ( 出境游路线id text, 路线名称 text, 旅行社id text, 出发城市 text, 成人价格 number, 儿童价格 number, 景点数 number, 门票总价格 number, PRIMARY KEY (出境游路线id), FOREIGN KEY (旅行社id) REFERENCES 旅行社(旅行社id) ON DELETE NOACTION ON UPDATE NOACTION )
SELECT 出发城市, 旅行社id, COUNT(*) FROM 出境游路线 GROUP BY 旅行社id, 出发城市 ORDER BY 旅行社id DESC
SELECT成人价格, COUNT(*) FROM出境游路线 GROUP BY成人价格 ORDER BY COUNT(*) DESC LIMIT 1
SELECT 出境游路线id, 路线名称, 旅行社id, 成人价格, 儿童价格, COUNT(*) FROM出境游路线 GROUP BY 出境游路线id, 路线名称, 旅行社id ORDER BY 成人价格 DESC, 儿童价格 DESC, 旅行社id DESC LIMIT 1
SELECT 出境游路线id, COUNT(*) as 景点数 from 出境游路线 WHERE 成人价格 = (SELECT MAX(成人价格) FROM 出境游路线) GROUP BY 出境游路线id ORDER BY 景点数 DESC LIMIT 1

SELECT * FROM 电视剧 WHERE 出品时间 >= '2019-01-01' AND 出品时间 <= '2020-01-01' AND 首播平台id REFERENCES 电视台 (电视台id)
SELECT 剧名 FROM 电视剧 WHERE 出品时间 >= '2019-01-01' AND 出品时间 <= '2020-01-01'
SELECT 剧名 FROM 电视剧 WHERE 出品时间 >= '2018-01-01'
SELECT 剧名, 出品公司, 发行公司 FROM 电视剧 WHERE 首播平台id REFERENCES 电视台 (电视台id) AND 出品时间 >= '2018-01-01'
SELECT 剧名, 出品公司, 发行公司 FROM 电视剧 WHERE 首播平台id REFERENCES 电视台 (电视台id) AND 首播平台id REFERENCES 电视台 (电视台id) ORDER BY 出品时间 DESC LIMIT 1

SELECT 名称 FROM 民族
NO SQL FOUND
SELECT 民族id, 人口 FROM "民族" order by 人口 DESC

CREATE TABLE 发行公司 (公司id TEXT PRIMARY KEY, 名称 text, 开播时间 time, 上线时间 time, 隶属机构 text) CREATE TABLE 电视剧发行 (电视剧编号 TEXT PRIMARY KEY, 剧名 text, 出品时间 time, 出品公司 text, 发行公司 text, 首播平台id number,FOREIGN KEY (首播平台id) REFERENCES 电视台 (电视台id)) CREATE TABLE 电视剧收视 (电视剧id TEXT, 平台id TEXT REFERENCES 电视台 (电视台id), 时间段 text, 收视率 number,FOREIGN KEY (电视剧id) REFERENCES 电视剧 (电视剧编号),FOREIGN KEY (平台id) REFERENCES 电视台 (词条id))
CREATE TABLE 电视剧 (电视剧编号 TEXT PRIMARY KEY, 剧名 text, 出品时间 time, 出品公司 text, 发行公司 text, 首播平台id number,FOREIGN KEY (首播平台id) REFERENCES 电视台 (电视台id)) CREATE TABLE 发行公司 (公司id TEXT PRIMARY KEY, 名称 text, 开播时间 time, 上线时间 time, 隶属机构 text) CREATE TABLE 电视剧发行 (电视剧编号 TEXT, 剧名 text, 出品时间 time, 出品公司 text, 发行公司 text, 首播平台id number,FOREIGN KEY (首播平台id) REFERENCES 电视台 (电视台id)) CREATE TABLE 收视率 (电视剧id TEXT, 平台id TEXT, 时间段 text, 收视率 number)
SELECT 电视台.name, 发行公司.name, 电视剧.name, 首播平台.name AS 首播平台, 平台.name AS 平台 FROM 电视剧 INNER JOIN 发行公司 ON 电视剧.首播平台id = 发行公司.id INNER JOIN 电视台 ON 电视剧.首播平台id = 电视台.id WHERE 出版时间 = (SELECT MAX(出版时间) FROM 电视剧)
SELECT 电视台.name, 发行公司.name, 电视剧.name, 首播平台.name AS 首播平台, 平台.name AS 平台 FROM 电视剧 INNER JOIN 发行公司 ON 电视剧.首播平台id = 发行公司.id INNER JOIN 电视台 ON 电视剧.首播平台id = 电视台.id WHERE 出版时间 = (SELECT MAX(出版时间) FROM 电视剧)
SELECT 电视台.name, 发行公司.name, 电视剧.name, 首播平台.name AS 首播平台, 平台.name AS 平台 FROM 电视剧 INNER JOIN 发行公司 ON 电视剧.首播平台id = 发行公司.id INNER JOIN 电视台 ON 电视剧.首播平台id = 电视台.id WHERE 上线时间 = (SELECT MAX(上线时间) FROM 电视剧)

SELECT * FROM "民族城市" WHERE "人口" > 10
SELECT COUNT(*) FROM "民族城市" WHERE "人口" > 10
SELECT人口数量 FROM "民族城市" WHERE 比例 > 10
SELECT人口数量, COUNT(*) as 总人数 FROM "民族城市" WHERE 比例 > 10 GROUP BY 民族id ORDER BY COUNT(*) DESC LIMIT 10
SELECT 城市名称, 民族id FROM "民族城市" WHERE 比例 > 10

SELECT * FROM "民俗节日" WHERE "节日" = '春节' AND "民族id" = '汉族'
SELECT * FROM "民族" WHERE "人口" = () AND "民族id" = '汉族'
SELECT COUNT(*) FROM "民族" WHERE "人口" < (SELECT COUNT(*) FROM "民族" AS x WHERE x."民族id" = '汉族')
SELECT 民族id, 名称 FROM "民族" ORDER BY 名称 DESC

SELECT COUNT(1) FROM 电视剧收视
SELECT 名称, 开播时间, 上线时间, 隶属机构, 首播平台id, 电视剧编号, 剧名, 出品时间, 出品公司, 发行公司, 首播平台id, 时间段, 收视率 FROM 电视台
SELECT 隶属机构, 首播平台id, 电视剧编号, 剧名, 出品时间, 出品公司, 发行公司 FROM 电视剧
SELECT 剧名, 出品时间, 发行公司 FROM 电视剧收视 WHERE 平台id = 1
NO SQL FOUND

NO SQL FOUND
NO SQL FOUND
NO SQL FOUND
NO SQL FOUND

SELECT 电视剧.剧名, 电视剧收视.时间段, 电视剧收视.收视率 FROM 电视剧 INNER JOIN 电视剧收视 ON 电视剧.首播平台id = 电视剧收视.平台id INNER JOIN 电视台 ON 电视剧.电视台id = 电视台.电视台id WHERE 电视剧收视.时间段 = '20:00:00' AND 电视台.开播时间 = '20:00:00' AND 电视台.上线时间 = '21:00:00'
SELECT 电视剧收视.收视率 FROM 电视剧收视 INNER JOIN 电视台 ON 电视剧收视.平台id = 电视台.电视台id INNER JOIN 电视剧 ON 电视剧.电视剧编号 = 电视剧收视.电视剧编号 WHERE 电视剧.出品时间 = '2022' AND 电视剧.出品公司 = 'ABC' AND 电视剧.发行公司 = 'ABC'
SELECT 电视剧.剧名, 电视剧收视.时间段, 电视剧收视.收视率 FROM 电视剧 INNER JOIN 电视剧收视 ON 电视剧.首播平台id = 电视剧收视.平台id INNER JOIN 电视台 ON 电视剧.电视台id = 电视台.电视台id WHERE 电视剧.出品时间 = '2022' AND 电视剧.出品公司 = 'ABC' AND 电视剧.发行公司 = 'ABC' ORDER BY 收视率 DESC LIMIT 10
SQL NOT GET: may be TIMEOUT

SELECT * FROM 动物 WHERE 学名 = '猫' AND 食性 = '流浪'
SELECT * FROM 动物 WHERE 学名 = '狗' AND 食性 = '家畜'
SELECT * FROM 动物 WHERE 学名 = '鼠' AND 食性 = '啮齿'
SELECT * FROM 动物 WHERE 学名 = '狮子' AND 天敌原因 = '扑猎'

SELECT * FROM 比赛 WHERE 名称 = '模式识别' FOREIGN KEY (名称) REFERENCES 比赛 (比赛id)
SELECT 举办单位 FROM 比赛 WHERE 举办单位 = '单位性质' FOREIGN KEY (举办单位) REFERENCES 单位性质 (单位性质)
SELECT * FROM 参赛队伍 WHERE 队名 = '模式识别' FOREIGN KEY (队名) REFERENCES 参赛队伍 (队伍id) SELECT * FROM 学生 WHERE 学生id = '1' FOREIGN KEY (学生id) REFERENCES 学生 (学生id) SELECT * FROM 学生参赛记录 WHERE 加入队伍id = '1' FOREIGN KEY (加入队伍id) REFERENCES 参赛队伍 (队伍id) SELECT * FROM 队伍参赛成绩 WHERE 参加比赛id = '1' FOREIGN KEY (参加比赛id) REFERENCES 比赛 (比赛id)
SELECT 成绩 FROM 队伍参赛成绩 WHERE 参加比赛id = '1' FOREIGN KEY (参加比赛id) REFERENCES 比赛 (比赛id)

SELECT * FROM 动物 WHERE 学名 = '汪汪' AND 食性 = '狗' AND 是否是人类朋友 = '1' AND 理由 = '狗狗是人类的好朋友'
SELECT * FROM 动物天敌 WHERE 动物id = '汪汪' AND 天敌id = '喵喵' AND 克星原因 = '猫咪是狗狗的天敌'
SELECT * FROM 动物天敌 WHERE 动物id = '汪汪' AND 天敌id = '喵喵' AND 克星原因 = '狗狗是猫的天敌'
SELECT * FROM 动物 WHERE 学名 = '汪汪' AND 食性 = '狗' AND 是否是人类朋友 = '1' AND 理由 = '狗狗是人类的好朋友'
SELECT * FROM 动物 WHERE 学名 = '汪汪' AND 食性 = '狗' AND 是否是人类朋友 = '1' AND 理由 = '狗狗是人类的好朋友'

SELECT * FROM 动物 WHERE 学名 = '人类'
SELECT * FROM 动物 WHERE 学名 = '草食'
SELECT * FROM 动物 WHERE 学名 = '除了人类以外的朋友'
SELECT * FROM 动物, 天敌 WHERE 动物id =动物id AND 天敌id = 天敌id
SELECT * FROM 动物, 天敌 WHERE 动物id =动物id AND 天敌id = 天敌id

SELECT * FROM 动物 JOIN 动物朋友 ON 动物.动物id = 动物朋友.动物id JOIN 动物的天敌 ON 动物.动物id = 天敌.动物id WHERE 动物朋友.动物id IS NULL AND 天敌.动物id IS NULL AND 动物.食用性 = '人类朋友' AND 动物.是否是人类朋友 = '是' AND 天敌.天敌原因 = '捕食对人类有害的昆虫'
SELECT * FROM 动物 JOIN 动物朋友 ON 动物.动物id = 动物朋友.动物id JOIN 动物的天敌 ON 动物.动物id = 天敌.动物id WHERE 动物朋友.动物id IS NULL AND 天敌.动物id IS NULL AND 动物.食用性 = '人类朋友' AND 动物.是否是人类朋友 = '是' AND 动物.学名 = '猫' AND 动物朋友.学名 = '猫' AND 动物朋友.食性 = '人类朋友' AND 天敌.天敌原因 = '捕食对人类有害的昆虫'
SELECT * FROM 动物 JOIN 动物朋友 ON 动物.动物id = 动物朋友.动物id JOIN 动物的天敌 ON 动物.动物id = 天敌.动物id WHERE 动物朋友.动物id IS NULL AND 天敌.动物id IS NULL AND 动物.食用性 = '人类朋友' AND 动物.是否是人类朋友 = '是' AND 动物.学名 = '猫' AND 动物朋友.学名 = '猫' AND 动物朋友.食性 = '人类朋友' AND 天敌.天敌原因 = '捕食对人类有害的昆虫' AND 天敌.天敌原因 = '捕食对人类有害的昆虫'

CREATE TABLE "公司" ( "id" text, "名称" text, "所属国家" text, "排名" number, PRIMARY KEY ("id") ) CREATE TABLE "音箱产品" ( "音箱id" text, "名称" text, "所属公司id" number, "售价" number, "排名" number, "上升名次" number, PRIMARY KEY ("音箱id"), FOREIGN KEY ("所属公司id") REFERENCES "公司" ("id") ON DELETE NOACTION ON UPDATE NOACTION ) CREATE TABLE "产品销售" ( "产品id" number, "季度" text, "销售量" number, "销售量增长" number, FOREIGN KEY ("产品id") REFERENCES "音箱产品" ("音箱id") ON DELETE NOACTION ON UPDATE NOACTION )
SELECT 所属国家 FROM "公司" LEFT JOIN "音箱产品" ON "公司"."id" = "音箱产品"."所属公司id" WHERE 所在国家不在"国家"列中
SELECT 排名 FROM "公司" ORDER BY 排名 DESC LIMIT 10 FROM "音箱产品" WHERE 所属公司id = ( SELECT MAX(所属公司id) FROM "公司" GROUP BY 所属国家 )

SELECT * FROM "音箱产品" WHERE名称 = '音箱产品的名称'
SELECT 排名 FROM "音箱产品" WHERE id IN (SELECT 音箱id FROM "产品销售") AND上升名次 = 1
SELECT * FROM "音箱产品" WHERE 售价 > 300 AND上升名次 > 0
SELECT 所属公司id FROM "音箱产品" WHERE 名称 = '音箱产品的名称' AND上升名次 = 1
SELECT 排名 FROM "音箱产品" WHERE 名称 = '音箱产品的名称' AND 所属公司id = '百度公司' AND 售价 > 300

SELECT 名称 FROM 音箱产品 WHERE 所属公司id = ( SELECT 所属公司id FROM 公司 WHERE id = ? )
SELECT 音箱id, 售价 FROM 音箱产品 WHERE 所属公司id = ( SELECT 所属公司id FROM 公司 WHERE id = ? )
SELECT 音箱id, 售价 FROM 音箱产品 ORDER BY 售价 DESC LIMIT 10
SELECT 公司名称, 售价 FROM 音箱产品 WHERE 所属公司id = ( SELECT 所属公司id FROM 公司 WHERE id = ? ) ORDER BY 售价 DESC LIMIT 1

SELECT 音箱产品.售价, 产品销售.季度, COUNT(音箱产品.音箱id) 销售量 FROM 音箱产品 INNER JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.产品id WHERE 所属公司id = 1 GROUP BY 音箱产品.名称, 产品销售.季度, COUNT(音箱产品.音箱id)
SELECT COUNT(*) as 排名 FROM 公司 WHERE id = 1 FOREIGN KEY (排名) REFERENCES 公司(id) ON DELETE NOACTION ON UPDATE NOACTION
SELECT 公司名称, 公司所在国家 FROM 公司 WHERE 公司id = 1 FOREIGN KEY (公司名称) REFERENCES 公司(id) ON DELETE NOACTION ON UPDATE NOACTION
SELECT 销售数量, 季度, SUM(销售数量) as 总销售量 FROM 产品销售 INNER JOIN 音箱产品 ON 产品销售.产品id = 音箱产品.音箱id WHERE 产品id = 1 GROUP BY 销售数量, 季度, SUM(销售数量)

NO SQL FOUND
NO SQL FOUND
NO SQL FOUND

SELECT * FROM 参赛学生 INNER JOIN 学生参赛记录 ON 学生id = 学生参赛记录.学生id INNER JOIN 队伍参赛成绩 ON 加入队伍id = 队伍参赛成绩.加入队伍id INNER JOIN 比赛 ON 比赛id = 比赛.比赛id WHERE 加入队伍id = 1 AND 参加比赛id = 2
SELECT 姓名, 年龄, 学历 FROM 参赛学生 WHERE 年龄 = 20 AND 学历 = '本科'
SELECT 加入队伍id, 参加比赛id FROM 参赛学生 INNER JOIN 学生参赛记录 ON 学生id = 学生参赛记录.学生id INNER JOIN 队伍参赛成绩 ON 加入队伍id = 队伍参赛成绩.加入队伍id INNER JOIN 比赛 ON 比赛id = 比赛.比赛id WHERE 加入队伍id = 1 AND 参加比赛id = 2
SELECT 加入日期 FROM 学生参赛记录 INNER JOIN 学生 ON 学生记录.学生id = 学生参赛记录.学生id INNER JOIN 队伍 ON 学生记录.加入队伍id = 队伍参赛成绩.加入队伍id INNER JOIN 比赛 ON 队伍.队名 = 比赛.比赛平台 WHERE 加入队伍id = 1 AND 参加比赛id = 2
SELECT 成绩 FROM 队伍参赛成绩 INNER JOIN 比赛 ON 比赛.比赛id = 比赛.比赛id WHERE 加入队伍id = 1 AND 参加比赛id = 2

SELECT * FROM 比赛 WHERE 奖金数额排名前三 ORDER BY 奖金数额 DESC LIMIT 3
SELECT COUNT(*) FROM 学生参赛记录 WHERE 加入队伍id IN (SELECT 加入队伍id FROM 学生参赛记录 WHERE 学生id IN (SELECT 学生id FROM 学生 WHERE 姓名 = '小明' ORDER BY 年龄 DESC LIMIT 10))
SQL NOT GET: may be TIMEOUT
SELECT 成绩 FROM 队伍参赛成绩 WHERE 加入队伍id IN (SELECT 加入队伍id FROM 学生参赛记录 WHERE 学生id IN (SELECT 学生id FROM 学生 WHERE 姓名 = '小明' ORDER BY 年龄 DESC LIMIT 10))

SELECT 麦当劳.公司名称, 麦当劳.总部城市id, 麦当劳.所属集团, '餐饮' AS 集团类型 FROM 餐饮公司 麦当劳 JOIN 城市 城市 ON 麦当劳.总部城市id = 城市.城市id JOIN 集团 集团 ON 城市.集团id = 集团.集团id WHERE 集团.集团名 = '餐饮'
SELECT 麦当劳.公司名称, 麦当劳.总部城市id, 麦当劳.所属集团, MAX(麦当劳.经营范围) AS 经营范围 FROM 餐饮公司 麦当劳 JOIN 城市 城市 ON 麦当劳.总部城市id = 城市.城市id JOIN 集团 集团 ON 城市.集团id = 集团.集团id GROUP BY 麦当劳.公司名称, 麦当劳.总部城市id, 麦当劳.所属集团 HAVING MAX(麦当劳.经营范围) = (SELECT MAX(经营范围) FROM 餐饮公司 WHERE 公司id = 麦当劳.公司id)
SELECT 麦当劳.公司名称, 麦当劳.总部城市id, 麦当劳.经营年数 FROM 餐饮公司 麦当劳 JOIN 城市 城市 ON 麦当劳.总部城市id = 城市.城市id JOIN 集团 集团 ON 城市.集团id = 集团.集团id WHERE 集团.集团名 = '餐饮' GROUP BY 麦当劳.公司名称, 麦当劳.总部城市id, 麦当劳.经营年数 HAVING COUNT(麦当劳.经营年数) = (SELECT COUNT(*) FROM 餐饮公司 WHERE 公司id = 麦当劳.公司id)
SELECT 麦当劳.公司名称, 麦当劳.总部城市id, 麦当劳.经营年数, COUNT(*) AS 人气 FROM 餐饮公司 麦当劳 JOIN 城市 城市 ON 麦当劳.总部城市id = 城市.城市id JOIN 集团 集团 ON 城市.集团id = 集团.集团id WHERE 集团.集团名 = '餐饮' GROUP BY 麦当劳.公司名称, 麦当劳.总部城市id, 麦当劳.经营年数 HAVING COUNT(*) > (SELECT COUNT(*) FROM 城市 WHERE 城市id = 城市.城市id)

SELECT * FROM "城市" WHERE 城市id = ( SELECT 城市id FROM "餐饮公司" WHERE 公司id = 12345 )
SELECT增长率 FROM "城市" JOIN "餐饮公司" ON "城市"."城市id" = "餐饮公司"."总部城市id" JOIN "餐饮公司城市消费" ON "餐饮公司"."公司id" = "餐饮公司城市消费"."公司id" JOIN "餐饮公司城市连锁" ON "餐饮公司城市消费"."城市id" = "餐饮公司城市连锁"."城市id" WHERE "城市"."城市id" = ( SELECT MAX("城市"."同比增长") FROM "城市" GROUP BY "城市"."城市id" )
SELECT 公司名称,分店数量 FROM "餐饮公司城市连锁" JOIN "城市" ON "餐饮公司城市连锁"."城市id" = "城市"."城市id" WHERE "餐饮公司城市连锁"."分店数量" = ( SELECT COUNT(*) FROM "餐饮公司城市消费" WHERE "餐饮公司城市消费"."公司id" = "餐饮公司城市连锁"."公司id" )

SELECT 公司名称, 上市股市 FROM 餐饮公司 t1 联合 join 城市 t2 on t1.城市id = t2.城市id
SELECT 公司名称, 分店数量 FROM 餐饮公司城市连锁 t3 联合 join 城市 t2 on t3.城市id = t2.城市id
SELECT 占地面积 FROM 餐饮公司城市连锁 t4 联合 join 城市 t2 on t4.城市id = t2.城市id

SQL NOT GET: may be TIMEOUT
SELECT t2.餐位数量 FROM 餐饮公司城市连锁 t1 join 餐饮公司城市消费 t2 on t1.城市id = t2.城市id and t1.公司id = t2.公司id WHERE t1.公司名称 = '麦当劳'
SELECT t2.员工数量 FROM 餐饮公司城市连锁 t1 join 餐饮公司城市消费 t2 on t1.城市id = t2.城市id and t1.公司id = t2.公司id WHERE t1.公司名称 = '麦当劳'
SELECT COUNT(*) FROM 餐饮公司城市连锁 WHERE 城市id = 'New York'

SELECT * FROM 民俗节日; SELECT * FROM "民族" WHERE "民族id" = (SELECT "词条id" FROM "民族"); SELECT * FROM "民族城市" WHERE "民族id" = (SELECT "词条id" FROM "民族")
SELECT 时间 AS 时间 FROM 民俗节日; SELECT 时间 AS 时间 FROM "民族" WHERE "民族id" = (SELECT "词条id" FROM "民族"); SELECT 时间 AS 时间 FROM "民族城市" WHERE "民族id" = (SELECT "词条id" FROM "民族")
SELECT 纪念 AS 纪念 FROM 民俗节日; SELECT 纪念 AS 纪念 FROM "民族" WHERE "民族id" = (SELECT "词条id" FROM "民族"); SELECT 纪念 AS 纪念 FROM "民族城市" WHERE "民族id" = (SELECT "词条id" FROM "民族")
SELECT * FROM "民族" WHERE "民族id" = (SELECT "词条id" FROM "民族") AND "节日" = '端午节'
SELECT 人口 AS 人口 FROM "民族" WHERE "民族id" = (SELECT "词条id" FROM "民族") AND "节日" = '端午节'

SELECT * FROM "民族"
SELECT Language FROM "民族"
SELECT人口, COUNT(*) FROM "民族" GROUP BY人口 ORDER BY COUNT(*) DESC
SELECT 宗教信仰 FROM "民族" WHERE population = ( SELECT COUNT(*) FROM "民族" WHERE 民族id = ( SELECT 民族id FROM "民族" ) AND Language = '中文' )

NO SQL FOUND
SELECT人口,比例 FROM "民族城市" WHERE 城市名称 = '北京'
SELECT人口,比例 FROM "民族城市" ORDER BY人口数量 DESC
SELECT 民族,人口数量 FROM "民族城市" WHERE 城市名称 = '上海' ORDER BY人口数量 DESC
SELECT 宗教信仰 FROM "民族城市" WHERE 城市名称 = '上海' ORDER BY 宗教信仰 DESC

SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SELECT 夺冠次数 FROM "NBA总冠军" ORDER BY 夺冠次数 DESC LIMIT 1
SELECT 总教练 FROM "NBA总冠军" WHERE 夺冠次数 = ( SELECT 夺冠次数 FROM "NBA总冠军" ORDER BY 夺冠次数 DESC LIMIT 1 )

CREATE TABLE "篮球运动员" ( "球员id" text, "中文名" text, "参加选秀年" time, "是否状元" binary, "获得球队" text, "毕业院校" text, "国籍" TEXT, PRIMARY KEY ("球员id") ) CREATE TABLE "NBA总冠军" ( "赛季" number, "球队id" number, "总教练" text, FOREIGN KEY ("球队id") REFERENCES "球队" ("球队id") ON DELETE NOACTION ON UPDATE NOACTION ) CREATE TABLE "MVP记录" ( "赛季" number, "球员id" number, "所属球队" TEXT, FOREIGN KEY ("球员id") REFERENCES "篮球运动员" ("球员id") ON DELETE NOACTION ON UPDATE NOACTION, FOREIGN KEY ("所属球队") REFERENCES "球队" ("球队id") )
CREATE TABLE "篮球运动员" ( "球员id" text, "中文名" text, "参加选秀年" time, "是否状元" binary, "获得球队" text, "毕业院校" text, "国籍" TEXT, PRIMARY KEY ("球员id") ) CREATE TABLE "NBA总冠军" ( "赛季" number, "球队id" number, "总教练" text, FOREIGN KEY ("球队id") REFERENCES "球队" ("球队id") ON DELETE NOACTION ON UPDATE NOACTION ) CREATE TABLE "MVP记录" ( "赛季" number, "球员id" number, "所属球队" TEXT, FOREIGN KEY ("球员id") REFERENCES "篮球运动员" ("球员id") ON DELETE NOACTION ON UPDATE NOACTION, FOREIGN KEY ("所属球队") REFERENCES "球队" ("球队id") )
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

CREATE TABLE 电视剧 ( 电视剧编号 TEXT PRIMARY KEY, 剧名 text, 出品时间 time, 出品公司 text, 发行公司 text, 首播平台id number, FOREIGN KEY (首播平台id) REFERENCES 电视台 (电视台id), FOREIGN KEY (剧名) REFERENCES 电视剧 (电视剧编号) )
CREATE TABLE 电视剧收视 ( 电视剧id TEXT, 平台id TEXT, 时间段 text, 收视率 number, FOREIGN KEY (电视剧id) REFERENCES 电视剧 (电视剧编号), FOREIGN KEY (平台id) REFERENCES 电视台 (电视台id), FOREIGN KEY (时间段) REFERENCES 时间 (时间) )
CREATE TABLE 出品公司 ( 公司名称 TEXT, 隶属机构 text, 开办时间 time, 上线时间 time, 出品公司text, 发行公司text, 首播平台id number, FOREIGN KEY (公司名称) REFERENCES 公司 (公司名称) ON DELETE CASCADE, FOREIGN KEY (隶属机构) REFERENCES 机构 (隶属机构) ON DELETE CASCADE, FOREIGN KEY (开办时间) REFERENCES 时间 (时间) ON DELETE CASCADE, FOREIGN KEY (上线时间) REFERENCES 时间 (时间) ON DELETE CASCADE )
CREATE TABLE 甄嬛传 ( 剧名 TEXT, 出品公司 text, 发行公司 text, 首播平台id number, FOREIGN KEY (剧名) REFERENCES 电视剧 (剧名), FOREIGN KEY (出品公司) REFERENCES 出品公司 (公司名称), FOREIGN KEY (发行公司) REFERENCES 发行公司 (公司名称) ON DELETE CASCADE, PRIMARY KEY (剧名, 出品公司, 发行公司) )
CREATE TABLE 收视率 ( 收视率 number, 时间段 text, 电视剧id number, FOREIGN KEY (收视率) REFERENCES 电视剧收视 (电视剧编号), PRIMARY KEY (收视率, 时间段, 电视剧编号) )

SELECT 出品公司, 发行公司, 首播平台id, 时间段, 收视率 FROM 电视剧 WHERE 出品时间 = '2022' AND 发行公司 = '中国' AND 首播平台id = '1'
SELECT 出品公司, 发行公司, 首播平台id, 时间段, 收视率 FROM 电视剧 WHERE 首播平台id = '1' AND 出品时间 = '2021'
SELECT 电视台,隶属机构 FROM 电视台 WHERE隶属机构 = '中国'
SELECT 开播时间, 上线时间 FROM 电视剧 WHERE 首播平台id = '1' AND 出品时间 = '2021' AND 上线时间 = '2021-01-01'
SELECT 出品公司, 发行公司 FROM 电视剧 WHERE 出品公司 = '中国' AND 发行公司 = '毒蛇行动'

SELECT * FROM 公司 WHERE id IN (SELECT id FROM音箱产品 WHERE 所属公司id = 1)
SELECT * FROM音箱产品 WHERE名称='音箱' AND 所属公司id NOT IN (SELECT 所属公司id FROM 公司)
SELECT 排名,上升名次 FROM 音箱产品 WHERE 音箱id IN (SELECT音箱id FROM 音箱产品 WHERE 名称='音箱' AND 所属公司id NOT IN (SELECT 所属公司id FROM 公司))
SELECT 产品销售情况 FROM 产品销售 WHERE 季度='春季' AND 销售量同比增长大于等于 0

SELECT 音箱产品.名称 as 产品名称, 产品销售.销售量 as 销售量, COUNT(*) as 排名 FROM 音箱产品 JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.产品id GROUP BY 音箱产品.名称, 产品销售.销售量 ORDER BY COUNT(*) DESC, 产品名称 ASC LIMIT 1
SELECT 音箱产品.名称 as 产品名称, 产品销售.销售量 as 销售量, COUNT(*) as 排名 FROM 音箱产品 JOIN 产品销售 ON 音箱产品.音箱id = 产品销售.产品id GROUP BY 音箱产品.名称, 产品销售.销售量 ORDER BY COUNT(*) DESC, 产品名称 ASC LIMIT 1
SELECT 产品销售.销售量 as 销售量, 产品销售.销售量增长 as 销售量增长 FROM 产品销售 JOIN 音箱产品 ON 音箱产品.音箱id = 产品销售.产品id WHERE 季度 = '2' GROUP BY 产品销售.销售量, 产品销售.销售量增长 ORDER BY 销售量增长 DESC, 产品销售.销售量增长 ASC LIMIT 1

SQL NOT GET: may be TIMEOUT
SELECT age FROM作者 WHERE作者id IN (SELECT作者id FROM出版图书 WHERE书名='小说名称' AND 出版图书id NOT IN (SELECT作者id FROM 网络小说 WHERE 书名='小说名称' AND 网络图书id NOT IN (SELECT 网络小说id FROM畅销榜 WHERE 周排名 NOT IN (SELECT 周排名 FROM 收藏榜 WHERE 收藏榜id NOT IN (SELECT 网络小说id FROM 网络小说 WHERE 书名='小说名称' AND 类型='小说类型'))) ) )
ORDER BY age DESC

NO SQL FOUND
NO SQL FOUND
NO SQL FOUND
NO SQL FOUND
NO SQL FOUND

SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SELECT 股票代码, 上市股市 FROM 餐饮公司 WHERE 总部城市id = ( SELECT 城市id FROM 城市 WHERE 所属省份 = '香港' )
SELECT COUNT(*) as 经营年数, 股票代码 FROM 餐饮公司 WHERE 总部城市id = ( SELECT 城市id FROM 城市 WHERE 所属省份 = '香港' ) ORDER BY 经营年数 DESC
SELECT COUNT(*) as 经营年数, 股票代码 FROM 餐饮公司 WHERE 总部城市id = ( SELECT 城市id FROM 城市 WHERE 所属省份 = '香港' ) ORDER BY 经营年数 DESC

SELECT * FROM "城市" t1 LEFT JOIN "餐饮公司" t2 ON t1.城市id = t2.总部城市id LEFT JOIN "餐饮公司城市消费" t3 ON t2.城市id = t3.城市id LEFT JOIN "餐饮公司城市连锁" t4 ON t3.城市id = t4.城市id WHERE t1.名称 = '城市名称'
SELECT 省份, COUNT(*) as 总消费 FROM "城市" t1 LEFT JOIN "餐饮公司城市消费" t2 ON t1.城市id = t2.城市id WHERE t2.城市id IN ( SELECT 城市id FROM "餐饮公司" t3 GROUP BY 城市id HAVING COUNT(*) > 0 ) GROUP BY 省份 HAVING COUNT(*) > 0
SELECT 餐饮收入 FROM "城市" t1 INNER JOIN "餐饮公司城市消费" t2 ON t1.城市id = t2.城市id INNER JOIN "餐饮公司城市连锁" t3 ON t2.城市id = t3.城市id ON t2.城市id = t3.城市id ORDER BY 餐饮收入 DESC LIMIT 10
SELECT COUNT(*) as同比增长 FROM "城市" t1 LEFT JOIN "餐饮公司城市消费" t2 ON t1.城市id = t2.城市id LEFT JOIN "餐饮公司城市连锁" t3 ON t2.城市id = t3.城市id ON t2.城市id = t3.城市id WHERE t1.名称 = '城市名称' GROUP BY t1.城市id HAVING COUNT(*) > 0 ORDER BY COUNT(*) DESC LIMIT 10

NO SQL FOUND
NO SQL FOUND
NO SQL FOUND

SELECT t1.公司名称, t1.城市名称, t1.总消费额, COUNT(*) AS 人均消费额 FROM "餐饮公司城市消费" t1 INNER JOIN "城市" t2 ON t1.城市id = t2.城市id INNER JOIN "餐饮公司" t3 ON t1.公司id = t3.公司id INNER JOIN "查询" t4 ON t3.公司id = t4.公司id AND t3.城市id = t4.城市id GROUP BY t1.公司名称, t1.城市名称, t1.总消费额 ORDER BY 人均消费额 DESC LIMIT 1
SELECT t1.公司名称, t1.城市名称, t1.总消费额, t1.人气, t1.排名 FROM "餐饮公司城市消费" t1 INNER JOIN "城市" t2 ON t1.城市id = t2.城市id INNER JOIN "餐饮公司" t3 ON t1.公司id = t3.公司id INNER JOIN "查询" t4 ON t3.公司id = t4.公司id AND t3.城市id = t4.城市id GROUP BY t1.公司名称, t1.城市名称, t1.总消费额, t1.人气, t1.排名 HAVING COUNT(*) = (SELECT COUNT(*) FROM "餐饮公司城市消费" WHERE 城市id = t2.城市id AND 公司id = t3.公司id)
SQL NOT GET: may be TIMEOUT
SELECT t1.城市名称 FROM "餐饮公司城市消费" t1 INNER JOIN "城市" t2 ON t1.城市id = t2.城市id INNER JOIN "餐饮公司" t3 ON t1.公司id = t3.公司id INNER JOIN "查询" t4 ON t3.公司id = t4.公司id AND t3.城市id = t4.城市id GROUP BY t1.城市名称 HAVING COUNT(*) = (SELECT COUNT(*) FROM "餐饮公司城市消费" WHERE 城市id = t2.城市id AND 公司id = t3.公司id)
SELECT t1.省份名称 FROM "城市" t1 INNER JOIN "省份" t2 ON t1.省份名称 = t2.省份名称 INNER JOIN "餐饮公司城市消费" t3 ON t1.城市id = t3.城市id INNER JOIN "省份" t4 ON t3.省份名称 = t4.省份名称 WHERE t4.城市id = (SELECT COUNT(*) FROM "餐饮公司城市消费" WHERE 城市id = t2.城市id AND 公司id = t3.公司id)

SELECT * FROM 餐饮公司城市连锁 ORDER BY 员工数量 DESC LIMIT 1
SELECT 占地面积 FROM 餐饮公司城市连锁 ORDER BY 占地面积 DESC LIMIT 1
SELECT max(占地面积) as max_占地面积 FROM 餐饮公司城市连锁 WHERE 公司id = ( SELECT 公司id FROM 餐饮公司城市消费 WHERE 城市id = ( SELECT 城市id FROM 城市 FROM 餐饮公司城市消费 ) )

NO SQL FOUND
NO SQL FOUND
NO SQL FOUND
NO SQL FOUND

CREATE TABLE "应用商店" ( "商店id" text, "商店名" text, "应用软件数" number, "累计下载次数" number, PRIMARY KEY ("商店id") ) CREATE TABLE "应用商店支持国家" ( "应用商店id" text, "国家" text, "用户是否可以购买应用程序" binary, "开发人员是否可以出售应用程序" binary, FOREIGN KEY ("应用商店id") REFERENCES "应用商店" ("商店id") ON DELETE NO ACTION ON UPDATE NO ACTION ) CREATE TABLE "软件" ( "软件id" text, "名称" text, "用途" text, PRIMARY KEY ("软件id") ) CREATE TABLE "软件下载" ( "软件id" text, "应用商店id" text, "下载量" number, "评价人数" number, "好评数" number, FOREIGN KEY ("软件id") REFERENCES "软件" ("软件id") ON DELETE NOACTION ON UPDATE NOACTION, FOREIGN KEY ("应用商店id") REFERENCES "应用商店" ("商店id") ON DELETE NOACTION ON UPDATE NOACTION )
SELECT 应用商店.应用软件数量,软件.名称, 软件下载.下载量, 软件下载.评价人数, 软件下载.好评数 FROM "应用商店" 应用商店 JOIN "软件" 软件 ON 软件.软件id = 应用商店.应用软件数 JOIN "软件下载" 软件下载 ON 软件下载.软件id = 软件.软件id WHERE 应用商店.商店名 = '商店名' GROUP BY 应用商店.应用商店名, 软件.软件id, 软件下载.下载量, 软件下载.评价人数, 软件下载.好评数 ORDER BY 应用软件数量 DESC
SELECT * FROM "应用商店" 应用商店 JOIN "应用商店支持国家" 应用商店支持 ON 应用商店支持.应用商店id = 应用商店.商店id JOIN "软件" 软件 ON 软件.软件id = 应用商店支持.应用软件数 JOIN "软件下载" 软件下载 ON 软件下载.软件id = 软件.软件id WHERE 应用商店支持.国家 = '国家' GROUP BY 应用商店.应用商店名, 应用商店支持.应用软件数 ORDER BY 应用软件数量 DESC LIMIT 10
SELECT 商店.商店名, 应用商店.应用软件数, 累计下载次数 FROM "应用商店" 应用商店 JOIN "应用商店支持国家" 应用商店支持 ON 应用商店支持.应用商店id = 应用商店.商店id JOIN "软件" 软件 ON 软件.软件id = 应用商店.应用软件数 JOIN "软件下载" 软件下载 ON 软件下载.软件id = 软件.软件id WHERE 应用商店支持.国家 = '国家' GROUP BY 商店.商店名, 应用商店.应用软件数, 累计下载次数 ORDER BY 累计下载次数 DESC LIMIT 10

SELECT 软件id, 下载量, COUNT(*) AS 评价人数, SUM(好评数) AS 好评数 FROM "应用商店" LEFT JOIN "应用商店支持国家" ON "应用商店"."商店id" = "应用商店支持国家"."商店id" LEFT JOIN "软件" ON "软件"."软件id" = "应用商店"."软件id" WHERE "应用商店"."商店name" = 'Google Play' GROUP BY 软件id, 下载量 ORDER BY 下载量 DESC
SELECT 软件id, 下载量 FROM "应用商店" LEFT JOIN "应用商店支持国家" ON "应用商店"."商店id" = "应用商店支持国家"."商店id" LEFT JOIN "软件" ON "软件"."软件id" = "应用商店"."软件id" WHERE "应用商店"."商店name" = 'Google Play' GROUP BY 软件id, 下载量 ORDER BY 下载量 DESC LIMIT 10
SELECT 软件id, 下载量 FROM "应用商店" LEFT JOIN "应用商店支持国家" ON "应用商店"."商店id" = "应用商店支持国家"."商店id" LEFT JOIN "软件" ON "软件"."软件id" = "应用商店"."软件id" WHERE "应用商店"."商店name" = 'Google Play' GROUP BY 软件id, 下载量 ORDER BY 下载量 ASC LIMIT 10

CREATE TABLE "应用商店" ( "商店id" text PRIMARY KEY, "商店名" text, "应用软件数" number, "累计下载次数" number, FOREIGN KEY ("商店id") REFERENCES "应用商店" ("商店id") ON DELETE NOACTION ON UPDATE NOACTION ) CREATE TABLE "应用商店支持国家" ( "应用商店id" text PRIMARY KEY, "国家" text, "用户是否可以购买应用程序" binary, "开发人员是否可以出售应用程序" binary, FOREIGN KEY ("应用商店id") REFERENCES "应用商店" ("商店id") ON DELETE NOACTION ON UPDATE NOACTION ) CREATE TABLE "软件" ( "软件id" text PRIMARY KEY, "名称" text, "用途" text, FOREIGN KEY ("软件id") REFERENCES "软件" ("软件id") ON DELETE NOACTION ON UPDATE NOACTION ) CREATE TABLE "软件下载" ( "软件id" text PRIMARY KEY, "应用商店id" text, "下载量" number, "评价人数" number, "好评数" number, FOREIGN KEY ("软件id") REFERENCES "软件" ("软件id") ON DELETE NOACTION ON UPDATE NOACTION, FOREIGN KEY ("应用商店id") REFERENCES "应用商店" ("商店id") ON DELETE NOACTION ON UPDATE NOACTION )
SELECT * FROM "应用商店支持国家" WHERE "国家" = ( SELECT "国家" FROM "应用商店" WHERE "商店id" = ( SELECT "商店id" FROM "应用商店" ) )
SELECT * FROM "应用商店支持国家" WHERE "国家" = ( SELECT "国家" FROM "应用商店" WHERE "商店id" = ( SELECT "商店id" FROM "应用商店" ) )
SELECT 商店名, 累计下载次数 FROM "应用商店" GROUP BY 商店名 ORDER BY 累计下载次数 DESC LIMIT 1
SELECT count(应用软件数) FROM "应用商店" WHERE 商店id = ( SELECT商店id FROM "应用商店" GROUP BY 商店id ORDER BY COUNT(*) DESC LIMIT 1 )

SELECT 软件id, AVG(下载量) AS AVG_下载量, COUNT(*) AS COUNT_下载量 FROM "应用商店" AS app INNER JOIN "应用商店支持国家" AS app_to_的国家 ON app.商店id = app_to_的国家.商店id INNER JOIN "软件" AS app ON app.软件id = app_to_的国家.软件id WHERE app_to_的国家.用户是否可以购买应用程序 = 'binary' GROUP BY app.软件id, app_to_的国家.国家, app.用途 ORDER BY COUNT_下载量 DESC
SELECT评价人数 FROM "软件下载" WHERE下载量 = ( SELECT AVG(下载量) AS AVG_下载量 FROM "应用商店" AS app JOIN "应用商店支持国家" AS app_to_的国家 ON app.商店id = app_to_的国家.商店id JOIN "软件" AS app ON app.软件id = app_to_的国家.软件id WHERE app_to_的国家.用户是否可以购买应用程序 = 'binary' GROUP BY app.软件id, app_to_的国家.国家, app.用途 ORDER BY AVG_下载量 DESC LIMIT 1 )
SELECT 好评数 FROM "软件下载" WHERE 下载量 = ( SELECT AVG(下载量) AS AVG_下载量 FROM "应用商店" AS app JOIN "应用商店支持国家" AS app_to_的国家 ON app.商店id = app_to_的国家.商店id JOIN "软件" AS app ON app.软件id = app_to_的国家.软件id WHERE app_to_的国家.用户是否可以购买应用程序 = 'binary' GROUP BY app.软件id, app_to_的国家.国家, app.用途 ORDER BY AVG_下载量 DESC LIMIT 1 )

SELECT * FROM 动物 WHERE 学名 = '猫' AND 食性 = '肉' AND 是否是人类忠实朋友 = '是' AND 理由 = '人类喜欢吃肉'
NO SQL FOUND
SELECT * FROM 动物的天敌 WHERE 学名 = '猫' AND 食性 = '肉' AND 是否是人类忠实天敌 = '是' AND 理由 = '人类喜欢吃肉'
SELECT * FROM 动物的天敌 WHERE 学名 = '狗' AND 食性 = '肉' AND 是否是人类忠实天敌 = '是' AND 害怕的原因 = '人类不喜欢狗'

CREATE TABLE "台风影响的国家" ( "台风id" number, "国家" text, "经济损失" number, FOREIGN KEY ("台风id") REFERENCES "台风" ("台风id") ON DELETE NO ACTION ON UPDATE NOACTION ); CREATE TABLE "台风" ( "台风id" text, "名称" text, "登陆地点" text, "登陆时间" time, "登陆强度" number, "持续天数" number, "死亡人数" number, "经济损失" number, PRIMARY KEY ("台风id") ); CREATE TABLE "台风影响的中国省份" ( "台风id" text, "省份" text, "登陆强度" number, "死亡人数" number, "失踪人数" number, FOREIGN KEY ("台风id") REFERENCES "台风" ("台风id") ON DELETE NOACTION ON UPDATE NOACTION )
CREATE TABLE "台风影响的国家" ( "台风id" number, "国家" text, "经济损失" number, FOREIGN KEY ("台风id") REFERENCES "台风" ("台风id") ON DELETE NOACTION ON UPDATE NOACTION ); CREATE TABLE "台风" ( "台风id" text, "名称" text, "登陆地点" text, "登陆时间" time, "登陆强度" number, "持续天数" number, "死亡人数" number, "经济损失" number, PRIMARY KEY ("台风id") ); CREATE TABLE "台风影响的中国省份" ( "台风id" text, "省份" text, "登陆强度" number, "死亡人数" number, "失踪人数" number, FOREIGN KEY ("台风id") REFERENCES "台风" ("台风id") ON DELETE NOACTION ON UPDATE NOACTION )
SELECT 台风id, 登陆强度, COUNT(*) as num FROM "台风影响的国家" INNER JOIN "台风" ON 台风id = "台风"."台风id" WHERE 名称 = "台风"."名称" GROUP BY 台风id, 登陆强度 ORDER BY num DESC
SELECT COUNT(*) as num, 死亡人数 from "台风影响的国家" INNER JOIN "台风" ON 台风id = "台风"."台风id" WHERE 名称 = "台风"."名称" GROUP BY 死亡人数 ORDER BY num DESC

SELECT * FROM "台风影响的国家" t1 INNER JOIN "台风" t2 ON t1."台风id" = t2."台风id" WHERE t2."经济损失" = ( SELECT MAX(经济损失) FROM "台风影响的国家" t3 WHERE t3."国家" = t1."国家" ) ON DELETE NO ACTION ON UPDATE NO ACTION
SELECT * FROM "台风影响的国家" t1 INNER JOIN "台风" t2 ON t1."台风id" = t2."台风id" ORDER BY t2."经济损失" DESC LIMIT 10
SELECT * FROM "台风影响的中国省份" t1 INNER JOIN "台风影响的国家" t2 ON t1."台风id" = t2."台风id" INNER JOIN "台风" t3 ON t1."台风id" = t3."台风id" WHERE t2."经济损失" = t3."经济损失" GROUP BY t1."省份" HAVING COUNT(DISTINCT t1."省份") = ( SELECT COUNT(DISTINCT t3."省份") FROM "台风影响的国家" t3 WHERE t3."国家" = t1."国家" ) ON DELETE NOACTION ON UPDATE NOACTION
SQL NOT GET: may be TIMEOUT

CREATE TABLE "台风影响的国家" ( "台风id" number, "国家" text, "经济损失" number, FOREIGN KEY ("台风id") REFERENCES "台风" ("台风id") ON DELETE NOACTION ON UPDATE NOACTION )
CREATE TABLE "台风影响的国家" ( "台风id" number, "国家" text, "经济损失" number, FOREIGN KEY ("台风id") REFERENCES "台风" ("台风id") ON DELETE NOACTION ON UPDATE NOACTION )
CREATE TABLE "台风影响的国家" ( "台风id" number, "国家" text, "经济损失" number, FOREIGN KEY ("台风id") REFERENCES "台风" ("台风id") ON DELETE NOACTION ON UPDATE NOACTION ); SELECT * FROM "台风影响的国家" WHERE "台风id" IN ( SELECT "台风id" FROM "台风" WHERE "name" = 'Dodo' )
CREATE TABLE "台风影响的国家" ( "台风id" number, "国家" text, "经济损失" number, PRIMARY KEY ("台风id") ); SELECT * FROM "台风影响的国家" order by "经济损失" DESC LIMIT 1
SQL NOT GET: may be TIMEOUT

SELECT * FROM 商家 WHERE 商家id IN ( SELECT 商家id FROM 商家平台活动 WHERE 平台id IN ( SELECT 平台id FROM 平台 ORDER BY 市场占比 DESC LIMIT 10 ) )
SELECT * FROM "商家平台活动" WHERE "平台id" IN ( SELECT "平台id" FROM "平台" ORDER BY "市场占比" DESC LIMIT 10 )
SELECT评分 FROM "商家平台活动" WHERE "平台id" IN ( SELECT "平台id" FROM "平台" ORDER BY "市场占比" DESC LIMIT 10 )
SELECT MAX(评分) FROM "商家平台活动" WHERE "平台id" IN ( SELECT "平台id" FROM "平台" ORDER BY "市场占比" DESC LIMIT 10 )

CREATE TABLE 篮球运动队 (id TEXT PRIMARY KEY, 队名 text, 所属国家 text, 成立时间 time, 现任主教练 text, 现在世界排名 number) CREATE TABLE 奥运会成绩 (年份 INT, 奥运会名称 TEXT, 名次 INT, 运动队id INT REFERENCES 篮球运动队 (id), 主教练 TEXT) CREATE TABLE 奥运会交手记录 (对手id number, 比分 number, 是否胜利 BOOLEAN, 球队id REFERENCES 篮球运动队 (id), 赛事类型 TEXT, 年份 INT, 奥运会 STRING, 比赛日期 DATE, FOREIGN KEY (对手id) REFERENCES 篮球运动队 (id))
CREATE TABLE 篮球运动队 (id TEXT PRIMARY KEY, 队名 text, 所属国家 text, 成立时间 time, 现任主教练 text, 现在世界排名 number) CREATE TABLE 奥运会成绩 (年份 INT, 奥运会名称 TEXT, 名次 INT, 运动队id INT REFERENCES 篮球运动队 (id), 主教练 TEXT) CREATE TABLE 奥运会交手记录 (对手id number, 比分 number, 是否胜利 BOOLEAN, 球队id REFERENCES 篮球运动队 (id), 赛事类型 TEXT, 年份 INT, 奥运会 STRING, 比赛日期 DATE, FOREIGN KEY (对手id) REFERENCES 篮球运动队 (id))
NO SQL FOUND
ORDER BY 成立时间 DESC, 世界排名 ASC GO SELECT * FROM 篮球运动队, 奥运会成绩, 奥运会交手记录 ORDER BY 成立时间 DESC, 世界排名 ASC

NO SQL FOUND
SELECT 名次 FROM 奥运会成绩 WHERE 年份 = 2012 AND 运动队id = (SELECT id FROM 篮球运动队 WHERE 队名 = '伦敦奥运会')
SELECT 主教练 FROM 奥运会成绩 WHERE 运动队id = (SELECT id FROM 篮球运动队 WHERE 队名 = '美国男篮') AND 年份 = 2012

SELECT 地区生产总值, 生产总值增长率, 第一产业总值, 第二产业总值, 第三产业总值 FROM 城市 WHERE 名称 = '四川成都'
SELECT 地区生产总值, 生产总值增长率 FROM 城市 WHERE 名称 = '四川成都'
SELECT service_ trade_产业的进口额, service_ trade_产业的进口额增长率 FROM 城市 WHERE 城市id = '42'
SELECT service_ trade_产业的出口额, service_ trade_产业的出口额增长率 FROM 城市 WHERE 城市id = '42'

SELECT 城市id, MAX(地铁运营里程) as max_地铁运营里程, MAX(在建里程) as max_在建里程, MAX(规划里程) as max_规划里程, MAX(已运营线路数) as max_已运营线路数 FROM 城市地铁里程 GROUP BY 城市id ORDER BY max_地铁运营里程 DESC, max_在建里程 DESC, max_规划里程 DESC, max_已运营线路数 DESC
SELECT 日均客运量,每日每公里客运量,每公里运营成本,每公里运营收入 FROM 城市地铁日均客运量 WHERE 城市id = ( SELECT 城市id FROM 城市 ORDER BY 每公里客运量 DESC,每日每公里客运量 DESC,每公里运营成本 DESC,每公里运营收入 DESC LIMIT 1 )
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SELECT COUNT(*) FROM 城市地铁里程 WHERE 城市id IN (SELECT 城市id FROM 城市)
SELECT 运营成本 FROM 城市地铁日均客运量 WHERE 城市id IN (SELECT 城市id FROM 城市)
SELECT 列_5元可乘坐里程 FROM 城市地铁票价 WHERE 城市id IN (SELECT 城市id FROM 城市)

CREATE TABLE 学生参赛记录 ( 学生id TEXT REFERENCES 参赛学生 (学生id), 加入队伍日期 DATE, 成绩 text )
CREATE TABLE 学生参赛记录 ( 学生id TEXT REFERENCES 参赛学生 (学生id), 加入队伍日期 DATE, 成绩 text, FOREIGN KEY (学生id) REFERENCES 参赛学生 (学生id) )
SELECT * FROM 学生参赛记录 ORDER BY age DESC,学历 DESC,学校 DESC

CREATE TABLE 比赛 ( 比赛id TEXT PRIMARY KEY, 名称 TEXT, 方向 TEXT, 举办单位 TEXT, 单位性质 TEXT, 奖金数 number, 录取队伍数量 number, 比赛平台 text ); CREATE TABLE 参赛队伍 ( 队伍id TEXT PRIMARY KEY, 队名 TEXT ); CREATE TABLE 学生参赛记录 ( 学生id TEXT PRIMARY KEY, 加入队伍日期 DATE ); CREATE TABLE 队伍参赛成绩 ( 加入队伍id number, 参加比赛id number, 成绩 TEXT, FOREIGN KEY (加入队伍id) REFERENCES 参赛队伍 (队伍id), FOREIGN KEY (参加比赛id) REFERENCES 比赛 (比赛id) )
SELECT 方向 FROM 比赛
SELECT 举办单位, 单位性质 FROM 比赛
SELECT 奖金数, COUNT(*) FROM 比赛 WHERE 方向 = 'A' GROUP BY 奖金数 HAVING COUNT(*) > 1 order by 奖金数 limit 1
SELECT 队伍id, 队伍名 FROM 参赛队伍

SELECT 队伍id, 加入队伍日期 FROM 学生参赛记录 JOIN 比赛 ON 学生参赛记录.加入队伍id = 比赛.比赛id JOIN 参赛队伍 ON 学生参赛记录.加入队伍id = 参赛队伍.队伍id
SELECT 学生id, 学生姓名, 年龄, 学历, 学校 FROM 学生参赛记录 JOIN 比赛 ON 学生参赛记录.加入队伍id = 比赛.比赛id JOIN 参赛队伍 ON 学生参赛记录.加入队伍id = 参赛队伍.队伍id WHERE 比赛.奖金数 = (SELECT 奖金数 FROM 比赛 WHERE 名称 = '奖金数' AND 方向 = '奖金数')
SELECT 学生id, 学校 FROM 学生参赛记录 JOIN 比赛 ON 学生参赛记录.加入队伍id = 比赛.比赛id JOIN 参赛队伍 ON 学生参赛记录.加入队伍id = 参赛队伍.队伍id WHERE 比赛.奖金数 = (SELECT 奖金数 FROM 比赛 WHERE 名称 = '奖金数' AND 方向 = '奖金数')
SELECT 加入队伍日期 FROM 学生参赛记录 JOIN 比赛 ON 学生参赛记录.加入队伍id = 比赛.比赛id JOIN 参赛队伍 ON 学生参赛记录.加入队伍id = 参赛队伍.队伍id GROUP BY 加入队伍日期 ORDER BY 加入队伍日期 ASC LIMIT 10

SELECT * FROM 比赛 WHERE 名称 = 'NBA 2K18'
SELECT 平台 FROM 比赛平台 WHERE 名称 = 'YouTube'
SELECT * FROM 学术会议 WHERE 名称 = '2022年国际学术会议'
SELECT COUNT(*) as num FROM ( SELECT COUNT(*) as num FROM 比赛 WHERE 名称 = '2022年国际学术会议' ) 子查询 order by num DESC

SQL SELECT * FROM 城市地铁里程 WHERE 城市id = ?
SQL SELECT 省份, 地铁运营里程, 地铁运营成本, 地铁运营收入 FROM 城市地铁日均客运量 WHERE 城市id = ?
SQL SELECT 日均客运量 FROM 城市地铁日均客运量 WHERE 城市id = ?

NO SQL FOUND
NO SQL FOUND
NO SQL FOUND
NO SQL FOUND

SELECT 电视剧.剧名,电视剧收视.时间段,电视剧收视.收视率 FROM 电视剧 INNER JOIN 电视剧收视 ON 电视剧.电视剧编号 = 电视剧收视.电视剧编号 INNER JOIN 电视台 ON 电视剧.首播平台id = 电视剧收视.平台id WHERE 电视台.名称 = '东方卫视' AND 电视剧收视.时间段 = '2018-01-01'
SELECT电视剧.剧名,电视剧收视.时间段,电视剧收视.收视率 FROM 电视剧 INNER JOIN 电视剧收视 ON 电视剧.电视剧编号 = 电视剧收视.电视剧编号 INNER JOIN 电视台 ON 电视剧.首播平台id = 电视剧收视.平台id WHERE 电视台.名称 = '东方卫视' AND 电视剧收视.时间段 = '2018-01-01' ORDER BY 收视率 DESC LIMIT 1
SELECT 出品公司.公司名称, 发行公司.公司名称, 出品公司.出品时间, 发行公司.发行时间 FROM 出品公司 INNER JOIN 发行公司 ON 出品公司.公司名称 = 发行公司.公司名称 INNER JOIN 电视剧 ON 出品公司.电视剧编号 = 电视剧.电视剧编号 WHERE 出品公司.出品时间 = '2018-01-01' AND 发行公司.发行时间 = '2018-01-01' ORDER BY 出品公司.公司名称, 发行公司.公司名称 LIMIT 1

SELECT 电视剧id, 剧名, 出品公司, 发行公司, 首播平台id, 时间段, 是否出品过 FROM 电视剧收视 WHERE 平台id = (SELECT 电视台id FROM 电视台 WHERE 名称 = '腾讯影业') GROUP BY 电视剧id, 剧名, 出品公司, 发行公司, 首播平台id, 时间段 ORDER BY 收视率 DESC
SELECT 时间段 FROM 电视剧收视 WHERE 首播平台id = (SELECT 电视台id FROM 电视台 WHERE 名称 = '腾讯影业') GROUP BY 电视剧id, 剧名, 出品公司, 发行公司 ORDER BY 时间段 DESC
SELECT 电视台id, 时间段, 是否在电视台播出 FROM 电视剧收视 WHERE 首播平台id = (SELECT 电视台id FROM 电视台 WHERE 名称 = '腾讯影业') GROUP BY 电视台id, 时间段 HAVING COUNT(*) = (SELECT COUNT(*) FROM 电视台 WHERE 名称 = '腾讯影业')

SELECT * FROM 图书 WHERE 类型 = 'text' LIMIT 1
SELECT * FROM 图书 WHERE 作者 = '少儿' LIMIT 1
SELECT 平台id FROM 图书 WHERE 作者 = '少儿' LIMIT 1

SELECT 书名, 平台id FROM 图书 JOIN 平台 ON 图书id = 平台id WHERE 成立时间 = (SELECT MAX(成立时间) FROM 平台)
SELECT 平台id, 年营业额, 是否自营 FROM 平台 WHERE 成立时间 = (SELECT MAX(成立时间) FROM 平台)
SELECT 书名, 类型 FROM 图书 JOIN 平台 ON 图书id = 平台id WHERE 类型 = (SELECT 类型 FROM 图书 WHERE 书名 = '小说')

SELECT 作者 FROM 图书 WHERE 书名 = '平凡的世界'
SELECT 平台名, 平台成立时间, 年营业额, 是否自营, 会员费 FROM 平台 WHERE 年营业额 IN (SELECT 年营业额 FROM 平台 WHERE 平台名 = '京东' AND 成立时间 = '2010-01-01')
SELECT 书名, 平台名, 售价 FROM 图书_平台 WHERE 售价 DESC LIMIT 1
SELECT 书名, 平台名, 售价, 评分 FROM 图书_平台
SELECT 平台名, 是否缺货 FROM 平台 WHERE 是否自营 = '1' AND 成立时间 = '2010-01-01'

SELECT MAX(评分) AS max_评分 FROM 图书与平台 WHERE 书名id IN (SELECT 书名id FROM 图书) AND 平台id IN (SELECT 平台id FROM 平台) GROUP BY 书名id, 平台id
SELECT 平台name AS平台名, COUNT(*) AS销售量 FROM 平台 GROUP BY 平台name; SELECT书名id, 平台id, COUNT(*) AS购买人数 FROM 图书与平台 WHERE 书名id IN (SELECT 书名id FROM 图书) AND 平台id IN (SELECT 平台id FROM 平台) GROUP BY 书名id, 平台id
SELECT加入购物车人数, 收藏人数 AS收藏人数 FROM 图书与平台 WHERE 书名id IN (SELECT 书名id FROM 图书) AND 平台id IN (SELECT 平台id FROM 平台) GROUP BY 书名id, 平台id
SELECT 电子书售价 AS电子书售价, COUNT(*) AS销售量 FROM 图书与平台 WHERE 书名id IN (SELECT 书名id FROM 图书) AND 平台id IN (SELECT 平台id FROM 平台) GROUP BY 书名id, 平台id
SQL NOT GET: may be TIMEOUT

SELECT * FROM "应用商店" WHERE "商店名" IN ('Google Play', 'Apple App Store', 'Amazon App Store', 'Microsoft Store')
SELECT 哪个国家的, "应用商店支持国家" "用户是否可以购买应用程序" "开发人员是否可以出售应用程序" FROM "应用商店" "软件" "软件下载" WHERE "应用商店支持国家" IN ('US', 'UK', 'PNG', 'SEPNG') AND "商店id" IN ('1', '2', '3', '4')
SELECT 用户, 是否购买应用程序, "应用商店支持国家" "用户是否可以购买应用程序" "开发人员是否可以出售应用程序" FROM "应用商店" "软件" "软件下载" WHERE "应用商店支持国家" IN ('US', 'UK', 'PNG', 'SEPNG') AND "软件id" IN ('1', '2', '3', '4')

SELECT * FROM "应用商店" WHERE "应用商店"."应用软件数" = ( SELECT MAX("应用软件数") FROM "应用商店" GROUP BY "应用商店"."商店名" ); SELECT * FROM "软件" WHERE "软件"."软件id" = ( SELECT MAX("软件id") FROM "软件" GROUP BY "软件"."软件id" ); SELECT * FROM "软件下载" WHERE "应用商店"."商店id" = ( SELECT MAX("应用商店"."商店名")."商店id" FROM "应用商店" WHERE "应用商店"."应用商店支持国家"."用户是否可以购买应用程序" = '0' GROUP BY "应用商店"."商店名", "应用商店"."商店支持国家", "软件"."软件id", "软件下载"."应用商店id" HAVING MAX("软件下载"."下载量") = MAX("应用商店"."商店名")."商店id" ORDER BY "软件下载"."下载量" DESC )
SELECT * FROM "软件下载" WHERE "应用商店"."商店id" = '0' AND "应用商店"."应用商店支持国家"."用户是否可以购买应用程序" = '0' AND "软件下载"."软件id" = '软件id' ORDER BY "软件下载"."下载量" DESC
SQL NOT GET: may be TIMEOUT

SQL NOT GET: may be TIMEOUT
SELECT * FROM "应用商店" WHERE "商店名" = '应用商店支持国家' LIMIT 1
SELECT 累计下载次数 FROM "应用商店" WHERE 商店名 = '应用商店支持国家' LIMIT 1

NO SQL FOUND
NO SQL FOUND
SQL NOT GET: may be TIMEOUT

SELECT评分 as low_评分,书名,作者id,评价人数,字数,点击数,类型,PRIMARY KEY (评分) as评分_key,FROM 出版图书 GROUP BY 书名,作者id ORDER BY low_评分 DESC LIMIT 1
SELECT评价人数 as num_评价,点击数 as num_点击, COUNT(*) as num_评价s, COUNT(1) as num_点击s, PRIMARY KEY (评价人数,点击数) as评价_num_点击_key, FROM 出版图书 GROUP BY评价人数,点击数 ORDER BY评价_num_点击_key DESC,点击数 DESC LIMIT 1
SELECT 作者id as author_id, 书名 as book_name, 出版日期 as publication_date, 出版社 as company, 封面图片 as cover_image, 出版图书id as book_id, PRIMARY KEY (作者id, 书名, 出版日期, 出版社, 封面图片) as author_book_key, FROM 出版图书 ORDER BY author_book_key DESC, 书名, 出版日期, 出版社, cover_image LIMIT 10
SELECT age as age, PRIMARY KEY (age) as age_key, FROM users

SELECT * FROM 出版图书 WHERE 书名 = '小说' AND 作者id = '梁夜白' AND 类型 = '书籍'
SELECT age FROM users WHERE username = '梁夜白'
SELECT COUNT(*) AS total_排名 FROM "收藏榜" WHERE 网络小说id = '梁夜白'

NO SQL FOUND
NO SQL FOUND
NO SQL FOUND
NO SQL FOUND

SELECT 平台.平台id, 平台.平台名称, 年会费.年会费, 季度会费.季度会费, 月会费.月会费, 口碑.口碑 FROM 平台 INNER JOIN 艺人 ON 平台.平台id =艺人.id INNER JOIN 综艺节目 ON 平台.平台id =综艺节目.平台id INNER JOIN 节目阵容 ON 艺人.综艺节目id =节目阵容.艺人id ON 年会费.年会费 = 季度会费.季度会费 + 月会费.月会费 WHERE 月会费 > (SELECT MAX(月会费) FROM 月会费)
SELECT a.id, a.name, 的口碑.口碑 FROM 店铺 a INNER JOIN 评价 ON a.店铺id =评价.店铺id INNER JOIN 评价_店铺 ON评价.评价id =评价_店铺.评价id INNER JOIN 口碑 ON评价_店铺.店铺id =口碑.店铺id WHERE 口碑.口碑 > (SELECT MAX(口碑) FROM 口碑)
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SELECT 路线id, 国家, 旅行天数, 景点数量 FROM出境游所含国家 JOIN国内游路线 ON出境游所含国家.路线id=国内游路线.路线id JOIN 邮轮路线 ON出境游所含国家.路线id=邮轮路线.路线id JOIN 旅行社 ON国内游路线.旅行社id=旅行社.旅行社id WHERE 旅行社.名称='中国旅行社' GROUP BY 路线id, 国家, 旅行天数, 景点数量 ORDER BY 旅行天数 DESC LIMIT 1
SELECT 路线id, 意大利旅游的天数 FROM出境游所含国家 JOIN国内游路线 ON出境游所含国家.路线id=国内游路线.路线id JOIN 邮轮路线 ON出境游所含国家.路线id=邮轮路线.路线id JOIN 旅行社 ON国内游路线.旅行社id=旅行社.旅行社id WHERE 旅行社.名称='中国旅行社' GROUP BY 路线id, 意大利旅游的天数 ORDER BY 意大利旅游的天数 DESC LIMIT 1
SELECT 景点数量 FROM 出境游路线 JOIN 国内游路线 ON 出境游路线.路线id=国内游路线.路线id JOIN 邮轮路线 ON 出境游路线.路线id=邮轮路线.路线id JOIN 旅行社 ON 国内游路线.旅行社id=旅行社.旅行社id WHERE 旅行社.名称='中国旅行社' GROUP BY 景点数量 ORDER BY 景点数量 DESC LIMIT 1
SELECT 路线名称 FROM 出境游路线 JOIN 国内游路线 ON 出境游路线.路线id=国内游路线.路线id JOIN 邮轮路线 ON 出境游路线.路线id=邮轮路线.路线id JOIN 旅行社 ON 国内游路线.旅行社id=旅行社.旅行社id WHERE 旅行社.名称='中国旅行社' GROUP BY 路线名称 ORDER BY 路线名称 DESC LIMIT 1

SELECT * FROM "出境游路线" WHERE (路线id, 旅行社id) IN ( SELECT 路线id, 旅行社id FROM "出境游所含国家" JOIN "国内游路线" ON 出境游路线id = 国内游路线id JOIN "邮轮路线" ON 邮轮路线id = 邮轮路线id JOIN "出境游路线" ON 出境游路线id = 出境游路线id JOIN "旅行社" ON 旅行社id = 旅行社id WHERE 国家 = '英国' AND 旅行天数 > 1 ORDER BY 旅行天数 DESC LIMIT 1, 1 )
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SELECT * FROM 公司 WHERE id = ( SELECT id FROM音箱产品 WHERE名称 = '智能音箱' AND 所属公司 = '中国' )
SELECT * FROM 公司 WHERE id = ( SELECT id FROM音箱产品 WHERE名称 = '智能音箱' AND 所属公司 = '中国' )
SELECT COUNT(*) as 排名 FROM 公司 WHERE id = ( SELECT id FROM音箱产品 WHERE名称 = '智能音箱' AND 所属公司 = '中国' )
SELECT 音箱产品.名称 FROM 音箱产品 INNER JOIN 公司 ON 音箱产品.所属公司id = 公司.id WHERE 公司.id = ( SELECT id FROM音箱产品 WHERE名称 = '智能音箱' AND 所属公司 = '中国' )

SELECT音箱产品.售价 FROM 音箱产品 INNER JOIN 产品销售 ON音箱产品.音箱id = 产品销售.产品id INNER JOIN 公司 ON 产品销售.公司id = 公司.id WHERE 公司.名称 = '天猫精灵'
SELECT音箱产品.产品名称,音箱产品.售价 FROM音箱产品 INNER JOIN 产品销售 ON音箱产品.音箱id = 产品销售.产品id INNER JOIN 公司 ON 产品销售.公司id = 公司.id WHERE 公司.名称 = '天猫精灵' AND 产品销售.季度 = '第四季度'
SELECT 产品销售.销售量, 产品销售.销售量增长 FROM 产品销售 INNER JOIN 产品销售 ON 产品销售.产品id = 产品销售.产品id INNER JOIN 公司 ON 产品销售.公司id = 公司.id WHERE 公司.名称 = '天猫精灵' AND 产品销售.季度 = '第四季度'

SELECT * FROM "音箱产品" WHERE 售价 = (SELECT MAX(售价) FROM "音箱产品" WHERE 所属公司 = 'your_company_name')
SELECT * FROM "音箱产品" WHERE 售价 < (SELECT MIN(售价) FROM "音箱产品" WHERE 所属公司 = 'your_company_name')
SELECT 售价, COUNT(*) as rank FROM "音箱产品" WHERE 售价 > (SELECT MAX(售价) FROM "音箱产品" WHERE 所属公司 = 'your_company_name') AND 所属公司 = 'your_company_name' GROUP BY 售价 ORDER BY rank DESC LIMIT 1
SELECT COUNT(*) as num, 售价 as rank FROM "音箱产品" WHERE 售价 > (SELECT MAX(售价) FROM "音箱产品" WHERE 所属公司 = 'your_company_name') AND 所属公司 = 'your_company_name' GROUP BY 售价 ORDER BY num DESC LIMIT 1

SELECT * FROM 民俗节日 WHERE 民族id IN (SELECT 民族id FROM "民族" WHERE 人口 = (SELECT 人口 FROM "民族城市" WHERE "民族id" = 民族id))
SELECT 日期 FROM 民俗节日 WHERE 节日 = '端午节'
NO SQL FOUND
SELECT 民族id, 名称 FROM "民族" WHERE 人口 = (SELECT 人口 FROM "民族城市" WHERE "民族id" = 民族id)

SELECT * FROM "民族" WHERE "民族id" NOT IN (SELECT "民族id" FROM "民俗节日") ON DELETE NOACTION ON UPDATE NOACTION
SELECT COUNT(*) FROM "民族" WHERE "民族id" = '汉族'
SELECT 语言 FROM "民族" WHERE "民族id" = '汉族' AND "语言" = '中文'
SELECT 宗教信仰 FROM "民族" WHERE "民族id" = '汉族' AND "宗教信仰" = '汉族文化'
SELECT 节日 FROM "民俗节日" WHERE 节日 = '春节' AND 民族id = '汉族'

SELECT * FROM "篮球运动员" WHERE 姓名 > '乔丹' AND 出生年份 > '1980'
SELECT * FROM "篮球运动员" WHERE 姓名 > '乔丹' AND 毕业院校 = '德克萨斯大学''
SELECT 球员id, 球员中文名, 参加选秀年份, 是否状元, 获得球队, 毕业院校, 国籍 FROM "篮球运动员" WHERE 姓名 > '乔丹' AND 毕业院校 = '德克萨斯大学' AND 出生年份 > '1980' AND 是否状元 > '0'
SELECT 球员id, 参加选秀年份 FROM "篮球运动员" WHERE 姓名 > '乔丹' AND 出生年份 > '1980' AND 参加选秀年份 = '1984'
SELECT 球员id, 球队 FROM "篮球运动员" WHERE 球员id > '乔丹' AND 球队id IN ('公牛', '热火', '国王', '爵士', '马刺', '勇士')

SELECT 球员id FROM 篮球运动员 WHERE 是否状元 = 1
SELECT 球员id, 院校名称 FROM 篮球运动员 WHERE 参加选秀年 = '2014' AND 毕业院校 = '威廉姆斯学院'
SELECT 球员id, 球队id, 是否状元, 是否状元 + 是否冠军 = 是否总教练 FROM NBA总冠军 WHERE 赛季 = '2021' AND 球队id = 5
SELECT 球员id, 赛季 FROMMVP记录 WHERE 赛季 = '2021' AND 球员id = 5
SELECT 球队id FROM "球队" WHERE 球队id = 5

SELECT * FROM "球队" WHERE 球队id NOT NULL; SELECT * FROM "篮球运动员" WHERE 球员id NOT NULL; SELECT * FROM "NBA总冠军" WHERE 球队id NOT NULL; SELECT * FROM "MVP记录" WHERE 球员id NOT NULL
SELECT SELECT_DISTINCT(球队id) AS 球队id, "西南赛区" AS赛区, "球队名称" AS 球队名称, "夺冠次数" AS 夺冠次数, PRIMARY KEY(球队id) FROM "球队" WHERE 球队id NOT NULL
SELECT 联盟名称 as 联盟, "NBA" as 联盟名称, PRIMARY KEY(联盟名称) FROM "联盟" WHERE 联盟名称 NOT NULL
SELECT 夺冠次数 as 夺冠次数, "NBA总冠军" as 夺冠次数, PRIMARY KEY(夺冠次数) FROM "NBA总冠军" WHERE 夺冠次数 NOT NULL

SELECT 球队id FROM "NBA总冠军" WHERE 赛季 = '2021' AND 球队id = ( SELECT MAX(夺冠次数) FROM "球队" )
SELECT 赛区 FROM "球队" WHERE 球队id IN ( SELECT MAX(夺冠次数) FROM "NBA总冠军" )
SELECT 夺冠次数 FROM "NBA总冠军" WHERE 赛季 = '2021' AND 球队id IN ( SELECT MAX(夺冠次数) FROM "球队" )

SELECT t2.总教练 FROM "NBA总冠军" t1 INNER JOIN "MVP记录" t2 ON t1.赛季 = t2.赛季 WHERE t1.球队id = ( SELECT 球队id FROM "球队" WHERE 年份 = 2005 LIMIT 1 )
SELECT t3.球员id FROM "篮球运动员" t1 INNER JOIN "NBA总冠军" t2 ON t1.球员id = t2.球员id INNER JOIN "MVP记录" t3 ON t2.赛季 = t3.赛季 WHERE t2.球队id = ( SELECT 球队id FROM "球队" WHERE 年份 = 2005 LIMIT 1 )
SELECT t4.联盟名称, t3.球员id FROM "篮球运动员" t1 INNER JOIN "NBA总冠军" t2 ON t1.球员id = t2.球员id INNER JOIN "MVP记录" t3 ON t2.赛季 = t3.赛季 INNER JOIN "球队" t4 ON t4.球队id = t3.所属球队 WHERE t2.联盟名称 = ( SELECT 联盟名称 FROM "联盟" WHERE 地区 = ( SELECT 地区 FROM "地区" WHERE 年份 = t1.年份 LIMIT 1 ) LIMIT 1 ) ORDER BY t3.球员id DESC, t4.联盟名称 ASC

SELECT * FROM "篮球运动员" WHERE "球员id" = '1' AND "是否状元" = '0'
SELECT * FROM "篮球运动员" WHERE "球员id" = '1' AND "是否状元" = '0'
SELECT date(column1, column2, column3) AS选秀年份 FROM "篮球运动员" WHERE column1 = '1' AND column2 = '参加选秀年' AND column3 = '时间' AND column4 = '是否状元' AND column5 = '二进制'

SQL NOT GET: may be TIMEOUT
SELECT * FROM "台风" WHERE "台风id" IN ( SELECT "台风id" FROM "台风影响的中国省份" WHERE "省份" = '中国' UNION SELECT "台风id" FROM "台风影响的国家" WHERE "国家" = '国家' UNION SELECT "台风id" FROM "台风" WHERE "登陆地点" = '地点' )
SELECT * FROM "台风" WHERE "台风id" IN ( SELECT "台风id" FROM "台风影响的国家" WHERE "国家" = '中国' UNION SELECT "台风id" FROM "台风影响的国家" WHERE "国家" = '国家' UNION SELECT "台风id" FROM "台风" WHERE "登陆地点" = '地点' )

SELECT * FROM "台风" WHERE id IN (SELECT 台风id FROM "台风影响的国家" WHERE country = '海南') AND 死亡 = 0 AND 失踪 = 0
SELECT 台风id, 登陆时间 FROM "台风" WHERE id = '号' AND 登陆地点 = '海南'
SELECT SUM(经济损失) AS total_经济损失 FROM "台风影响的国家" WHERE country = '海南' AND 经济损失 = 0

SELECT 品牌id, 品牌名, 公司, 国家, 市场份额 FROM 电视机品牌
SELECT 品牌id, 品牌名, 公司, 国家, 市场份额 FROM 电视机品牌
SELECT 品牌id, 品牌名, 公司, 国家, 市场份额, SUM(市场份额) AS total_市场份额 FROM 电视机品牌

SELECT * FROM 电视机平台售卖 WHERE 当前售价 = (SELECT MAX(定价) FROM 电视机型号 WHERE 品牌id = (SELECT 品牌id FROM 电视机品牌))
SELECT 品牌名, 品牌名, 公司名, 国家名, 市场份额 FROM 电视机品牌 WHERE 品牌id = (SELECT 品牌id FROM 电视机平台售卖)
SELECT定价 FROM 电视机型号 WHERE 品牌id = (SELECT 品牌id FROM 电视机品牌)
SELECT 平台, 售卖量 FROM 电视机平台售卖 WHERE 型号id = (SELECT 型号id FROM 电视机型号)
SELECT 评分 FROM 电视机平台售卖 WHERE 型号id = (SELECT 型号id FROM 电视机型号)

SELECT * FROM "医院" WHERE "医院名" = '医院名'
SELECT * FROM "医院" WHERE "医院等级" = '等级' ORDER BY "医院等级" DESC
SELECT * FROM "医院" WHERE "医院等级" = '三级甲等' ORDER BY "医院等级" DESC
SELECT 城市id, 词条id FROM "城市" t1, "医院" t2 WHERE t1.词条id = t2.词条id ORDER BY 城市id DESC, 词条id ASC

SELECT t1.职工数量, t2.科室数量, t3.重点专科数量 FROM "医院" t1 JOIN "特色科室" t2 ON t1.科室 = t2.科室 JOIN "城市" t3 ON t1.城市 = t3.城市id WHERE t3.年份 = ( SELECT 年份 FROM "医院排名" WHERE 医院id = t1.医院id )
SELECT 院士数量 FROM "院士" t1 WHERE 院士id = ( SELECT 院士数量 FROM "医院" t1 JOIN "特色科室" t2 ON t1.科室 = t2.科室 JOIN "城市" t3 ON t1.城市 = t3.城市id WHERE t3.年份 = ( SELECT 年份 FROM "医院排名" t3 JOIN "城市" t4 ON t3.城市id = t4.城市id WHERE t4.名称 = '北京' AND t3.所属城市id = t4.所属城市id ) )
SELECT职工数量 FROM "医院" t1 ORDER BY职工数量 DESC LIMIT 10
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

NO SQL FOUND
NO SQL FOUND
NO SQL FOUND

NO SQL FOUND
SELECT COUNT(*) as手术数量 FROM "医院" WHERE "医院id" in ( SELECT "医院id" FROM "医院排名" GROUP BY "年份" ORDER BY COUNT(*) DESC LIMIT 1 )
SELECT * FROM "特色科室" WHERE "医院id" in ( SELECT "医院id" FROM "医院" GROUP BY "科室" ORDER BY COUNT(*) DESC LIMIT 1 )

SELECT 品牌名, 公司, 国家, 市场份额, 型号id, 产品定位, 屏幕尺寸, 屏幕比例, 分辨率, 背光灯寿命, 定价 FROM 电视机品牌 JOIN 各城市电视机销量 ON 电视机品牌.品牌id = 各城市电视机销量.品牌id JOIN 电视机平台售卖 ON 电视机品牌.品牌id = 电视机平台售卖.型号id JOIN 电视机型号 ON 电视机品牌.品牌id = 电视机型号.品牌id WHERE 电视机型号.型号id in ((SELECT 型号id FROM 电视机型号 WHERE 产品定位 = '中国' AND 屏幕比例 = '16:9'))
SELECT 市场份额 FROM 电视机品牌 JOIN 各城市电视机销量 ON 电视机品牌.品牌id = 各城市电视机销量.品牌id JOIN 电视机平台售卖 ON 电视机品牌.品牌id = 电视机平台售卖.型号id JOIN 电视机型号 ON 电视机品牌.品牌id = 电视机型号.品牌id WHERE 电视机型号.型号id in ((SELECT 型号id FROM 电视机型号 WHERE 产品定位 = '中国' AND 屏幕比例 = '16:9'))
SELECT 型号id, 型号text FROM 电视机型号 WHERE 品牌定位 = '中国' AND 屏幕比例 = '16:9'

SELECT 品牌名, 公司, 国家, 市场份额 FROM 电视机品牌 WHERE 品牌id IN ( SELECT 品牌id FROM 电视机平台售卖 ORDER BY 当前售价 DESC LIMIT 1 )
SELECT 型号id, 型号 text, 产品定位, 屏幕尺寸, 屏幕比例, 分辨率, 背光灯寿命, 定价 FROM 电视机型号 WHERE 型号id IN ( SELECT 型号id FROM 电视机平台售卖 ORDER BY 当前售价 DESC LIMIT 1 )
SELECT 屏幕尺寸, 屏幕比例, 分辨率 FROM 电视机型号 ORDER BY 屏幕尺寸 DESC, 屏幕比例 DESC, 分辨率 DESC LIMIT 10
SELECT 平台 text FROM 电视机平台售卖 WHERE 平台 IN ( SELECT 平台 FROM 电视机品牌 ORDER BY 当前售价 DESC LIMIT 1 )

SELECT * FROM 电视机平台售卖 WHERE 型号 = 'XXXXX' AND 平台 = 'XX' AND 当前售价 = 'XXXX' AND 售卖量 = 'XXXX'
SELECT 型号, 屏幕尺寸, 背光灯寿命, 定价 FROM 电视机型号 WHERE 品牌id = 'XXX'
SELECT COUNT(*) FROM 电视机平台售卖 WHERE 型号id = 'XXXXX' AND 平台 = 'XX' AND 当前售价 = 'XXXX' AND 售卖量 = 'XXXX'
SELECT 用户评分 FROM 电视机平台售卖 WHERE 型号id = 'XXXXX' AND 平台 = 'XX' AND 当前售价 = 'XXXX' AND 售卖量 = 'XXXX'

SELECT 型号id, MAX(用户评分) AS max_评分 FROM 电视机平台售卖 GROUP BY 型号id ORDER BY MAX(用户评分) DESC LIMIT 1
SELECT 最高价, 最低价 FROM 电视机平台售卖 WHERE 型号id IN ( SELECT 型号id FROM 电视机品牌 WHERE 品牌id IN ( SELECT 品牌id FROM 各城市电视机销量 WHERE 城市 IN ( SELECT城市 FROM 电视机城市销量 FROM 电视机平台售卖 ) ) )
SELECT 产品定位 FROM 电视机型号 WHERE 品牌id IN ( SELECT 品牌id FROM 电视机品牌 WHERE 品牌id IN ( SELECT 品牌id FROM 各城市电视机销量 WHERE 城市 IN ( SELECT 省份 FROM 电视机城市销量 FROM 电视机平台售卖 ) ) )
SELECT 背光灯寿命 FROM 电视机型号 WHERE 品牌id IN ( SELECT 品牌id FROM 电视机品牌 WHERE 品牌id IN ( SELECT 品牌id FROM 各城市电视机销量 WHERE 城市 IN ( SELECT 省份 FROM 电视机城市销量 FROM 电视机平台售卖 ) ) )

SELECT player.球员姓名, 重要赛事.赛事名称, 重要赛事.比赛间隔年, 重要赛事.比赛项目数量, 冠军国家.国家名称, 冠军国家.冠军数量 FROM 羽毛球球员, 重要赛事, 冠军国家 WHERE 运动员id IN ( SELECT 球员id FROM 羽毛球球员 FROM 重要赛事 FROM 冠军国家 )
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SELECT t1.运动员国籍, t2.重要赛事, t3.冠军国家, t4.球员夺冠次数 FROM "羽毛球球员" t1 INNER JOIN "重要赛事" t2 ON t1.赛事id = t2.赛事id INNER JOIN "奥运会冠亚军" t3 ON t2.比赛名称 = t3.项目名称 INNER JOIN "冠军国家" t4 ON t3.赛事id = t4.赛事id WHERE t4.冠军数量 > 0
SELECT t1.球员身高, t2.重要赛事, t3.冠军国家, t4.球员夺冠次数 FROM "羽毛球球员" t1 INNER JOIN "重要赛事" t2 ON t1.赛事id = t2.赛事id INNER JOIN "奥运会冠亚军" t3 ON t2.比赛名称 = t3.项目名称 INNER JOIN "冠军国家" t4 ON t3.赛事id = t4.赛事id WHERE t4.冠军数量 > 0
SELECT t1.球员身高, t2.重要赛事, t3.冠军国家, t4.球员夺冠次数 FROM "羽毛球球员" t1 INNER JOIN "重要赛事" t2 ON t1.赛事id = t2.赛事id INNER JOIN "奥运会冠亚军" t3 ON t2.比赛名称 = t3.项目名称 INNER JOIN "冠军国家" t4 ON t3.赛事id = t4.赛事id ORDER BY t1.球员身高 DESC

SELECT 球员id, 项目名称 FROM 羽毛球球员 JOIN 重要赛事 ON 球员id = 赛事id JOIN 奥运会冠亚军 ON 赛事id = 奥运会冠亚军.赛事id WHERE 奥运会冠亚军.项目名称 = '悉尼' ORDER BY 球员id DESC LIMIT 1
SELECT 运动员id, 奥运会冠亚军.奥运会名称, 奥运会冠亚军.项目名称 FROM 羽毛球球员 JOIN 重要赛事 ON 球员id = 赛事id JOIN 奥运会冠亚军 ON 赛事id = 奥运会冠亚军.赛事id WHERE 奥运会冠亚军.奥运会名称 = '雅典' ORDER BY 运动员id DESC, 奥运会冠亚军.奥运会名称 LIMIT 1
SELECT 球员id, 赛事id FROM 羽毛球球员 JOIN 重要赛事 ON 球员id = 赛事id JOIN 奥运会冠亚军 ON 赛事id = 奥运会冠亚军.赛事id WHERE 奥运会冠亚军.赛事id IN ('悉尼', '伦敦', '北京', '巴黎', '纽约', '上海') ORDER BY 球员id DESC, 赛事id DESC LIMIT 1
SELECT 冠军数量 FROM 冠军国家 JOIN 重要赛事 ON 冠军国家.赛事id = 重要赛事.赛事id JOIN 奥运会冠亚军 ON 奥运会冠亚军.赛事id = 冠军国家.奥运会冠亚军id WHERE 冠军国家.奥运会冠亚军id IN ('08-04-2008', '09-11-2009', '12-18-2012', '15-22-2015', '21-29-2021') GROUP BY 冠军国家.奥运会冠亚军id ORDER BY 冠军数量 DESC LIMIT 10

SELECT 台风名称 FROM "台风" 台风 LEFT JOIN "台风影响的国家" 国家 ON 台风.台风id = 国家.台风id WHERE 国家.经济损失 = 0
SELECT 台风.台风id, 台风.登陆强度 FROM "台风" 台风 LEFT JOIN "台风影响的国家" 国家 ON 台风.台风id = 国家.台风id WHERE 国家.经济损失 = 0 ORDER BY 台风.登陆强度 DESC LIMIT 1
SELECT 台风.台风id, 台风.登陆强度 FROM "台风" 台风 LEFT JOIN "台风影响的国家" 国家 ON 台风.台风id = 国家.台风id WHERE 国家.经济损失 = 0 ORDER BY 台风.登陆强度 DESC LIMIT 1

SELECT * FROM "台风" WHERE 登陆地点 = '广东'
SELECT * FROM "台风" WHERE 登陆地点 = '广东' AND 经济损失 = '海量'
SELECT * FROM "台风" WHERE 登陆地点 = '广东' AND 经济损失 = '海量'

SELECT 死亡人数 FROM "台风" WHERE 台风id IN (SELECT 台风id FROM "台风影响的国家") ON DELETE NOACTION ON UPDATE NOACTION
SELECT name,登陆地点,死亡人数,登陆强度,持续时间,经济损失 FROM "台风影响的国家" WHERE 台风id IN (SELECT 台风id FROM "台风") ON DELETE NOACTION ON UPDATE NOACTION
SELECT 登陆时间 FROM "台风" WHERE 台风id IN (SELECT 台风id FROM "台风影响的国家") ON DELETE NOACTION ON UPDATE NOACTION

SELECT * FROM "台风影响的中国省份" AS d INNER JOIN "台风" AS t ON d.台风id = t.台风id INNER JOIN "台风影响的国家" AS 的国家 ON t.台风id = 国家.台风id WHERE t.名称 = '台风'
SELECT 省份 FROM "台风影响的中国省份" AS d INNER JOIN "台风" AS t ON d.台风id = t.台风id INNER JOIN "台风影响的国家" AS 的国家 ON t.台风id = 国家.台风id WHERE t.登陆强度 = ( SELECT MAX(登陆强度) FROM "台风影响的国家" AS d2 WHERE d2.台风id = t.台风id )
SELECT 死亡人数,失踪人数 FROM "台风影响的中国省份" AS d INNER JOIN "台风" AS t ON d.台风id = t.台风id INNER JOIN "台风影响的国家" AS 的国家 ON t.台风id = 国家.台风id WHERE t.名称 = '台风'
SELECT * FROM "台风影响的中国省份" AS d INNER JOIN "台风" AS t ON d.台风id = t.台风id INNER JOIN "台风影响的国家" AS 的国家 ON t.台风id = 国家.台风id WHERE t.名称 = '台风' AND 国家.经济损失 = '多少'
SELECT 天数 FROM "台风影响的中国省份" AS d INNER JOIN "台风" AS t ON d.台风id = t.台风id INNER JOIN "台风影响的国家" AS 的国家 ON t.台风id = 国家.台风id WHERE t.名称 = '台风' AND 国家.经济损失 = '多少'

SELECT 该国 FROM "台风影响的国家" 该国 JOIN "台风" 台风 ON 台风.台风id = 该国.台风id WHERE 台风.名称 = '最强台风'
SELECT 经济损失 FROM "台风影响的国家" 该国 JOIN "台风" 台风 ON 台风.台风id = 该国.台风id WHERE 台风.名称 = '最强台风' AND 该国.国家 = '中国'
SELECT 台风.登陆地点 FROM "台风影响的国家" 该国 JOIN "台风" 台风 ON 台风.台风id = 该国.台风id JOIN "台风影响的国家" 该国2 ON 该国2.省份 = 该国.省份 AND 该国2.台风id = 该国.台风id WHERE 台风.登陆时间 = ( SELECT MAX(登陆时间) AS max_登陆时间 FROM "台风影响的国家" 该国2 WHERE 该国2.省份 = 该国.省份 AND 该国2.台风id = 该国.台风id )

SELECT 城市id, COUNT(*) AS 金融机构数量 FROM 城市金融产业 GROUP BY 城市id ORDER BY COUNT(*) DESC LIMIT 1
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT
SQL NOT GET: may be TIMEOUT

